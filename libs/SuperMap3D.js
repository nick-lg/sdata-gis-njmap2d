window.Adapter = Cesium;
const _0xafab = ['Error\x20decoding\x20draco\x20point\x20cloud:\x20', 'quadKey', '_minimumPriority', 'lerp', 'languages', 'CESIUM_3D_TILE_MASK', 'OVERLAY', '_imageBuffer', 'baseUri', 'sml:Bottom', 'arguments', 'attachFiles', 'DisplayMode', 'blockKey', 'setColumn', 'drillPick', 'UnLoad', 'duration', 'ROUND_FLOOR', ',layer\x20name\x20is\x20', 'image/webp', '_stencilCommand', 'EndRow', 'sml:CellHeight', '0123456789abcdefghijklmnopqrstuvwxyz', 'setObjsColor\x20ids', 'DrawHandler', 'RequestType', '240', 'subTextureNames', '_emscripten_bind_Metadata_Metadata_0', '_polygon', 'visibility:hidden;position:absolute;top:0px;left:0px;', 'getElementById', 'absoluteValue', 'MeshOpt', 'Unsupported\x20draco\x20mesh\x20geometry\x20type.', '_updateFlattenFramebuffer', 'reset', 'easingFunction', 'uv9', '_orthographicIn3D', 'elementIndexUint', '_emscripten_bind_Mesh_Mesh_0', 'emscripten_bind_Decoder_GetAttributeFloatForAllPoints_3', 'LayerName', '_waterParameters', '_lineDisplayType', 'LowerCorner', 'referenceAddPoint', 'fromElements', 'emissiveFactor', '_minVisibleAltitude', 'dmax', 'VideoName', '\x0a#ifdef\x20HAS_HEMISPHERE_LIGHTS\x0a\x0auniform\x20vec3\x20uSkyColor[\x20HEMISPHERE_LIGHTS\x20];\x0auniform\x20vec3\x20uGroundColor[\x20HEMISPHERE_LIGHTS\x20];\x0auniform\x20vec3\x20uHemisphereLightDirectionEC[\x20HEMISPHERE_LIGHTS\x20];\x0a\x20\x20\x20\x20\x0astruct\x20HemisphereLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20skyColor;\x0a\x20\x20\x20\x20vec3\x20groundColor;\x0a};\x0a\x0avec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20dot(\x20geometry.normal,\x20hemiLight.direction\x20);\x0a\x20\x20\x20\x20float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x20\x20\x20\x20return\x20irradiance;\x0a}\x0a\x0a#endif\x0a', 'vertexShaderSource', 'editPointColor', 'brightness', 'resolve\x20Layer\x20Extend\x20XML\x20error:', 'the\x20max\x20of\x20vertexTextureImageUnits\x20less\x201,\x20function\x20is\x20not\x20supported.', 'Shininess', 'indexOfRefraction', 'scroll', '_rectangleNortheastInMeters', 'setView', 'previous', 's3m', 'locateFile', 'GpuConstantDefinition', 'AssociativeArray', '\x20failed,', 'LineWidth', '_stopPlayMode', 'must\x20be\x20non-object', 'emscripten_enum_draco_DataType_DT_INT32', '_targetPoints', 'updateVisibility', 'createBoundingVolume', 'S3MBlockParser', 'removeInputAction', 'play', 'UNSIGNED_INT', 'uniformState', 'hookLoadTilesetFunc', 'regular', 'lens', 'TextureCoordMatrix', '_coordUnit', '__class__', 'DVH', 'both\x20async\x20and\x20sync\x20fetching\x20of\x20the\x20wasm\x20failed', 'postProcessStages', 'log2FarDepthFromNearPlusOne', 'textureBakeRenderableFlag', 'sml:Level', 'Loading', 'FlyInterpolationMode', 'S3MTilesNoLightVS', 'OSGFiles', 'points', 'aTexCoord0', 'type', '_update', 'PIPELINE', 'Gamma', 'created', 'BigNumber', '_brightness', 'dpi', 'NORMAL_AND_DEPTH', 'camera', 'show', 'snowEffect', 'crypto\x20unavailable', 'addRoute', 'box', 'Layer', 'Name', '_emscripten_bind_DecoderBuffer___destroy___0', 'directionWC', 'stream\x20end', 'GetIntEntryArray', 'name', './common', 'decimalSeparator', 'incorrect\x20header\x20check', 'proxy', 'noiseScale', 'requestVertexNormals', 'ndist', 'edgeVA', 'generateMipmap', '_emscripten_bind_MetadataQuerier_GetDoubleEntry_2', 'indices', 'METER', 'cacheNode', 'array', 'pako\x20inflate\x20(from\x20Nodeca\x20project)', '../utils/common', 'offsetY', 'isTileAvailable', 'inflate', 'decode', 'invalid\x20bit\x20length\x20repeat', 'schedule', 'getMatrix3', 'dimensions', '_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_OCTAHEDRON_TRANSFORM', 'add\x20all\x20layers\x20failed,', '{tileversion}', 'falling\x20back\x20to\x20ArrayBuffer\x20instantiation', 'centerZDepth', 'Mode_Height', 'UNIT_Z', '_hash', 'err', 'QuadKey', 'viewport', 'pauseTime', 'constructor', 'emscripten_bind_PointAttribute_size_0', 'heading', 'only_keep_line', '_viewProjectionDirty', 'abort(', 'count', 'HEAPF32', 'tintColour', '_renderTextureMatrixs', 'createdBaker', 'values', 'emscripten_enum_draco_StatusCode_DRACO_ERROR', '_isLineVisible', 'isHeadingFree', 'BLEND', 'toExponential', 'BRDF', 'symbol', 'stencilCommand', 'amd', '\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_EXT_shader_texture_lod\x0a#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable\x0a#endif\x0a\x20\x20\x20\x20uniform\x20vec4\x20uDiffuseColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uAmbientColor;\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoord;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20uniform\x20vec4\x20uTexAtlasDim;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexAtlasTran;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexAtlasScale;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexAtlasSize;\x0a\x20\x20\x20\x20varying\x20vec2\x20vMaxMipLevel;\x0a#else\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoordTransform;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix;\x0a#endif\x0a#endif\x0a#endif\x0a#ifdef\x20NO_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a#endif\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20vec3\x20vPositionEC;\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20varying\x20vec3\x20vNormalEC;\x0a#endif\x0a#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture2;\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture1Width;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix2;\x0a#endif\x20\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20float\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20vec2\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20calculateTexCoord(in\x20vec3\x20inTexCoord,\x20in\x20float\x20scale,\x20in\x20float\x20XTran,\x20in\x20float\x20YTran,\x20in\x20float\x20fTile,\x20in\x20float\x20mipLevel,\x20inout\x20vec2\x20outTexCoord)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(inTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord\x20=\x20inTexCoord.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20fTexCoord\x20=\x20fract(inTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x201.0\x20*\x20pow(2.0,\x20mipLevel)\x20/\x20fTile;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fTexCoord\x20=\x20clamp(fTexCoord,\x20offset,\x201.0\x20-\x20offset);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.x\x20=\x20(fTexCoord.x\x20+\x20XTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.y\x20=\x20(fTexCoord.y\x20+\x20YTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getTexColorForS3M(sampler2D\x20curTexture,\x20vec3\x20oriTexCoord,\x20float\x20texTileWidth,\x20float\x20fMaxMipLev,\x20float\x20fTexCoordScale,\x20vec2\x20vecTexCoordTranslate)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20mipLevel\x20=\x200.0;\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateMipLevel(oriTexCoord.xy,\x20texTileWidth,\x20fMaxMipLev,\x20mipLevel);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20realTexCoord;\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateTexCoord(oriTexCoord,\x20fTexCoordScale,\x20vecTexCoordTranslate.x,\x20vecTexCoordTranslate.y,\x20texTileWidth,\x20mipLevel,\x20realTexCoord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(oriTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture2D(curTexture,\x20realTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture2DLodEXT(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture2D(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20color;\x0a\x20\x20\x20\x20}\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20vec4\x20getTextureAtlasColor(sampler2D\x20texture,\x20vec2\x20uv,\x20vec2\x20texDim,\x20vec2\x20texTran,\x20vec2\x20texScale,\x20float\x20maxMipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(maxMipLevel\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20colorCeil\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20mipLevel\x20=\x200.0;\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateMipLevel(uv,\x20texDim,\x20maxMipLevel,\x20mipLevel);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20ceilMipLevel\x20=\x20ceil(mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20translate\x20=\x20vec2(texTran.x,\x20texTran.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20temp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(ceilMipLevel\x20>\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.x\x20=\x20texTran.x\x20+\x20texScale.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20temp\x20=\x20pow(2.0,\x20ceilMipLevel\x20-\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.y\x20=\x20texTran.y\x20+\x20texScale.y\x20*\x20(temp\x20-\x201.0)\x20/\x20temp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20ceilMipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20texcoord\x20=\x20fract(uv);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offsetX\x20=\x20pow(2.0,\x20ceilMipLevel)\x20/\x20texDim.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offsetY\x20=\x20pow(2.0,\x20ceilMipLevel)\x20/\x20texDim.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20clamp(texcoord.x,\x200.0\x20+\x20offsetX,\x201.0\x20-\x20offsetX);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20clamp(texcoord.y,\x200.0\x20+\x20offsetY,\x201.0\x20-\x20offsetY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20texcoord.x\x20*\x20texScale.x\x20*\x20scale\x20+\x20translate.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20texcoord.y\x20*\x20texScale.y\x20*\x20scale\x20+\x20translate.y;\x0a\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorCeil\x20=\x20texture2DLodEXT(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorCeil\x20=\x20texture2D(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20colorFloor\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20floorMipLevel\x20=\x20floor(mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate\x20=\x20vec2(texTran.x,\x20texTran.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(floorMipLevel\x20>\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.x\x20=\x20texTran.x\x20+\x20texScale.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20temp\x20=\x20pow(2.0,\x20floorMipLevel\x20-\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.y\x20=\x20texTran.y\x20+\x20texScale.y\x20*\x20(temp\x20-\x201.0)\x20/\x20temp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20floorMipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord\x20=\x20fract(uv);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offsetX\x20=\x20pow(2.0,\x20floorMipLevel)\x20/\x20texDim.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20offsetY\x20=\x20pow(2.0,\x20floorMipLevel)\x20/\x20texDim.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20clamp(texcoord.x,\x200.0\x20+\x20offsetX,\x201.0\x20-\x20offsetX);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20clamp(texcoord.y,\x200.0\x20+\x20offsetY,\x201.0\x20-\x20offsetY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20texcoord.x\x20*\x20texScale.x\x20*\x20scale\x20+\x20translate.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20texcoord.y\x20*\x20texScale.y\x20*\x20scale\x20+\x20translate.y;\x0a\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorFloor\x20=\x20texture2DLodEXT(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorFloor\x20=\x20texture2D(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20color\x20=\x20colorCeil\x20*\x200.5\x20+\x20colorFloor\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20color;\x0a\x20\x20\x20\x20}\x0a#else\x0a\x20\x20\x20\x20vec4\x20getTextureColor()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexMatrix.z\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth0\x20=\x20vTexMatrix.z\x20*\x20uTexture0Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20realTexCoord\x20=\x20vec3(vTexCoord.xy,\x20vTexCoordTransform.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20FColor\x20=\x20getTexColorForS3M(uTexture,\x20realTexCoord,\x20texTileWidth0,\x20vTexMatrix.w,\x20vTexMatrix.z,\x20vTexMatrix.xy);\x0a\x20\x20\x20\x20#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth1\x20=\x20vTexMatrix2.z\x20*\x20uTexture1Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realTexCoord\x20=\x20vec3(vTexCoord.zw,\x20vTexCoordTransform.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20SColor\x20=\x20getTexColorForS3M(uTexture2,\x20realTexCoord,\x20texTileWidth1,\x20vTexMatrix2.w,\x20vTexMatrix2.z,\x20vTexMatrix2.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.r\x20=\x20clamp(SColor.r,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.g\x20=\x20clamp(SColor.g,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.b\x20=\x20clamp(SColor.b,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20return\x20FColor\x20*\x20SColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a#endif\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20const\x20float\x20M_PI\x20=\x203.141592653589793;\x0a\x20\x20\x20\x20vec3\x20SRGBtoLINEAR3(vec3\x20srgbIn)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20pow(srgbIn,\x20vec3(2.2));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20SRGBtoLINEAR4(vec4\x20srgbIn)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20srgbIn\x20=\x20srgbIn\x20;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20linearOut\x20=\x20pow(srgbIn.rgb,\x20vec3(2.2));\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(linearOut,\x20srgbIn.a);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec3\x20LINEARtoSRGB(vec3\x20linearIn)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20#ifndef\x20HDR\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20pow(linearIn,\x20vec3(1.0/2.2));\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20linearIn;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20fresnelSchlick2(vec3\x20f0,\x20vec3\x20f90,\x20float\x20VdotH)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20f0\x20+\x20(f90\x20-\x20f0)\x20*\x20pow(clamp(1.0\x20-\x20VdotH,\x200.0,\x201.0),\x205.0);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20smithVisibilityG1(float\x20NdotV,\x20float\x20roughness)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20k\x20=\x20(roughness\x20+\x201.0)\x20*\x20(roughness\x20+\x201.0)\x20/\x208.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20NdotV\x20/\x20(NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20smithVisibilityGGX(float\x20roughness,\x20float\x20NdotL,\x20float\x20NdotV)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20smithVisibilityG1(NdotL,\x20roughness)\x20*\x20smithVisibilityG1(NdotV,\x20roughness);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20GGX(float\x20roughness,\x20float\x20NdotH)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20roughnessSquared\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20f\x20=\x20(NdotH\x20*\x20roughnessSquared\x20-\x20NdotH)\x20*\x20NdotH\x20+\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20roughnessSquared\x20/\x20(M_PI\x20*\x20f\x20*\x20f);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20czm_planeDistance(uClipPlanes[0].xyz,\x20uClipPlanes[0].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20czm_planeDistance(uClipPlanes[i].xyz,\x20uClipPlanes[i].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20czm_planeDistance(uClipPlanes[i].xyz,\x20uClipPlanes[i].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20czm_planeDistance(uClipPlanes[i].xyz,\x20uClipPlanes[i].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uHypsometricTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uMinMaxValue;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uOpacityIntervalFillMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uHypLineColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uNoValueColor;\x0a\x20\x20\x20\x20varying\x20float\x20wValue;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20computeMixCon(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distanceToContour;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20interval\x20=\x20uOpacityIntervalFillMode.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(abs(maxVisibleValue\x20-\x20minVisibleValue)\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20mod(fValue\x20-\x200.0002,\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20floor(fValue\x20/\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20(t\x20*\x20interval)\x20-\x200.1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20maxVisibleValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dF\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20distanceToContour\x20<\x20dF\x20?\x201.0\x20:\x200.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20computeContourMapColor(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20floorValue\x20=\x20uMinMaxValue.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20ceilValue\x20=\x20uMinMaxValue.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20threshold\x20=\x20abs(ceilValue\x20-\x20floorValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20contourRate\x20=\x20(fValue\x20-\x20floorValue)\x20/\x20threshold;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalCoord\x20=\x20clamp(contourRate,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20count\x20=\x20floor(finalCoord\x20*\x2016.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20y\x20=\x20(count*2.0\x20+\x201.0)/32.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20fract(finalCoord*16.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(y\x20>\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20contourCoord\x20=\x20vec2(x,\x20y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture2D(uHypsometricTexture,\x20contourCoord);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getContourMapColor(vec4\x20oriColor,\x20float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20contourMapColor\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalOpacity\x20=\x20uOpacityIntervalFillMode.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fillMode\x20=\x20uOpacityIntervalFillMode.z;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20>\x20maxVisibleValue\x20+\x204.0\x20||\x20fValue\x20<\x20minVisibleValue\x20-\x204.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20uNoValueColor\x20*\x20oriColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fillMode\x20>\x202.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20mix_con\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20mix(computeContourMapColor(fValue),\x20uHypLineColor,\x20mix_con);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x201.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20uHypLineColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x200.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20computeContourMapColor(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20finalColor\x20=\x20mix(oriColor,\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#ifdef\x20PT_CLOUD\x0a\x20\x20\x20\x20\x20\x20\x20\x20finalColor\x20=\x20mix(vec4(1.0,1.0,1.0,1.0),\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20finalColor;\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20vec3\x20computeNormal(in\x20vec3\x20oriVertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20normal\x20=\x20cross(vec3(dFdx(oriVertex.x),\x20dFdx(oriVertex.y),\x20dFdx(oriVertex.z)),\x20vec3(dFdy(oriVertex.x),\x20dFdy(oriVertex.y),\x20dFdy(oriVertex.z)));\x0a\x20\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(normal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20normal;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20directionLight(vec3\x20normalEC)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20vec3\x20SunLightColor\x20=\x20vec3(0.8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20vec3\x20AmbientLightColor\x20=\x20vec3(0.7);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20totalDiffuseLight\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20totalSpecularLight\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20sunLightDiffuseWeight\x20=\x20max(\x20dot(\x20normalEC,\x20czm_lightDirectionEC\x20),\x200.0\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20totalDiffuseLight\x20=\x20SunLightColor\x20*\x20sunLightDiffuseWeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uDiffuseColor.rgb\x20*\x20(totalDiffuseLight\x20+\x20AmbientLightColor\x20*\x20uAmbientColor.rgb)\x20+\x20totalSpecularLight;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20ADJUST_COLOR\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uBrightness;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uContrast;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uHue;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uSaturation;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uOneOverGamma;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20adjustColor(vec3\x20inputColor)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20outputColor\x20=\x20inputColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20mix(vec3(0.0),\x20outputColor.rgb,\x20uBrightness);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20mix(vec3(0.5),\x20outputColor.rgb,\x20uContrast);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20czm_hue(outputColor.rgb,\x20uHue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20clamp(outputColor.rgb,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20czm_saturation(outputColor.rgb,\x20uSaturation);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20pow(outputColor.rgb,\x20vec3(uOneOverGamma));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20outputColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#include\x20<brdf>\x0a\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vColor.a\x20<\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20\x0a\x20\x20\x20\x20#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20baseColorWithAlpha\x20=\x20vColor;\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20getTextureAtlasColor(uTexture,\x20vTexCoord.xy,\x20vTexAtlasSize.xy,\x20vTexAtlasTran.xy,\x20vTexAtlasScale.xy,\x20vMaxMipLevel.x);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20getTextureColor();\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20NO_TEXCOORD\x0a\x20\x20\x20\x20\x20\x20\x20\x20#ifndef\x20REPLACE_COLOR_TYPE\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20texture2D(uTexture,\x20vec2(0.5));\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(baseColorWithAlpha.a\x20<\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20outColor\x20=\x20baseColorWithAlpha;\x0a\x20\x20\x20\x20#ifndef\x20USE_LINECOLOR\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20ng\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20\x20\x20\x20\x20ng\x20=\x20normalize(vNormalEC);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20ng\x20=\x20length(ng)\x20>\x200.1\x20?\x20ng\x20:\x20computeNormal(vPositionMC.xyz);\x0a\x20\x20\x20\x20#ifdef\x20HAS_NORMAL_TEXTURE\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos_dx\x20=\x20dFdx(vPositionEC);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos_dy\x20=\x20dFdy(vPositionEC);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tex_dx\x20=\x20dFdx(vec3(vTexCoord.xy,\x200.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tex_dy\x20=\x20dFdy(vec3(vTexCoord.xy,\x200.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20t\x20=\x20(tex_dy.t\x20*\x20pos_dx\x20-\x20tex_dx.t\x20*\x20pos_dy)\x20/\x20(tex_dx.s\x20*\x20tex_dy.t\x20-\x20tex_dy.s\x20*\x20tex_dx.t);\x0a\x20\x20\x20\x20\x20\x20\x20\x20t\x20=\x20normalize(t\x20-\x20ng\x20*\x20dot(ng,\x20t));\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20b\x20=\x20normalize(cross(ng,\x20t));\x0a\x20\x20\x20\x20\x20\x20\x20\x20mat3\x20tbn\x20=\x20mat3(t,\x20b,\x20ng);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20n\x20=\x20texture2D(uNormalTexture,\x20vTexCoord.xy).rgb;\x0a\x20\x20\x20\x20\x20\x20\x20\x20n\x20=\x20normalize(tbn\x20*\x20(2.0\x20*\x20n\x20-\x201.0));\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20n\x20=\x20ng;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec3\x20baseColor\x20=\x20baseColorWithAlpha.rgb;\x0a\x20\x20\x20\x20outColor.rgb\x20=\x20baseColor\x20*\x20directionLight(n);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20=\x20getContourMapColor(outColor,\x20wValue);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20BRDF\x0a\x20\x20\x20\x20vec2\x20texCoord\x20=\x20vec2(0.0);\x0a\x20\x20\x20\x20#ifdef\x20TexCoord\x0a\x20\x20\x20\x20\x20\x20\x20\x20texCoord\x20=\x20vTexCoord.xy;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec3\x20normal_EC\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20\x20\x20\x20\x20normal_EC\x20=\x20vNormalEC;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20outColor\x20=\x20brdf(outColor,\x20texCoord,\x20texCoord,\x20vPositionEC,\x20vPositionMC.xyz,\x20normal_EC,\x20uAmbientColor);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20ADJUST_COLOR\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor.rgb\x20=\x20adjustColor(outColor.rgb);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20CLIP\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20*=\x20clip(vec4(vPositionEC,\x201.0));\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20outColor;\x0a\x20\x20\x20\x20}\x0a', 'defineProperties', 'Matrix4', 'num_attributes', 'ancestorTexture', '_crn_get_bytes_per_block', 'emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_INVALID_TRANSFORM', 'AttributeType_Normal', 'DecoderBuffer', 'releaseSelection', 'copyFromArrayView', '_snow', 'Cartesian4', '_emissionTextureAtlas', 'ScaleDenominator', 'setInfo', 'remove', 'HALF_FLOAT_OES', 'indexOf', 'stackAlloc', 'temps', 'altitude', 'indexBuffer', 'add\x20terrain\x20layer\x20', 'decodeTexCoord0Min', 'compressedTexSubImage2D', 'saturation', '_hiddenColor', '_levelZeroMaximumGeometricError', 'minVisibleAltitude', 'typedArray', 'video', '_isCreateSkirt', 'Area', 'USE_LINECOLOR', 'getPoint', 'level', 'compressedTexImage2D', 'CallbackProperty', 'isStopVisible', 'NumEntries', 'dot', '_updateEdgeDistanceFalloffFactor', 'Clockwise', 'relativePath', 'head', 'aVertexWeight_1', 'true', 'OUTSIDE', 'ADJUST_COLOR', 'fromTranslation', 'brdf', '_subTexInfosBake', 'GetMetadata', 'errno', '_inverseViewRotation', 'xflags', '_sightlineCameras', 'RegularInstanceStride', 'pow', '_hasNormalBuffer', 'lodRangeScale', 'fill', 'EPSILON5', 'reflectFramebuffer', 'addFlattenRegion', '_eyeHeight', 'lenbits', 'texMatrix', 'idsColorMap', 'Z_FINISH', 'reverse', 'paramType', 'ATTRIBUTE_QUANTIZATION_TRANSFORM', 'TileAvailability', 'AttributeOctahedronTransform', 'updatedVisibilityFrame', 'tileImages', 'ALPHABET', 'maxCategory', 'emscripten_bind_Status___destroy___0', '_isBigNumber', 'version', 'decode_texCoord2_normConstant', 'rss', 'viewer', '_ZSt18uncaught_exceptionv', 'flags', 'emscripten_bind_PointCloud_num_attributes_0', 'next_out', 'PT_CLOUD', 'rectangles', 'GetAttributeUInt16ForAllPoints', 'toUrl', 'emscripten_bind_DecoderBuffer_DecoderBuffer_0', 'Buffer', '_objsOperationList', 'requestHeapPack', 'emscripten_bind_MetadataQuerier_GetDoubleEntry_2', 'IMAGERY', 'AttributeType_SecondTexcoord', '_emscripten_bind_AttributeQuantizationTransform___destroy___0', 'forEach', 'get\x20layer\x20list\x20failed,', 'emscripten_bind_DracoInt16Array_GetValue_1', 'quit', 'strings', '_heading', 'vertexPackage', 'flycircle', 'MESHOPT', 'queryFirstNode', '_basePath', 'instanceMode', 'createOneEdgeCommand', 'southwest', '_infiniteProjection', 'uHiddenColor', 'batchId', 'bMipMap', 'style3D', 'OSGBCacheFile_Water', 'InstanceBim', 'msg', 'positions', 'join', 'complete', 'RuntimeError', 'tileDiscardPolicy', 'BLOCK', '_emissionTexCoordSpeed', '_heightmapHeight', 'textureInitilized', 'endPause', '_frustumPlanes', 'ROUND_HALF_DOWN', 'handler', 'physicalIndex', 'FileExtentName', 'S3ModelParser', 'createElement', 'selectionInfoMap', '[Emscripten\x20Module\x20object]', 'emscripten_enum_draco_GeometryAttribute_Type_COLOR', 'indexDataType', 'RenderTarget', 'emscripten_bind_GeometryAttribute___destroy___0', '_preStopIndex', '_compressType', 'VisibleDistanceMax', 'S3MTile', 'combine', 'bounds', 'meshopt_decodeFilterQuat', './zlib/messages', 'fromDegrees', 'CommonNoTextureFp', 'EMISSION_TEXTURE_COUNT\x20', 'DT_UINT16', 'TexCoord2', 'isNormalTexture', 'ALWAYS', '_normal3DDirty', 'maximumRadius', 'isReal', 'add\x20S3M\x20layer', '_materialRelativePath', 'PBRMaterialType', 'childNodes', 'themeStyle', '_entityCollection', 'TileBoundingSphere', 'referencePoint', 'Pass', 'OSGB', 'Request', '_emscripten_enum_draco_StatusCode_OK', '[BigNumber\x20Error]\x20', '_clearBaseResource', '{scale}', '_emscripten_bind_PointCloud_num_attributes_0', 'PolygonGeometry', '_emscripten_bind_Decoder_GetFaceFromMesh_3', 's3m:TransparencyOptimization', 'RequestScheduler', 'DT_INT64', 'videoName', 'batchTable', '_modelViewInfiniteProjectionDirty', '_pitch', 'setObjsColor', 'emscripten_bind_AttributeTransformData_AttributeTransformData_0', '_emscripten_bind_Decoder_GetEncodedGeometryType_1', 'throwInstantiationError', '_emscripten_bind_DracoInt8Array_size_0', 'textureId', 'fractionGroupSeparator', 'aSecondColor', 'emissiveTexture', 'SkipAttributeTransform', 'canvas', 'getUniformMapCallback', 'setSelection\x20ids', '_isTileMap', 'cannot\x20construct\x20a\x20Status,\x20no\x20constructor\x20in\x20IDL', 'BACK', 'PointSize', 'infiniteProjectionMatrix', 'waterBrightness', 'UNSIGNED_SHORT_4_4_4_4', 'InitFromAttribute', 'northeast', '_cameraRight', '_tileHeight', '_areaLabel', 'Space', 'FILL_FACEANDLINE', 'groupSize', 'farToNearRatio', '_drawEvt', '\x20Y:\x20', 'getVisibleInViewport', 'FixedZ', 'positionWC', '_urls', '_emscripten_bind_Status_ok_0', 'stackRestore', 'emscripten_bind_PointAttribute_normalized_0', 'GetDoubleEntry', '_emscripten_bind_DracoInt8Array_DracoInt8Array_0', 'GetAttributeDataArrayForAllPoints', 'Meter', 'division', 'RECEIVED', 'RequestState', 'GREATER', 'ThirdParty/crunch.wasm', '_disLabel', 'Argument', 'size', 'USE_BatchPBR', 'unloadBlockTiles', 'unknown\x20header\x20flags\x20set', 'emscripten_bind_VoidPtr___destroy___0', '1589119msyFaq', 'Easing', '_emscripten_bind_AttributeTransformData_transform_type_0', 'vertexColorInstance', '\x0a#ifdef\x20SERVEREXCAVATION\x0auniform\x20sampler2D\x20uServerExcavationTexture;\x0auniform\x20float\x20uServerExcavationMode;\x0auniform\x20vec4\x20uServerExcavationRect;\x0avarying\x20vec4\x20vServerExcavationVertexPos;\x0avec2\x20CalculateServerExcavationPolyTexCoord(vec4\x20vertexPos,\x20vec4\x20rectPos,\x20out\x20float\x20ptInRect)\x0a{\x0a\x20\x20\x20\x20vec2\x20vecRatio\x20=\x20vec2(rectPos.z\x20-\x20rectPos.x,\x20rectPos.w\x20-\x20rectPos.y);\x0a\x20\x20\x20\x20vec2\x20texCoord\x20=\x20vec2(vertexPos.x\x20-\x20rectPos.x,\x20vertexPos.y\x20-\x20rectPos.y);\x0a\x20\x20\x20\x20texCoord.x\x20=\x20texCoord.x\x20/\x20vecRatio.x;\x0a\x20\x20\x20\x20texCoord.y\x20=\x20texCoord.y\x20/\x20vecRatio.y;\x0a\x20\x20\x20\x20ptInRect\x20=\x20step(0.0,\x20texCoord.x)\x20*\x20step(0.0,\x20texCoord.y)\x20*\x20step(0.0,\x201.0\x20-\x20texCoord.x)\x20*\x20step(0.0,\x201.0\x20-\x20texCoord.y);\x0a\x20\x20\x20\x20texCoord\x20=\x20clamp(texCoord,\x20vec2(0.0),\x20vec2(1.0));\x0a\x20\x20\x20\x20return\x20texCoord;\x0a}\x0abool\x20executeServerExcavation()\x0a{\x0a\x20\x20\x20\x20float\x20hasExcavation\x20=\x201.0;\x0a\x20\x20\x20\x20vec2\x20vecExcavationTexCoord\x20=\x20CalculateServerExcavationPolyTexCoord(vServerExcavationVertexPos,\x20uServerExcavationRect,\x20hasExcavation);\x0a\x20\x20\x20\x20bool\x20excavationInside\x20=\x20(uServerExcavationMode\x20<\x200.5);\x0a\x20\x20\x20\x20if(hasExcavation\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20!excavationInside;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20if(excavationInside)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture2D(uServerExcavationTexture,\x20vecExcavationTexCoord.xy).r\x20>\x200.5;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture2D(uServerExcavationTexture,\x20vecExcavationTexCoord.xy).r\x20<\x200.5;\x0a\x20\x20\x20\x20}\x0a}\x0a#endif', 'arraySet', '_enableClipPlane', 'DT_FLOAT64', 'computeVisibility', 'foveatedFactor', '_routes', '_emissionTextureArray', 'polylines', 'WrapperObject', '_keymap', 'function', 'inflateReset', 'emscripten_bind_Decoder_GetAttributeIntForAllPoints_3', '_activeEvt', 'instanceBounds', 'hasWaterMask\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'snowNormalTextureIndex', 'isChildBlock', '_emscripten_bind_DracoUInt8Array_GetValue_1', 'data', 'GeographicProjection', 'charCodeAt', 'removeObjsColor', 'operationValue', 'tileXYToNativeRectangle', 'east', 'COLUMBUS_VIEW', 'sml:Top', 'xml\x20content\x20is\x20required\x20to\x20create\x20routes!', '_emscripten_bind_Decoder_GetAttributeIdByName_2', 'Buf8', 'Cartesian2', 'updateEnvironment', 'Ray', 'TEXTURE_2D', 'binary', 'upWC', 'PostProcessStageSnow', 'isLessThanOrEqualTo', 'lodRangeData', 'material', '_stopName', '_surroundDuration', '_billboardMode', 'SuperMapTerrainProvider', 'ptr', 'decode_texCoord0_min', '.s3m', 'maximumMemoryUsage', 'IBL', 'VSpeed', '_loadedEmissionTexture', 'instanceId', 'WHITE', 'UpperCorner', 'measureEvt', '_combiInfo', '_dirty', '.json', 'ClearCommand', '&tilematrixset=', 'Base', 'urls', 'extractEdgeInformation', '_emscripten_enum_draco_GeometryAttribute_Type_INVALID', 'NONE', 'lineWidth', 'currentStopIndex', 'wasm\x20streaming\x20compile\x20failed:\x20', 'byte_offset', 'enable', 'bufferByteOffset', 'COMPRESS_NORMAL', '_addRenderedEdge', 'LINES', '_cameraDepthBuffer', '_viewProjMatrixs', 'DoublyLinkedList', 'fpEntity', 'isSuperMapiServer', 'startX', 'ColorTableMaxKey', '_aggregator', 'warn', 'hookPickFunc', 'subRequestedBaker', '_destroyCommand', '_barrierPointArray', 'enqueue', '_selectedTiles', 'isVisible', 'USpeed', 'loadingTexture', 'total_in', 'emscripten_enum_draco_GeometryAttribute_Type_GENERIC', '_emscripten_enum_draco_StatusCode_IO_ERROR', 'MinX', 'MaxHeight', '_emscripten_enum_draco_GeometryAttribute_Type_NORMAL', 'edgeGeometry', 'snowMaskTextureIndex', '_emscripten_bind_Mesh_num_attributes_0', 'parameter\x20stop\x20must\x20be\x20instanceof\x20RouteStop!', 'resource', 'startY', 'pixelFormat', '_visibleViewport', 'startsWith', 'ViewShedAnalysisVS', 'TEXTURE_MAG_FILTER', 'decodeVertexBuffer', 'textureParameterBake', 'sort', 's3m_batchTable_operation', '_lodRangeScale', 'setBaseUrl', 'toCssColorString', 'transmissionFactor', 'planeNormal', 'printChar', 'stackSave', 'undefined', 'ROUGHNESS', '_texture', 'materials', 'RGBA_DXT5', 'EPSILON3', 'Out', 'quadKeyIndexPack', '_sampleTerrainMostDetailedFunc', 'CRNTaskProcessorReady', 'sqrt', 'slice', '_emscripten_enum_draco_EncodedGeometryType_TRIANGULAR_MESH', '_proxy', '_textureFilterAnisotropic', 'MODULE_NOT_FOUND', '_getEmissionAtlasTextureRects', 'data/path/{z}/{x}/{y}.terrainz?v={version}', 'textureHeight', '_displayMode', 'wDescript', 'texCoordUniqueIDs', 'DecodeBufferToMesh', 'sml:CompressType', '_clampMode', 'fileExtension', 'UNIT_W', 'emscripten_bind_Decoder_GetAttributeUInt8ForAllPoints_3', 'onComplete', 'TEXTURE_MOVE', 'comment', 'gte', 'web_user', '_colorCommand', 'HAS_NORMAL_TEXTURE', 'TEXTURE_WRAP_S', 'MaterialExt', 'getStringFromTypedArray', 'Diffuse', '_fileExtension', 'pickInfo', '/home/web_user', '_rootTiles', 'Interpolation', '\x0a#ifdef\x20BRDF\x0a#define\x20RECIPROCAL_PI\x200.31830988618\x0a#define\x20M_PI\x203.141592653589793\x0a#define\x20EPSILON\x201e-6\x0a#define\x20CUBEUV_MAX_MIP\x208.0\x0a#define\x20CUBEUV_TEXEL_WIDTH\x200.0013020833333333333\x0a#define\x20CUBEUV_TEXEL_HEIGHT\x200.0009765625\x0a#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x\x20*\x20x;\x20}\x0a\x0auniform\x20vec4\x20uBaseColorFactor;\x0auniform\x20vec4\x20uEmissiveFactor;\x0auniform\x20float\x20uMetallicFactor;\x0auniform\x20float\x20uRoughnessFactor;\x0auniform\x20float\x20uAlphaCutoff;\x0a\x0astruct\x20IncidentLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20bool\x20visible;\x0a};\x0a\x0astruct\x20GeometricContext\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20normal;\x0a\x20\x20\x20\x20vec3\x20viewDir;\x0a};\x0a\x0astruct\x20PhysicalMaterial\x20{\x0a\x20\x20\x20\x20vec3\x09diffuseColor;\x0a\x20\x20\x20\x20float\x09roughness;\x0a\x20\x20\x20\x20vec3\x09specularColor;\x0a\x20\x20\x20\x20float\x20specularF90;\x0a};\x0a\x0astruct\x20ReflectedLight\x20{\x0a\x20\x20\x20\x20vec3\x20directDiffuse;\x0a\x20\x20\x20\x20vec3\x20directSpecular;\x0a\x20\x20\x20\x20vec3\x20indirectDiffuse;\x0a\x20\x20\x20\x20vec3\x20indirectSpecular;\x0a};\x0a\x0a#ifdef\x20HAS_BASE_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uBaseTexture;\x0a#endif\x0a\x0a#ifdef\x20HAS_NORMAL_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uNormalTexture;\x0a\x20\x20\x20\x20uniform\x20float\x20uNormalTextureScale;\x0a#ifdef\x20HAS_ANISOTROPY\x0a\x20\x20\x20\x20uniform\x20vec4\x20uAnisotropy;\x0a#endif\x0a#endif\x0a\x0a#ifdef\x20HAS_EMISSIVE_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uEmissionTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uEmissiveUVOffsetAndTiling;\x0a#endif\x0a\x0a#ifdef\x20HAS_MetallicRoughness_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uMetallicRoughnessTexture;\x0a#endif\x0a\x0a#ifdef\x20HAS_OCCLUSION_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uOcclusionTexture;\x0a#endif\x0a\x0a#ifdef\x20REFRACTION\x0a\x20\x20\x20\x20uniform\x20float\x20uIndexOfRefraction;\x0a#endif\x0a\x0a#ifdef\x20HAS_TRANSMISSION\x0a\x20\x20\x20\x20uniform\x20float\x20uTransmissionFactor;\x0a#endif\x0a\x0a#ifdef\x20HAS_WETNESS\x0a\x20\x20\x20\x20uniform\x20float\x20uWetnessFactor;\x0a#endif\x0a\x0a#ifdef\x20HAS_VOLUME\x0a\x20\x20\x20\x20uniform\x20vec4\x20uTintColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uDiffusionDistance;\x0a\x20\x20\x20\x20uniform\x20float\x20uThickness;\x0a#endif\x0a\x0a#ifdef\x20HAS_CLEARCOAT\x0a\x20\x20\x20\x20uniform\x20float\x20uClearcoatFactor;\x0a\x20\x20\x20\x20uniform\x20float\x20uClearcoatRoughnessFactor;\x0a#endif\x0a\x0a//参考UE4.24实现计算精确光源的衰减\x0afloat\x20punctualLightIntensityToIrradianceFactor(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a\x20\x20\x20\x20float\x20d\x20=\x20lightDistance;\x0a\x20\x20\x20\x20float\x20r\x20=\x20cutoffDistance;\x0a\x20\x20\x20\x20float\x20d2\x20=\x20d\x20*\x20d;\x0a\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(d2\x20+\x201.0);\x0a\x20\x20\x20\x20float\x20m\x20=\x20saturate(1.0\x20-\x20pow(d\x20/\x20r,\x204.0));\x0a\x20\x20\x20\x20float\x20m2\x20=\x20m\x20*\x20m;\x0a\x20\x20\x20\x20return\x20attenuation\x20*\x20m2;\x0a}\x0a\x0a#include\x20<hemisphereLightDecl>\x0a#include\x20<directionLightDecl>\x0a#include\x20<pointLightDecl>\x0a#include\x20<spotLightDecl>\x0a#include\x20<snowDecl>\x0a#include\x20<rainDecl>\x0a\x0a#ifdef\x20HAS_ANISOTROPY\x0avec3\x20getAnisotropicBentNormals(const\x20vec3\x20T,\x20const\x20vec3\x20B,\x20const\x20vec3\x20N,\x20const\x20vec3\x20V,\x20float\x20anisotropy)\x20{\x0a\x20\x20\x20\x20vec3\x20anisotropicFrameDirection\x20=\x20anisotropy\x20>=\x200.0\x20?\x20B\x20:\x20T;\x0a\x20\x20\x20\x20vec3\x20anisotropicFrameTangent\x20=\x20cross(normalize(anisotropicFrameDirection),\x20V);\x0a\x20\x20\x20\x20vec3\x20anisotropicFrameNormal\x20=\x20cross(anisotropicFrameTangent,\x20anisotropicFrameDirection);\x0a\x20\x20\x20\x20vec3\x20anisotropicNormal\x20=\x20normalize(mix(N,\x20anisotropicFrameNormal,\x20abs(anisotropy)));\x0a\x20\x20\x20\x20return\x20anisotropicNormal;\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_VOLUME\x0avec3\x20computeColorAtDistanceInMedia(vec3\x20color,\x20float\x20distance)\x20{\x0a\x20\x20\x20\x20return\x20-log(color)\x20/\x20distance;\x0a}\x0avec3\x20cocaLambert(vec3\x20alpha,\x20float\x20distance)\x20{\x0a\x20\x20\x20\x20return\x20exp(-alpha\x20*\x20distance);\x0a}\x0a#endif\x0a\x0a\x0avec3\x20sRGBToLinear(vec3\x20srgbIn)\x20\x0a{\x0a\x20\x20\x20\x20return\x20pow(srgbIn,\x20vec3(2.2));\x0a}\x0a\x0avec4\x20sRGBToLinear(vec4\x20srgbIn)\x0a{\x0a\x20\x20\x20\x20srgbIn\x20=\x20srgbIn\x20;\x0a\x20\x20\x20\x20vec3\x20linearOut\x20=\x20pow(srgbIn.rgb,\x20vec3(2.2));\x0a\x20\x20\x20\x20return\x20vec4(linearOut,\x20srgbIn.a);\x0a}\x0a\x0avec3\x20LinearTosRGB(vec3\x20linearIn)\x20\x0a{\x0a#ifndef\x20HDR\x20\x0a\x20\x20\x20\x20return\x20pow(linearIn,\x20vec3(1.0/2.2));\x0a#else\x20\x0a\x20\x20\x20\x20return\x20linearIn;\x0a#endif\x20\x0a}\x0a\x0avec3\x20lambertianDiffuse(vec3\x20diffuseColor)\x20\x0a{\x0a\x20\x20\x20\x20return\x20diffuseColor\x20*\x20RECIPROCAL_PI;\x0a}\x0a\x0avec3\x20applyTonemapping(vec3\x20linearIn)\x20\x0a{\x0a\x20\x20\x20\x20vec3\x20color\x20=\x20linearIn\x20;\x0a\x20\x20\x20\x20return\x20czm_acesTonemapping(color);\x0a}\x0a\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20f0,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20dotVH\x20)\x20{\x0a\x20\x20\x20\x20float\x20fresnel\x20=\x20exp2(\x20(\x20-\x205.55473\x20*\x20dotVH\x20-\x206.98316\x20)\x20*\x20dotVH\x20);\x0a\x20\x20\x20\x20return\x20f0\x20*\x20(\x201.0\x20-\x20fresnel\x20)\x20+\x20(\x20f90\x20*\x20fresnel\x20);\x0a}\x0a\x0afloat\x20GeometrySchlickGGX(float\x20roughness,\x20float\x20NoV)\x0a{\x0a\x20\x20\x20\x20float\x20k\x20=\x20pow(roughness\x20+\x201.0,\x202.0)\x20/\x208.0;\x0a\x20\x20\x20\x20return\x20NoV\x20/\x20(NoV\x20*\x20(1.0\x20-\x20k)\x20+\x20k);\x0a}\x0a\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x20\x20\x20\x20float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x20\x20\x20\x20float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x0a\x20\x20\x20\x20return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a}\x0a\x0avec3\x20BRDF_GGX(\x20const\x20in\x20vec3\x20lightDir,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20f0,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20vec3\x20halfDir\x20=\x20normalize(\x20lightDir\x20+\x20viewDir\x20);\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20clamp(\x20dot(\x20normal,\x20lightDir\x20),\x200.001,\x201.0\x20);\x0a\x20\x20\x20\x20float\x20dotNV\x20=\x20abs(\x20dot(\x20normal,\x20viewDir\x20)\x20)\x20+\x200.001;\x0a\x20\x20\x20\x20float\x20dotNH\x20=\x20saturate(\x20dot(\x20normal,\x20halfDir\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotLH\x20=\x20saturate(\x20dot(\x20lightDir,\x20halfDir\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotVH\x20=\x20saturate(\x20dot(\x20viewDir,\x20halfDir\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20F\x20=\x20F_Schlick(\x20f0,\x20f90,\x20dotVH\x20);\x0a\x20\x20\x20\x20float\x20G\x20=\x20GeometrySchlickGGX(alpha,\x20dotNV)\x20*\x20GeometrySchlickGGX(alpha,\x20dotNL);\x0a\x20\x20\x20\x20float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x20\x20\x20\x20return\x20F\x20*\x20(\x20G\x20*\x20D\x20)\x20/\x20(4.0\x20*\x20dotNL\x20*\x20dotNV);\x0a}\x0a\x0avoid\x20directPhysical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x20\x20\x20\x20reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_GGX(\x20directLight.direction,\x20geometry.viewDir,\x20geometry.normal,\x20material.specularColor,\x20material.specularF90,\x20material.roughness\x20);\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20lambertianDiffuse(\x20material.diffuseColor\x20);\x0a}\x0a\x0a#ifdef\x20HAS_NORMAL_TEXTURE\x0avec3\x20perturbNormal2Arb(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm,\x20vec2\x20uv\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20q0\x20=\x20vec3(\x20dFdx(\x20eye_pos.x\x20),\x20dFdx(\x20eye_pos.y\x20),\x20dFdx(\x20eye_pos.z\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20q1\x20=\x20vec3(\x20dFdy(\x20eye_pos.x\x20),\x20dFdy(\x20eye_pos.y\x20),\x20dFdy(\x20eye_pos.z\x20)\x20);\x0a\x20\x20\x20\x20vec2\x20st0\x20=\x20dFdx(\x20uv.st\x20);\x0a\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdy(\x20uv.st\x20);\x0a\x20\x20\x20\x20float\x20scale\x20=\x20sign(\x20st1.t\x20*\x20st0.s\x20-\x20st0.t\x20*\x20st1.s\x20);\x0a\x20\x20\x20\x20vec3\x20S\x20=\x20normalize(\x20(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20)\x20*\x20scale\x20);\x0a\x20\x20\x20\x20vec3\x20T\x20=\x20normalize(\x20(\x20-\x20q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20)\x20*\x20scale\x20);\x0a\x20\x20\x20\x20vec3\x20N\x20=\x20normalize(\x20surf_norm\x20);\x0a\x20\x20\x20\x20mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x20\x20\x20\x20vec3\x20mapN\x20=\x20texture2D(\x20uNormalTexture,\x20uv.xy\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20mapN.xy\x20*=\x20uNormalTextureScale;\x0a\x20\x20\x20\x20mapN.xy\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x20\x20\x20\x20return\x20normalize(\x20tsn\x20*\x20mapN\x20);\x0a}\x0a#endif\x0a\x0a#include\x20<cubeUV_reflection>\x0a\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir\x20)\x20{\x0a\x20\x20\x20\x20mat3\x20fixedToENU\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20const\x20mat3\x20yUpToZUp\x20=\x20mat3(1.0,\x200.0,\x200.0,\x200.0,\x200.0,\x20-1.0,\x200.0,\x201.0,\x200.0);\x0a\x20\x20\x20\x20return\x20normalize(\x20yUpToZUp\x20*\x20fixedToENU\x20*\x20dir\x20);\x0a}\x0a\x0avoid\x20indirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20lambertianDiffuse(\x20material.diffuseColor\x20);\x0a}\x0a\x0avec2\x20DFGApprox(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x20\x20\x20\x20float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x20\x20\x20\x20const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x20\x20\x20\x20const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x20\x20\x20\x20vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x20\x20\x20\x20float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x20\x20\x20\x20vec2\x20fab\x20=\x20vec2(\x20-\x201.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a\x20\x20\x20\x20return\x20fab;\x0a}\x0a\x0avoid\x20computeMultiscattering(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20specularF90,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a\x20\x20\x20\x20vec2\x20fab\x20=\x20DFGApprox(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x20\x20\x20\x20vec3\x20Fr\x20=\x20specularColor;\x0a\x20\x20\x20\x20vec3\x20FssEss\x20=\x20Fr\x20*\x20fab.x\x20+\x20specularF90\x20*\x20fab.y;\x0a\x20\x20\x20\x20float\x20Ess\x20=\x20fab.x\x20+\x20fab.y;\x0a\x20\x20\x20\x20float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x20\x20\x20\x20vec3\x20Favg\x20=\x20Fr\x20+\x20(\x201.0\x20-\x20Fr\x20)\x20*\x200.047619;\x0a\x20\x20\x20\x20vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x20\x20\x20\x20singleScatter\x20+=\x20FssEss;\x0a\x20\x20\x20\x20multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a}\x0a\x0avoid\x20indirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x20\x20\x20\x20vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x20\x20\x20\x20vec3\x20cosineWeightedIrradiance\x20=\x20irradiance;\x0a\x20\x20\x20\x20computeMultiscattering(\x20geometry.normal,\x20geometry.viewDir,\x20material.specularColor,\x20material.specularF90,\x20material.roughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x20\x20\x20\x20vec3\x20totalScattering\x20=\x20singleScattering\x20+\x20multiScattering;\x0a\x20\x20\x20\x20vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20max(\x20max(\x20totalScattering.r,\x20totalScattering.g\x20),\x20totalScattering.b\x20)\x20);\x0a\x20\x20\x20\x20reflectedLight.indirectSpecular\x20+=\x20radiance\x20*\x20singleScattering;\x0a\x20\x20\x20\x20reflectedLight.indirectSpecular\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a}\x0a\x0a//\x20vec3\x20getIBLIrradiance(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a//\x20\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal\x20);\x0a//\x20\x20\x20\x20\x20vec4\x20envMapColor\x20=\x20textureCubeUV(\x20czm_hdrEnvMap,\x20worldNormal,\x201.0\x20);\x0a//\x20\x20\x20\x20\x20return\x20envMapColor.rgb;\x0a//\x20}\x0a\x0a//\x20vec3\x20getIBLRadiance(\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a//\x20\x20\x20\x20\x20vec3\x20reflectVec\x20=\x20reflect(\x20-\x20viewDir,\x20normal\x20);\x0a//\x20\x20\x20\x20\x20reflectVec\x20=\x20normalize(\x20mix(\x20reflectVec,\x20normal,\x20roughness\x20*\x20roughness)\x20);\x0a//\x20\x20\x20\x20\x20reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec\x20);\x0a//\x20\x20\x20\x20\x20vec4\x20envMapColor\x20=\x20textureCubeUV(\x20czm_hdrEnvMap,\x20reflectVec,\x20roughness\x20);\x0a//\x20\x20\x20\x20\x20return\x20envMapColor.rgb;\x0a//\x20}\x0a\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x20\x20\x20\x20return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a}\x0a\x0avec4\x20brdf(in\x20vec4\x20baseColorWithAlpha,\x20vec2\x20texCoord,\x20vec2\x20oriTexCoord,\x20vec3\x20posEC,\x20vec3\x20posMC,\x20vec3\x20vertexNormalEC,\x20vec4\x20sunLightColor)\x20{\x0a#ifndef\x20USE_BatchPBR\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20baseColorWithAlpha\x20*\x20uBaseColorFactor;\x0a#endif\x0a#ifdef\x20BaseColorReplace\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20uBaseColorFactor;\x0a#endif\x0a\x20\x20\x20\x20float\x20faceDirection\x20=\x20gl_FrontFacing\x20?\x201.0\x20:\x20-\x201.0;\x0a\x20\x20\x20\x20vec3\x20ng\x20=\x20length(vertexNormalEC)\x20<\x200.1\x20?\x20normalize(czm_normal\x20*\x20computeNormal(posMC.xyz))\x20:\x20normalize(vertexNormalEC);\x0a\x20\x20\x20\x20ng\x20=\x20ng\x20*\x20faceDirection;\x0a#ifdef\x20HAS_BASE_TEXTURE\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20texture2D(uBaseTexture,\x20oriTexCoord);\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20sRGBToLinear(baseColorWithAlpha)\x20*\x20uBaseColorFactor;\x0a#endif\x0a#ifdef\x20HAS_NORMAL_TEXTURE\x0a\x20\x20\x20\x20vec3\x20n\x20=\x20perturbNormal2Arb(posEC,\x20ng,\x20oriTexCoord);\x0a#ifdef\x20HAS_ANISOTROPY\x0a\x20\x20\x20\x20float\x20anisotropy\x20=\x20uAnisotropy.b;\x0a\x20\x20\x20\x20vec3\x20anisotropyDirection\x20=\x20vec3(uAnisotropy.xy,\x200.0);\x0a\x20\x20\x20\x20vec3\x20anisotropicTangent\x20=\x20normalize(tbn\x20*\x20anisotropyDirection);\x0a\x20\x20\x20\x20vec3\x20anisotropicBitangent\x20=\x20normalize(cross(tbn[2],\x20anisotropicTangent));\x0a\x20\x20\x20\x20n\x20=\x20getAnisotropicBentNormals(anisotropicTangent,\x20anisotropicBitangent,\x20n,\x20v,\x20anisotropy);\x0a#endif\x0a#else\x0a\x20\x20\x20\x20vec3\x20n\x20=\x20ng;\x0a#endif\x0a#ifdef\x20HAS_WETNESS\x0a\x20\x20\x20\x20mat3\x20fixedToENU_wetness\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20vec3\x20normalWS_wetness\x20=\x20normalize(fixedToENU_wetness\x20*\x20n);\x0a#endif\x0a#ifdef\x20HAS_RAIN\x0a\x20\x20\x20\x20n\x20=\x20rippleGenerator(uRippleTexture,uAnimationSpeed,normalWS_wetness,uWetnessFactor);\x0a#endif\x0a\x20\x20\x20\x20vec3\x20baseColor\x20=\x20baseColorWithAlpha.rgb;\x0a\x20\x20\x20\x20float\x20roughness\x20=\x20uRoughnessFactor;\x0a\x20\x20\x20\x20float\x20metalness\x20=\x20uMetallicFactor;\x0a\x20\x20\x20\x20vec4\x20emissiveFactor\x20=\x20uEmissiveFactor;\x0a\x20\x20\x20\x20vec2\x20emissiveTexCoord\x20=\x20texCoord.xy;\x0a#ifdef\x20PBR_THEME\x0a\x20\x20\x20\x20int\x20pbrIndex\x20=\x20int(vPBRIndex);\x0a\x20\x20\x20\x20if(vPBRIndex\x20<\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20baseColorWithAlpha;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20mat4\x20pbrPar\x20=\x20mat4(0.0);\x0a\x20\x20\x20\x20for(int\x20i\x20=\x200;i\x20<\x20NUM_PBR_MATERIALS;i++)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(i\x20==\x20pbrIndex)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20pbrPar\x20=\x20uPBRMaterials[i];\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20roughness\x20=\x20clamp(pbrPar[0][0],\x200.04,\x201.0);\x0a\x20\x20\x20\x20metalness\x20=\x20clamp(pbrPar[0][1],\x200.0,\x201.0);\x0a\x20\x20\x20\x20baseColor\x20=\x20(baseColorWithAlpha\x20/\x20uBaseColorFactor\x20*\x20vec4(pbrPar[0][2],\x20pbrPar[0][3],\x20pbrPar[1][0],\x20pbrPar[1][1])).rgb;\x0a#endif\x0a#ifdef\x20USE_BatchPBR\x0a\x20\x20\x20\x20metalness\x20=\x20vMetallicRoughness.x;\x0a\x20\x20\x20\x20roughness\x20=\x20vMetallicRoughness.y;\x0a\x20\x20\x20\x20emissiveFactor\x20=\x20vEmissiveFactor;\x0a\x20\x20\x20\x20emissiveTexCoord\x20=\x20texCoord.xy;\x0a#endif\x0a\x20\x20\x20\x20metalness\x20=\x20clamp(metalness,\x200.0,\x201.0);\x0a\x20\x20\x20\x20roughness\x20=\x20clamp(roughness,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x0a#ifdef\x20HAS_MetallicRoughness_TEXTURE\x0a\x20\x20\x20\x20vec3\x20metallicRoughness\x20=\x20texture2D(uMetallicRoughnessTexture,\x20oriTexCoord).rgb;\x0a\x20\x20\x20\x20metalness\x20=\x20clamp(metalness\x20*\x20metallicRoughness.r,\x200.0,\x201.0);\x0a\x20\x20\x20\x20roughness\x20=\x20clamp(roughness\x20*\x20metallicRoughness.g,\x200.04,\x201.0);\x0a#ifdef\x20HAS_WETNESS\x0a\x20\x20\x20\x20float\x20fWetness\x20=\x20clamp(uWetnessFactor,0.0,1.0);\x0a\x20\x20\x20\x20float\x20fWetness_correction\x20=\x20pow(4.0*fWetness,2.0);\x0a\x20\x20\x20\x20fWetness_correction\x20=\x20clamp(fWetness_correction,clamp(fWetness,0.0,0.9),1.0);\x0a\x20\x20\x20\x20float\x20fWerness_normalized\x20=\x20fWetness_correction\x20*\x20clamp(normalWS_wetness.z\x20+\x200.85,0.0,1.0);\x0a\x20\x20\x20\x20baseColor\x20=\x20mix(baseColor,baseColor*0.7,fWerness_normalized);\x0a\x20\x20\x20\x20roughness\x20=\x20mix(roughness,0.05,fWerness_normalized);\x0a#endif\x0a#ifdef\x20HAS_SNOW\x0a\x20\x20\x20\x20mat3\x20fixedToENU_snow\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20vec3\x20normalWS_snow\x20=\x20normalize(fixedToENU_snow\x20*\x20n);\x0a\x20\x20\x20\x20snowGenerator(uSnowMaskTexture,uSnowNormalTexture,\x20oriTexCoord,uSnowCoverageFactor,normalWS_snow,baseColor,roughness);\x0a#endif\x0a#endif\x0a\x0a\x20\x20\x20\x20vec3\x20lightColorHdr\x20=\x20vec3(2.0)\x20*\x20sunLightColor.rgb;\x0a\x20\x20\x20\x20vec3\x20l\x20=\x20normalize(czm_lightDirectionEC);\x0a\x20\x20\x20\x20vec3\x20v\x20=\x20-normalize(posEC);\x0a\x20\x20\x20\x20vec3\x20h\x20=\x20normalize(v\x20+\x20l);\x0a\x20\x20\x20\x20vec3\x20f0\x20=\x20vec3(0.04);\x0a\x20\x20\x20\x20vec3\x20diffuseColor\x20=\x20baseColor\x20*\x20(1.0\x20-\x20metalness)\x20*\x20(1.0\x20-\x20f0);\x0a\x20\x20\x20\x20vec3\x20specularColor\x20=\x20mix(f0,\x20baseColor,\x20metalness);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20clamp(\x20dot(\x20n,\x20l\x20),\x200.001,\x201.0\x20);\x0a\x20\x20\x20\x20float\x20dotNV\x20=\x20abs(\x20dot(\x20n,\x20v\x20)\x20)\x20+\x200.001;\x0a\x20\x20\x20\x20float\x20dotNH\x20=\x20saturate(\x20dot(\x20n,\x20h\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotLH\x20=\x20saturate(\x20dot(\x20l,\x20h\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotVH\x20=\x20saturate(\x20dot(\x20v,\x20h\x20)\x20);\x0a\x20\x20\x20\x20float\x20reflectance\x20=\x20max(max(specularColor.r,\x20specularColor.g),\x20specularColor.b);\x0a\x20\x20\x20\x20float\x20f90\x20=\x20clamp(reflectance\x20*\x2025.0,\x200.0,\x201.0);\x0a\x20\x20\x20\x20vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20f90,\x20dotVH\x20);\x0a\x20\x20\x20\x20float\x20G\x20=\x20GeometrySchlickGGX(alpha,\x20dotNV)\x20*\x20GeometrySchlickGGX(alpha,\x20dotNL);\x0a\x20\x20\x20\x20float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x20\x20\x20\x20vec3\x20diffuseContribution\x20=\x20(1.0\x20-\x20F)\x20*\x20lambertianDiffuse(diffuseColor);\x0a\x20\x20\x20\x20vec3\x20specularContribution\x20=\x20F\x20*\x20G\x20*\x20D\x20/\x20(4.0\x20*\x20dotNL\x20*\x20dotNV);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20geometryNormal\x20=\x20ng;\x0a\x20\x20\x20\x20PhysicalMaterial\x20material;\x0a\x20\x20\x20\x20material.diffuseColor\x20=\x20diffuseColor;\x0a\x20\x20\x20\x20vec3\x20dxy\x20=\x20max(\x20abs(\x20dFdx(\x20geometryNormal\x20)\x20),\x20abs(\x20dFdy(\x20geometryNormal\x20)\x20)\x20);\x0a\x20\x20\x20\x20float\x20geometryRoughness\x20=\x20max(\x20max(\x20dxy.x,\x20dxy.y\x20),\x20dxy.z\x20);\x0a\x20\x20\x20\x20material.roughness\x20=\x20max(\x20roughness,\x200.0525\x20);\x0a\x20\x20\x20\x20material.roughness\x20+=\x20geometryRoughness;\x0a\x20\x20\x20\x20material.roughness\x20=\x20min(\x20material.roughness,\x201.0\x20);\x0a\x20\x20\x20\x20material.specularColor\x20=\x20specularColor;\x0a\x20\x20\x20\x20material.specularF90\x20=\x201.0;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20GeometricContext\x20geometry;\x0a\x20\x20\x20\x20geometry.position\x20=\x20posEC;\x0a\x20\x20\x20\x20geometry.normal\x20=\x20n;\x0a\x20\x20\x20\x20geometry.viewDir\x20=\x20v;\x0a\x20\x20\x20\x20ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20+=\x20dotNL\x20*\x20lightColorHdr\x20*\x20diffuseContribution;\x0a\x20\x20\x20\x20reflectedLight.directSpecular\x20+=\x20dotNL\x20*\x20lightColorHdr\x20*\x20specularContribution;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20IncidentLight\x20directLight;\x20\x0a\x20\x20\x20\x20#include\x20<lightSourceImpl>\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20vec3\x20radiance\x20=\x20vec3(0.0);\x0a\x20\x20\x0a#ifdef\x20HAS_HEMISPHERE_LIGHTS\x0a\x20\x20\x20\x20HemisphereLight\x20hemiLight;\x0a\x20\x20\x20\x20hemiLight.skyColor\x20=\x20uSkyColor[0];\x0a\x20\x20\x20\x20hemiLight.groundColor\x20=\x20uGroundColor[0];\x0a\x20\x20\x20\x20hemiLight.direction\x20=\x20normalize(czm_normal\x20*\x20vec3(0.0,\x200.0,\x201.0));\x0a\x20\x20\x20\x20irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemiLight,\x20geometry\x20);\x0a#endif\x0a\x0a#ifdef\x20IBL\x0a\x0a#ifdef\x20KtxEnvMap\x0a\x20\x20\x20\x20mat3\x20fixedToENU\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20const\x20mat3\x20yUpToZUp\x20=\x20mat3(-1.0,\x200.0,\x200.0,\x200.0,\x200.0,\x20-1.0,\x200.0,\x201.0,\x200.0);\x0a\x20\x20\x20\x20vec3\x20cubeDir\x20=\x20normalize(\x20yUpToZUp\x20*\x20fixedToENU\x20*\x20reflect(-v,\x20n)\x20);\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20normalize(\x20yUpToZUp\x20*\x20fixedToENU\x20*\x20n\x20);\x0a\x20\x20\x20\x20irradiance\x20=\x20czm_sphericalHarmonics(worldNormal,\x20czm_sphericalHarmonicCoefficients);\x0a\x20\x20\x20\x20radiance\x20=\x20czm_sampleOctahedralProjection(czm_specularEnvironmentMaps,\x20czm_specularEnvironmentMapSize,\x20cubeDir,\x20\x20roughness\x20*\x20czm_specularEnvironmentMapsMaximumLOD,\x20czm_specularEnvironmentMapsMaximumLOD);\x0a#else\x0a\x20\x20\x20\x20//\x20irradiance\x20+=\x20getIBLIrradiance(\x20geometry.normal\x20);\x0a\x20\x20\x20\x20//\x20radiance\x20+=\x20getIBLRadiance(\x20geometry.viewDir,\x20geometry.normal,\x20material.roughness\x20);\x0a#endif\x0a\x20\x20\x20\x20\x0a#else\x0a\x20\x20\x20\x20vec3\x20positionWC\x20=\x20vec3(czm_inverseView\x20*\x20vec4(posEC,\x201.0));\x0a\x20\x20\x20\x20vec3\x20r\x20=\x20normalize(czm_inverseViewRotation\x20*\x20normalize(reflect(v,\x20n)));\x0a\x20\x20\x20\x20float\x20vertexRadius\x20=\x20length(positionWC);\x0a\x20\x20\x20\x20float\x20horizonDotNadir\x20=\x201.0\x20-\x20min(1.0,\x20czm_ellipsoidRadii.x\x20/\x20vertexRadius);\x0a\x20\x20\x20\x20float\x20reflectionDotNadir\x20=\x20dot(r,\x20normalize(positionWC));\x0a\x20\x20\x20\x20r.x\x20=\x20-r.x;\x0a\x20\x20\x20\x20r\x20=\x20-normalize(czm_temeToPseudoFixed\x20*\x20r);\x0a\x20\x20\x20\x20r.x\x20=\x20-r.x;\x0a\x20\x20\x20\x20float\x20inverseRoughness\x20=\x201.04\x20-\x20roughness;\x0a\x20\x20\x20\x20inverseRoughness\x20*=\x20inverseRoughness;\x0a\x20\x20\x20\x20vec3\x20sceneSkyBox\x20=\x20textureCube(czm_environmentMap,\x20r).rgb\x20*\x20inverseRoughness;\x0a\x20\x20\x20\x20float\x20atmosphereHeight\x20=\x200.05;\x0a\x20\x20\x20\x20float\x20blendRegionSize\x20=\x200.1\x20*\x20((1.0\x20-\x20inverseRoughness)\x20*\x208.0\x20+\x201.1\x20-\x20horizonDotNadir);\x0a\x20\x20\x20\x20float\x20blendRegionOffset\x20=\x20roughness\x20*\x20-1.0;\x0a\x20\x20\x20\x20float\x20farAboveHorizon\x20=\x20clamp(horizonDotNadir\x20-\x20blendRegionSize\x20*\x200.5\x20+\x20blendRegionOffset,\x201.0e-10\x20-\x20blendRegionSize,\x200.99999);\x0a\x20\x20\x20\x20float\x20aroundHorizon\x20=\x20clamp(horizonDotNadir\x20+\x20blendRegionSize\x20*\x200.5,\x201.0e-10\x20-\x20blendRegionSize,\x200.99999);\x0a\x20\x20\x20\x20float\x20farBelowHorizon\x20=\x20clamp(horizonDotNadir\x20+\x20blendRegionSize\x20*\x201.5,\x201.0e-10\x20-\x20blendRegionSize,\x200.99999);\x0a\x20\x20\x20\x20float\x20smoothstepHeight\x20=\x20smoothstep(0.0,\x20atmosphereHeight,\x20horizonDotNadir);\x0a\x20\x20\x20\x20vec3\x20belowHorizonColor\x20=\x20mix(vec3(0.1,\x200.15,\x200.25),\x20vec3(0.4,\x200.7,\x200.9),\x20smoothstepHeight);\x0a\x20\x20\x20\x20vec3\x20nadirColor\x20=\x20belowHorizonColor\x20*\x200.5;\x0a\x20\x20\x20\x20vec3\x20aboveHorizonColor\x20=\x20mix(vec3(0.9,\x201.0,\x201.2),\x20belowHorizonColor,\x20roughness\x20*\x200.5);\x0a\x20\x20\x20\x20vec3\x20blueSkyColor\x20=\x20mix(vec3(0.18,\x200.26,\x200.48),\x20aboveHorizonColor,\x20reflectionDotNadir\x20*\x20inverseRoughness\x20*\x200.5\x20+\x200.75);\x0a\x20\x20\x20\x20vec3\x20zenithColor\x20=\x20mix(blueSkyColor,\x20sceneSkyBox,\x20smoothstepHeight);\x0a\x20\x20\x20\x20vec3\x20blueSkyDiffuseColor\x20=\x20vec3(0.7,\x200.85,\x200.9);\x0a\x20\x20\x20\x20float\x20diffuseIrradianceFromEarth\x20=\x20(1.0\x20-\x20horizonDotNadir)\x20*\x20(reflectionDotNadir\x20*\x200.25\x20+\x200.75)\x20*\x20smoothstepHeight;\x0a\x20\x20\x20\x20float\x20diffuseIrradianceFromSky\x20=\x20(1.0\x20-\x20smoothstepHeight)\x20*\x20(1.0\x20-\x20(reflectionDotNadir\x20*\x200.25\x20+\x200.25));\x0a\x20\x20\x20\x20vec3\x20diffuseIrradiance\x20=\x20blueSkyDiffuseColor\x20*\x20clamp(diffuseIrradianceFromEarth\x20+\x20diffuseIrradianceFromSky,\x200.0,\x201.0);\x0a\x20\x20\x20\x20float\x20notDistantRough\x20=\x20(1.0\x20-\x20horizonDotNadir\x20*\x20roughness\x20*\x200.8);\x0a\x20\x20\x20\x20vec3\x20specularIrradiance\x20=\x20mix(zenithColor,\x20aboveHorizonColor,\x20smoothstep(farAboveHorizon,\x20aroundHorizon,\x20reflectionDotNadir)\x20*\x20notDistantRough);\x0a\x20\x20\x20\x20specularIrradiance\x20=\x20mix(specularIrradiance,\x20belowHorizonColor,\x20smoothstep(aroundHorizon,\x20farBelowHorizon,\x20reflectionDotNadir)\x20*\x20inverseRoughness);\x0a\x20\x20\x20\x20specularIrradiance\x20=\x20mix(specularIrradiance,\x20nadirColor,\x20smoothstep(farBelowHorizon,\x201.0,\x20reflectionDotNadir)\x20*\x20inverseRoughness);\x0a\x20\x20\x20\x20irradiance\x20=\x20diffuseIrradiance;\x0a\x20\x20\x20\x20radiance\x20=\x20specularIrradiance;\x0a#endif\x0a\x0a\x20\x20\x20\x20indirectSpecular_Physical(radiance,\x20irradiance,\x20geometry,\x20material,\x20reflectedLight);\x0a\x0a#ifdef\x20HAS_OCCLUSION_TEXTURE\x0a\x20\x20\x20\x20float\x20ambientOcclusion\x20=\x20texture2D(uOcclusionTexture,\x20oriTexCoord.xy).r;\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a#ifdef\x20IBL\x0a\x20\x20\x20\x20reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.roughness\x20);\x0a#endif\x0a#endif\x0a\x0avec3\x20color\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.indirectSpecular;\x0a\x0a#ifdef\x20HAS_EMISSIVE_TEXTURE\x0a\x20\x20\x20\x20emissiveTexCoord\x20=\x20emissiveTexCoord\x20*\x20uEmissiveUVOffsetAndTiling.zw\x20+\x20uEmissiveUVOffsetAndTiling.xy;\x0a\x20\x20\x20\x20vec3\x20emissive\x20=\x20texture2D(uEmissionTexture,\x20emissiveTexCoord).rgb;\x0a\x20\x20\x20\x20emissive\x20*=\x20emissiveFactor.rgb;\x0a\x20\x20\x20\x20color\x20+=\x20emissive;\x0a#else\x0a\x20\x20\x20\x20color\x20+=\x20emissiveFactor.rgb;\x0a#endif\x0a\x0a\x20\x20\x20\x20color\x20=\x20applyTonemapping(color);\x0a\x20\x20\x20\x20color\x20=\x20LinearTosRGB(color);\x0a\x20\x20\x20\x20\x0a#ifdef\x20MASK\x0a\x20\x20\x20\x20if\x20(baseColorWithAlpha.a\x20<\x20uAlphaCutoff)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20vec4(color.rgb,\x201.0);\x0a#endif\x0a\x20\x20\x20\x20return\x20vec4(color.rgb,\x20baseColorWithAlpha.a);\x0a}\x0a#endif\x0a', 'edgeLength', 'speed', 'blockscale', 'emscripten_enum_draco_GeometryAttribute_Type_POSITION', '_rectangles', 'isGreaterThan', '_ignoreGlobe', 'texturePackage', 'czm_batchTable_xywh2', '_clipMode', 'reportSuccess', 'TRANSPARENT_BACK_COLOR', 'BlockImagery', 'heightmapHeight', 'wrap', '_maxVisibleValue', 'GetIntEntry', '\x20out\x20of\x20range:\x20', 'BLUE', 'UseInstanceSkeletonMatrix', 'emscripten_bind_Decoder_GetAttributeUInt16ForAllPoints_3', '_flattenPar', 'LayerStyle', 'second\x20is\x20required', 'getExtensionFromUri', 'emscripten_bind_AttributeQuantizationTransform_range_0', 'activate', 'RenderState', 'FlyTurningMode', 'Cartesian3', '_currentStopIndex', 'buffer', 'selectIndexData', 'decimalPlaces', 'SlopeScale', '_emscripten_bind_DracoInt16Array___destroy___0', 'AUTO_Z_AXIAL', 'promisePack', 'contains', 'unloadBlockTile', 'rectangle\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'distanceToTile', 'visibilityPlaneMask', 'PointPrimitiveCollection', 'negate', '_modelViewProjectionDirty', '/lib/inflate.js', 'REPLACE', 'anyfunc', 'CRNProcessor', './ThirdParty/draco_wasm_wrapper_new.js', '_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_NO_TRANSFORM', 'dataName', 'attributeLocations', 'getCache', '_emscripten_bind_DracoFloat32Array___destroy___0', 'ALPHA_BLEND', 'invalid\x20literal/lengths\x20set', 'isAltitudeFree', 'normal', 'Metadata', 'Style', 'aTexCoord1', '_emscripten_bind_Decoder___destroy___0', '_viewPosition', 'emscripten_enum_draco_DataType_DT_INT64', 'emscripten_bind_Decoder_GetTrianglesUInt32Array_3', 'Geometry', 'dynCall_iiii', 'getFloat32', 'deferred', 'noExitRuntime', 'meshopt_decodeIndexBuffer', '_emscripten_bind_AttributeTransformData___destroy___0', 'posUniqueID', 'frustumCommandsList', '_isHeadingFree', 'POSITION', 'S3MCreateVertexJob', 'framebuffer', 'wrapS', 'localName', 'multiplyByPlane', '_totalDuration', 'renderEntities', 'RGB_PVRTC_2BPPV1', 'add\x20imagery\x20layer\x20', 'distanceToNext', 'GET', 'blob:', 'iterator', '_selectEnabled', 'dirty', '_emscripten_bind_AttributeQuantizationTransform_quantization_bits_0', '_log2FarDepthFromNearPlusOne', '_noValueColor', '_stopsInfo', 'url', 'isNaN', 'emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_NO_TRANSFORM', 'minInstensity', 'getValue', 'TEXTURE_COORD_ONE_IS_W', 'avail_in', 'multiplyComponents', '_polygonOffsetConfig', 'Unsupported\x20compressed\x20format.', 'loadConfig', '_view3DDirty', '_emscripten_bind_PointCloud_num_points_0', 'same-origin', '_isGenerated', '_lineCommand', 'emscripten_bind_DracoUInt32Array_size_0', '_duration', 'attribute\x20vec4\x20aPosition;\x0aattribute\x20vec4\x20aTexCoord0;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20aPosition;\x0a}', '_removeObjsOperationType', 'LEFT', 'scene', 'createCRN', 'rootName', '_command', '_gl', '_width', 'subTextureInfo', 'drawEvt', 'ImageryLayer', 'ProjectionImage.visibleDistance', '_fillStyle', 'startPackRequest', 'addressmode', 'ViewShedAnalysisFS', 'IPORTAL_KEY', 'status', 'CullingVolume', 'isDrawing', 'emscripten_bind_Decoder_GetAttributeMetadata_2', 'cos', 'Position', '_emissionTextureUrl', 'TweenCollection', '_maximumLevel', 'vertexCount', 'queryNumericValue', 'numberOfLevelZeroTilesY', 'activeEvt', 'fromCartesian', 'Polygon', 'emscripten_bind_AttributeQuantizationTransform_min_value_1', 'Fill_And_WireFrame', 'prototype', 'DecodeBufferToPointCloud', '_value', '_buffer', 'false', '_interpolationMode', '_emscripten_bind_Status_code_0', '_offCenterFrustum', 'update', 'currentRoute', 'Data', 'getQuery', '_minVisibleValue', 'WithinLayer3DGroup', 'handleError', './this.program', 'pass', 'polygonOffset', '_objsColorList', '_labelBackgroundColor', 'emscripten_enum_draco_GeometryAttribute_Type_NORMAL', 'LabelCollection', 'passes', 'updateObjsOperation', 'NULL', '_tilt', 'vertexColor', 'add', 'logarithmicDepthFarToNearRatio', 'copyDepthCommand', 'PostProcessStage', '_hasVertexNormals', '{fileExtension}', 'quadKeyPack', '_invertViewMatrix', 'readyTextureCount', 'DrawCommand', 'fbo', 'Cesium3DTile', 'ANTIALIASING', 'emscripten_bind_Mesh___destroy___0', 'decode_position_min', 'meshopt_decodeFilterOct', 'stopViews', '_requestImageError', 'endY', 'minTexCoordValue', 'unique_id', '_emscripten_bind_Decoder_GetMetadata_1', 'requestImage', 'col', 'rest/maps', 's3m_batchTable_color', 'getPath', '_waterPlanes', 'arraybuffer', 'pbrMetallicRoughness', 'BUFFER', '_floor', '_blockCacheQueue', 'img', 'HAS_SNOW', 'DracoUInt8Array', '_visibleAreaColor', 'S3MCreateIndexJob', 'geoBounds', '_usePBR', 'unloadTiles', 'charAt', 'An\x20error\x20occurred\x20while\x20accessing\x20', 'componentDatatype', 'decodeTexCoord1vNormConstant', 'emscripten_bind_DracoInt8Array___destroy___0', 'Event', 'wnext', 'Constrast', 'set', 'Bottom', '_isSct', '_requestImagery', 'decode_texCoord3_normConstant', 'CredentialType', 's3m:FileType', 'Left', 'MetadataQuerier', 'GetAttributeIdByName', 'tilingScheme\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'rippleTextureIndex', 'execute', 'Material', 'DT_UINT64', 'Fill3DMode', '_emscripten_bind_DracoUInt8Array_size_0', 'UTiling', '_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_QUANTIZATION_TRANSFORM', 'texturelod', 'hookDrillPickFunc', 'transform', 'defined', '_accumulationArea', 'data/path/', 'CLIP', 'emscripten_bind_Decoder_GetFaceFromMesh_3', 'createSilhouetteEdgeAttributes', 'onData', 'inflateReset2', '_scene', 'S3MContentFactory', 'defines', 'cCRNFmtDXT3', 'projection-image-', 'uv4', 'decode_texCoord5_min', 'contentResource', 'distanceToCamera', '_format', 'shrinkBuf', 'alongline', 'ALL', 'TileMatrix', '_heightmapStructure', 'ellipsoid', 'InstanceMode', 'Material3Ds', 'texture', 'red', 'LEFT_DOWN', 'toJSON', 'blend', '_emscripten_bind_Decoder_GetTrianglesUInt32Array_3', 'Multiple', 'ModelEdgeVp', 'adler', 'emscripten_bind_DracoFloat32Array_DracoFloat32Array_0', 'lte', 'no\x20native\x20wasm\x20support\x20detected', 'blockRequest', 'MinVisibleValue', '_viewerLineCommand', 'AmbientA', 'attrLocation', 'fromType', 'Float', 'texmodmatrix', 'too\x20many\x20length\x20or\x20distance\x20symbols', 'unloadTile', 'init', 'getColorTexture', 'S3MTilesVS', '90NdmyZu', '_emscripten_enum_draco_GeometryAttribute_Type_TEX_COORD', 'IndexDatatype', 'ancestorMap', 'heightBuffer', 'RenderEntity', 'emscripten_enum_draco_DataType_DT_BOOL', 'S3MObliqueRenderEntity', '_hypsometric', 'getNumberOfYTilesAtLevel', 'FresnelVp', 'your\x20browser\x20not\x20supported\x20pickPosition!', 'S3MTilesNoLightFS', 'PointAttribute', 'Playing', 'avail_out', 'string', 'NUM_PBR_MATERIALS\x20', 'ProgramDefines', 'reflectRs', 'extensions', 'Volume2', 'Factorial', 'inflateInit', 'availabilityTilesLoaded', 'RotateY', 'ColorParams', 'TILES3D', 'BYTES_PER_ELEMENT', 'MeasureHandler.lineDisplayType', 'imagery', '_lineEntity', 'num_faces', 'draco_decoder.wasm', 'radius', 'IDENTITY', 'VisibleAltitudeMin', 'unhandledRejection', 'FORMAT', '_imageryProvider', 'createShaderProgram', 'uniform\x20sampler2D\x20uReflectMap;\x0auniform\x20sampler2D\x20uNoiseMap;\x0auniform\x20vec4\x20uTintColour;\x0auniform\x20vec4\x20uWaterColour;\x0auniform\x20vec4\x20uFillForeColor;\x0auniform\x20float\x20uFresnelPower;\x0auniform\x20float\x20uMinFresnel;\x0auniform\x20float\x20uMaxFresnel;\x0auniform\x20float\x20uNoiseScale;\x0auniform\x20float\x20uWaterBrightness;\x0avarying\x20vec2\x20vNoiseCoord;\x0avarying\x20vec3\x20vProjectionCoord;\x0avarying\x20vec3\x20vEyeDir;\x0avarying\x20vec3\x20vNormal;\x0avarying\x20vec4\x20vColor;\x0avarying\x20vec4\x20vSecondColor;\x0avarying\x20vec4\x20vPositionMC;\x0avarying\x20vec3\x20vPositionEC;\x0a\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a#endif\x0a\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20getClipDistance(vec3\x20pos,\x20vec3\x20planeNormal,\x20float\x20disToOrigin)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20dot(planeNormal,\x20pos)\x20+\x20disToOrigin;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[0].xyz,\x20uClipPlanes[0].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0avec4\x20AdjSaturation(in\x20vec4\x20inputColor,\x20in\x20float\x20saturation)\x0a{\x0a\x09vec3\x20lumCoeff\x20=\x20vec3(0.2125,\x200.7154,\x200.0721);\x0a\x09vec3\x20intensity\x20=\x20vec3(dot(inputColor.rgb,\x20lumCoeff));\x0a\x09vec3\x20tempColor\x20=\x20mix(intensity,\x20inputColor.rgb,\x20saturation);\x0a\x09return\x20vec4(tempColor,\x201.0);\x0a}\x0avoid\x20main()\x0a{\x0a#ifdef\x20APPLY_SWIPE\x20\x0a\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a#endif\x0a\x20\x20\x20\x20if(vColor.a\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vColor;\x0a\x20\x20\x20\x20vec2\x20final\x20=\x20vProjectionCoord.xy\x20/\x20vProjectionCoord.z;\x0a\x20\x20\x20\x20vec3\x20noiseNormal\x20=\x20(texture2D(uNoiseMap,\x20(vNoiseCoord.xy\x20/\x205.0)).rgb\x20-\x200.5).rbg\x20*\x20uNoiseScale;\x0a\x20\x20\x20\x20final\x20+=\x20noiseNormal.xz;\x0a\x20\x20\x20\x20float\x20realMinFresnel,\x20realMaxFresnel;\x0a\x20\x20\x20\x20if(uMinFresnel\x20<\x20uMaxFresnel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMinFresnel\x20=\x20uMinFresnel;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMaxFresnel\x20=\x20uMaxFresnel;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMinFresnel\x20=\x20uMaxFresnel;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMaxFresnel\x20=\x20uMinFresnel;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20fresnelBias\x20=\x20realMinFresnel;\x0a\x20\x20\x20\x20float\x20fresnelScale\x20=\x20(realMaxFresnel\x20-\x20realMinFresnel)\x20/\x201.0;\x0a\x20\x20\x20\x20float\x20fresnel\x20=\x20fresnelBias\x20+\x20fresnelScale\x20*\x20pow(1.0\x20+\x20dot(normalize(vEyeDir),\x20vNormal),\x20uFresnelPower);\x0a\x20\x20\x20\x20fresnel\x20=\x20clamp(fresnel,\x200.05,\x200.95);\x0a\x20\x20\x20\x20vec4\x20reflectionColour\x20=\x20texture2D(uReflectMap,\x20final);\x0a\x20\x20\x20\x20vec4\x20refractionColour\x20=\x20reflectionColour\x20+\x20uTintColour;\x0a\x20\x20\x20\x20vec4\x20resultColour\x20=\x20mix(uWaterColour,\x20reflectionColour,\x20fresnel);\x0a\x20\x20\x20\x20resultColour\x20=\x20AdjSaturation(resultColour,\x201.0);\x0a\x20\x20\x20\x20resultColour\x20=\x20resultColour\x20*\x20uWaterBrightness;\x0a\x20\x20\x20\x20resultColour.a\x20=\x20uWaterColour.a;\x0a\x20\x20\x20\x20resultColour\x20*=\x20uFillForeColor;\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20gl_FragColor\x20*\x20resultColour;\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20gl_FragColor\x20*=\x20clip(vec4(vPositionEC,\x201.0));\x0a#endif\x0a\x20\x20\x20\x20if(gl_FragColor.a\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x0a}', 'whave', 'GetAttributeFloat', '_nextStopIndex', '/extendxml.xml', 'requestMetadata', 'resetRosRenderFlag', 'useLogDepth', 'PACK', 'split', 'cellHeight', 'quantization_bits', 'getBarrierPoint', 'header\x20crc\x20mismatch', 'needsStart', 'isCreateSkirt', '_fovy', 'TexModMatrix', 'createEdgeData', 'REPLACE_SELECT_TYPE', '_edgeDistanceFalloffFactor', '_emissiveFactor', 'TEX_COORD', 'SILHOUETTE', 'KEEP', 'lineDisplayType', 'UNSIGNED_SHORT_5_6_5', 'RGBA_DXT3', 'near', 'colorUniqueID', 'getSelection', '_lineColor', 'blockSize', 'FALTTEN', 'TEXTURE0', 'ProjectionImage.contrast', 'BIM', 'getSkyline3D', 'ready', '_emscripten_bind_Decoder_GetAttributeUInt32ForAllPoints_3', '_isTransparencyOptimization', 'emscripten_bind_Decoder_Decoder_0', 'StencilConstants', '%2B', '_processTiles', 'selectEnabled', '_emscripten_bind_AttributeQuantizationTransform_InitFromAttribute_1', 'tan', 'LESS_OR_EQUAL', '_setThrew', 'rest/realspace', 'uVisibleColor', 'distdyn', 'TRUE', 'APPLY_SPLIT', 'isFlyLoop', '_editZ', 'set\x20Objs\x20Operation\x20ids', 'SCREEN_ALIGNED', 'getRandomValues', 'HasEntry', 'LUMINANCE', 'GLOBE', 'HAS_OCCLUSION_TEXTURE', '_owner', 'splice', 'wasmBinary', 'emscripten_bind_MetadataQuerier_HasEntry_2', '_multiChoose', 'OPAQUE', 'UNLOADED', 'updateGeometry', 'TEXTURE_MIN_FILTER', '_maxWValue', 'ProjectionImageFS', 'distance', 'fillForeColor', 'setObjsVisible', 'arrayBufferView', 'clipMode', 'postRun', 'aspectRatio', '_textureFilterMode', 'WEBP', 'filtermin', 'positionToTileXY', 'Tween', 'horizontalPolyline', 'TextureAtlas', 'waitTime', 'tmpEntities', '_blockScale', 'buffer\x20error', 'HIDE', 'setDistDirByPoint', 'RESET', 'pixelStorei', 'Directly', 'aTexCoord', 'cannot\x20construct\x20a\x20VoidPtr,\x20no\x20constructor\x20in\x20IDL', 'hookRequestImageryFunc', '_crn_get_width', 'GetAttributeInt16ForAllPoints', 'Utils', 'call', 'XML', 'divideByScalar', 'startHeight', 'fetchText', 'flatten', 'latitude', 'ROUND_HALF_EVEN', 'emscripten_bind_Decoder_GetAttributeFloat_3', 'pointSize', 'setCustomClipBox', 'prjCoordSys', 'FData', 'fromTypedArray', 'compressOptions', 'blockCacheSize', 'chunks', 'EUCLID', 'scene\x20are\x20required.', 'alphaMode', 'mod', 'TRANSLUCENT', 'regularEdgeCommand', 'createRegularEdgeAttributes', 'subRequestNamesBake', 'pointLightDecl', 'invViewMatrix', 'TRIANGLES', 'set\x20layer\x20lod\x20range\x20scale', 'Math', 'emscripten_bind_Decoder_GetTrianglesUInt16Array_3', 'options', 'value', 'VertexWeight_1', 'subRequestNames', 'last', 'subdomainConfig', 'pickPosition', 'get', 'fileName', '9999', '\x20not\x20true\x20or\x20false:\x20', '_inverseModelViewDirty', 'clearCommand', 'Excepted\x20S3MTilesLayer.subdomains\x20to\x20be\x20type\x20of\x20Array.', 'LineDisplayType', 'data_type', 'PointCloud', 'quantizationBits', '_emscripten_bind_Decoder_DecodeBufferToPointCloud_2', '_depthBuffer', 'HAS_BASE_TEXTURE', 'SpecularB', 'LabelStyle', 'emscripten_bind_DecoderBuffer_Init_2', 'SpecularA', 'clone', 'stringify', 'AttributeType_Custom1', 'asm', 'rootTextureName', 'ColorType', 'Unable\x20to\x20determine\x20Cesium\x20base\x20URL\x20automatically,\x20try\x20defining\x20a\x20global\x20variable\x20called\x20SUPERMAP_BASE_URL.', 'reflect', 'sbrk', '_emscripten_bind_DecoderBuffer_Init_2', '_stack', 'clampToGroundPolygonPositions', 'TransparencyOptimization', '_fillColor', '_emscripten_bind_Decoder_GetAttributeInt16ForAllPoints_3', 'free', 'Running...', 'out\x20of\x20range:\x20', 'CenterY', 'vertexBufferToCreate', '\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_EXT_shader_texture_lod\x0a#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable\x0a#endif\x0a\x20\x20\x20\x20uniform\x20vec4\x20uDiffuseColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uAmbientColor;\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoord;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoordTransform;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix;\x0a#endif\x0a#endif\x0a\x0a\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a#endif\x0a\x20\x20\x20\x20varying\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20vec3\x20vPositionEC;\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20float\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20vec2\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20calculateTexCoord(in\x20vec3\x20inTexCoord,\x20in\x20float\x20scale,\x20in\x20float\x20XTran,\x20in\x20float\x20YTran,\x20in\x20float\x20fTile,\x20in\x20float\x20mipLevel,\x20inout\x20vec2\x20outTexCoord)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(inTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord\x20=\x20inTexCoord.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20fTexCoord\x20=\x20fract(inTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x201.0\x20*\x20pow(2.0,\x20mipLevel)\x20/\x20fTile;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fTexCoord\x20=\x20clamp(fTexCoord,\x20offset,\x201.0\x20-\x20offset);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.x\x20=\x20(fTexCoord.x\x20+\x20XTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.y\x20=\x20(fTexCoord.y\x20+\x20YTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getTexColorForS3M(sampler2D\x20curTexture,\x20vec3\x20oriTexCoord,\x20float\x20texTileWidth,\x20float\x20fMaxMipLev,\x20float\x20fTexCoordScale,\x20vec2\x20vecTexCoordTranslate)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20mipLevel\x20=\x200.0;\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateMipLevel(oriTexCoord.xy,\x20texTileWidth,\x20fMaxMipLev,\x20mipLevel);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20realTexCoord;\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateTexCoord(oriTexCoord,\x20fTexCoordScale,\x20vecTexCoordTranslate.x,\x20vecTexCoordTranslate.y,\x20texTileWidth,\x20mipLevel,\x20realTexCoord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(oriTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture2D(curTexture,\x20realTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture2DLodEXT(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture2D(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20color;\x0a\x20\x20\x20\x20}\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20vec4\x20getTextureColor()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexMatrix.z\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth0\x20=\x20vTexMatrix.z\x20*\x20uTexture0Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20realTexCoord\x20=\x20vec3(vTexCoord.xy,\x20vTexCoordTransform.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20FColor\x20=\x20getTexColorForS3M(uTexture,\x20realTexCoord,\x20texTileWidth0,\x20vTexMatrix.w,\x20vTexMatrix.z,\x20vTexMatrix.xy);\x0a\x20\x20\x20\x20#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth1\x20=\x20vTexMatrix2.z\x20*\x20uTexture1Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realTexCoord\x20=\x20vec3(vTexCoord.zw,\x20vTexCoordTransform.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20SColor\x20=\x20getTexColorForS3M(uTexture2,\x20realTexCoord,\x20texTileWidth1,\x20vTexMatrix2.w,\x20vTexMatrix2.z,\x20vTexMatrix2.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.r\x20=\x20clamp(SColor.r,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.g\x20=\x20clamp(SColor.g,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.b\x20=\x20clamp(SColor.b,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor\x20*\x20SColor;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20getClipDistance(vec3\x20pos,\x20vec3\x20planeNormal,\x20float\x20disToOrigin)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20dot(planeNormal,\x20pos)\x20+\x20disToOrigin;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[0].xyz,\x20uClipPlanes[0].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uHypsometricTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uMinMaxValue;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uOpacityIntervalFillMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uHypLineColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uNoValueColor;\x0a\x20\x20\x20\x20varying\x20float\x20wValue;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20computeMixCon(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distanceToContour;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20interval\x20=\x20uOpacityIntervalFillMode.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(abs(maxVisibleValue\x20-\x20minVisibleValue)\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20mod(fValue\x20-\x200.0002,\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20floor(fValue\x20/\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20(t\x20*\x20interval)\x20-\x200.1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20maxVisibleValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dF\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20distanceToContour\x20<\x20dF\x20?\x201.0\x20:\x200.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20computeContourMapColor(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20floorValue\x20=\x20uMinMaxValue.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20ceilValue\x20=\x20uMinMaxValue.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20threshold\x20=\x20abs(ceilValue\x20-\x20floorValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20contourRate\x20=\x20(fValue\x20-\x20floorValue)\x20/\x20threshold;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalCoord\x20=\x20clamp(contourRate,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20count\x20=\x20floor(finalCoord\x20*\x2016.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20y\x20=\x20(count*2.0\x20+\x201.0)/32.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20fract(finalCoord*16.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(y\x20>\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20contourCoord\x20=\x20vec2(x,\x20y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture2D(uHypsometricTexture,\x20contourCoord);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getContourMapColor(vec4\x20oriColor,\x20float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20contourMapColor\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalOpacity\x20=\x20uOpacityIntervalFillMode.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fillMode\x20=\x20uOpacityIntervalFillMode.z;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20>\x20maxVisibleValue\x20+\x204.0\x20||\x20fValue\x20<\x20minVisibleValue\x20-\x204.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20uNoValueColor\x20*\x20oriColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fillMode\x20>\x202.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20mix_con\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20mix(computeContourMapColor(fValue),\x20uHypLineColor,\x20mix_con);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x201.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20uHypLineColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x200.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20computeContourMapColor(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20finalColor\x20=\x20mix(oriColor,\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#ifdef\x20PT_CLOUD\x0a\x20\x20\x20\x20\x20\x20\x20\x20finalColor\x20=\x20mix(vec4(1.0,1.0,1.0,1.0),\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20finalColor;\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec4\x20baseColorWithAlpha\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20#ifdef\x20VertexColor\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20baseColorWithAlpha\x20=\x20vColor;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20getTextureColor();\x0a\x20\x20\x20\x20#endif\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20outColor\x20=\x20baseColorWithAlpha;\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20=\x20getContourMapColor(outColor,\x20wValue);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20CLIP\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20*=\x20clip(vec4(vPositionEC,\x201.0));\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20outColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20gl_FragColor\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a', 'PRJ_TRANSVERSE_MERCATOR', 'maximumLevel', 'Intersect', 'Assertion\x20failed:\x20', 'addTokenWithKey', 'textureRenderableFlag', 'invalid\x20code\x20lengths\x20set', 'brdfLutGenerator', '_availability', '_indexOfRefraction', 'tms', 'INVALID_PARAMETER', 'dracoDecodeMesh', 'segmentCount', 'min', 'Plane', '_position', 'time', 'png', 'emscripten_enum_draco_GeometryAttribute_Type_TEX_COORD', 'quantized-mesh-1.0', 'POINT_CLOUD', 'getElementsByTagNameNS', 'attribute\x20vec4\x20aPosition;\x0aattribute\x20vec4\x20aColor;\x0auniform\x20float\x20uPointCloudSize;\x0avarying\x20float\x20vPixelDistance;\x0a#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20uniform\x20vec4\x20decode_position_min;\x0a\x20\x20\x20\x20uniform\x20float\x20decode_position_normConstant;\x0a#endif\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uHypsometricTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uMinMaxValue;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uOpacityIntervalFillMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uHypLineColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uNoValueColor;\x0a\x20\x20\x20\x20uniform\x20float\x20uUseWValue;\x0a\x20\x20\x20\x20uniform\x20float\x20uBottom;\x0a#endif\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFillForeColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x0afloat\x20computeWValue(vec4\x20vertexPos){\x0a\x20\x20\x20\x20float\x20realWValue\x20=\x20vertexPos.w;\x0a#ifdef\x20TEXTURE_COORD_ONE_IS_W\x0a\x20\x20\x20\x20realWValue\x20=\x20aTexCoord0.x;\x0a#endif\x0a\x20\x20\x20\x20if(uUseWValue\x20>\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20realWValue\x20+\x20uBottom;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20return\x20vertexPos.z\x20+\x20uBottom;\x0a}\x0a\x0avec4\x20computeContourMapColor(float\x20fValue)\x0a{\x0a\x20\x20\x20\x20float\x20floorValue\x20=\x20uMinMaxValue.x;\x0a\x20\x20\x20\x20float\x20ceilValue\x20=\x20uMinMaxValue.y;\x0a\x20\x20\x20\x20float\x20threshold\x20=\x20clamp(abs(ceilValue\x20-\x20floorValue),\x200.000001,\x2020000.0);\x0a\x20\x20\x20\x20float\x20contourRate\x20=\x20(fValue\x20-\x20floorValue)\x20/\x20threshold;\x0a\x20\x20\x20\x20float\x20finalCoord\x20=\x20clamp(contourRate,\x200.0,\x201.0);\x0a\x20\x20\x20\x20float\x20count\x20=\x20floor(finalCoord\x20*\x2016.0);\x0a\x20\x20\x20\x20float\x20y\x20=\x20(count*2.0\x20+\x201.0)/32.0;\x0a\x20\x20\x20\x20float\x20x\x20=\x20fract(finalCoord*16.0);\x0a\x20\x20\x20\x20if(y\x20>\x201.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x201.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20texture2D(uHypsometricTexture,\x20vec2(x,\x20y)).rgba;\x0a}\x0avec4\x20getHypsometricColor(vec4\x20oriColor,\x20float\x20fValue)\x0a{\x0a\x20\x20\x20\x20vec4\x20contourMapColor\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20float\x20finalOpacity\x20=\x20uOpacityIntervalFillMode.x;\x0a\x20\x20\x20\x20float\x20fillMode\x20=\x20uOpacityIntervalFillMode.z;\x0a\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20if(fValue\x20>\x20maxVisibleValue\x20||\x20fValue\x20<\x20minVisibleValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uNoValueColor\x20*\x20oriColor;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20contourMapColor\x20=\x20computeContourMapColor(fValue);\x0a\x20\x20\x20\x20finalOpacity\x20*=\x20sign(fillMode);\x0a\x20\x20\x20\x20vec4\x20mixColor\x20=\x20mix(vec4(1.0,1.0,1.0,1.0),\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20return\x20mixColor;\x0a}\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20vertexPos\x20=\x20decode_position_min\x20+\x20aPosition\x20*\x20decode_position_normConstant;\x0a#else\x0a\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20aPosition;\x0a#endif\x0a\x20\x20\x20\x20vertexPos.w\x20=\x201.0;\x0a\x20\x20\x20\x20vec4\x20vertexColor\x20=\x20aColor;\x0a\x20\x20\x20\x20vColor\x20=\x20vertexColor\x20*\x20uFillForeColor;\x0a\x20\x20\x20\x20vPositionMC.xyz\x20=\x20vertexPos.xyz;\x0a\x20\x20\x20\x20vPositionMC.w\x20=\x200.0;\x0a\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vertexPos;\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20float\x20wValue\x20=\x20computeWValue(vertexPos);\x0a\x20\x20\x20\x20vColor\x20=\x20getHypsometricColor(vColor,\x20wValue);\x0a#endif\x0a\x20\x20\x20\x20vPixelDistance\x20=\x202.0\x20/\x20uPointCloudSize;\x0a\x20\x20\x20\x20gl_PointSize\x20=\x20uPointCloudSize;\x0a}', 'createWireFrame', 'computeArea', 'TransparentSorting', 'emscripten_bind_DracoInt32Array_GetValue_1', 'north', 'the\x20distance\x20is\x20greater\x20than\x200.0\x20an\x20less\x20than\x201.0', 'loadMehopt', '_emscripten_bind_PointAttribute_data_type_0', '_hiddenAreaColor', 'ALPHA', 'color', 'parentNode', 'realspace', 'SuperMapImageryProvider', 'dracoDecodePointCloud', 'emscripten_bind_MetadataQuerier_GetIntEntry_2', '_stopMarkCollection', 'Exponent\x20not\x20an\x20integer:\x20', 'specularColor', 'minVerticesValue', 'rainDecl', 'vertCompressConstant', 'geoMap', 'instantiate', 'Pause', 'Argument\x20', 'lineEntity', 'Instance', 'GetAttributeIntForAllPoints', '{y}', 'arrIndexPackage', '_numberOfLevelZeroTilesX', 'batchTableDirty', 'BlockCacheList', 'terrain', '_emissionTexCoordScale', 'isBuild', 'Levels', 'Roll', 'colorCommand', 'enableRotate', 'project', 'emscripten_bind_MetadataQuerier_GetStringEntry_2', 'pbrMaterialIndex', '_projection', 'None', 'rect', 'height', '_rain', 'byteOffset', 'was', 'negated', 'GetValue', 'getUint32', 'addStop', '_emscripten_bind_DracoFloat32Array_DracoFloat32Array_0', '_clearcoat', '_cameraPosition', 'inverse', 'imageBuffer', 'fetchArrayBuffer', 'Failed', 'PhysicalIndex', 'asin', 'HAS_MetallicRoughness_TEXTURE', 'dracoLib', 'normal_rangeConstant', 'total_out', 'unpackArray', 'drawingBufferWidth', 'fragment', '_modelViewDirty', '_viewRotation', '_image', 'instanceCount', 'bottomAltitude', 'get\x20s3m\x20layer\x20config\x20failed,extendxml.xml\x20foamat\x20error,layer\x20name\x20is\x20', 'SV_Standard', 'first\x20is\x20required', '_free', 'xOffset', 'emscripten_bind_Decoder_GetEncodedGeometryType_1', 'start', 'TAM_WRAP', 'updateGeoBounds', 'COMPRESSED_RGB_S3TC_DXT1_EXT', 'index\x20buffer\x20is\x20null', 'frameState', 'isInteger', 'addCredential', 'Ellipsoid', 'Wait', 'decode_texCoord6_min', 'decodeTexCoord0vNormConstant', 'ids', 'ProjectionImage.hue', 'unproject', 'getURL', 'squareRoot', 'addAvailableTileRange', 'GetAttributeInt8ForAllPoints', 'fov', '500\x2016px\x20sans-serif', 'ORANGE', 'inflateInit2', 'shallowClone', 'validate', 'subarray', 'SV_Compressed', 'UNSIGNED_SHORT_5_5_5_1', 'VTiling', 'TextureMinificationFilter', 'arraySize', 'resolution', '_inverseViewProjectionDirty', '_editObject', 'positions\x20is\x20required!', 'normalized', 'invalid\x20distance\x20code', 'emscripten_bind_DracoInt8Array_size_0', 'requestTileGeometry\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'canTraverse', 'defaultValue', 'FILL_AND_OUTLINE', '_renderTargets', 'south', 'incompatible\x20version', 'FLATTEN', '_singleInstance', 'CRYPTO', 'PixelFormat', 'urlScheme', 'setCustomClipPlane', 'viewPosition', '%23', '_hasMetadata', 'secondColorUniqueID', 'offset', 'groupSeparator', 'hierarchy', 'Argument\x20not\x20an\x20object:\x20', 'unshift', '763747MQXYrS', 'selectedFrame', 'pbrParameterChange', 'heightRange', 'state', 'sml:StoreType', '_emscripten_bind_DecoderBuffer_DecoderBuffer_0', '_allObjsHide', 'occlusionTextureIndex', 'UNPACK_FLIP_Y_WEBGL', 'RGBA_DXT1', 'COMPUTE_TEXCOORD', 'updatePriority', 'removePBRMaterial', 'tileHeight', 'wetnessFactor', 'EasingFunction', 'tiles', 'batchTableBake', 'createTypedArrayFromArrayBuffer', 'IntersectionTests', 'idsOperationMap', '_emscripten_enum_draco_GeometryAttribute_Type_GENERIC', 'bits', 'binstring2buf', 'Authentication\x20error', 'uniform\x20sampler2D\x20colorTexture;\x0avarying\x20vec2\x20v_textureCoordinates;\x0auniform\x20float\x20speed;\x0auniform\x20float\x20angle;\x0a\x0afloat\x20hash(float\x20x){\x0a\x20\x20\x20\x20return\x20fract(sin(x\x20*\x20133.3)\x20*\x2013.13);\x0a}\x0a\x0avoid\x20main(void){\x0a\x20\x20\x20\x20float\x20time\x20=\x20czm_frameNumber\x20/\x2060.0;\x0a\x20\x20\x20\x20vec2\x20resolution\x20=\x20czm_viewport.zw;\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20(gl_FragCoord.xy\x20*\x202.0\x20-\x20resolution.xy)\x20/\x20min(resolution.x,\x20resolution.y);\x0a\x20\x20\x20\x20vec3\x20c\x20=\x20vec3(0.6,\x200.7,\x200.8);\x0a\x20\x20\x20\x20float\x20a\x20=\x20angle;\x0a\x20\x20\x20\x20float\x20si\x20=\x20sin(a);\x0a\x20\x20\x20\x20float\x20co\x20=\x20cos(a);\x0a\x20\x20\x20\x20uv\x20*=\x20mat2(co,\x20-si,\x20si,\x20co);\x0a\x20\x20\x20\x20uv\x20*=\x20length(uv\x20+\x20vec2(0.0,\x204.9))\x20*\x200.3\x20+\x201.0;\x0a\x20\x20\x20\x20float\x20v\x20=\x201.0\x20-\x20sin(hash(floor(uv.x\x20*\x20100.0))\x20*\x202.0);\x0a\x20\x20\x20\x20float\x20b\x20=\x20clamp(abs(sin(speed\x20*\x20time\x20*\x20v\x20+\x20uv.y\x20*\x20(5.0\x20/\x20(2.0\x20+\x20v))))\x20-\x200.95,\x200.0,\x201.0)\x20*\x2020.0;\x0a\x20\x20\x20\x20c\x20*=\x20v\x20*\x20b;\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20mix(texture2D(colorTexture,\x20v_textureCoordinates),\x20vec4(c,\x201.0),\x20speed\x20<\x200.00001\x20?\x200.0\x20:\x200.15);\x0a}', 'point\x20color', 'isGreaterThanOrEqualTo', 'COMPRESS_TEXCOORD', 'VOL_AND_HYP', 'WebGLConstants', '_contrast', 'Rectangle', '_boundingSphere', 'preloadedAudios', 'snowDecl', '_transmissionFactor', '?tilematrix=', 'oriTexture', 'decode_texCoord5_normConstant', 'item', 'maxHeight', 'EPSILON7', 'getItem', 'Level', 'dynCall_vi', 'renderTexture', 'Bounds', 'endPoint', '_sampleTerrainMostDetailed', 'sml:CellWidth', 'GetAttributeUInt8ForAllPoints', 'the\x20distance\x20is\x20greater\x20than\x200.0', '_normalDirty', 'processRequests', '?x={x}&y={y}&scale={scale}&origin={\x22x\x22:', '_isFlyLoop', 'tail', 'line\x20color', 'now', '_emscripten_bind_DracoFloat32Array_GetValue_1', 'S3MB', 'ProjectionImage.brightness', '_linesInterval', 'swipe', 'computeNeighbors', 'decode_texCoord4_normConstant', 'failed\x20to\x20asynchronously\x20prepare\x20wasm:\x20', 'HALF_FLOAT', 'options.duration\x20is\x20required\x20and\x20must\x20be\x20positive.', 'isPowerOfTwo', 'exec', 'availabilityLevels', '_isConvert', 'FILL_LINE', '_emscripten_bind_MetadataQuerier_GetIntEntry_2', 'ProjectionImage.saturation', 'DT_INT16', 'CompressedTextureBuffer', '_emscripten_bind_MetadataQuerier_GetStringEntry_2', 'CLAMP_TO_EDGE', 'Credential', 'beginPath', 'texCoordCompressConstant', 'AddressMode', 'renderTextureMatrix', 'Mesh', 'IGNORE_NORMAL', 'textureSizeInBytes', '_emscripten_bind_AttributeQuantizationTransform_min_value_1', 'LODRangeScale', 'ancestorTextureBake', '_baseUri', '_sentinel', '_limitBodys', '_emscripten_bind_AttributeOctahedronTransform___destroy___0', 'renderState', '1.0.0', '_normalTextureIndex', 'IO_ERROR', '647745UxsqDj', 'currentFrustum', 'have', 'emscripten_bind_PointAttribute_attribute_type_0', 'setStopVisible', 'HeightmapTerrainData', 'emscripten_bind_Decoder___destroy___0', 'resolve', 'enabled', 'DISTANCE_FROM_EYE_POINT', '_emscripten_bind_DracoUInt16Array___destroy___0', 'clamp', 'Skyline', '.UTF-8', 'layer3DType', 'setting', '_minHeight', 'substr', '_obb', 'SELECTED', 'getInt32', 'isDestroyed', 'Sampler', '_changedEvt', 'S3MWaterRenderEntity', '1.0.0/WMTSCapabilities.xml', 'VertexCompressOption', '_requestTiles', 'SEC_TEX_EMISSION', 'compressType', 'textureParameter', 'emscripten_bind_DracoUInt8Array___destroy___0', '_emscripten_enum_draco_DataType_DT_UINT64', '_scheme', 'tilingScheme', 'emscripten_bind_Decoder_GetTriangleStripsFromMesh_2', 'invModelMatrix', 'emscripten_enum_draco_EncodedGeometryType_POINT_CLOUD', 'viewMatrix', 'normalize', 'prepareRequest', '__wasm_call_ctors', '_quadtree', 'invalid\x20block\x20type', 'aNormalB', 'BoundingBox', 'emscripten_bind_DracoInt16Array___destroy___0', 'isS3MBlock', 'bindTexture', 'vertexCompressionType', 'PagedLOD', 'SkyAtmosphere', 'materialCode', 'scene\x20and\x20mode\x20is\x20required!', 'Scene', 'requestSubTextures', 'DracoFloat32Array', 'DEGREE', 'priority', '_sortKey', '/config', 'meshopt_decodeIndexSequence', 'max', 'dictionary', 'getUrlComponent', 'extractEdges', '_emscripten_bind_Decoder_SkipAttributeTransform_1', 'cacheEnable', '_emscripten_bind_PointAttribute_attribute_type_0', 'CREDENTIAL', 'verticalPolyline', 'removeAllTargetPoint', 'setOnlyObjsVisible', '_startObject', '_frameState', 'multiply', 'boundingbox', '_readyPromise', 'CLIP_BEHIND_ANY_PLANE', 'rayPlane', 'XmlParser', 'touchedFrame', 'position', '_imageReady', 'clip', 'corridor', 'routes\x20is\x20required!', '_subdomains', 'Route', 'multiplyByMatrix3', 'Module.instantiateWasm\x20callback\x20failed\x20with\x20error:\x20', 'pendingRequests', 'S3MCacheFileRenderEntity', 'atan', '_selections', '_occlusionTextureIndex', 'ImageFileLayer', 'model', 'HEAP8', '_id', '16092UlrZvK', 'RGBA_PVRTC_2BPPV1', 'data:application/octet-stream;base64,', 'NoLightNoTextureVS', 'num_points', 'trim', 'aSideness', '_complete', '\x0a\x20\x20\x20\x20attribute\x20vec4\x20aPosition;\x0a\x20\x20\x20\x20attribute\x20vec4\x20aColor;\x0a\x20\x20\x20\x20attribute\x20vec3\x20aNormal;\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20attribute\x20vec4\x20aTexCoord0;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoord;\x0a\x20\x20\x20\x20uniform\x20vec2\x20decodeTexCoord0Min;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoordTransform;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix;\x0a#endif\x0a#ifdef\x20USE_TextureCoordMatrix\x0a\x20\x20\x20\x20attribute\x20vec2\x20aTextureCoordMatrix;\x0a#endif\x0a#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20uniform\x20vec4\x20decodePositionMin;\x0a\x20\x20\x20\x20uniform\x20float\x20decodePositionNormConstant;\x0a#endif\x0a#endif\x0a\x0a//\x20meshopt判断\x0a#ifdef\x20MeshOPT_Compress\x0a\x20\x20\x20\x20uniform\x20vec3\x20decodeTexCoord0vNormConstant;\x0a\x20\x20\x20\x20uniform\x20vec3\x20decode_texCoord1_vNormConstant;\x0a#else\x0a\x20\x20\x20\x20uniform\x20float\x20decode_texCoord0_normConstant;\x0a\x20\x20\x20\x20uniform\x20float\x20decode_texCoord1_normConstant;\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20varying\x20float\x20wValue;\x20\x20\x20\x20\x0a#endif\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20uniform\x20mat4\x20uGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20mat4\x20uInverseGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uFlattenTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFlattenRect;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSelectedColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20varying\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20vec3\x20vPositionEC;\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT8\x20=\x201.0\x20/\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT4\x20=\x201.0\x20/\x2016.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT4\x20=\x2016.0;\x0a\x20\x20\x20\x20void\x20getTextureMatrixFromZValue(in\x20float\x20nZ,\x20inout\x20float\x20XTran,\x20inout\x20float\x20YTran,\x20inout\x20float\x20scale)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(nZ\x20<=\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel8\x20=\x20floor(nZ\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel16\x20=\x20floor(nDel8\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel20\x20=\x20floor(nDel16\x20*\x20SHIFT_RIGHT4);\x0a\x20\x20\x20\x20\x20\x20\x20\x20YTran\x20=\x20nZ\x20-\x20nDel8\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20XTran\x20=\x20nDel8\x20-\x20nDel16\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nLevel\x20=\x20nDel16\x20-\x20nDel20\x20*\x20SHIFT_LEFT4;\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20nLevel);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20float\x20unpackValue(vec4\x20packedValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT16\x20=\x2065536.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20value\x20=\x20packedValue\x20*\x20255.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20value.r\x20*\x20SHIFT_LEFT16\x20+\x20value.g\x20*\x20SHIFT_LEFT8\x20+\x20value.b\x20-\x209000.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20calculateHeight(vec4\x20vertexPos)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vecPos\x20=\x20uGeoMatrix\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecRatio\x20=\x20vec2(uFlattenRect.z\x20-\x20uFlattenRect.x,\x20uFlattenRect.w\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecTexCoord\x20=\x20vec2(vecPos.x\x20-\x20uFlattenRect.x,\x20vecPos.y\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.x\x20=\x20vecTexCoord.x\x20/\x20vecRatio.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.y\x20=\x20vecTexCoord.y\x20/\x20vecRatio.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecTexCoord.x\x20>\x201.0\x20||\x20vecTexCoord.x\x20<\x200.0\x20||\x20vecTexCoord.y\x20>\x201.0\x20||\x20vecTexCoord.y\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vertexPos;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fHeight\x20=\x20unpackValue(texture2D(uFlattenTexture,\x20vecTexCoord.xy));\x0a\x20\x20\x20\x20\x20\x20\x20\x20fHeight\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecPos.z\x20>\x20fHeight)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.z\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.w\x20=\x20vecPos.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uInverseGeoMatrix\x20*\x20vec4(vecPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x0a\x20\x20\x20\x20#ifdef\x20TexCoord\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20aTexCoord0.xy;\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix\x20=\x20vec4(0.0,0.0,1.0,0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.x\x20=\x20aTexCoord0.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20USE_TextureCoordMatrix\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.x\x20=\x20aTextureCoordMatrix.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexCoordTransform.x\x20<\x20-90000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.z\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20getTextureMatrixFromZValue(floor(vTexCoordTransform.x),\x20vTexMatrix.x,\x20vTexMatrix.y,\x20vTexMatrix.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.w\x20=\x20log2(uTexture0Width\x20*\x20vTexMatrix.z);\x0a\x20\x20\x20\x20#endif\x20\x20\x20\x20\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20//\x20meshopt压缩\x20这里对照主版本的\x20\x20主版本命名的都是通过下划线，但是插件获取uniform是通过函数，所以需要大写\x0a\x20\x20\x20\x20#ifdef\x20MeshOPT_Compress\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20texCoord0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texCoord0.x\x20=\x20aTexCoord0.x\x20*\x20decodeTexCoord0vNormConstant.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texCoord0.y\x20=\x20aTexCoord0.y\x20*\x20decodeTexCoord0vNormConstant.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20decodeTexCoord0Min\x20+\x20texCoord0.xy;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vertexPos\x20=\x20decodePositionMin\x20+\x20vec4(aPosition.xyz,\x201.0)\x20*\x20decodePositionNormConstant;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20aPosition;\x0a\x20\x20\x20\x20#endif\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20vertexPos\x20=\x20calculateHeight(vertexPos);\x0a#endif\x0a\x20\x20\x20\x20vertexPos.w\x20=\x201.0;\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20wValue\x20=\x20vertexPos.w;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20positionMC\x20=\x20vec4(vertexPos.xyz,\x201.0);\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20\x20\x20\x20\x20vColor\x20=\x20aColor;\x0a#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionMC\x20=\x20positionMC;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionEC\x20=\x20(czm_modelView\x20*\x20positionMC).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a', 'getBaseUri', 'CenterZ', 'aPosition1', 'occlusionTexture', 'isAbsolute', 'bind', 'compressedTextureSizeInBytes', 'transparentsorting', 'GpuProgramParameters', 'LOADING', 'CellHeight', 'begin', '_vLabel', 'PostProcessStageSampleMode', 'MinHeight', 'depthStencilTexture', '100\x2020px\x20SimSun', 'edgeCount', 'S3MCreateShaderProgramJob', 'requestTileGeometry\x20must\x20not\x20be\x20called\x20before\x20ready\x20returns\x20true.', 'offsetX', 'wmts_sub', 'subRequest', 'USE_TextureCoordMatrix', 'flattening', '__destroy__', '0123456789', 'getPickRay', 'skeletonNames', 'RGB_ETC1', 'bReflect', '_emscripten_bind_Decoder_GetAttributeUInt8ForAllPoints_3', 'fromPoints', 'maxFresnel', '_updateObjsColor', 'aPosition', 'emscripten_bind_DracoUInt16Array_DracoUInt16Array_0', 'row', 'uv3', 'routestop', 'HEAPF64', 'S3mModel', 'textureBakeInitilized', 'layerId', 'aVertexWeight', 'lat', 'Adapter', 'Z_BUF_ERROR', 'inflateGetHeader', 'ellipsoidMatrix', 'dividedToIntegerBy', '_levels', '_radius', 'instancesData', '_normalTextureScale', 'Credential.value\x20is\x20necessory.', 'arrayBuffer', 'SKETCH_MODE', 'thisProgram', 'ComponentDatatype', 'Program\x20terminated\x20with\x20exit(', 'chunkSize', '_ready', 'currentViewMatrix', '_calloutWidth', '_wmtstileMatrixSet', 'DT_INT32', 'lencode', 'vertexAttrUniqueIDs', '_inverseModelView3DDirty', 'rainEffect', '_baseResource', 'APPLY_SWIPE', 'direction', '_bImmediately', 'lineColor', 'emscripten_bind_DracoInt16Array_size_0', 'subtract', 'distbits', '_v3AffineX', 'keys', 'DeveloperError', 'emscripten_enum_draco_EncodedGeometryType_TRIANGULAR_MESH', 'fractionGroupSize', '_emscripten_bind_Mesh___destroy___0', 'active', 'textContent', 'Camera', 'substring', ',\x22y\x22:', 'hemisphereLightDecl', 'uv1', 'emscripten_bind_Decoder_GetAttributeByUniqueId_2', 'lastIndexOf', 'NOT_EQUAL', 'renderToTexture', '_modelView3DDirty', '_tileDiscardPolicy', 'Fov', 'routeName', '_objsHideList', 'autoSetView', 'touch', '__growWasmMemory', 'Credit', '_cameraDir', 'aTextureCoordMatrix', 'indexBufferToCreate', 'byteLength', 'TOTAL_MEMORY', '_emscripten_enum_draco_DataType_DT_TYPES_COUNT', 'havedict', 'ShaderSource', 'convertTo3DCartesian', 'LINEAR_NONE', 'pause', 'CLIP_FILT_BY_ID', 'CellWidth', 'emscripten_bind_DracoInt32Array___destroy___0', 'convertToColumbusCartesian', 'aNormal', '_lastTimeIndex', 'minus', 'Stop', 'startObject', 'secondaryGroupSize', 'isUseHypColorTable', 'push', 'Saturation', '/login.json', 'REPEAT', '_isAltitudeFree', 'GetAttributeId', '_emscripten_enum_draco_DataType_DT_INT32', 'indicesCount', '_emissiveTextureIndex', '_resource', '_maxHeight', 'Bernstein', 'ParamType', 'distcode', 'getEstimatedLevelZeroGeometricErrorForAHeightmap', 'curDis', 'createTexture', 'file\x20error', 'LINEAR_MIPMAP_LINEAR', 'preShow', 'emscripten_bind_Decoder_DecodeBufferToPointCloud_2', 'REFRACTION', 'LINE_STRIP', 'monitorRunDependencies', 'EMPTY_OBJECT', 'metallicRoughnessTexture', '_video', 'getHeading', 'view', '_invertViewProjectionMatrix', 'Hypsometric', 'versions', 'width', 'options.context', 'geodes', 'AutoConstantEntry', '_saturation', 'rectangleToNativeRectangle', 'VIOLET', 'withAlpha', 'deleteTexture', '_height', '#51ff00', 'emscripten_bind_PointAttribute_unique_id_0', 'altitudeMode\x20value', 'maxVisibleDistance', 'rootBatchIdMap', 'noValueColor', 'random', 'sceneType', '_emscripten_bind_Decoder_DecodeBufferToMesh_2', 'Decoder', 'positionCartographic', 'incorrect\x20length\x20check', '_ceiling', '_emscripten_bind_Mesh_num_points_0', 'flyTo', 'hasMetadata\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', '_clipPlane', 'HAS_VOLUME', 'byte_stride', '_url', 'frameNumber', 'blockCacheQueue', 'getTileDataAvailable', 'nodeValue', 'RasterRegionFS', 'TileMatrixSet', 'isBitSet', 'setImage', 'attribute\x20vec4\x20aPosition;\x0avarying\x20vec4\x20vClipVertex;\x0avarying\x20float\x20fWindowZ;\x0avec4\x20depthClampFarPlane(vec4\x20clipPos)\x0a{\x0a\x09fWindowZ\x20=\x20(0.5\x20*\x20(clipPos.z\x20/\x20clipPos.w)\x20+\x200.5)\x20*\x20clipPos.w;\x0a\x09clipPos.z\x20=\x20min(clipPos.z,\x20clipPos.w);\x0a\x09return\x20clipPos;\x0a}\x0avoid\x20main()\x0a{\x0a\x20\x20\x20vec4\x20pos\x20=\x20czm_modelViewProjection\x20*\x20vec4(aPosition.xyz,\x201.0);\x0a\x20\x20\x20gl_Position\x20=\x20depthClampFarPlane(pos);\x0a}\x0a', 'InstancePipe', 'subTexInfos', 'malloc', 'right', 'isRoot', 'emscripten_bind_Status_error_msg_0', 'west', 'data/index/{y}/{x}.{fileExtension}?level={level}', 'extra_len', 'ArraySize', 'LineInterval', 'PolylineCollection', 'depth', 'addLimitbody', '_visible', 'snowNormalTexture', 'Flatten', 'PROGRAM', 'REPLACE_COLOR_TYPE', 'XMLParser', '_fillForeColor', '_updateCamera', 'edgeSP', '_capturePointColor', 'copy', 'sml:Left', 'header', 'Opacity', 'EMISSION_TEXTURE', 'ExitStatus', '/scenes.json', 'getNumberOfXTilesAtLevel', 'emscripten_bind_Decoder_GetAttributeInt16ForAllPoints_3', '_metallicFactor', 'RED', '_emscripten_bind_PointCloud___destroy___0', 'nFormat', 'emscripten_enum_draco_StatusCode_IO_ERROR', 'drawingBufferHeight', 'emscripten_bind_Metadata___destroy___0', 'texCoordZMatrix', '_emissionTextureChanged', '_polyline', 'AnalysisRegionMode', 'dirPolyline', 'alpha', 'HorizontalOrigin', 'B9h79tEBBBE8fV9gBB9gVUUUUUEU9gIUUUB9gEUEU9gIUUUEUIKQBEEEDDDILLLVE9wEEEVIEBEOWEUEC+Q/IEKR/LEdO9tw9t9vv95DBh9f9f939h79t9f9j9h229f9jT9vv7BB8a9tw79o9v9wT9f9kw9j9v9kw9WwvTw949C919m9mwvBEy9tw79o9v9wT9f9kw9j9v9kw69u9kw949C919m9mwvBDe9tw79o9v9wT9f9kw9j9v9kw69u9kw949Twg91w9u9jwBIl9tw79o9v9wT9f9kw9j9v9kws9p2Twv9P9jTBLk9tw79o9v9wT9f9kw9j9v9kws9p2Twv9R919hTBVl9tw79o9v9wT9f9kw9j9v9kws9p2Twvt949wBOL79iv9rBRQ+x8yQDBK/qMEZU8jJJJJBCJ/EB9rGV8kJJJJBC9+HODNADCEFAL0MBCUHOAIrBBC+gE9HMBAVAIALFGRAD9rADZ1JJJBHWCJ/ABAD9uC/wfBgGOCJDAOCJD6eHdAICEFHLCBHQDNINAQAE9PMEAdAEAQ9rAQAdFAE6eHKDNDNADtMBAKCSFGOC9wgHXAOCL4CIFCD4HMAWCJDFHpCBHSALHZINDNARAZ9rAM9PMBCBHLXIKAZAMFHLDNAXtMBCBHhCBHIINDNARAL9rCk9PMBCBHLXVKAWCJ/CBFAIFHODNDNDNDNDNAZAICO4FrBBAhCOg4CIgpLBEDIBKAO9CB83IBAOCWF9CB83IBXIKAOALrBLALrBBGoCO4GaAaCIsGae86BBAOCEFALCLFAaFGarBBAoCL4CIgGcAcCIsGce86BBAOCDFAaAcFGarBBAoCD4CIgGcAcCIsGce86BBAOCIFAaAcFGarBBAoCIgGoAoCIsGoe86BBAOCLFAaAoFGarBBALrBEGoCO4GcAcCIsGce86BBAOCVFAaAcFGarBBAoCL4CIgGcAcCIsGce86BBAOCOFAaAcFGarBBAoCD4CIgGcAcCIsGce86BBAOCRFAaAcFGarBBAoCIgGoAoCIsGoe86BBAOCWFAaAoFGarBBALrBDGoCO4GcAcCIsGce86BBAOCdFAaAcFGarBBAoCL4CIgGcAcCIsGce86BBAOCQFAaAcFGarBBAoCD4CIgGcAcCIsGce86BBAOCKFAaAcFGarBBAoCIgGoAoCIsGoe86BBAOCXFAaAoFGorBBALrBIGLCO4GaAaCIsGae86BBAOCMFAoAaFGorBBALCL4CIgGaAaCIsGae86BBAOCpFAoAaFGorBBALCD4CIgGaAaCIsGae86BBAOCSFAoAaFGOrBBALCIgGLALCIsGLe86BBAOALFHLXDKAOALrBWALrBBGoCL4GaAaCSsGae86BBAOCEFALCWFAaFGarBBAoCSgGoAoCSsGoe86BBAOCDFAaAoFGorBBALrBEGaCL4GcAcCSsGce86BBAOCIFAoAcFGorBBAaCSgGaAaCSsGae86BBAOCLFAoAaFGorBBALrBDGaCL4GcAcCSsGce86BBAOCVFAoAcFGorBBAaCSgGaAaCSsGae86BBAOCOFAoAaFGorBBALrBIGaCL4GcAcCSsGce86BBAOCRFAoAcFGorBBAaCSgGaAaCSsGae86BBAOCWFAoAaFGorBBALrBLGaCL4GcAcCSsGce86BBAOCdFAoAcFGorBBAaCSgGaAaCSsGae86BBAOCQFAoAaFGorBBALrBVGaCL4GcAcCSsGce86BBAOCKFAoAcFGorBBAaCSgGaAaCSsGae86BBAOCXFAoAaFGorBBALrBOGaCL4GcAcCSsGce86BBAOCMFAoAcFGorBBAaCSgGaAaCSsGae86BBAOCpFAoAaFGorBBALrBRGLCL4GaAaCSsGae86BBAOCSFAoAaFGOrBBALCSgGLALCSsGLe86BBAOALFHLXEKAOAL8pBB83BBAOCWFALCWF8pBB83BBALCZFHLKAhCDFHhAICZFGIAX6MBKKDNALMBCBHLXIKDNAKtMBAWASFrBBHhCBHOApHIINAIAWCJ/CBFAOFrBBGZCE4CBAZCEg9r7AhFGh86BBAIADFHIAOCEFGOAK9HMBKKApCEFHpALHZASCEFGSAD9HMBKKABAQAD2FAWCJDFAKAD2Z1JJJB8aAWAWCJDFAKCUFAD2FADZ1JJJB8aKAKCBALeAQFHQALMBKC9+HOXEKCBC99ARAL9rADCAADCA0eseHOKAVCJ/EBF8kJJJJBAOK+OoEZU8jJJJJBC/AE9rGV8kJJJJBC9+HODNAECI9uGRChFAL0MBCUHOAIrBBGWC/wEgC/gE9HMBAWCSgGdCE0MBAVC/ABFCfECJEZ+JJJJB8aAVCuF9CU83IBAVC8wF9CU83IBAVCYF9CU83IBAVCAF9CU83IBAVCkF9CU83IBAVCZF9CU83IBAV9CU83IWAV9CU83IBAIALFC9wFHQAICEFGWARFHKDNAEtMBCMCSAdCEseHXABHICBHdCBHMCBHpCBHLCBHOINDNAKAQ9NMBC9+HOXIKDNDNAWrBBGRC/vE0MBAVC/ABFARCL4CU7AOFCSgCITFGSYDLHZASYDBHhDNARCSgGSAX9PMBAVARCU7ALFCSgCDTFYDBAdASeHRAStHSDNDNADCD9HMBABAh87EBABCLFAR87EBABCDFAZ87EBXEKAIAhbDBAICWFARbDBAICLFAZbDBKAdASFHdAVC/ABFAOCITFGoARbDBAoAZbDLAVALCDTFARbDBAVC/ABFAOCEFCSgGOCITFGZAhbDBAZARbDLALASFHLAOCEFHOXDKDNDNASCSsMBAMASFASC987FCEFHMXEKAK8sBBGSCfEgHRDNDNASCU9MMBAKCEFHKXEKAK8sBEGSCfBgCRTARCfBgvHRDNASCU9MMBAKCDFHKXEKAK8sBDGSCfBgCpTARvHRDNASCU9MMBAKCIFHKXEKAK8sBIGSCfBgCxTARvHRDNASCU9MMBAKCLFHKXEKAKrBLC3TARvHRAKCVFHKKARCE4CBARCEg9r7AMFHMKDNDNADCD9HMBABAh87EBABCLFAM87EBABCDFAZ87EBXEKAIAhbDBAICWFAMbDBAICLFAZbDBKAVC/ABFAOCITFGRAMbDBARAZbDLAVALCDTFAMbDBAVC/ABFAOCEFCSgGOCITFGRAhbDBARAMbDLALCEFHLAOCEFHOXEKDNARCPE0MBAVALAQARCSgFrBBGSCL4GZ9rCSgCDTFYDBAdCEFGhAZeHRAVALAS9rCSgCDTFYDBAhAZtGoFGhASCSgGZeHSAZtHZDNDNADCD9HMBABAd87EBABCLFAS87EBABCDFAR87EBXEKAIAdbDBAICWFASbDBAICLFARbDBKAVALCDTFAdbDBAVC/ABFAOCITFGaARbDBAaAdbDLAVALCEFGLCSgCDTFARbDBAVC/ABFAOCEFCSgCITFGaASbDBAaARbDLAVALAoFCSgGLCDTFASbDBAVC/ABFAOCDFCSgGOCITFGRAdbDBARASbDLAOCEFHOALAZFHLAhAZFHdXEKAdCBAKrBBGaeGZARC/+EsGcFHRAaCSgHhDNDNAaCL4GoMBARCEFHSXEKARHSAVALAo9rCSgCDTFYDBHRKDNDNAhMBASCEFHdXEKASHdAVALAa9rCSgCDTFYDBHSKDNDNActMBAKCEFHaXEKAK8sBEGaCfEgHZDNDNAaCU9MMBAKCDFHaXEKAK8sBDGaCfBgCRTAZCfBgvHZDNAaCU9MMBAKCIFHaXEKAK8sBIGaCfBgCpTAZvHZDNAaCU9MMBAKCLFHaXEKAK8sBLGaCfBgCxTAZvHZDNAaCU9MMBAKCVFHaXEKAKCOFHaAKrBVC3TAZvHZKAZCE4CBAZCEg9r7AMFGMHZKDNDNAoCSsMBAaHcXEKAa8sBBGKCfEgHRDNDNAKCU9MMBAaCEFHcXEKAa8sBEGKCfBgCRTARCfBgvHRDNAKCU9MMBAaCDFHcXEKAa8sBDGKCfBgCpTARvHRDNAKCU9MMBAaCIFHcXEKAa8sBIGKCfBgCxTARvHRDNAKCU9MMBAaCLFHcXEKAaCVFHcAarBLC3TARvHRKARCE4CBARCEg9r7AMFGMHRKDNDNAhCSsMBAcHKXEKAc8sBBGKCfEgHSDNDNAKCU9MMBAcCEFHKXEKAc8sBEGKCfBgCRTASCfBgvHSDNAKCU9MMBAcCDFHKXEKAc8sBDGKCfBgCpTASvHSDNAKCU9MMBAcCIFHKXEKAc8sBIGKCfBgCxTASvHSDNAKCU9MMBAcCLFHKXEKAcCVFHKAcrBLC3TASvHSKASCE4CBASCEg9r7AMFGMHSKDNDNADCD9HMBABAZ87EBABCLFAS87EBABCDFAR87EBXEKAIAZbDBAICWFASbDBAICLFARbDBKAVC/ABFAOCITFGaARbDBAaAZbDLAVALCDTFAZbDBAVC/ABFAOCEFCSgCITFGaASbDBAaARbDLAVALCEFGLCSgCDTFARbDBAVC/ABFAOCDFCSgCITFGRAZbDBARASbDLAVALAotAoCSsvFGLCSgCDTFASbDBALAhtAhCSsvFHLAOCIFHOKAWCEFHWABCOFHBAICXFHIAOCSgHOALCSgHLApCIFGpAE6MBKKCBC99AKAQseHOKAVC/AEF8kJJJJBAOK/tLEDU8jJJJJBCZ9rHVC9+HODNAECVFAL0MBCUHOAIrBBC/+EgC/QE9HMBAV9CB83IWAICEFHOAIALFC98FHIDNAEtMBDNADCDsMBINDNAOAI6MBC9+SKAO8sBBGDCfEgHLDNDNADCU9MMBAOCEFHOXEKAO8sBEGDCfBgCRTALCfBgvHLDNADCU9MMBAOCDFHOXEKAO8sBDGDCfBgCpTALvHLDNADCU9MMBAOCIFHOXEKAO8sBIGDCfBgCxTALvHLDNADCU9MMBAOCLFHOXEKAOrBLC3TALvHLAOCVFHOKAVCWFALCEgCDTvGDALCD4CBALCE4CEg9r7ADYDBFGLbDBABALbDBABCLFHBAECUFGEMBXDKKINDNAOAI6MBC9+SKAO8sBBGDCfEgHLDNDNADCU9MMBAOCEFHOXEKAO8sBEGDCfBgCRTALCfBgvHLDNADCU9MMBAOCDFHOXEKAO8sBDGDCfBgCpTALvHLDNADCU9MMBAOCIFHOXEKAO8sBIGDCfBgCxTALvHLDNADCU9MMBAOCLFHOXEKAOrBLC3TALvHLAOCVFHOKABALCD4CBALCE4CEg9r7AVCWFALCEgCDTvGLYDBFGD87EBALADbDBABCDFHBAECUFGEMBKKCBC99AOAIseHOKAOK+lVOEUE99DUD99EUD99DNDNADCL9HMBAEtMEINDNDNjBBBzjBBB+/ABCDFGD8sBB+yAB8sBBGI+yGL+L+TABCEFGV8sBBGO+yGR+L+TGWjBBBB9gGdeAWjBB/+9CAWAWnjBBBBAWAdeGQAQ+MGKAICU9KeALmGLALnAQAKAOCU9KeARmGQAQnmm+R+VGRnmGW+LjBBB9P9dtMBAW+oHIXEKCJJJJ94HIKADAI86BBDNDNjBBBzjBBB+/AQjBBBB9geAQARnmGW+LjBBB9P9dtMBAW+oHDXEKCJJJJ94HDKAVAD86BBDNDNjBBBzjBBB+/ALjBBBB9geALARnmGW+LjBBB9P9dtMBAW+oHDXEKCJJJJ94HDKABAD86BBABCLFHBAECUFGEMBXDKKAEtMBINDNDNjBBBzjBBB+/ABCLFGD8uEB+yAB8uEBGI+yGL+L+TABCDFGV8uEBGO+yGR+L+TGWjBBBB9gGdeAWjB/+fsAWAWnjBBBBAWAdeGQAQ+MGKAICU9KeALmGLALnAQAKAOCU9KeARmGQAQnmm+R+VGRnmGW+LjBBB9P9dtMBAW+oHIXEKCJJJJ94HIKADAI87EBDNDNjBBBzjBBB+/AQjBBBB9geAQARnmGW+LjBBB9P9dtMBAW+oHDXEKCJJJJ94HDKAVAD87EBDNDNjBBBzjBBB+/ALjBBBB9geALARnmGW+LjBBB9P9dtMBAW+oHDXEKCJJJJ94HDKABAD87EBABCWFHBAECUFGEMBKKK/SILIUI99IUE99DNAEtMBCBHIABHLINDNDNj/zL81zALCOF8uEBGVCIv+y+VGOAL8uEB+ynGRjB/+fsnjBBBzjBBB+/ARjBBBB9gemGW+LjBBB9P9dtMBAW+oHdXEKCJJJJ94HdKALCLF8uEBHQALCDF8uEBHKABAVCEFCIgAIvCETFAd87EBDNDNAOAK+ynGWjB/+fsnjBBBzjBBB+/AWjBBBB9gemGX+LjBBB9P9dtMBAX+oHKXEKCJJJJ94HKKABAVCDFCIgAIvCETFAK87EBDNDNAOAQ+ynGOjB/+fsnjBBBzjBBB+/AOjBBBB9gemGX+LjBBB9P9dtMBAX+oHQXEKCJJJJ94HQKABAVCUFCIgAIvCETFAQ87EBDNDNjBBJzARARn+TAWAWn+TAOAOn+TGRjBBBBARjBBBB9ge+RjB/+fsnjBBBzmGR+LjBBB9P9dtMBAR+oHQXEKCJJJJ94HQKABAVCIgAIvCETFAQ87EBALCWFHLAICLFHIAECUFGEMBKKK6BDNADCD4AE2GEtMBINABABYDBGDCWTCW91+yADCk91ClTCJJJ/8IF++nuDBABCLFHBAECUFGEMBKKK9TEIUCBCBYDJ1JJBGEABCIFC98gFGBbDJ1JJBDNDNABzBCZTGD9NMBCUHIABAD9rCffIFCZ4NBCUsMEKAEHIKAIK/lEEEUDNDNAEABvCIgtMBABHIXEKDNDNADCZ9PMBABHIXEKABHIINAIAEYDBbDBAICLFAECLFYDBbDBAICWFAECWFYDBbDBAICXFAECXFYDBbDBAICZFHIAECZFHEADC9wFGDCS0MBKKADCL6MBINAIAEYDBbDBAECLFHEAICLFHIADC98FGDCI0MBKKDNADtMBINAIAErBB86BBAICEFHIAECEFHEADCUFGDMBKKABK/AEEDUDNDNABCIgtMBABHIXEKAECfEgC+B+C+EW2HLDNDNADCZ9PMBABHIXEKABHIINAIALbDBAICXFALbDBAICWFALbDBAICLFALbDBAICZFHIADC9wFGDCS0MBKKADCL6MBINAIALbDBAICLFHIADC98FGDCI0MBKKDNADtMBINAIAE86BBAICEFHIADCUFGDMBKKABKKKEBCJWKLZ9kBB', 'atlas_batchTable_xywh', '_currentTween', 'defaultTexture', 'plane', '_updateFramebuffer', 'isTiltFree', '_subdomainConfig', '_emscripten_bind_Decoder_GetAttributeFloatForAllPoints_3', 'readyState', 'addToken', 'clear', 'replace', '_isTiltFree', '_editPoint', 'queryChildNodes', 'cache', 'setAttribute', 'path', 'getCesiumBaseUrl', 'addImageryProvider', 'removeAll', 'Cartographic', 'computeCullingVolume', 'subdivideLine', 'emscripten_enum_draco_DataType_DT_INT8', 'removeObjsColor\x20ids', 'removeChild', '_tranverseRenderEntity', 'wmts100', 'preUpdate', 'insert', '', 'Check', 'ungzip', 'ISERVER_TOKEN', 'fromCache', 'credits', 'requestContent', 'MODE\x200', 'contextId', 'Selectable', 'gpuProgramParameters', ').\x20Build\x20with\x20-s\x20ASSERTIONS=1\x20for\x20more\x20info.', 'packArray', 'littleEndianExtensionSize', 'window', 'AttributeType_Custom0', 'globalDepthBuffer', 'emscripten_bind_Decoder_GetAttributeIdByMetadataEntry_3', 'fromRadians', 'queryStringAttribute', 'hasOwnProperty', 'Resource', 'swipeEnabled', '_textures', 'BottomAltitude', '#ffe500', 'cancelTween', 'spEntity', '_emscripten_bind_PointAttribute___destroy___0', '_emscripten_bind_MetadataQuerier_MetadataQuerier_0', 'idiv', '_commands', 'updateMaterialBatchTable', 'typeOf', 'number', 'COMPRESS_VERTEX', 'emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_QUANTIZATION_TRANSFORM', '_catmullRomSpline', 'providerName', 'sceneFramebuffer', 'rangeDataList', '_depthBuffers', 'getSkylineSectorParameter', 'wrapPointer', '_maxCategory', 'waterNormalMap', 'stopsInfo', 'toFixed', 'children', 'exports', 'attribute_type', '/rest/realspace/', 'opaque', 'mask', 'componentsLength', 'getLevelMaximumGeometricError', 'StopPause', 'input', 'removeWaterPlane', 'waterTime', 'emscripten_enum_draco_DataType_DT_INT16', 'reflectPlane', 'inflateResetKeep', '_dictTable', 'MaxY', 'primitive', 'terrainz', 'DT_FLOAT32', 'uv6', 'catch', 'ProjectionImage', 'Z_STREAM_END', '_baseColorTextureIndex', 'emissiveTextureIndex', 'requestNames', 'createCommand', 'AttributeType_SecondColor', 'tileWidth', 'preInit', 'vSecondColor', 'pendingTextureCount', 'line\x20width', '_waitTime', 'text/xml', '_emscripten_enum_draco_EncodedGeometryType_INVALID_GEOMETRY_TYPE', 'getPixel', 'blue', 'length', 'setObjsColor\x20color', 'query', 'Loaded', 'point', 'AltitudeMode', 'toPrecision', 'attributes', 'updateFrustum', './inffast', 'aNormalA', 'updateCamera', 'DracoUInt32Array', 'FixedXYZ', '_emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_INVALID_TRANSFORM', '_turningMode', 'emscripten_bind_Mesh_num_attributes_0', 'utf-16le', 'useLineColor', 'HEAPU32', 'CANCELLED', 'needed', 'SVC_Vertex', '_emscripten_bind_PointAttribute_PointAttribute_0', 'availability\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'UNSIGNED_SHORT', 'TERRAIN', 'NICEST', 'fileType', '_inverseProjectionDirty', 'error', 'projectionMatrix', 'emscripten_enum_draco_GeometryAttribute_Type_INVALID', 'sum', 'Texture', 'WGS84', 'secondary_colour', 'print', 'emscripten_bind_MetadataQuerier_MetadataQuerier_0', 'DT_INT8', 'StencilOperation', 'multiplyByVector', 'wbits', 'arrayFloat', 'setRosRenderFlag', 'emscripten_bind_DracoInt32Array_size_0', 'shaderProgramToCreate', 'READY', 'setInputAction', 'swipeRegion\x20must\x20be\x20a\x20instance\x20of\x20BoundingRectangle.', 'BlendingState', 'SpecularG', 'code', 'internalFormat', 'vertexAttributes', 'OperationType', 'floor', '_maximumPriority', 'cross', 'emscripten_bind_DecoderBuffer___destroy___0', 'isS3MB', '_emscripten_bind_Decoder_GetAttributeFloat_3', 'emscripten_enum_draco_StatusCode_UNSUPPORTED_VERSION', 'TRIANGULAR_MESH', 'windowBits', 'ended', 'prepare', '_isCleared', 'horizontalFov', 'aPosition0', 'bottomAltitude\x20value', 'subBatchValues', 'createIfNeeded', 'request', 'BYTE', 'minimumLevel', '{level}', 'MaxZ', 'isRootTile', '_faceCommand', 'clampToGroundPolylinePositions', 'uv2', 'crossorigin', 'concat', '\x20not\x20an\x20integer:\x20', 'ZERO', 'getContext', 'entities', 'customVertexAttribute', 'removeAllLimitBody', 'clipPlane', 'altitudefree', 'GeoName', 'RGB_DXT1', '&layer=', 'atuoConstants', '_numberOfLevelZeroTilesY', 'refreshReferencePoint', '_emscripten_bind_Decoder_GetAttributeId_2', '_calloutColor', 'STATIC_DRAW', 'srcY', '_isTerrainZ', 'isAncestorBlock', 'route', 'onEnd', 'useConfigFile', 'GetAttributeTransformData', 'hypsometricSetting', 'meshopt_decodeVertexBuffer', 'config', 'VertexColor', 'image', 'enrS3TCDXTN', 'readPixels', 'blockCache', 'HEAPU8', 'aColor', '_stopCollection', 'wrapT', 'normalRangeConstant', 'PLANECLIPMODE', 'TextureWrap', 'INCREMENT_WRAP', 'ambientColor', 'refreshReferenceAddPoint', 'DIR_LIGHTS\x20', '_tileversion', 'EndCol', 'fromDegreesArrayHeights', 'uv5', 'enableTranslate', 'utf8', 'total', '_pointSize', '_showMeasureResult', 'queryStringValue', 'emscripten_enum_draco_StatusCode_UNKNOWN_VERSION', '_totalMemoryUsageInBytes', 'skirtScale', 'HeightRange', 'uniformMap', 'terrainProvider', 'Assets/Textures/middle-edit.png', 'PolygonOffset', 'log', 'rectangle', 'materialPass', '_emscripten_bind_DracoUInt8Array___destroy___0', '_v3AffineY', 'clampToGroundPolyline', '_emscripten_bind_Decoder_GetAttributeUInt16ForAllPoints_3', 'commandList', 'subTextureNamesBake', 'AttributeType_Color', 'output', 'TileProviderError', '_swipeRegion', '_view', 'ReflectFramebuffer', 'extra', 'COMPUTE_W_VALUE', 'getSkyline2D', 'preRun', 'planePos', 'top', 'ATTRIBUTE_NO_TRANSFORM', 'isSct', '_visibleDistanceMax', 'Matrix3', 'documentElement', 'instanceIds', 'S3MContentParser', '_hasWaterMask', 'SVC_TexutreCoord', '_featheringScale', 'then', '_positions', '?x={x}&y={y}&scale={scale}&origin={\x22x\x22:-180,\x22y\x22:90}', 'spotLightDecl', 'Infinity', 'index\x20package\x20is\x20null', 'wasmMemory', 'noise', 'processFrame', 'setLodRangeScale', 'create', 'ProjectionImage.gamma', 'subVertexOffsetArr', 'beginFunc', 'Tex', 'next_in', 'options.url\x20is\x20required.', '_requestMetadata', 'requestBakeSubTextures', 'suffix', 'COMPRESSED_RGB_PVRTC_4BPPV1_IMG', 'selected', '_emscripten_bind_GeometryAttribute_GeometryAttribute_0', 'createBatchTable', 'eastNorthUpToFixedFrame', '_emscripten_bind_MetadataQuerier___destroy___0', '_emscripten_enum_draco_StatusCode_DRACO_ERROR', 'readFileSync', 'nodejs.util.inspect.custom', 'ProjectionImage.visible', '_enableClip', 'GetAttributeUInt32ForAllPoints', 'emscripten_enum_draco_DataType_DT_UINT8', 'COLOR', 'modulo', 'OCT_VERTEX_NORMALS', 'intersection', 'removeListenerFunc', 'FAILED', 'boundingVolume', 'data/index/', 'stop', 'heightOffset', 'volume', 'cartesianToCartographic', 'buildModuleUrl', 'computeVisibilityWithPlaneMask', 'dynCall_viii', 'get\x20s3m\x20layer\x20config\x20failed,xml\x20document\x20undefined.', 'Cesium3DTileset', 'not\x20an\x20integer:\x20', 'HAS_SKELETONSELECTED', 'dynCall_ii', '_isSci3D', 'check', '_emscripten_bind_PointAttribute_size_0', 'totalDuration', 'GetTriangleStripsFromMesh', 'shouldSelect', 'LEFT_CLICK', 'MinY', 'onUpdate', 'DECREMENT_WRAP', 'instantiateWasm', 'HAS_TRANSMISSION', '_bottomAltitude', 'emscripten_bind_DracoUInt8Array_GetValue_1', 'postPassesUpdate', 'list', 'numberOfIndices', 'Color', 'string2buf', 'units', 'labels', 'emscripten_bind_DracoFloat32Array_size_0', 'isLessThan', '_currentFlight', 'vertexArrayDestroyable', 'ColorTable', 'GeometryAttribute', 'DracoInt32Array', 'pop', '\x20base\x20', 'startPoint', 'MaterialManager', 'Bounce', 'CRN_DXT5', '_credit', '_blockCache', '_minWValue', 'Malformed\x20buffer\x20data:\x20', 'transpose', 'WireFrame', 'incorrect\x20data\x20check', 'ViewPosition', 'emscripten_enum_draco_StatusCode_INVALID_PARAMETER', 'apply', 'emscripten_bind_MetadataQuerier___destroy___0', 'emscripten_enum_draco_DataType_DT_UINT16', 'statusCode', 'MAX_VALUE', 'ErrnoError', 'entityCollection', 'http://www.supermap.com/SuperMapCache/sci3d', 'Error:\x20Cannot\x20destroy\x20object.\x20(Did\x20you\x20create\x20it\x20yourself?)', 'setTranslation', '_emscripten_bind_PointAttribute_normalized_0', '_entireFrustum', 'shininess', 'randomBytes', 'pos', '_accumulationDis', 'emscripten_enum_draco_DataType_DT_FLOAT32', 'HAS_POINT_LIGHTS', 'fromCartesian4', 'detected\x20subdomain\x20url\x20scheme,\x20but\x20no\x20subdomain\x20provided.', 'buf2binstring', 'SubTextureUploadJob', '#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20float\x20vPixelDistance;\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0avoid\x20main()\x0a{\x0a#ifdef\x20APPLY_SWIPE\x20\x0a\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a#endif\x0a\x09if(vColor.a\x20<\x200.1)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vColor;\x0a\x20\x20\x20\x20float\x20distanceToCenter\x20=\x20length(gl_PointCoord\x20-\x20vec2(0.5));\x0a\x20\x20\x20\x20float\x20maxDistance\x20=\x20max(0.0,\x200.5\x20-\x20vPixelDistance);\x0a\x20\x20\x20\x20float\x20wholeAlpha\x20=\x201.0\x20-\x20smoothstep(maxDistance,\x200.5,\x20distanceToCenter);\x0a\x20\x20\x20\x20gl_FragColor.a\x20*=\x20wholeAlpha;\x0a\x09if(gl_FragColor.a\x20<\x200.1)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20gl_FragColor\x20*=\x20czm_clip(czm_modelView\x20*\x20vec4(vPositionMC.xyz,\x201.0),\x201.0);\x0a#endif\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20czm_gammaCorrect(gl_FragColor);\x0a}', '_currentTargetPoint', 'contentState', 'Ground', 'getAttribute', 'createVertexBuffer', 'availability', '_addPoints', 'dynCall_viiiii', 'back', 'ShadowType', 'textureunitstates', '_subBatchValuesBake', 'DepthFramebuffer', 'emscripten_enum_draco_DataType_DT_UINT32', 'the\x20depth\x20buffer\x20is\x20not\x20supported.', 'instance', '_renderTextureMatrix', 'LUMINANCE_ALPHA', 'SVC_VertexColor', '_blockCacheSize', 'hasWaterMask', 'performance', 'num_components', 'magnitude', '_maximumMemoryUsage', '_emscripten_bind_PointAttribute_byte_offset_0', 'setBatchedAttribute', 'RangeDataList', '_tileset', '_isS3MB', 'TEXTURE_WRAP_T', '_removeIndex', 'globe', '_subTextureManager', 'invalid\x20stored\x20block\x20lengths', '}\x5cB', 'getUint16', 'isLeaf', 'context', 'AttributeType_FirstTexcoord', '_repeat', '_capturePointSize', 'constType', 'emscripten_bind_Status_code_0', 'environmentVisible', '_malloc', 'bool', 'ONLY_KEEP_LINE', '&_cache=true', '_hintLineVisible', '_color', '_isBlock', 'text', 'aCustom1', 'buffers', 'done', '498940vJNKJX', 'fillStyle', 'epEntity', 'DracoInt8Array', 'verticalFov', 'cCRNFmtDXT1', 'loadTileDataAvailability', 'fetchXML', 'toString', 'regions', 'rangeList', 'Number\x20primitive\x20has\x20more\x20than\x2015\x20significant\x20digits:\x20', 'vertexArray', 'GetAttributeInt32ForAllPoints', 'stopPlayMode', 'useWValue', '_isAlongline', 'RADIANS_PER_DEGREE', 'matrix', 'Init', 'Buf32', 'stopNodes', 'isViewer', 'frustum', 'errorEvent', 'fromCharCode', 'PixelDatatype', 'RGBA', 'normalTexture', '_point', 'sane', 'authority', 'createBoundingBoxForInstance', 'ContextLimits', 'Fill', 'SkylineFp', 'POINTS', 'fromInfo', 'BatchTable', 'endFunc', 'normalTextureScale', 'default', '.bil?level=', 'DT_UINT8', 'setLineVisible', 'invGeoMatrix', '{x}', 'baseColorTexture', 'SIXTY_FOUR_KILOBYTES', 'S3M', 'createTypedArray', 'waterIndex', 'pickFeatures', 'ZIP', 'createIndexBuffer', 'nextSibling', 'packingRequest', 'isFinite', '_emscripten_enum_draco_DataType_DT_BOOL', 'onRuntimeInitialized', '\x0a#ifdef\x20HAS_DIR_LIGHTS\x0a\x0auniform\x20vec3\x20uDirectionalLightDirectionEC[\x20DIR_LIGHTS\x20];\x0auniform\x20vec3\x20uDirectionalLightColor[\x20DIR_LIGHTS\x20];\x0a\x20\x20\x20\x20\x0a#endif\x0a', 'greaterThanOrEquals', '_stopArrived', 'quantization', 'matrixU', 'MASK_INDETERMINATE', 'queryBooleanAttribute', 'emscripten_bind_AttributeTransformData___destroy___0', 'RGB', 'componentsPerAttribute', 'verticesCount', '_oriClipPlane', 'ROUND_UP', 'BillboardCollection', 'priorityHolder', 'multiple', 'TilesBounds', '_gamma', '_playRate', '_maxVisibleAltitude', '[object\x20Array]', 'enableTextureRenderable', 'metallicRoughnessTextureIndex', 'Files', 'emscripten_bind_AttributeOctahedronTransform_InitFromAttribute_1', 'SVC_TexutreCoordIsW', 'setTyped', 'destroyObject', 'edgeTotalLength', 'createViewportQuadCommand', 'directionLightDecl', 'VertexArray', 'fetchImage', 'Translation', 'geoMatrix', 'ArrayFloat', 'deduplicate', '_baseColor', './zlib/constants', 'imageryProvider', 'end', 'totalMemoryUsageInBytes', 'roll', 'S3MPointCloudRenderEntity', 'raw', 'TRANSPARENT', 'emscripten_bind_PointAttribute_byte_offset_0', 'run', 'point\x20size', 'send', 'fromOrientedBoundingBox', 'levels', '_updateAllObjsVisible', 'texImage2D', '_errorEvent', 'Object\x20expected:\x20', './zlib/zstream', '/layers.json', 'textureAtlasID', '_cacheKey', '_currentTargetName', '\x20Level:\x20', 'SuperMap3D', 'QuantizedMeshTerrainData', '_coverageArea', 'onAbort', '_labelPixelOffset', 'scale', 'polygon', 'emscripten_bind_PointAttribute_PointAttribute_0', '_loadImage', 'cCRNFmtDXT5', 'fragmentShaderSource', 'shift', 'Contents', 'DECIMAL_PLACES', 'subRequested', 'UseLineColor', '_isSkirtDirty', 'S3ModelOldParser', '_tilingScheme', '_array', 'yOffset', '___wasm_call_ctors', 'ncode', 'message', 'toLowerCase', '_ellipsoid', 'lendyn', 'maximum', 'options.url\x20is\x20error', 'isPositive', '_name', 'StoreType', 'preloadedImages', 'scene\x20list\x20response\x20null!', 'dynCall_vii', '_urlTemplate', 'TRANSITIONING', 'pitch', 'RANGE', 'raiseEvent', 'addTargetPoint', '_updateColorDictTable', '_labelPixelOffsetScaleByDistance', 'isArray', 'getClass', 'emscripten_bind_Status_ok_0', 'createBakeTexture', '_emscripten_bind_DracoInt8Array___destroy___0', '__ZSt18uncaught_exceptionv', 'constrast', 'emscripten_bind_DracoUInt16Array___destroy___0', '_vertexCompressionType', '_sceneMode', 'fData', 'Rain', 'CategoryRange', 'DEBUG', 'SightWideLineFS', 'invalid\x20window\x20size', 'getAttributeNodeNS', 'shaderProgram', 'maxInstensity', 'srcX', 'rooturl', '_scales', 'GeographicTilingScheme', '.water', 'tileImage', 'pickColorIdentifier', 'subTextureManager', 'hasMetadata', 'xmldom', '_renderable', 'uv7', 'UNIT_X', '_addPositions', 'ambient', 'need\x20dictionary', './utils/strings', 'minFresnel', 'flipY', 'generateBuffer', 'instanceIndex', '_tileFormat', 'hookCloneFunc', 'currentScript', 'emscripten_bind_PointCloud_PointCloud_0', 'subdomains', '_distance', '{s}', 'texParameteri', 'Style3D', 'referencePointColor', 'getSizeInBytes', 'command', 'ROUND_HALF_CEIL', 'scheme', 'maximumVertexTextureImageUnits', 'subTexturesToUpload', '_anisotropy', 'cancel', 'cullingVolume', 'emscripten_bind_Decoder_GetAttributeUInt32ForAllPoints_3', 'BlockScale', '_tweens', 'getHeight', 'averageHeight', 'DEPTH_COMPONENT', '_updateCopyCommand', 'endPosition', 'RotateX', 'textureCache', 'scaleDenominators', 'stopChainedTweens', 'normalUniqueID', 'FresnelFp', 'queryNodes', '_emscripten_bind_DracoInt16Array_DracoInt16Array_0', 'sml:Version', 'setThrew', 'credit', 'calculateResolution', 'S3MEdgeProcessor', 'projection-image', '_hdr', 'specular', 'SHORT', 'MaxCategory', 'fromGeometry', '_selectedColor', '_skirtScale', 'aCustom0', 'pick', '../', 'NON_OCCLUDED', 'DepthFunction', 'plus', '_inverseNormal3DDirty', 'SV_DracoCompressed', 'Memory', 'colorBuffer', 'max\x20visible\x20altitude', 'Z_NO_FLUSH', 'ColorTableMinKey', 'getFloat64', 'SceneFramebuffer', '_requestVertexNormals', 'depthTexture', 'stopObject', '_textureStep', 'memory', 'appendChild', 'getColor', 'StopAround', '_useConfigFile', 'lessThanOrEquals', 'PolygonPipeline', 'green', '_enableDepthTest', 'LINEAR', 'HypsometricSetting', 'CLIPPLANE', 'RIGHT_CLICK', 'GetEntryName', 'prefix', 'parseFromString', '_rectangleSouthwestInMeters', 'POW_PRECISION', 'inverseProjection', 'NO_TEXCOORD', 'HeadingPitchRoll', 'getAuthority', 'geoPackage', '_heightmapWidth', 'min_value', 'delay', 'isUpdate', 'rippleTexture', 'failed\x20to\x20load\x20wasm\x20binary\x20file\x20at\x20\x27', 'indexType', 'emscripten_bind_DracoUInt32Array_DracoUInt32Array_0', '\x20not\x20a\x20primitive\x20number:\x20', 'newFrame', 'destroy', 'parse', 'result', 'GetFaceFromMesh', 'childTile', 'get\x20scene\x20list\x20failed,', 'createEdgeDataByIndices', 'DT_BOOL', '_roll', 'attribute\x20vec4\x20aPosition;\x0aattribute\x20vec3\x20aNormal;\x0aattribute\x20vec4\x20aTexCoord0;\x0aattribute\x20vec4\x20aColor;\x0auniform\x20float\x20uTimeVal;\x0auniform\x20float\x20uScale;\x0auniform\x20float\x20uScroll;\x0auniform\x20vec2\x20uBumpSpeed;\x0auniform\x20mat4\x20uGeoMatrix;\x0a\x0avarying\x20vec2\x20vNoiseCoord;\x0avarying\x20vec3\x20vProjectionCoord;\x0avarying\x20vec3\x20vEyeDir;\x0avarying\x20vec3\x20vNormal;\x0avarying\x20vec4\x20vColor;\x0avarying\x20vec4\x20vPositionMC;\x0avarying\x20float\x20fSelected;\x0avarying\x20vec3\x20vPositionEC;\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20oPos\x20=\x20czm_modelViewProjection\x20*\x20aPosition;\x0a\x09vPositionMC\x20=\x20uGeoMatrix\x20*\x20aPosition;\x0a\x09vPositionEC\x20=\x20(czm_modelView\x20*\x20vPositionMC).xyz;\x0a\x09mat4\x20scalemat\x20=\x20mat4(0.5,\x200.0,\x200.0,\x200.0,\x0a\x09\x09\x090.0,\x200.5,\x200.0,\x200.0,\x0a\x09\x09\x090.0,\x200.0,\x200.5,\x200.0,\x0a\x09\x09\x090.5,\x200.5,\x200.5,\x201.0);\x0a\x09vec4\x20proj\x20=\x20scalemat\x20*\x20oPos;\x0a\x09vProjectionCoord\x20=\x20proj.xyw;\x0a\x09vNoiseCoord.xy\x20=\x20aTexCoord0.xy\x20*\x20uScale\x20+\x20uBumpSpeed\x20*\x20uTimeVal;\x0a\x09vec4\x20cameraPos\x20=\x20czm_inverseModel\x20*\x20vec4(czm_viewerPositionWC,\x201.0);\x0a\x09vEyeDir\x20=\x20aPosition.xyz\x20-\x20cameraPos.xyz;\x0a\x09vNormal\x20=\x20aNormal.xyz;\x0a\x09gl_Position\x20=\x20oPos;\x0a\x09vec4\x20vertexColor\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20vertexColor\x20=\x20aColor;\x0a\x20\x20\x20\x20vColor\x20=\x20vertexColor;\x0a}', '_hintLineColor', 'bTransparentSorting', 'ThirdParty/draco_decoder_new.wasm', 'depthTextureToCopy', 'layer', 'snowMaskTexture', 'appendForwardSlash', 'movingEvt', 'ScreenSpaceEventHandler', 'PageLods', 'SkylineVp', 'chordLength', 'getScale', 'getServerKey', 'geometry', 'getDerivedResource', 'assign', 'sml:Right', '_emscripten_enum_draco_StatusCode_UNKNOWN_VERSION', '\x0a\x0a#ifdef\x20HAS_DIR_LIGHTS\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20DIR_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20directLight.color\x20=\x20uDirectionalLightColor[i];\x0a\x20\x20\x20\x20directLight.direction\x20=\x20uDirectionalLightDirectionEC[i];\x0a\x20\x20\x20\x20directLight.visible\x20=\x20true;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_POINT_LIGHTS\x0aPointLight\x20pointLight;\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20POINT_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20pointLight.position\x20=\x20uPointLightPositionEC[i];\x0a\x20\x20\x20\x20pointLight.color\x20=\x20uPointLightColor[i];\x0a\x20\x20\x20\x20pointLight.distance\x20=\x20uPointLightDistanceAndDecay[i].x;\x0a\x20\x20\x20\x20pointLight.decay\x20=\x20uPointLightDistanceAndDecay[i].y;\x0a\x20\x20\x20\x20getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x20\x20\x20\x20if(!directLight.visible)\x20continue;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_SPOT_LIGHTS\x0aSpotLight\x20spotLight;\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20SPOT_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20spotLight.position\x20=\x20uSpotLightPositionEC[i];\x0a\x20\x20\x20\x20spotLight.color\x20=\x20uSpotLightColor[i];\x0a\x20\x20\x20\x20spotLight.direction\x20=\x20uSpotLightDirectionEC[i];\x0a\x20\x20\x20\x20spotLight.coneCos\x20=\x20uSpotLightDistanceDecayCosPenumbra[i].z;\x0a\x20\x20\x20\x20spotLight.penumbraCos\x20=\x20uSpotLightDistanceDecayCosPenumbra[i].w;\x0a\x20\x20\x20\x20getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x20\x20\x20\x20if(!directLight.visible)\x20continue;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a', 'HAS_SPOT_LIGHTS', 'easing', 'invalid\x20distance\x20too\x20far\x20back', 'RangeMode', 'loadeddata', 'setOnlyObjsVisible\x20ids', 'argv', 'updateObjsColor', 'hcrc', 'emscripten_bind_PointCloud_num_points_0', '_emscripten_bind_DracoUInt16Array_size_0', 'gpuConstants', 'requestedFrame', 'CLIP_BEHIND_ALL_PLANE', 'lodRangeMode', 'div', '_oneOverLog2FarDepthFromNearPlusOne', 'texUnitIndex', 'deactivate', 'isGlobalVisible', '_displayStyle', 'removeTargetPoint', '_rectangle', 'sml:Levels', 'uniform\x20sampler2D\x20colorTexture;\x0avarying\x20vec2\x20v_textureCoordinates;\x0auniform\x20int\x20density;\x0auniform\x20float\x20speed;\x0auniform\x20float\x20angle;\x0a\x0afloat\x20snow(vec2\x20uv,\x20float\x20scale)\x0a{\x0a\x20\x20\x20\x20float\x20time\x20=\x20czm_frameNumber\x20/\x2060.0;\x0a\x20\x20\x20\x20float\x20w\x20=\x20smoothstep(1.0\x20,\x200.0,\x20-uv.y\x20*\x20(scale\x20/\x2010.0));\x0a\x20\x20\x20\x20if(w\x20<\x200.1)\x20return\x200.0;\x20//\x20雪花消失\x0a\x20\x20\x20\x20uv\x20+=\x20time\x20/\x20scale;\x20//\x20随时间移动\x0a\x20\x20\x20\x20uv.y\x20+=\x20time\x20*\x20cos(angle)\x20*\x20speed\x20/\x20scale;\x0a\x20\x20\x20\x20uv.x\x20+=\x20sin(uv.y\x20+\x20time\x20*\x20sin(angle)\x20*\x20speed)\x20/\x20scale;\x20//\x20左右摇摆\x0a\x20\x20\x20\x20uv\x20*=\x20scale;\x0a\x20\x20\x20\x20vec2\x20s\x20=\x20floor(uv);\x0a\x20\x20\x20\x20vec2\x20f\x20=\x20fract(uv);\x0a\x20\x20\x20\x20vec2\x20p;\x0a\x20\x20\x20\x20float\x20k\x20=\x203.0;\x0a\x20\x20\x20\x20float\x20d;\x0a\x20\x20\x20\x20p\x20=\x200.5\x20+\x200.35\x20*\x20sin(11.0\x20*\x20fract(sin((s\x20+\x20p\x20+\x20scale)\x20*\x20mat2(7,\x203,\x206,\x205))\x20*\x205.0))\x20-\x20f;\x0a\x20\x20\x20\x20d\x20=\x20length(p);\x0a\x20\x20\x20\x20k\x20=\x20min(d,\x20k);\x0a\x20\x20\x20\x20k\x20=\x20smoothstep(0.0,\x20k,\x20sin(f.x\x20+\x20f.y)\x20*\x200.01);\x0a\x20\x20\x20\x20return\x20k\x20*\x20w\x20*\x20clamp(float(density)\x20/\x205.0,\x201.0,\x205.0);\x0a}\x0a\x0a\x0avoid\x20main(void){\x0a\x20\x20\x20\x20vec2\x20resolution\x20=\x20czm_viewport.zw;\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20(gl_FragCoord.xy\x20*\x202.0\x20-\x20resolution.xy)\x20/\x20min(resolution.x,\x20resolution.y);\x0a\x20\x20\x20\x20vec3\x20finalColor\x20=\x20vec3(0);\x0a\x20\x20\x20\x20float\x20c\x20=\x200.0;\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x202;\x20i\x20<\x205;\x20i++)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(density\x20<\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20c\x20+=\x20snow(uv,\x20float(i));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x206;\x20i\x20<\x2010;\x20i+=\x202)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(density\x20<\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20c\x20+=\x20snow(uv,\x20float(i));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x2015;\x20i\x20<\x2030;\x20i+=\x205)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(density\x20<\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20c\x20+=\x20snow(uv,\x20float(i));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20finalColor\x20=\x20vec3(c);\x0a\x20\x20\x20\x20if(c\x20>\x200.8)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20finalColor\x20=\x20vec3(max(5.0,\x20c));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20mix(texture2D(colorTexture,\x20v_textureCoordinates),\x20vec4(finalColor,\x201.0),\x200.15);\x0a}', 'emscripten_enum_draco_DataType_DT_INVALID', '_dynamicCurrentStopIndex', 'comparedTo', '_updateAll', 'isLeafTile', 'options.startObject\x20and\x20options.stopObject\x20are\x20required.', 'map', 'StartRow', 'nodeType', 'toNumber', 'varargs', 'href', 'max\x20visible\x20distance', 'textureunitstate', '0.5', 'boundingSphere', 'updateBatchTableAttributes', 'range', '_boundingSphereFromXML', '_emscripten_bind_PointCloud_PointCloud_0', 's3mblock', 'setSelection', '307945KelpWs', 'dynCall_iiiiiii', 'emscripten_bind_AttributeOctahedronTransform_AttributeOctahedronTransform_0', 'wasMinPriorityChild', '_createRasterRegion', 'textures', 'cancelled', '_flyStatus', 'jobScheduler', 'arg', 'routes', 'Geode', '_tweenjs', '\x0a#ifdef\x20HAS_POINT_LIGHTS\x0a\x0auniform\x20vec3\x20uPointLightPositionEC[\x20POINT_LIGHTS\x20];\x0auniform\x20vec3\x20uPointLightColor[\x20POINT_LIGHTS\x20];\x0auniform\x20vec2\x20uPointLightDistanceAndDecay[\x20POINT_LIGHTS\x20];\x0a\x0astruct\x20PointLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a};\x0a\x0avoid\x20getPointDirectLightIrradiance(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometry.position;\x0a\x20\x20\x20\x20directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x20\x20\x20\x20float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x20\x20\x20\x20directLight.color\x20=\x20pointLight.color;\x0a\x20\x20\x20\x20directLight.color\x20*=\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x20\x20\x20\x20directLight.visible\x20=\x20(\x20directLight.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a}\x0a\x0a#endif\x0a', 'promise', '_dblclickListener', '_viewProjMatrix', 'Status', 'fromFile', 'decode_texCoord2_min', 'S3MDracoDecode', 'textureCoordinates', 'UNPACK_PREMULTIPLY_ALPHA_WEBGL', 'getInt8', 'PolygonGeometryLibrary', 'isAlongline', '_emscripten_enum_draco_GeometryAttribute_Type_POSITION', '_emscripten_bind_Decoder_GetAttributeInt32ForAllPoints_3', '_emissionColor', 'HAS_EMISSIVE_TEXTURE', 'SVC_Normal', 'clampToGroundPolylines', '_viewMatrix', 'buf2string', 'SILHOUETTE_SELECT_TYPE', '&tilecol=', 'cullPass', 'aCustom', 'dynCall_iii', 'PackingRequest', 'computeFlyToLocationForRectangle', 'VertexWeight', 'UniformState', 'exponentiatedBy', '0.$1', 'emscripten_bind_Decoder_GetAttributeIdByName_2', '_getEmissionTexAtlasTilingAndOffset', '_horizontalFov', 'ColorPoint', 'Failed\x20to\x20obtain\x20image\x20tile\x20X:\x20', 'emscripten_bind_AttributeOctahedronTransform_quantization_bits_0', 'DracoInt16Array', '_addedStops', 'emscripten_bind_Decoder_GetMetadata_1', 'repeat', 'queryToObject', 'analysisMode', 'center', 'Distance', 'visibility', 'HYPSOMETRIC', 'enableReflection', 'hold', 'PBR', '_style3D', '_crn_get_uncompressed_size', 'OrthographicFrustum', 'unknown\x20compression\x20method', '_edgeCurrentTotalLength', 'decode_texCoord1_min', 'finalResolution', 'BoundingRectangle', 'Visible', 'FACE', '_mode', 'SPOT_LIGHTS\x20', 'inflateSetDictionary', 'isUseColorByHeight', 'reject', 'TextureAtlasSec', 'Can\x20not\x20resolve\x20#include\x20<', 'RGB_PVRTC_4BPPV1', 'emscripten_bind_MetadataQuerier_NumEntries_1', '_emscripten_bind_DracoUInt32Array_DracoUInt32Array_0', 'stopCount', 'aTexCoordZ', 'loadTileset', 'decode_texCoord6_normConstant', 'multipliedBy', '_emscripten_bind_DracoInt32Array___destroy___0', 'loadImageFromTypedArray', 'DDSTexture', 'LINE', 'SCENE3D', 'textureWidth', 'minValues', 'MinZ', 'inspect', 'namespace', 'toUrlUndefined', 'PrimitiveType', 'NEAREST', 'emscripten_bind_PointAttribute_GetAttributeTransformData_0', 'log2', 'Z_OK', 'addWaterPlane', 'maximumComponent', 'surroundDuration', 'dividedBy', 'fromRectangle3D', 'imageryLayers', 'tileXYToRectangle', 'onModuleParsed', 'NearFarScalar', 'emscripten_bind_PointAttribute___destroy___0', 'onModuleLoaded', 'primitives', '_guid', '_pointColor', 'SceneMode', 'FLOAT', 'zExtent', '_lineStripCollection', 'Buf16', 'No\x20url\x20provided.', '_cache', 'sin', 'TEXTURE', 'PerspectiveFrustum', 's3mb', 'quadKeyIndex', 'TRIANGLE_FILTRATE', 'HORIZONTAL_LINE', '_updatePolygon', 'tileWidth\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'Assets/Textures/grepin.png', '/realspace', '_screenSpaceCameraController', 'emscripten_enum_draco_StatusCode_OK', '\x0a#ifdef\x20Mode_Height\x0avarying\x20float\x20vHeight;\x0avec4\x20packValue(float\x20value)\x0a{\x0a\x20\x20\x20\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x09float\x20SHIFT_RIGHT8\x20=\x201.0\x20/\x20256.0;\x0a\x09vec4\x20result;\x0a\x09result.a\x20=\x20255.0;\x0a\x09float\x20fPos\x20=\x20abs(value\x20+\x209000.0)\x20*\x20SHIFT_RIGHT8;\x0a\x09result.b\x20=\x20(fPos\x20-\x20floor(fPos))\x20*\x20SHIFT_LEFT8;\x0a\x09fPos\x20=\x20floor(fPos)\x20*\x20SHIFT_RIGHT8;\x0a\x09result.g\x20=\x20(fPos\x20-\x20floor(fPos))\x20*\x20SHIFT_LEFT8;\x0a\x09result.r\x20=\x20floor(fPos);\x0a\x09result\x20/=\x20255.0;\x0a\x09return\x20result;\x0a}\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20gl_FragColor\x20=\x20vec4(1.0);\x0a#ifdef\x20Mode_Height\x0a\x20\x20\x20gl_FragColor\x20=\x20packValue(vHeight);\x0a#endif\x0a}', '_swipeEnabled', 'HAS_WETNESS', 'SELECTION', 'SubTextureManager', 'MaterialPass', 'Ready', 'emscripten_enum_draco_DataType_DT_TYPES_COUNT', '_emscripten_bind_PointAttribute_unique_id_0', 'indicesTypedArray', 'get\x20S3M\x20layer\x20config\x20failed,', '_emscripten_bind_DracoUInt32Array___destroy___0', 'Pixel', 'inflateEnd', 'UNIT_Y', 'diffuseColor', '_direction', 'src', 'NORMAL', 'getSingleInstance', 'selectedColor', '_emscripten_enum_draco_DataType_DT_UINT8', 'isBlock', 'dequeue', 'disableReflection', 'available', 'times', 'data\x20error', 'createGeometry', 'Title', 'RouteCollection', 'queryNumericAttribute', 'hookRequestContentFunc', '_accumulationPositions', 'GetAttributeFloatForAllPoints', '_tileCredits', 'removeDotSegments', 'fromCssColorString', 'setEditObject', 'wsize', 'POLYGON_OFFSET', '_emscripten_enum_draco_DataType_DT_UINT16', 'namespaceURI', '_context', 'inverseViewMatrix', 'tilingScheme\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'raySphere', '_queue', '_materialManager', 'WebMercatorTilingScheme', 'getAllRouteStops', 'UNSUPPORTED_VERSION', 'setOnlyObjsVisible\x20isVisible', 'viewer\x20and\x20mode\x20is\x20required!', 'mode', 'MeasureMode', '&tileversion=', 'CullFace', '/layers/', 'responseType', 'RGBA_PVRTC_4BPPV1', '_emscripten_enum_draco_StatusCode_INVALID_PARAMETER', '_editPoints', '_modelViewProjectionRelativeToEyeDirty', 'initTexture', 'isLineVisible', '_emscripten_bind_DracoInt16Array_size_0', 'bytesOffset', 'ScreenSpaceEventType', 'attribute\x20vec2\x20aSideness;\x0aattribute\x20vec3\x20aPosition0;\x0aattribute\x20vec3\x20aPosition1;\x0a\x0auniform\x20float\x20uLineWidth;\x0auniform\x20mat4\x20uRenderTextureMatrix;\x0a\x0avarying\x20vec4\x20renderTextureCoord;\x0a\x0avec4\x20resolvePosition(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec2\x20sidenessNorm)\x20{\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20sidenessNorm\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20mix(viewPosV0,\x20viewPosV1,\x20sidenessNorm.y);\x0a\x20\x20\x20\x20vec4\x20projPosV0\x20=\x20czm_projection\x20*\x20viewPosV0;\x0a\x20\x20\x20\x20vec4\x20projPosV1\x20=\x20czm_projection\x20*\x20viewPosV1;\x0a\x20\x20\x20\x20vec4\x20projPos\x20=\x20czm_projection\x20*\x20viewPos;\x0a\x20\x20\x20\x20vec3\x20screenSpaceLineNDC\x20=\x20(projPosV1.xyz\x20/\x20projPosV1.w\x20-\x20projPosV0.xyz\x20/\x20projPosV0.w);\x0a\x20\x20\x20\x20vec2\x20uNDCToPixel\x20=\x20vec2(czm_viewport.z\x20/\x202.0,\x20czm_viewport.w\x20/\x202.0);\x0a\x20\x20\x20\x20vec2\x20screenSpaceLinePixels\x20=\x20screenSpaceLineNDC.xy\x20*\x20uNDCToPixel;\x0a\x20\x20\x20\x20float\x20lineLengthPixels\x20=\x20length(screenSpaceLinePixels);\x0a\x20\x20\x20\x20float\x20dzPerPixel\x20=\x20screenSpaceLineNDC.z\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20screenSpaceDirection\x20=\x20screenSpaceLinePixels\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20perpendicularScreenSpaceDirection\x20=\x20vec2(screenSpaceDirection.y,\x20-screenSpaceDirection.x)\x20*\x20sideness.x;\x0a\x20\x20\x20\x20vec2\x20uPixelToNDC\x20=\x20vec2(2.0\x20/\x20czm_viewport.z,\x202.0\x20/\x20czm_viewport.w);\x0a\x20\x20\x20\x20float\x20halfLineWidth\x20=\x20max(uLineWidth,\x201.0)\x20*\x200.5;\x0a\x20\x20\x20\x20vec2\x20halfLineWidthNDC\x20=\x20halfLineWidth\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20vec2\x20ndcOffset\x20=\x20screenSpaceDirection\x20*\x20halfLineWidthNDC\x20+\x20perpendicularScreenSpaceDirection\x20*\x20halfLineWidthNDC;\x0a\x20\x20\x20\x20projPos.xy\x20+=\x20ndcOffset\x20*\x20projPos.w;\x0a\x20\x20\x20\x20projPos.z\x20+=\x20(dzPerPixel\x20*\x20halfLineWidth)\x20*\x20sideness.y\x20*\x20projPos.w;\x0a\x20\x20\x20\x20return\x20projPos;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20viewPosV0\x20=\x20czm_modelView\x20*\x20vec4(aPosition0,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPosV1\x20=\x20czm_modelView\x20*\x20vec4(aPosition1,\x201.0);\x0a\x20\x20\x20\x20gl_Position\x20=\x20resolvePosition(viewPosV0,\x20viewPosV1,\x20aSideness);\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20czm_inverseProjection\x20*\x20gl_Position;\x0a\x20\x20\x20\x20renderTextureCoord\x20=\x20uRenderTextureMatrix\x20*\x20viewPos;\x0a}', 'Volume', 'isCrnTexture', '_metallicRoughnessTextureIndex', 'minCategory', 'application/vnd.quantized-mesh,application/octet-stream;q=0.9,*/*;q=0.01', '_emscripten_enum_draco_DataType_DT_INT16', 'rectangleSouthwestInMeters', 'BLACK', 'decode_position_normConstant', 'normalTextureIndex', '_points', 'GetEncodedGeometryType', 'byteStride', 'AttributeQuantizationTransform', 'TexCoord', '_dictColorTable', '_emscripten_bind_AttributeQuantizationTransform_AttributeQuantizationTransform_0', 'GetTrianglesUInt32Array', 'lon', 'anisotropy', 'cellWidth', 'script', '3216091ylYKLo', 'MOUSE_MOVE', 'getChildValue', 'setStatus', 'Hue', '__cache__', '_customDPI', 'isSameDocumentAs', 'Z_NEED_DICT', 'FileName', 'rangeMode', 'COMPRESSED_RGBA_PVRTC_4BPPV1_IMG', 'BGR', 'emscripten_bind_DracoUInt16Array_GetValue_1', 'lineCommand', 'preVertexCount', '_segmentCount', 'HAS_CLEARCOAT', 'geoName', '_isDown', 'chain', 'unpack', 'toStringTag', 'next', '_subTexInfos', 'CatmullRomSpline', 'addColorStop', 'sizeInBytes', '_tileWidth', '_farDepthFromNearPlusOne', 'PBR_THEME', 'Sightline', 'headingfree', 'decodeIndexBuffer', 'options\x20is\x20required.', 'pageLods', 'SightWideLineVS', '_emscripten_bind_Decoder_GetAttributeIntForAllPoints_3', 'timeVal', 'rectangleNortheastInMeters', 'contentReadyPromise', 'invalid\x20literal/length\x20code', 'token', 'GetStringEntry', 'SVO_HasInstSelInfo', 'del', 'addEventListener', '_isS3MBlock', 'location', '_emscripten_bind_AttributeOctahedronTransform_InitFromAttribute_1', 'distanceToTileCenter', 'updateAndExecuteCommands', 'AlphaMode', '_emscripten_bind_DracoInt16Array_GetValue_1', 'cameraDepthBuffer', 'emscripten_bind_AttributeQuantizationTransform___destroy___0', 'polyline-', 'MinCategory', 'subName', 'instantiateStreaming', 'copyFrom', '_measureEvt', 'DT_TYPES_COUNT', 'invalid\x20code\x20--\x20missing\x20end-of-block', 'ShaderChunk', '_routeName', 'initLayerSetting', 'equals', 'DiffuseA', 'handleSuccess', 'projection', 'minHeight', 'left', 'COMPRESS_COLOR', 'Framebuffer', 'floatToByte', '_ancestorTextureBake', 'showrouteline', '_opacity', '&x={x}&y={y}&scale={scale}', 'open', 'fresnelPower', '/tileset/data/path/', '_target', '_lineWidth', 'emscripten_bind_Decoder_GetAttributeId_2', 'dynCall_jiji', 'utf8border', 'tileFormat', 'fillForeColor\x20value', 'perPositionHeight', 'TerrainProvider', 'silhouetteEdgeCommand', 'longitude', 'nlen', 'CreateTexture', 'requestTileGeometry', 'alloc', 'read', 'fromRectangle', 'GetAttributeIdByMetadataEntry', 'instance\x20buffer\x20is\x20null', 'RasterRegionVS', 'freeze', 'HAS_ANISOTROPY', 'aTextureBatchId', '_editPointIndex', '&service=WMTS&request=GetTile', 'diffuse', 'createPickIds', '_emscripten_bind_DracoInt8Array_GetValue_1', 'response', '_currentDis', 'CESIUM_3D_TILE', 'LineColor', '_visibleDistanceMin', 'cancelFlight', 'key', '_emscripten_bind_GeometryAttribute___destroy___0', 'MaxX', 'uncaughtException', 'stopCollection', 'W_VISIBLE', 'triangulate', 'GetAttribute', 'isTexBlock', '_datatype', 'body', 'ModelEdgeFp', 'object', 'vertexBuffer', 'createBuffers', 'peek', '_primitives', '_objsVisibleList', 'DEGREES_PER_RADIAN', '_promise', 'renderable', '_trimTiles', '_scaleDenominators', 'getUint8', 'COMPRESSED_RGBA_PVRTC_2BPPV1_IMG', 'textureCoordIsW', 'ROUND_HALF_FLOOR', 'toRadians', 'blockInfo', 'minVisibleDistance', 'UNSIGNED_INT_24_8', 'credit\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'PRJ_SPHERE_MERCATOR', 'VisibleAltitudeMax', 'Queue', 'Matrix', '_cameraDirection', 'SetColor', '_addStop', '/data/', 'UNSIGNED_BYTE', 'HAS_RAIN', 'emscripten_enum_draco_DataType_DT_UINT64', 'parameter\x20stop\x20is\x20required!', 'tile', 'groupNode', 'passState', 'greaterThan', 'viewProjectionMatrix', '_PBRMaterialParams', 'parent', 'func', 'the\x20index\x20is\x200~8', 'S3MCompressType', 'sceneMode', '_emscripten_bind_DracoInt32Array_GetValue_1', 'tileUrlTemplates', 'refCount', 'emscripten_bind_DracoUInt32Array___destroy___0', '_emscripten_bind_Status___destroy___0', 'maximumLevel\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', '_createCommand', 'isEqualTo', 'primitiveType', 'waterNormalMapUrl', 'emscripten_bind_DracoUInt32Array_GetValue_1', 'far', 'rightWC', 'Assets/Textures/waterNormalsSmall.jpg', '_emscripten_bind_DracoUInt16Array_DracoUInt16Array_0', 'HeightReference', 'inverseTransformation', 'StencilFunction', 'silhouette', 'FilterMode', 'nodeName', 'getElementsByTagName', 'Right', '_visibleColor', 'dynCall_v', '_edgeCurrentCount', 'index', 'Assets/Textures/vertex-edit.png', 'emscripten_enum_draco_EncodedGeometryType_INVALID_GEOMETRY_TYPE', 'build', '_requestWaterMask', 'clearcoat', 'fromPointNormal', 'POST_EFFECT', 'modelMatrix', '_minimumLevel', '_speed', 'IsReal', 'dataViewByteOffset', 'isBigNumber', 'visible', 'parseBuffer', 'pointColor', 'all', 'fetchJson', 'curTextureName', '_isStopVisible', 'toFormat', 'open\x20scene\x20url\x20error!', '_updateObjsOperation', 'matrixV', 'Version', '_emscripten_bind_MetadataQuerier_NumEntries_1', 'BufferUsage', '_objsVisibleMap', 'polyline', 'endX', 'strm', 'test', 'abs', 'pixel', 'instanceBuffer', 'BLOCKPACK', 'altitudeMode', './inftrees', '_emscripten_enum_draco_DataType_DT_FLOAT64', 'transform_type', 'multiplyByPoint', 'dynCall_viiiiii', 'oriTextureBake', 'baseColorTextureIndex', 'Linear', '^(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\x5c?([^#]*))?(?:#(.*))?$', 'tilt', 'AttributeCompression', 'getFramebuffer', 'hypsometric', '_verticalFov', 'reflectMatrix', 'getVertexShaderCallback', 'toCartesian', 'Transforms', 'error_msg', 's3mGroup', 'image/png', 'SCTTerrainProvider', 'AttributeTransformData', 'textureData', 'useDepthPicking', 'xExtent', 'DEPTH_STENCIL', 'skylineCamera', 'work', 'queryBooleanValue', '_crn_decompress', 'S3MBlockContentParser', 'HEAPU16', 'region', 'Identifier', 'post', '_setObjsOperationType', 'datas/', '_hue', 'AutoConstants', 'multiplyByScalar', 'valueOf', 'printErr', 'instanceDivisor', '_emscripten_bind_Decoder_GetAttribute_2', '_contentResource', 'firstChild', '_hLabel', 'textureInfo', 'GeoDeModMatrix', 'emscripten_bind_MetadataQuerier_GetEntryName_2', 'responseText', 'Cannot\x20find\x20module\x20\x27', 'Line', 'RotateZ', '_minCategory', 'equalsEpsilon', 'rosRenderFlag', 'EditHandler', 'DRACO_ERROR', 'toUpperCase', '_currentFrustum', '_packingRequest', 'bottom', 'allSettled', 'BoundingSphere', '_index', 'node', 'ceil', '_crn_get_levels', 'integerValue', '_list', 'ShaderProgram', 'VertexNormal', 'MaxVisibleValue', 'JobType', 'Top'];
function _0x5e91(_0x2d1a47, _0x4fa026) {
     _0x2d1a47 = _0x2d1a47 - 0x181;
     let _0xafab1f = _0xafab[_0x2d1a47];
     return _0xafab1f;
}
(function (_0xfd40a0, _0x5a222d) {
     const _0x5d387e = _0x5e91;
     while (!![]) {
          try {
               const _0x2f2e16 = parseInt(_0x5d387e(0x5b6)) * parseInt(_0x5d387e(0x369)) + -parseInt(_0x5d387e(0x552)) + -parseInt(_0x5d387e(0xa08)) + -parseInt(_0x5d387e(0x4ed)) + -parseInt(_0x5d387e(0x88a)) + -parseInt(_0x5d387e(0x193)) + parseInt(_0x5d387e(0xaef));
               if (_0x2f2e16 === _0x5a222d)
                    break;
               else
                    _0xfd40a0['push'](_0xfd40a0['shift']());
          } catch (_0x458ae9) {
               _0xfd40a0['push'](_0xfd40a0['shift']());
          }
     }
}(_0xafab, 0xd132b),
     !function (_0xe79497, _0x1d386b) {
          const _0x2c52ab = _0x5e91;
          'object' == typeof exports && _0x2c52ab(0x211) != typeof module ? _0x1d386b(exports) : _0x2c52ab(0x1a2) == typeof define && define[_0x2c52ab(0xcdc)] ? define(['exports'], _0x1d386b) : _0x1d386b((_0xe79497 = _0x2c52ab(0x211) != typeof globalThis ? globalThis : _0xe79497 || self)[_0x2c52ab(0x904)] = {});
     }(this, function (_0x4334da) {
          'use strict';
          const _0xc3a123 = _0x5e91;
          function _0x206fd(_0x107ac8) {
               const _0x487b91 = _0x5e91;
               this[_0x487b91(0x878)] = _0x107ac8,
                    this[_0x487b91(0x6fb)] = new Adapter[(_0x487b91(0x995))](),
                    this[_0x487b91(0xb92)] = new Adapter['PassState'](_0x107ac8),
                    this[_0x487b91(0xb92)][_0x487b91(0xcc6)] = new Adapter[(_0x487b91(0xa4f))](),
                    this[_0x487b91(0x87e)] = {
                         'isSunVisible': !0x1,
                         'isMoonVisible': !0x1,
                         'isSkyAtmosphereVisible': !0x1,
                         'isSkyBoxVisible': !0x1,
                         'isGlobalVisible': !0x0,
                         'isObjectVisible': !0x0
                    },
                    this['width'] = 0x0,
                    this[_0x487b91(0x48e)] = 0x0,
                    this[_0x487b91(0x2f1)] = void 0x0,
                    this[_0x487b91(0x425)] = void 0x0,
                    this['framebuffer'] = void 0x0,
                    this[_0x487b91(0x9c8)] = void 0x0,
                    this['rs'] = void 0x0,
                    this['depthTexture'] = void 0x0,
                    this['framebuffer'] = void 0x0,
                    this[_0x487b91(0x9b4)] = !0x1;
          }
          _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x6b9)] = function (_0x18bcd1) {
               const _0x508a7d = _0xc3a123;
               let _0x2de73a = _0x18bcd1[_0x508a7d(0x4a4)]
                    , _0x58f2d8 = _0x18bcd1['drawingBufferHeight'];
               this['framebuffer'] && this[_0x508a7d(0x65e)] === _0x2de73a && this['height'] === _0x58f2d8 || (this[_0x508a7d(0x65e)] = _0x2de73a,
                    this[_0x508a7d(0x48e)] = _0x58f2d8,
                    this['depthTexture'] = this[_0x508a7d(0x997)] && !this[_0x508a7d(0x997)][_0x508a7d(0x567)]() && this['depthTexture'][_0x508a7d(0x9bb)](),
                    this[_0x508a7d(0x997)] = new Adapter[(_0x508a7d(0x74d))]({
                         'context': _0x18bcd1,
                         'width': _0x2de73a,
                         'height': _0x58f2d8,
                         'pixelFormat': Adapter[_0x508a7d(0x4e1)][_0x508a7d(0x8a5)],
                         'pixelDatatype': Adapter[_0x508a7d(0x8a4)][_0x508a7d(0xb8c)],
                         'sampler': new Adapter[(_0x508a7d(0x568))]({
                              'wrapS': Adapter[_0x508a7d(0x7a5)]['CLAMP_TO_EDGE'],
                              'wrapT': Adapter['TextureWrap'][_0x508a7d(0x53e)],
                              'minificationFilter': Adapter[_0x508a7d(0x4ce)][_0x508a7d(0xa6d)],
                              'magnificationFilter': Adapter['TextureMagnificationFilter'][_0x508a7d(0xa6d)]
                         })
                    }),
                    this['framebuffer'] = this['framebuffer'] && !this[_0x508a7d(0x28d)][_0x508a7d(0x567)]() && this[_0x508a7d(0x28d)]['destroy'](),
                    this[_0x508a7d(0x28d)] = new Adapter[(_0x508a7d(0xb39))]({
                         'context': _0x18bcd1,
                         'colorTextures': [this[_0x508a7d(0x997)]],
                         'destroyAttachments': !0x1
                    }));
          }
               ,
               _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x970)] = function (_0x492995) {
                    const _0x51b2c0 = _0xc3a123;
                    if (this['rs'] && Adapter[_0x51b2c0(0xa4f)]['equals'](this['passState']['viewport'], this['rs'][_0x51b2c0(0xcc6)]) || (this['rs'] = Adapter[_0x51b2c0(0x259)][_0x51b2c0(0x6d8)]({
                         'viewport': this['passState'][_0x51b2c0(0xcc6)]
                    })),
                         !this['copyDepthCommand']) {
                         let _0x429078 = '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20sampler2D\x20u_depthTexture;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20varying\x20vec2\x20v_textureCoordinates;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20gl_FragColor\x20=\x20czm_packDepth(texture2D(u_depthTexture,\x20v_textureCoordinates).r);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20';
                         this[_0x51b2c0(0x2f1)] = _0x492995[_0x51b2c0(0x8e3)](_0x429078, {
                              'uniformMap': {
                                   'u_depthTexture': () => this['depthTextureToCopy']
                              },
                              'owner': this
                         });
                    }
                    this[_0x51b2c0(0x425)] || (this[_0x51b2c0(0x425)] = new Adapter[(_0x51b2c0(0x1d3))]({
                         'color': new Adapter[(_0x51b2c0(0x821))](0x0, 0x0, 0x0, 0x0),
                         'stencil': 0x0,
                         'depth': 0x1,
                         'owner': this
                    })),
                         this['copyDepthCommand'][_0x51b2c0(0x54e)] = this['rs'],
                         this[_0x51b2c0(0x2f1)][_0x51b2c0(0x28d)] = this['framebuffer'],
                         this['clearCommand'][_0x51b2c0(0x28d)] = this[_0x51b2c0(0x28d)];
               }
               ,
               _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x5ca)] = function (_0x1fcb68) {
                    const _0x244b20 = _0xc3a123;
                    this['sceneFramebuffer'][_0x244b20(0x2dc)](_0x1fcb68[_0x244b20(0x878)], _0x1fcb68[_0x244b20(0x65a)][_0x244b20(0xcc6)], _0x1fcb68[_0x244b20(0x980)]),
                         this[_0x244b20(0xb92)][_0x244b20(0x28d)] = this[_0x244b20(0x6fb)]['getFramebuffer'](),
                         Adapter[_0x244b20(0xa4f)]['clone'](_0x1fcb68['view'][_0x244b20(0xcc6)], this['passState']['viewport']);
                    let _0x234695 = _0x1fcb68[_0x244b20(0x878)];
                    return this[_0x244b20(0x6b9)](_0x234695),
                         this[_0x244b20(0x970)](_0x234695),
                         this[_0x244b20(0x425)][_0x244b20(0x32c)](_0x234695, this[_0x244b20(0xb92)]),
                         _0x1fcb68['frameState'][_0x244b20(0x2ea)][_0x244b20(0x691)] = !0x0,
                         this[_0x244b20(0x7e8)] && this[_0x244b20(0x7e8)](_0x1fcb68[_0x244b20(0x4b6)]),
                         this['passState'];
               }
               ,
               _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x8ee)] = function (_0x18f802, _0x2e1401) {
                    const _0x39972e = _0xc3a123;
                    _0x18f802[_0x39972e(0x2ea)][_0x39972e(0x988)] = !0x1,
                         _0x18f802[_0x39972e(0x2ea)][_0x39972e(0x691)] = !0x1,
                         this[_0x39972e(0x9c8)] = _0x2e1401[_0x39972e(0x28d)][_0x39972e(0x5ce)],
                         this[_0x39972e(0x2f1)] && this['copyDepthCommand']['execute'](_0x18f802[_0x39972e(0x878)], _0x2e1401),
                         this[_0x39972e(0x8b1)] && this[_0x39972e(0x8b1)](_0x18f802);
               }
               ,
               _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x61e)] = function (_0x36bba8) {
                    const _0x41512e = _0xc3a123;
                    if (!this[_0x41512e(0x9b4)])
                         return;
                    const _0xe581a8 = _0x36bba8[_0x41512e(0x4b6)];
                    _0xe581a8['commandList'][_0x41512e(0x72b)] = 0x0,
                         _0xe581a8[_0x41512e(0x2f9)] = !0x0,
                         _0x36bba8[_0x41512e(0xbf3)] = !0x1;
                    const _0x40fd39 = this[_0x41512e(0x5ca)](_0x36bba8);
                    _0x36bba8[_0x41512e(0x1b8)](),
                         _0x36bba8[_0x41512e(0xb22)](_0x40fd39, Adapter[_0x41512e(0x821)][_0x41512e(0xae0)]),
                         this[_0x41512e(0x8ee)](_0x36bba8['frameState'], _0x40fd39),
                         _0xe581a8[_0x41512e(0x2f9)] = !0x1,
                         _0x36bba8[_0x41512e(0xbf3)] = !0x0;
               }
               ,
               _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x206fd[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x2c0bf2 = _0xc3a123;
                    if (this[_0x2c0bf2(0x997)] = this[_0x2c0bf2(0x997)] && !this[_0x2c0bf2(0x997)][_0x2c0bf2(0x567)]() && this[_0x2c0bf2(0x997)][_0x2c0bf2(0x9bb)](),
                         this[_0x2c0bf2(0x28d)] = this['framebuffer'] && !this['framebuffer'][_0x2c0bf2(0x567)]() && this['framebuffer'][_0x2c0bf2(0x9bb)](),
                         this[_0x2c0bf2(0x2f1)]) {
                         let _0x2cc89d = this[_0x2c0bf2(0x2f1)]['sp'];
                         _0x2cc89d = _0x2cc89d && !_0x2cc89d['isDestroyed']() && _0x2cc89d[_0x2c0bf2(0x9bb)](),
                              this[_0x2c0bf2(0x2f1)] = void 0x0;
                    }
                    return this['clearCommand'] = void 0x0,
                         this['depthTextureToCopy'] = void 0x0,
                         this[_0x2c0bf2(0x9b4)] = !0x1,
                         Adapter[_0x2c0bf2(0x8e1)](this);
               }
               ;
          var _0xf3ba83 = _0xc3a123(0x684)
               , _0x442caf = '\x0a#ifdef\x20GL_EXT_frag_depth\x0a#extension\x20GL_EXT_frag_depth\x20:\x20enable\x0a#endif\x0auniform\x20vec4\x20uColor;\x0avarying\x20float\x20fWindowZ;\x0avoid\x20main()\x0a{\x0a#ifdef\x20GL_EXT_frag_depth\x0a\x09gl_FragDepthEXT\x20=\x20min(fWindowZ\x20*\x20gl_FragCoord.w,\x201.0);\x0a#endif\x0a\x20\x20\x20gl_FragColor\x20=\x20uColor;\x0a}'
               , _0x199682 = '\x0a\x20\x20\x20\x20attribute\x20vec4\x20aPosition;\x0a\x20\x20\x20\x20varying\x20vec4\x20vClipPos;\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vClipPos\x20=\x20czm_modelViewProjection\x20*\x20vec4(aPosition.xyz,\x201.0);\x0a\x09\x20\x20\x20\x20gl_Position\x20=\x20vClipPos;\x0a\x20\x20\x20\x20}\x0a'
               , _0x4834e2 = '#ifdef\x20GL_EXT_frag_depth\x0a#extension\x20GL_EXT_frag_depth\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a\x0auniform\x20mat4\x20uRenderTextureMatrix;\x0auniform\x20vec2\x20uTexture1_size;\x0auniform\x20sampler2D\x20uTexture1;\x0auniform\x20sampler2D\x20uDiffuseTexture;\x0auniform\x20float\x20uFeatheringScale;\x0auniform\x20vec3\x20uV3AffineX;\x0auniform\x20vec3\x20uV3AffineY;\x0a\x0avarying\x20vec4\x20vClipPos;\x0a\x0aconst\x20float\x20oldFeatureingRadius\x20=\x200.707;\x0avec4\x20feathering(vec4\x20oldColor,\x20vec2\x20texCoord){\x0a\x20\x20\x20\x20float\x20disToCenter\x20=\x20length(texCoord\x20-\x20vec2(0.5));\x0a\x20\x20\x20\x20float\x20roundRadius\x20=\x20oldFeatureingRadius\x20*\x20(1.0\x20-\x20uFeatheringScale);\x0a\x20\x20\x20\x20float\x20disToRoundBounds\x20=\x20disToCenter\x20-\x20roundRadius;\x0a\x20\x20\x20\x20float\x20featheringAlpha\x20=\x20min(1.0,\x201.0\x20-\x20disToRoundBounds\x20/\x20(oldFeatureingRadius\x20-\x20roundRadius));\x0a\x20\x20\x20\x20return\x20vec4(oldColor.rgb,\x20featheringAlpha);\x0a}\x0afloat\x20getDepth(in\x20vec4\x20depth)\x0a{\x0a\x09float\x20z_window\x20=\x20czm_unpackDepth(depth);\x0a\x09float\x20n_range\x20=\x20czm_depthRange.near;\x0a\x09float\x20f_range\x20=\x20czm_depthRange.far;\x0a\x09return\x20(2.0\x20*\x20z_window\x20-\x20n_range\x20-\x20f_range)\x20/\x20(f_range\x20-\x20n_range);\x0a}\x0a\x0afloat\x20getDepthFromShadowMap(in\x20sampler2D\x20viewShedTexture,\x20in\x20vec4\x20texCoord)\x0a{\x0a\x09vec2\x20tCoord;\x0a\x20\x20\x20\x20tCoord\x20=\x20texCoord.xy\x20*\x20uTexture1_size\x20-\x200.5;\x0a\x09float\x20x0\x20=\x20floor(tCoord.x);\x0a\x09float\x20x1\x20=\x20ceil(tCoord.x);\x0a\x09float\x20y0\x20=\x20floor(tCoord.y);\x0a\x09float\x20y1\x20=\x20ceil(tCoord.y);\x0a\x09vec2\x20invTexSize\x20=\x201.0\x20/\x20uTexture1_size;\x0a\x09vec2\x20t00\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t10\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t01\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t11\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09float\x20z00\x20=\x20getDepth(texture2D(uTexture1,\x20t00));\x0a\x09float\x20z10\x20=\x20getDepth(texture2D(uTexture1,\x20t01));\x0a\x09float\x20z01\x20=\x20getDepth(texture2D(uTexture1,\x20t10));\x0a\x09float\x20z11\x20=\x20getDepth(texture2D(uTexture1,\x20t11));\x0a\x09float\x20depth\x20=\x20max(max(z00,\x20z01),\x20max(z10,\x20z11));\x0a\x09return\x20depth;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20//czm_writeDepthClamp();\x0a\x09vec4\x20depthTexCoord\x20=\x20vClipPos\x20/\x20vClipPos.w;\x0a\x09depthTexCoord.xy\x20=\x20depthTexCoord.xy\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20sceneDepth\x20=\x20czm_unpackDepth(texture2D(czm_globeDepthTexture,\x20depthTexCoord.xy));\x0a\x09sceneDepth\x20=\x20czm_reverseLogDepth(sceneDepth);\x0a\x09sceneDepth\x20=\x20sceneDepth\x20*\x202.0\x20-\x201.0;\x0a\x09vec4\x20pos\x20=\x20vClipPos;\x0a\x09pos.z\x20=\x20sceneDepth\x20*\x20pos.w;\x0a\x09vec4\x20viewPos\x20=\x20czm_inverseProjection\x20*\x20pos;\x0a\x09vec4\x20renderTextureCoord\x20=\x20uRenderTextureMatrix\x20*\x20viewPos;\x0a\x09vec4\x20texCoord\x20=\x20renderTextureCoord\x20/\x20renderTextureCoord.w;\x0a\x09texCoord.xyz\x20=\x20texCoord.xyz\x20*\x200.5\x20+\x200.5;\x0a\x09if(texCoord.x\x20<\x200.0\x20||\x20texCoord.x\x20>\x201.0\x20||\x20texCoord.y\x20<\x200.0\x20||\x20texCoord.y\x20>\x201.0)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x09float\x20depth\x20=\x20getDepthFromShadowMap(uTexture1,\x20texCoord);\x0a\x09depth\x20=\x20depth\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20dxc\x20=\x20abs(dFdx(texCoord.z));\x0a\x09float\x20dyc\x20=\x20abs(dFdy(texCoord.z));\x0a\x09float\x20dF\x20=\x20max(dxc,\x20dyc)\x20*\x203.0;\x0a\x09float\x20bias\x20=\x201.0e-6\x20+\x20dF;\x0a\x09if(depth\x20+\x200.00002\x20<\x20texCoord.z)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x09vec2\x20finalTexCoord\x20=\x20texCoord.xy;\x0a\x20\x20\x20\x20texCoord.x\x20=\x20uV3AffineX.x\x20*\x20finalTexCoord.x\x20+\x20uV3AffineX.y\x20*\x20finalTexCoord.y\x20+\x20uV3AffineX.z;\x0a\x20\x20\x20\x20texCoord.y\x20=\x20uV3AffineY.x\x20*\x20finalTexCoord.x\x20+\x20uV3AffineY.y\x20*\x20finalTexCoord.y\x20+\x20uV3AffineY.z;\x0a\x20\x20\x20\x20if(texCoord.x\x20>\x201.0\x20||\x20texCoord.y\x20>\x201.0\x20||\x20texCoord.x\x20<\x200.0\x20||\x20texCoord.y\x20<\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x09gl_FragColor\x20=\x20texture2D(uDiffuseTexture,\x20texCoord.xy);\x0a\x09gl_FragColor\x20=\x20feathering(gl_FragColor,\x20texCoord.xy);\x0a\x09//gl_FragColor.rgb\x20=\x20czm_adjustColor(gl_FragColor.rgb);\x0a}';
          const _0x3b804e = Adapter[_0xc3a123(0x336)];
          function _0x7bff14() { }
          _0x7bff14[_0xc3a123(0x45d)] = function (_0x5e245c, _0x2b8154, _0x5bca73) {
               const _0x116859 = _0xc3a123;
               var _0x3fb91f = [];
               if (_0x5e245c[_0x116859(0x45d)])
                    _0x3fb91f = _0x5e245c[_0x116859(0x45d)](_0x2b8154, _0x5bca73);
               else {
                    for (var _0x3b7e2b, _0x980b79, _0x2a8351 = _0x5e245c[_0x116859(0xbb0)]('*'), _0x2434a8 = 0x0, _0x18b56d = _0x2a8351[_0x116859(0x72b)]; _0x2434a8 < _0x18b56d; ++_0x2434a8)
                         _0x980b79 = (_0x3b7e2b = _0x2a8351[_0x2434a8])['prefix'] ? _0x3b7e2b[_0x116859(0x9a8)] + ':' + _0x5bca73 : _0x5bca73,
                              '*' !== _0x5bca73 && _0x980b79 !== _0x3b7e2b[_0x116859(0xbaf)] || '*' !== _0x2b8154 && _0x2b8154 !== _0x3b7e2b['namespaceURI'] || _0x3fb91f[_0x116859(0x63e)](_0x3b7e2b);
               }
               return _0x3fb91f;
          }
               ,
               _0x7bff14['getAttributeNodeNS'] = function (_0x316713, _0x40c593, _0x322c91) {
                    const _0x3600c5 = _0xc3a123;
                    var _0x107967 = null;
                    if (_0x316713[_0x3600c5(0x93f)])
                         _0x107967 = _0x316713[_0x3600c5(0x93f)](_0x40c593, _0x322c91);
                    else {
                         for (var _0x34d298, _0x3d581c = _0x316713[_0x3600c5(0x732)], _0x487cbe = 0x0, _0x643f13 = _0x3d581c[_0x3600c5(0x72b)]; _0x487cbe < _0x643f13; ++_0x487cbe)
                              if ((_0x34d298 = _0x3d581c[_0x487cbe])[_0x3600c5(0xabd)] === _0x40c593 && (_0x34d298[_0x3600c5(0x9a8)] ? _0x34d298['prefix'] + ':' + _0x322c91 : _0x322c91) === _0x34d298['nodeName']) {
                                   _0x107967 = _0x34d298;
                                   break;
                              }
                    }
                    return _0x107967;
               }
               ,
               _0x7bff14[_0xc3a123(0xaf1)] = function (_0x1acc8c, _0x4bae1b) {
                    const _0x432af6 = _0xc3a123;
                    var _0x321b92 = _0x4bae1b || '';
                    if (_0x1acc8c) {
                         for (var _0x573cc0 = _0x1acc8c[_0x432af6(0xc09)]; _0x573cc0; _0x573cc0 = _0x573cc0[_0x432af6(0x8c1)])
                              switch (_0x573cc0['nodeType']) {
                                   case 0x3:
                                   case 0x4:
                                        _0x321b92 += _0x573cc0[_0x432af6(0x67f)];
                              }
                    }
                    return _0x321b92;
               }
               ,
               _0x7bff14['queryNumericAttribute'] = function (_0x166778, _0x3b12b7) {
                    const _0x259827 = _0xc3a123;
                    if (_0x3b804e(_0x166778)) {
                         var _0x1df2b0 = _0x166778[_0x259827(0x855)](_0x3b12b7);
                         if (null !== _0x1df2b0) {
                              var _0x175d6e = parseFloat(_0x1df2b0);
                              return isNaN(_0x175d6e) ? void 0x0 : _0x175d6e;
                         }
                    }
               }
               ,
               _0x7bff14['queryStringAttribute'] = function (_0x252f2e, _0x163352) {
                    const _0x49d938 = _0xc3a123;
                    if (_0x3b804e(_0x252f2e)) {
                         var _0x33f0f6 = _0x252f2e[_0x49d938(0x855)](_0x163352);
                         return null !== _0x33f0f6 ? _0x33f0f6 : void 0x0;
                    }
               }
               ,
               _0x7bff14[_0xc3a123(0x8cc)] = function (_0x2ae7a1, _0x384574) {
                    const _0x54378b = _0xc3a123;
                    if (_0x3b804e(_0x2ae7a1)) {
                         var _0x6fcab6 = _0x2ae7a1[_0x54378b(0x855)](_0x384574);
                         return _0x54378b(0x2d8) !== (_0x6fcab6 = _0x6fcab6[_0x54378b(0x91c)]()) && (_0x54378b(0xd0c) === _0x6fcab6 || void 0x0);
                    }
               }
               ,
               _0x7bff14['queryFirstNode'] = function (_0x514c93, _0x1efcc5, _0x12b938) {
                    const _0x27bc46 = _0xc3a123;
                    if (_0x3b804e(_0x514c93))
                         for (var _0x213282 = _0x514c93[_0x27bc46(0xd85)], _0xa26e3b = _0x213282[_0x27bc46(0x72b)], _0x5ee344 = 0x0; _0x5ee344 < _0xa26e3b; _0x5ee344++) {
                              var _0x475201 = _0x213282[_0x5ee344];
                              if (_0x12b938) {
                                   if (_0x475201[_0x27bc46(0x28f)] === _0x1efcc5 && -0x1 !== _0x12b938['indexOf'](_0x475201['namespaceURI']))
                                        return _0x475201;
                              } else {
                                   if (_0x475201[_0x27bc46(0x28f)] === _0x1efcc5)
                                        return _0x475201;
                              }
                         }
               }
               ,
               _0x7bff14[_0xc3a123(0x978)] = function (_0x3d464d, _0x38f7c3, _0x48772c) {
                    const _0xf80a0d = _0xc3a123;
                    if (_0x3b804e(_0x3d464d)) {
                         for (var _0x1fc1a0 = [], _0x92422 = _0x7bff14['getElementsByTagNameNS'](_0x3d464d, '*', _0x38f7c3), _0x2036d2 = _0x92422[_0xf80a0d(0x72b)], _0x1f76db = 0x0; _0x1f76db < _0x2036d2; _0x1f76db++) {
                              var _0x4c3193 = _0x92422[_0x1f76db];
                              _0x48772c ? _0x4c3193[_0xf80a0d(0x28f)] === _0x38f7c3 && -0x1 !== _0x48772c[_0xf80a0d(0xcef)](_0x4c3193[_0xf80a0d(0xabd)]) && _0x1fc1a0['push'](_0x4c3193) : _0x4c3193[_0xf80a0d(0x28f)] === _0x38f7c3 && _0x1fc1a0[_0xf80a0d(0x63e)](_0x4c3193);
                         }
                         return _0x1fc1a0;
                    }
               }
               ,
               _0x7bff14[_0xc3a123(0x6c3)] = function (_0x5bbe31, _0x3d553d, _0x3c54db) {
                    const _0x3675e4 = _0xc3a123;
                    if (!_0x3b804e(_0x5bbe31))
                         return [];
                    for (var _0x1da8be = [], _0x4cc14e = _0x5bbe31[_0x3675e4(0xd85)], _0x3ddead = _0x4cc14e[_0x3675e4(0x72b)], _0x255e3d = 0x0; _0x255e3d < _0x3ddead; _0x255e3d++) {
                         var _0x3aa571 = _0x4cc14e[_0x255e3d];
                         _0x3c54db ? _0x3aa571['localName'] === _0x3d553d && -0x1 !== _0x3c54db[_0x3675e4(0xcef)](_0x3aa571['namespaceURI']) && _0x1da8be[_0x3675e4(0x63e)](_0x3aa571) : _0x3aa571[_0x3675e4(0x28f)] === _0x3d553d && _0x1da8be[_0x3675e4(0x63e)](_0x3aa571);
                    }
                    return _0x1da8be;
               }
               ,
               _0x7bff14['queryNumericValue'] = function (_0x3c22cb, _0x1f233a, _0x5eb350) {
                    const _0x1a979e = _0xc3a123;
                    var _0x288f7d = _0x7bff14[_0x1a979e(0xd4c)](_0x3c22cb, _0x1f233a, _0x5eb350);
                    if (_0x3b804e(_0x288f7d)) {
                         var _0x254d0f = parseFloat(_0x288f7d[_0x1a979e(0x615)]);
                         return isNaN(_0x254d0f) ? void 0x0 : _0x254d0f;
                    }
               }
               ,
               _0x7bff14[_0xc3a123(0x7b3)] = function (_0x22be34, _0x4942b4, _0x553902) {
                    const _0x337fbb = _0xc3a123;
                    var _0x2d91dd = _0x7bff14[_0x337fbb(0xd4c)](_0x22be34, _0x4942b4, _0x553902);
                    if (_0x3b804e(_0x2d91dd))
                         return _0x2d91dd['textContent'][_0x337fbb(0x5bb)]();
               }
               ,
               _0x7bff14['queryBooleanValue'] = function (_0x51ae16, _0x198ed9, _0x383f60) {
                    const _0x1a6577 = _0xc3a123;
                    var _0x596a41 = _0x7bff14[_0x1a6577(0xd4c)](_0x51ae16, _0x198ed9, _0x383f60);
                    if (_0x3b804e(_0x596a41)) {
                         var _0x55813f = _0x596a41[_0x1a6577(0x615)]['trim']();
                         return '1' === _0x55813f || /^true$/i['test'](_0x55813f);
                    }
               }
               ;
          const _0x45fba3 = Adapter['BoundingSphere']
               , _0x185c29 = Adapter[_0xc3a123(0x1b7)]
               , _0x2c03df = Adapter[_0xc3a123(0x25b)]
               , _0x359593 = Adapter[_0xc3a123(0xce9)]
               , _0x3713c4 = Adapter['Color']
               , _0xe7f11 = Adapter[_0xc3a123(0x5fa)]
               , _0x3c0f70 = Adapter[_0xc3a123(0x336)]
               , _0xade623 = Adapter[_0xc3a123(0x4d9)]
               , _0x154dc5 = Adapter[_0xc3a123(0x8e1)]
               , _0x4c001c = Adapter[_0xc3a123(0x610)]
               , _0x52a8a4 = Adapter[_0xc3a123(0x36b)]
               , _0x41bbc8 = Adapter[_0xc3a123(0x417)]
               , _0x49d9d1 = Adapter[_0xc3a123(0xcdf)]
               , _0x1d09bf = Adapter[_0xc3a123(0xa6c)]
               , _0x2ab36d = Adapter['Check']
               , _0x4d1162 = Adapter[_0xc3a123(0x9cb)]
               , _0x1cbf57 = Adapter['Rectangle']
               , _0x15df98 = Adapter[_0xc3a123(0x449)]
               , _0x3fb3fb = Adapter[_0xc3a123(0x6ca)]
               , _0x391eac = Adapter[_0xc3a123(0xd8a)]
               , _0x21b402 = Adapter[_0xc3a123(0xd3c)]
               , _0x2bfa89 = Adapter[_0xc3a123(0xbd0)]
               , _0x32da3 = Adapter[_0xc3a123(0x2f8)]
               , _0x4bc796 = Adapter[_0xc3a123(0x259)]
               , _0x3e064f = Adapter[_0xc3a123(0x74d)]
               , _0x118b40 = Adapter['ShaderProgram']
               , _0x18a9b3 = Adapter['VertexArray']
               , _0x474a2d = Adapter[_0xc3a123(0x62f)]
               , _0x36a12d = Adapter[_0xc3a123(0x75d)]
               , _0xe6f66a = Adapter[_0xc3a123(0xa7f)]
               , _0x4125e0 = Adapter[_0xc3a123(0x753)]
               , _0x2a21ae = Adapter[_0xc3a123(0xbac)]
               , _0x1ba635 = Adapter[_0xc3a123(0x98b)]
               , _0x5731d6 = Adapter['Resource'];
          function _0x23de54(_0x1fb415) {
               const _0x595ac6 = _0xc3a123;
               if (!_0x3c0f70(_0x1fb415))
                    throw new _0x4c001c(_0x595ac6(0x40c));
               if (!_0x1fb415['context'][_0x595ac6(0x997)])
                    throw new _0x4c001c(_0x595ac6(0x860));
               this[_0x595ac6(0x2b4)] = _0x1fb415,
                    this[_0x595ac6(0x1e3)] = void 0x0,
                    this[_0x595ac6(0x2ae)] = void 0x0,
                    this[_0x595ac6(0xc3d)] = void 0x0,
                    this[_0x595ac6(0x232)] = void 0x0,
                    this[_0x595ac6(0x50f)] = new _0x45fba3(),
                    this[_0x595ac6(0x27e)] = [0x0, 0x0, 0x0],
                    this[_0x595ac6(0xaa3)] = 0x0,
                    this[_0x595ac6(0xd9a)] = 0x0,
                    this[_0x595ac6(0x9c3)] = 0x0,
                    this[_0x595ac6(0xa37)] = 0x5a,
                    this[_0x595ac6(0xbe8)] = 0x3c,
                    this[_0x595ac6(0x95c)] = 0xc8,
                    this[_0x595ac6(0x9c5)] = new _0x3713c4(0x1, 0x1, 0x1, 0x1),
                    this[_0x595ac6(0x883)] = !0x0,
                    this['_texture'] = void 0x0,
                    this[_0x595ac6(0xaff)] = 0x14,
                    this[_0x595ac6(0x2f6)] = new _0x49d9d1(),
                    this['_viewProjMatrix'] = new _0x49d9d1(),
                    this[_0x595ac6(0x862)] = new _0x49d9d1(),
                    this[_0x595ac6(0xc8f)] = !0x0,
                    this[_0x595ac6(0x658)] = void 0x0,
                    this[_0x595ac6(0xc94)] = 0x1,
                    this[_0x595ac6(0x50d)] = 0x1,
                    this[_0x595ac6(0xc01)] = 0x0,
                    this[_0x595ac6(0x662)] = 0x1,
                    this[_0x595ac6(0x8d7)] = 0x1,
                    this[_0x595ac6(0x7da)] = 0x0,
                    this['_v3AffineX'] = new _0x2c03df(0x1, 0x0, 0x0),
                    this[_0x595ac6(0x7c0)] = new _0x2c03df(0x0, 0x1, 0x0),
                    this['_visible'] = !0x0,
                    this[_0x595ac6(0x7d3)] = 0x1f4,
                    this['isBuild'] = !0x1;
          }
          function _0xf1c0d0(_0xfd0c36) {
               const _0x415f32 = _0xc3a123;
               _0x3c0f70(_0xfd0c36[_0x415f32(0xc3d)]) && (_0xfd0c36[_0x415f32(0xc3d)][_0x415f32(0x896)] = _0xfd0c36['_stencilCommand'][_0x415f32(0x896)] && _0xfd0c36[_0x415f32(0xc3d)][_0x415f32(0x896)]['destroy'](),
                    _0xfd0c36[_0x415f32(0xc3d)][_0x415f32(0x940)] = _0xfd0c36['_stencilCommand'][_0x415f32(0x940)] && _0xfd0c36[_0x415f32(0xc3d)][_0x415f32(0x940)][_0x415f32(0x9bb)](),
                    _0xfd0c36[_0x415f32(0xc3d)] = void 0x0),
                    _0x3c0f70(_0xfd0c36[_0x415f32(0x232)]) && (_0xfd0c36['_colorCommand'][_0x415f32(0x896)] = _0xfd0c36[_0x415f32(0x232)][_0x415f32(0x896)] && _0xfd0c36['_colorCommand'][_0x415f32(0x896)][_0x415f32(0x9bb)](),
                         _0xfd0c36[_0x415f32(0x232)]['shaderProgram'] = _0xfd0c36[_0x415f32(0x232)][_0x415f32(0x940)] && _0xfd0c36[_0x415f32(0x232)][_0x415f32(0x940)][_0x415f32(0x9bb)](),
                         _0xfd0c36[_0x415f32(0x232)] = void 0x0),
                    _0x3c0f70(_0xfd0c36[_0x415f32(0x2ae)]) && (_0xfd0c36[_0x415f32(0x2ae)][_0x415f32(0x896)] = _0xfd0c36[_0x415f32(0x2ae)][_0x415f32(0x896)] && _0xfd0c36[_0x415f32(0x2ae)][_0x415f32(0x896)][_0x415f32(0x9bb)](),
                         _0xfd0c36['_lineCommand'][_0x415f32(0x940)] = _0xfd0c36[_0x415f32(0x2ae)][_0x415f32(0x940)] && _0xfd0c36[_0x415f32(0x2ae)][_0x415f32(0x940)][_0x415f32(0x9bb)](),
                         _0xfd0c36['_lineCommand'] = void 0x0);
          }
          function _0x461920(_0x128ab5, _0x3153b5, _0x17fbf2) {
               const _0x1c599e = _0xc3a123
                    , _0x3c3869 = _0x128ab5[_0x1c599e(0xa37)] * _0x41bbc8[_0x1c599e(0x89b)]
                    , _0x1889dc = _0x128ab5[_0x1c599e(0xbe8)] * _0x41bbc8[_0x1c599e(0x89b)]
                    , _0x504d3a = Math['tan'](0.5 * _0x3c3869) / Math[_0x1c599e(0x3c1)](0.5 * _0x1889dc);
               _0x128ab5[_0x1c599e(0x95c)];
               const _0x55e22a = Math[_0x1c599e(0x590)](_0x128ab5['_distance'], 0xa)
                    , _0xb4b905 = _0x128ab5['_direction'] * _0x41bbc8[_0x1c599e(0x89b)]
                    , _0x3a9aa0 = _0x128ab5[_0x1c599e(0xd9a)] * _0x41bbc8[_0x1c599e(0x89b)]
                    , _0x5b5840 = _0x128ab5['_roll'] * _0x41bbc8['RADIANS_PER_DEGREE']
                    , _0x44045b = _0x2c03df[_0x1c599e(0x7ac)](_0x128ab5[_0x1c599e(0x27e)])[0x0]
                    , _0x407e92 = _0x17fbf2[_0x1c599e(0xc97)]
                    , _0x24992b = _0x407e92[_0x1c599e(0x8a1)]['aspectRatio']
                    , _0x5e8380 = _0x407e92['frustum'][_0x1c599e(0x4c4)]
                    , _0x3894b9 = _0x407e92['frustum']['near']
                    , _0x33cfdc = _0x407e92[_0x1c599e(0x8a1)][_0x1c599e(0xba6)]
                    , _0x8ad415 = new _0x2c03df()
                    , _0x5f11d4 = _0x407e92[_0x1c599e(0xcca)]
                    , _0x4f83b7 = _0x407e92[_0x1c599e(0x929)]
                    , _0x2b8c7c = _0x407e92[_0x1c599e(0x8f0)];
               _0x2c03df[_0x1c599e(0x432)](_0x407e92[_0x1c599e(0x5a4)], _0x8ad415),
                    _0x128ab5[_0x1c599e(0x1e3)][_0x1c599e(0x9b4)] = !0x0;
               const _0x390e47 = _0x17fbf2['useLogDepth'];
               _0x128ab5[_0x1c599e(0x1e3)][_0x1c599e(0x7e8)] = function () {
                    const _0x2f2e85 = _0x1c599e;
                    _0x17fbf2[_0x2f2e85(0x399)] = !0x1,
                         _0x2c03df[_0x2f2e85(0x432)](_0x407e92[_0x2f2e85(0x5a4)], _0x8ad415),
                         _0x407e92[_0x2f2e85(0x8a1)][_0x2f2e85(0x3e3)] = _0x504d3a,
                         _0x407e92[_0x2f2e85(0x8a1)][_0x2f2e85(0x4c4)] = _0x504d3a >= 0x1 ? _0x3c3869 : _0x1889dc,
                         _0x407e92['frustum'][_0x2f2e85(0x3ae)] = 0x1,
                         _0x407e92[_0x2f2e85(0x8a1)][_0x2f2e85(0xba6)] = _0x55e22a,
                         _0x390e47 && (_0x407e92[_0x2f2e85(0x8a1)]['near'] = 0.1,
                              _0x407e92[_0x2f2e85(0x8a1)][_0x2f2e85(0xba6)] = 0x5f5e100),
                         _0x407e92[_0x2f2e85(0xc69)]({
                              'destination': _0x44045b,
                              'orientation': {
                                   'heading': _0xb4b905,
                                   'pitch': _0x3a9aa0,
                                   'roll': _0x5b5840
                              }
                         }),
                         _0x49d9d1['multiply'](_0x407e92[_0x2f2e85(0x8a1)][_0x2f2e85(0x74a)], _0x407e92['viewMatrix'], _0x128ab5['_viewProjMatrix']),
                         _0x49d9d1[_0x2f2e85(0x432)](_0x407e92[_0x2f2e85(0xabf)], _0x128ab5[_0x2f2e85(0x2f6)]),
                         _0x2c03df[_0x2f2e85(0x432)](_0x2c03df['ZERO'], _0x128ab5[_0x2f2e85(0x50f)][_0x2f2e85(0xa41)]),
                         _0x128ab5['_boundingSphere'][_0x2f2e85(0x38b)] = _0x128ab5[_0x2f2e85(0x95c)],
                         _0x45fba3[_0x2f2e85(0x335)](_0x128ab5['_boundingSphere'], _0x128ab5[_0x2f2e85(0x2f6)], _0x128ab5[_0x2f2e85(0x50f)]);
               }
                    ,
                    _0x128ab5['_cameraDepthBuffer'][_0x1c599e(0x8b1)] = function () {
                         const _0x443a40 = _0x1c599e;
                         _0x407e92[_0x443a40(0xc69)]({
                              'destination': _0x8ad415,
                              'orientation': {
                                   'heading': _0x5f11d4,
                                   'pitch': _0x4f83b7,
                                   'roll': _0x2b8c7c
                              },
                              'convert': !0x1
                         }),
                              _0x407e92[_0x443a40(0x8a1)][_0x443a40(0x3e3)] = _0x24992b,
                              _0x407e92[_0x443a40(0x8a1)]['fov'] = _0x5e8380,
                              _0x407e92[_0x443a40(0x8a1)][_0x443a40(0x3ae)] = _0x3894b9,
                              _0x407e92[_0x443a40(0x8a1)][_0x443a40(0xba6)] = _0x33cfdc,
                              _0x17fbf2[_0x443a40(0x399)] = _0x390e47,
                              _0x128ab5[_0x443a40(0x1e3)][_0x443a40(0x9b4)] = !0x1;
                    }
                    ;
          }
          function _0x45f09e(_0x164502, _0x562cf6, _0x3b6424) {
               const _0x191c3b = _0xc3a123
                    , _0x423d8f = (_0x164502['_segmentCount'] + 0x1) * (_0x164502[_0x191c3b(0xaff)] + 0x1) + 0x1
                    , _0x5f052e = _0xe7f11[_0x191c3b(0x8bc)](_0xe7f11[_0x191c3b(0xa80)], 0x3 * _0x423d8f);
               let _0x3273b8 = 0x3;
               const _0x417d9e = _0x164502[_0x191c3b(0xa37)] * _0x41bbc8[_0x191c3b(0x89b)]
                    , _0x563916 = _0x164502['_verticalFov'] * _0x41bbc8[_0x191c3b(0x89b)]
                    , _0x202079 = (Math[_0x191c3b(0x3c1)](0.5 * _0x417d9e),
                         Math['tan'](0.5 * _0x563916));
               _0x164502[_0x191c3b(0x95c)];
               const _0x2e1820 = _0x164502[_0x191c3b(0x95c)] * _0x202079
                    , _0x58c896 = Math['PI'] - 0.5 * _0x417d9e;
               let _0x585bde = 0x0
                    , _0x3db5bd = 0x0
                    , _0x528863 = _0x417d9e / _0x164502[_0x191c3b(0xaff)];
               for (let _0x2b00d4 = 0x0; _0x2b00d4 < _0x164502[_0x191c3b(0xaff)] + 0x1; _0x2b00d4++) {
                    _0x585bde = _0x58c896 + _0x2b00d4 * _0x528863;
                    const _0x1305bd = _0x2e1820 / (_0x164502['_distance'] / Math['cos'](_0x585bde))
                         , _0x2e675b = Math[_0x191c3b(0x5af)](_0x1305bd)
                         , _0x210fb1 = -_0x2e675b
                         , _0x28439b = 0x2 * _0x2e675b / _0x164502[_0x191c3b(0xaff)];
                    for (let _0x505180 = 0x0; _0x505180 < _0x164502[_0x191c3b(0xaff)] + 0x1; _0x505180++)
                         _0x3db5bd = _0x210fb1 + _0x505180 * _0x28439b,
                              _0x5f052e[_0x3273b8++] = _0x164502[_0x191c3b(0x95c)] * Math['cos'](_0x3db5bd) * Math[_0x191c3b(0xa86)](_0x585bde),
                              _0x5f052e[_0x3273b8++] = _0x164502[_0x191c3b(0x95c)] * Math[_0x191c3b(0xa86)](_0x3db5bd),
                              _0x5f052e[_0x3273b8++] = _0x164502[_0x191c3b(0x95c)] * Math['cos'](_0x3db5bd) * Math[_0x191c3b(0x2c7)](_0x585bde);
               }
               const _0x14ae11 = 0x2 * (0x4 + 0x5 * _0x164502[_0x191c3b(0xaff)] + 0x2 * _0x164502[_0x191c3b(0xaff)] * 0x3)
                    , _0x38efcd = _0x164502[_0x191c3b(0xaff)] * _0x164502['_segmentCount'] * 0x3 * 0x2 + 0x3 * _0x164502['_segmentCount'] * 0x4
                    , _0x5125a2 = _0xe7f11[_0x191c3b(0x8bc)](_0xe7f11[_0x191c3b(0x744)], _0x14ae11)
                    , _0x3f8910 = _0xe7f11['createTypedArray'](_0xe7f11['UNSIGNED_SHORT'], _0x38efcd);
               let _0x271e1a = 0x0;
               for (let _0x28fcb5 = 0x0; _0x28fcb5 < _0x164502[_0x191c3b(0xaff)]; _0x28fcb5++)
                    for (let _0x1c84ea = 0x0; _0x1c84ea < _0x164502[_0x191c3b(0xaff)]; _0x1c84ea++)
                         _0x3f8910[_0x271e1a++] = 0x1 + _0x28fcb5 + _0x1c84ea * (_0x164502[_0x191c3b(0xaff)] + 0x1),
                              _0x3f8910[_0x271e1a++] = 0x1 + _0x28fcb5 + 0x1 + _0x1c84ea * (_0x164502[_0x191c3b(0xaff)] + 0x1),
                              _0x3f8910[_0x271e1a++] = 0x1 + _0x28fcb5 + (_0x1c84ea + 0x1) * (_0x164502['_segmentCount'] + 0x1),
                              _0x3f8910[_0x271e1a++] = 0x1 + _0x28fcb5 + 0x1 + _0x1c84ea * (_0x164502['_segmentCount'] + 0x1),
                              _0x3f8910[_0x271e1a++] = 0x1 + _0x28fcb5 + 0x1 + (_0x1c84ea + 0x1) * (_0x164502[_0x191c3b(0xaff)] + 0x1),
                              _0x3f8910[_0x271e1a++] = 0x1 + _0x28fcb5 + (_0x1c84ea + 0x1) * (_0x164502[_0x191c3b(0xaff)] + 0x1);
               for (let _0x4f0fdf = 0x0; _0x4f0fdf < _0x164502[_0x191c3b(0xaff)]; _0x4f0fdf++)
                    _0x3f8910[_0x271e1a++] = _0x4f0fdf + 0x1 + 0x1,
                         _0x3f8910[_0x271e1a++] = _0x4f0fdf + 0x1,
                         _0x3f8910[_0x271e1a++] = 0x0,
                         _0x3f8910[_0x271e1a++] = 0x0,
                         _0x3f8910[_0x271e1a++] = _0x4f0fdf + _0x164502[_0x191c3b(0xaff)] * (_0x164502[_0x191c3b(0xaff)] + 0x1) + 0x1,
                         _0x3f8910[_0x271e1a++] = _0x4f0fdf + 0x1 + _0x164502[_0x191c3b(0xaff)] * (_0x164502[_0x191c3b(0xaff)] + 0x1) + 0x1;
               for (let _0x20de88 = 0x0; _0x20de88 < _0x164502[_0x191c3b(0xaff)]; _0x20de88++)
                    _0x3f8910[_0x271e1a++] = 0x0,
                         _0x3f8910[_0x271e1a++] = _0x20de88 * (_0x164502['_segmentCount'] + 0x1) + 0x1,
                         _0x3f8910[_0x271e1a++] = (_0x20de88 + 0x1) * (_0x164502['_segmentCount'] + 0x1) + 0x1,
                         _0x3f8910[_0x271e1a++] = _0x164502['_segmentCount'] + (_0x20de88 + 0x1) * (_0x164502[_0x191c3b(0xaff)] + 0x1) + 0x1,
                         _0x3f8910[_0x271e1a++] = _0x164502[_0x191c3b(0xaff)] + _0x20de88 * (_0x164502[_0x191c3b(0xaff)] + 0x1) + 0x1,
                         _0x3f8910[_0x271e1a++] = 0x0;
               _0x271e1a = 0x0,
                    _0x5125a2[_0x271e1a++] = 0x0,
                    _0x5125a2[_0x271e1a++] = 0x1,
                    _0x5125a2[_0x271e1a++] = 0x0,
                    _0x5125a2[_0x271e1a++] = _0x164502[_0x191c3b(0xaff)] + 0x1,
                    _0x5125a2[_0x271e1a++] = 0x0,
                    _0x5125a2[_0x271e1a++] = _0x164502[_0x191c3b(0xaff)] * (_0x164502[_0x191c3b(0xaff)] + 0x1) + 0x1,
                    _0x5125a2[_0x271e1a++] = 0x0,
                    _0x5125a2[_0x271e1a++] = (_0x164502[_0x191c3b(0xaff)] + 0x1) * (_0x164502[_0x191c3b(0xaff)] + 0x1);
               for (let _0x112da5 = 0x0; _0x112da5 < 0x5; _0x112da5++)
                    for (let _0x2f45bd = 0x0; _0x2f45bd < _0x164502[_0x191c3b(0xaff)]; _0x2f45bd++)
                         _0x5125a2[_0x271e1a++] = 0x1 + _0x2f45bd + 0x5 * (_0x164502['_segmentCount'] + 0x1) * _0x112da5,
                              _0x5125a2[_0x271e1a++] = 0x1 + (_0x2f45bd + 0x1) + 0x5 * (_0x164502[_0x191c3b(0xaff)] + 0x1) * _0x112da5;
               for (let _0x8e23cc = 0x0; _0x8e23cc < 0x5; _0x8e23cc++)
                    for (let _0x27656a = 0x0; _0x27656a < _0x164502[_0x191c3b(0xaff)]; _0x27656a++)
                         _0x5125a2[_0x271e1a++] = 0x1 + (_0x164502[_0x191c3b(0xaff)] + 0x1) * _0x27656a + 0x5 * _0x8e23cc,
                              _0x5125a2[_0x271e1a++] = 0x1 + (_0x164502[_0x191c3b(0xaff)] + 0x1) * (_0x27656a + 0x1) + 0x5 * _0x8e23cc;
               const _0x2b4d01 = _0x21b402[_0x191c3b(0x856)]({
                    'context': _0x562cf6,
                    'typedArray': _0x5f052e,
                    'usage': _0x2bfa89[_0x191c3b(0x78f)]
               })
                    , _0x4f200c = []
                    , _0x1685f7 = {
                         'aPosition': 0x0
                    };
               _0x4f200c[_0x191c3b(0x63e)]({
                    'index': _0x1685f7[_0x191c3b(0x5e2)],
                    'vertexBuffer': _0x2b4d01,
                    'componentsPerAttribute': 0x3,
                    'componentDatatype': _0xe7f11['FLOAT'],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0xc,
                    'normalize': !0x1
               });
               const _0x5b69fd = _0x21b402[_0x191c3b(0x8c0)]({
                    'context': _0x562cf6,
                    'typedArray': _0x5125a2,
                    'usage': _0x2bfa89['STATIC_DRAW'],
                    'indexDatatype': _0x52a8a4[_0x191c3b(0x744)]
               })
                    , _0x49c6e3 = _0x21b402[_0x191c3b(0x8c0)]({
                         'context': _0x562cf6,
                         'typedArray': _0x3f8910,
                         'usage': _0x2bfa89[_0x191c3b(0x78f)],
                         'indexDatatype': _0x52a8a4[_0x191c3b(0x744)]
                    });
               _0x164502[_0x191c3b(0x2ae)] = new _0x32da3({
                    'primitiveType': _0x1d09bf[_0x191c3b(0x1e2)],
                    'modelMatrix': _0x164502[_0x191c3b(0x2f6)],
                    'boundingVolume': _0x164502[_0x191c3b(0x50f)],
                    'pass': _0x391eac[_0x191c3b(0x3d7)],
                    'owner': _0x164502,
                    'cull': !0x0
               }),
                    _0x164502[_0x191c3b(0x2ae)]['vertexArray'] = new _0x18a9b3({
                         'context': _0x562cf6,
                         'attributes': _0x4f200c,
                         'indexBuffer': _0x5b69fd
                    }),
                    _0x164502[_0x191c3b(0x2ae)][_0x191c3b(0x940)] = _0x118b40[_0x191c3b(0x6d8)]({
                         'context': _0x562cf6,
                         'vertexShaderSource': _0xf3ba83,
                         'fragmentShaderSource': _0x442caf,
                         'attributeLocations': _0x1685f7
                    }),
                    _0x164502[_0x191c3b(0x2ae)][_0x191c3b(0x54e)] = _0x4bc796[_0x191c3b(0x6d8)]({
                         'cull': {
                              'enabled': !0x1
                         },
                         'depthTest': {
                              'enabled': !0x0
                         }
                    });
               const _0x2f74e9 = [];
               for (let _0x141bdb = 0x0; _0x141bdb < 0x6; _0x141bdb++)
                    _0x2f74e9[_0x141bdb] = new _0x359593(0x0, 0x0, 0x0, 0x0);
               _0x164502[_0x191c3b(0x2ae)][_0x191c3b(0x7b8)] = {
                    'uDiffuseColor': function () {
                         const _0x447dbe = _0x191c3b;
                         return _0x164502[_0x447dbe(0x9c5)];
                    },
                    'clip_mode': function () {
                         return 0x0;
                    },
                    'clip_planes': function () {
                         return _0x2f74e9;
                    },
                    'clip_line_color': function () {
                         const _0x2f9128 = _0x191c3b;
                         return _0x359593[_0x2f9128(0x22b)];
                    }
               },
                    _0x164502['_stencilCommand'] = new _0x32da3({
                         'primitiveType': _0x1d09bf['TRIANGLES'],
                         'modelMatrix': _0x164502[_0x191c3b(0x2f6)],
                         'boundingVolume': _0x164502[_0x191c3b(0x50f)],
                         'pass': _0x391eac[_0x191c3b(0x3d7)],
                         'owner': _0x164502,
                         'cull': !0x0
                    }),
                    _0x164502[_0x191c3b(0xc3d)][_0x191c3b(0x896)] = new _0x18a9b3({
                         'context': _0x562cf6,
                         'attributes': _0x4f200c,
                         'indexBuffer': _0x49c6e3
                    }),
                    _0x164502[_0x191c3b(0xc3d)][_0x191c3b(0x940)] = _0x118b40[_0x191c3b(0x6d8)]({
                         'context': _0x562cf6,
                         'vertexShaderSource': _0xf3ba83,
                         'fragmentShaderSource': _0x442caf,
                         'attributeLocations': _0x1685f7
                    });
               let _0x57cd7c = {
                    'enabled': !0x0,
                    'frontFunction': _0x2a21ae[_0x191c3b(0xd7e)],
                    'frontOperation': {
                         'fail': _0x4125e0[_0x191c3b(0x3aa)],
                         'zFail': _0x4125e0[_0x191c3b(0x3aa)],
                         'zPass': _0x4125e0[_0x191c3b(0x7a6)]
                    },
                    'backFunction': _0x2a21ae[_0x191c3b(0xd7e)],
                    'backOperation': {
                         'fail': _0x4125e0[_0x191c3b(0x3aa)],
                         'zFail': _0x4125e0[_0x191c3b(0x3aa)],
                         'zPass': _0x4125e0[_0x191c3b(0x819)]
                    },
                    'reference': 0x0,
                    'mask': -0x1
               };
               _0x164502[_0x191c3b(0xc3d)][_0x191c3b(0x54e)] = _0x4bc796[_0x191c3b(0x6d8)]({
                    'depthMask': !0x1,
                    'colorMask': {
                         'red': !0x1,
                         'green': !0x1,
                         'blue': !0x1,
                         'alpha': !0x1
                    },
                    'depthTest': {
                         'enabled': !0x0,
                         'func': _0x1ba635[_0x191c3b(0x18a)]
                    },
                    'stencilTest': _0x57cd7c,
                    'stencilMask': 0x1
               }),
                    _0x164502[_0x191c3b(0xc3d)]['uniformMap'] = {
                         'uColor': function () {
                              const _0x6dd086 = _0x191c3b;
                              return _0x3713c4[_0x6dd086(0x1cd)];
                         }
                    },
                    _0x164502[_0x191c3b(0x232)] = new _0x32da3({
                         'primitiveType': _0x1d09bf[_0x191c3b(0x415)],
                         'modelMatrix': _0x164502[_0x191c3b(0x2f6)],
                         'boundingVolume': _0x164502[_0x191c3b(0x50f)],
                         'pass': _0x391eac[_0x191c3b(0x3d7)],
                         'owner': _0x164502,
                         'cull': !0x0
                    }),
                    _0x164502[_0x191c3b(0x232)][_0x191c3b(0x896)] = new _0x18a9b3({
                         'context': _0x562cf6,
                         'attributes': _0x4f200c,
                         'indexBuffer': _0x49c6e3
                    });
               const _0x5854ce = new _0x474a2d({
                    'name': _0x191c3b(0x204),
                    'sources': [_0x199682]
               });
               _0x164502[_0x191c3b(0x232)][_0x191c3b(0x940)] = _0x118b40[_0x191c3b(0x6d8)]({
                    'context': _0x562cf6,
                    'vertexShaderSource': _0x5854ce,
                    'fragmentShaderSource': _0x4834e2,
                    'attributeLocations': _0x1685f7
               }),
                    _0x57cd7c = {
                         'enabled': !0x0,
                         'frontFunction': _0x2a21ae[_0x191c3b(0x61d)],
                         'frontOperation': {
                              'fail': _0x4125e0[_0x191c3b(0x3aa)],
                              'zFail': _0x4125e0['KEEP'],
                              'zPass': _0x4125e0['DECREMENT_WRAP']
                         },
                         'backFunction': _0x2a21ae[_0x191c3b(0x61d)],
                         'backOperation': {
                              'fail': _0x4125e0['KEEP'],
                              'zFail': _0x4125e0[_0x191c3b(0x3aa)],
                              'zPass': _0x4125e0[_0x191c3b(0x819)]
                         },
                         'reference': 0x0,
                         'mask': -0x1
                    },
                    _0x164502['_colorCommand']['renderState'] = _0x4bc796[_0x191c3b(0x6d8)]({
                         'cull': {
                              'enabled': !0x1
                         },
                         'depthTest': {
                              'enabled': !0x1
                         },
                         'depthMask': !0x1,
                         'stencilTest': _0x57cd7c,
                         'blending': _0x36a12d[_0x191c3b(0x276)]
                    }),
                    _0x164502[_0x191c3b(0x232)][_0x191c3b(0x7b8)] = {
                         'uRenderTextureMatrix': function () {
                              const _0x9c1fa0 = _0x191c3b;
                              return _0x164502[_0x9c1fa0(0x862)];
                         },
                         'uTexture1_size': function () {
                              const _0x411d79 = _0x191c3b
                                   , _0x531c0a = _0x164502[_0x411d79(0x1e3)][_0x411d79(0x997)];
                              return new _0x185c29(_0x531c0a[_0x411d79(0x65e)], _0x531c0a[_0x411d79(0x48e)]);
                         },
                         'uTexture1': function () {
                              const _0xaa5ec1 = _0x191c3b;
                              return _0x164502[_0xaa5ec1(0x1e3)][_0xaa5ec1(0x997)];
                         },
                         'uDiffuseTexture': function () {
                              return _0x164502['_texture'];
                         },
                         'uBrightness': function () {
                              const _0x17ff90 = _0x191c3b;
                              return _0x164502[_0x17ff90(0xc94)];
                         },
                         'uContrast': function () {
                              return _0x164502['_contrast'];
                         },
                         'uHue': function () {
                              const _0x52742a = _0x191c3b;
                              return _0x164502[_0x52742a(0xc01)];
                         },
                         'uSaturation': function () {
                              const _0x3d4e5e = _0x191c3b;
                              return _0x164502[_0x3d4e5e(0x662)];
                         },
                         'uOneOverGamma': function () {
                              const _0x38628f = _0x191c3b;
                              return 0x1 / _0x164502[_0x38628f(0x8d7)];
                         },
                         'uFeatheringScale': function () {
                              const _0x1ced85 = _0x191c3b;
                              return _0x164502[_0x1ced85(0x7da)];
                         },
                         'uV3AffineX': function () {
                              const _0x26e23a = _0x191c3b;
                              return _0x164502[_0x26e23a(0x60e)];
                         },
                         'uV3AffineY': function () {
                              return _0x164502['_v3AffineY'];
                         }
                    };
          }
          function _0x438581(_0x33e2fe, _0x1d01cf, _0x547b9b) {
               const _0x18cfea = _0xc3a123;
               if (_0x2c03df[_0x18cfea(0x3dd)](_0x33e2fe[_0x18cfea(0xdbc)], _0x1d01cf[_0x18cfea(0xa41)]) > _0x547b9b)
                    return !0x0;
               return _0x33e2fe['frustum'][_0x18cfea(0x6cb)](_0x33e2fe['positionWC'], _0x33e2fe['directionWC'], _0x33e2fe['upWC'])[_0x18cfea(0x19b)](_0x1d01cf) === _0x15df98[_0x18cfea(0xd0d)];
          }
          function _0x2fa618(_0x2cdaef) {
               const _0x53481e = _0xc3a123
                    , _0x501762 = _0x7bff14['queryStringValue'](_0x2cdaef, _0x53481e(0xc5e))
                    , _0xe46753 = _0x7bff14['queryFirstNode'](_0x2cdaef, _0x53481e(0x621))
                    , _0x309e13 = _0x7bff14[_0x53481e(0x2cd)](_0xe46753, 'Horizontal')
                    , _0xb527e9 = _0x7bff14[_0x53481e(0x2cd)](_0xe46753, 'Vertical')
                    , _0x4c4d40 = _0x7bff14['queryNumericValue'](_0x2cdaef, _0x53481e(0xa42))
                    , _0x39bd9a = _0x7bff14['queryNumericValue'](_0x2cdaef, 'Heading')
                    , _0x1e59ee = _0x7bff14[_0x53481e(0x2cd)](_0x2cdaef, 'Pitch')
                    , _0x551dd0 = _0x7bff14[_0x53481e(0x2cd)](_0x2cdaef, _0x53481e(0x485))
                    , _0x5bb063 = _0x7bff14[_0x53481e(0xd4c)](_0x2cdaef, _0x53481e(0x839))
                    , _0x429eb4 = [0x0, 0x0, 0x0];
               _0x429eb4[0x0] = _0x7bff14[_0x53481e(0x2cd)](_0x5bb063, 'X'),
                    _0x429eb4[0x1] = _0x7bff14['queryNumericValue'](_0x5bb063, 'Y'),
                    _0x429eb4[0x2] = _0x7bff14[_0x53481e(0x2cd)](_0x5bb063, 'Z');
               const _0x246f07 = _0x7bff14[_0x53481e(0xd4c)](_0x2cdaef, _0x53481e(0xb87))
                    , _0x3f4c95 = _0x7bff14['queryStringValue'](_0x246f07, 'U')
                    , _0x5642b2 = _0x7bff14[_0x53481e(0x7b3)](_0x246f07, 'V');
               _0x7bff14[_0x53481e(0x7b3)](_0x246f07, 'W');
               const _0x3a0ef4 = _0x3f4c95['split'](',')
                    , _0x5c567d = new _0x2c03df(parseFloat(_0x3a0ef4[0x0]), parseFloat(_0x3a0ef4[0x1]), parseFloat(_0x3a0ef4[0x2]))
                    , _0x1a7dcf = _0x5642b2['split'](',')
                    , _0x320225 = new _0x2c03df(parseFloat(_0x1a7dcf[0x0]), parseFloat(_0x1a7dcf[0x1]), parseFloat(_0x1a7dcf[0x2]))
                    , _0x32fba5 = _0x7bff14[_0x53481e(0xd4c)](_0x2cdaef, _0x53481e(0x51d));
               let _0x56b8f6;
               if (_0x32fba5) {
                    const _0xa9d7b7 = _0x41bbc8[_0x53481e(0xb7f)](_0x7bff14[_0x53481e(0x2cd)](_0x32fba5, _0x53481e(0x327)))
                         , _0x229c08 = _0x41bbc8[_0x53481e(0xb7f)](_0x7bff14[_0x53481e(0x2cd)](_0x32fba5, _0x53481e(0xc27)))
                         , _0x1ddb64 = _0x41bbc8[_0x53481e(0xb7f)](_0x7bff14[_0x53481e(0x2cd)](_0x32fba5, _0x53481e(0xbb1)))
                         , _0x2a155d = _0x41bbc8['toRadians'](_0x7bff14[_0x53481e(0x2cd)](_0x32fba5, _0x53481e(0x321)))
                         , _0x168143 = new _0x1cbf57(_0xa9d7b7, _0x2a155d, _0x1ddb64, _0x229c08);
                    let _0x37654e = _0x4c4d40 * Math[_0x53481e(0x2c7)](_0x41bbc8[_0x53481e(0xb7f)](_0x1e59ee));
                    _0x37654e = _0x1e59ee < 0x0 ? -_0x37654e : _0x37654e;
                    const _0x2370bf = _0x429eb4[0x2] + _0x37654e;
                    _0x56b8f6 = _0x45fba3[_0x53481e(0xa75)](_0x168143, void 0x0, _0x2370bf);
               }
               return {
                    'videoName': _0x501762,
                    'viewPosition': _0x429eb4,
                    'heading': _0x39bd9a,
                    'pitch': _0x1e59ee,
                    'roll': _0x551dd0,
                    'horizontalFov': _0x309e13,
                    'verticalFov': _0xb527e9,
                    'matrixU': _0x5c567d,
                    'matrixV': _0x320225,
                    'distance': _0x4c4d40,
                    'boundingSphere': _0x56b8f6
               };
          }
          function _0x559a06(_0x19a504, _0x29dffa) {
               const _0x18f106 = _0xc3a123;
               let _0x28e2ce = document[_0x18f106(0xc49)](_0x18f106(0x97f));
               _0x3c0f70(_0x28e2ce) || (_0x28e2ce = document[_0x18f106(0xd69)]('div'),
                    _0x28e2ce[_0x18f106(0x6c5)]('id', 'projection-image'),
                    document[_0x18f106(0xb6e)]['appendChild'](_0x28e2ce));
               const _0x593174 = document[_0x18f106(0xd69)](_0x18f106(0xcfc));
               return _0x593174['style'] = _0x18f106(0xc48),
                    _0x593174['setAttribute']('width', '320'),
                    _0x593174[_0x18f106(0x6c5)](_0x18f106(0x48e), _0x18f106(0xc44)),
                    _0x593174[_0x18f106(0x6c5)]('autoplay', 'autoplay'),
                    _0x593174[_0x18f106(0x6c5)]('loop', 'loop'),
                    _0x593174['setAttribute'](_0x18f106(0x77d), _0x18f106(0x77d)),
                    _0x593174[_0x18f106(0x6c5)](_0x18f106(0xaa4), _0x19a504),
                    _0x593174[_0x18f106(0x6c5)]('id', _0x18f106(0x342) + _0x29dffa),
                    _0x28e2ce[_0x18f106(0x99b)](_0x593174),
                    _0x593174;
          }
          Object[_0xc3a123(0xcde)](_0x23de54[_0xc3a123(0x2d4)], {
               'viewPosition': {
                    'get': function () {
                         const _0x4519cd = _0xc3a123;
                         return this[_0x4519cd(0x27e)];
                    },
                    'set': function (_0x3af08a) {
                         const _0x43524b = _0xc3a123;
                         this[_0x43524b(0x27e)] = _0x3af08a,
                              this[_0x43524b(0xc8f)] = !0x0;
                    }
               },
               'direction': {
                    'get': function () {
                         const _0x210b19 = _0xc3a123;
                         return this[_0x210b19(0xaa3)];
                    },
                    'set': function (_0x1c07de) {
                         const _0x3fd0bb = _0xc3a123;
                         this[_0x3fd0bb(0xaa3)] = _0x1c07de,
                              this[_0x3fd0bb(0xc8f)] = !0x0;
                    }
               },
               'pitch': {
                    'get': function () {
                         const _0x1cf842 = _0xc3a123;
                         return this[_0x1cf842(0xd9a)];
                    },
                    'set': function (_0x144638) {
                         const _0xcd4424 = _0xc3a123;
                         this['_pitch'] = _0x144638,
                              this[_0xcd4424(0xc8f)] = !0x0;
                    }
               },
               'roll': {
                    'get': function () {
                         return this['_roll'];
                    },
                    'set': function (_0x1152e7) {
                         const _0x16a9f6 = _0xc3a123;
                         this[_0x16a9f6(0x9c3)] = _0x1152e7,
                              this[_0x16a9f6(0xc8f)] = !0x0;
                    }
               },
               'horizontalFov': {
                    'get': function () {
                         const _0x134a33 = _0xc3a123;
                         return this[_0x134a33(0xa37)];
                    },
                    'set': function (_0x220473) {
                         const _0x27aa7a = _0xc3a123;
                         this[_0x27aa7a(0xa37)] = _0x220473,
                              this[_0x27aa7a(0xc8f)] = !0x0;
                    }
               },
               'verticalFov': {
                    'get': function () {
                         const _0x21565c = _0xc3a123;
                         return this[_0x21565c(0xbe8)];
                    },
                    'set': function (_0x7c788b) {
                         const _0x402a0c = _0xc3a123;
                         this[_0x402a0c(0xbe8)] = _0x7c788b,
                              this[_0x402a0c(0xc8f)] = !0x0;
                    }
               },
               'distance': {
                    'get': function () {
                         const _0x32e5c7 = _0xc3a123;
                         return this[_0x32e5c7(0x95c)];
                    },
                    'set': function (_0x8ace67) {
                         const _0x2b48fb = _0xc3a123;
                         if (_0x8ace67 <= 0x0)
                              throw new _0x4c001c(_0x2b48fb(0x522));
                         this[_0x2b48fb(0x95c)] = _0x8ace67,
                              this[_0x2b48fb(0xc8f)] = !0x0;
                    }
               },
               'featheringScale': {
                    'get': function () {
                         return this['_featheringScale'];
                    },
                    'set': function (_0x702d9d) {
                         const _0x4ac9e1 = _0xc3a123;
                         if (_0x702d9d < 0x0 || _0x702d9d > 0x1)
                              throw new _0x4c001c(_0x4ac9e1(0x464));
                         this[_0x4ac9e1(0x7da)] = _0x702d9d;
                    }
               },
               'hintLineColor': {
                    'get': function () {
                         return this['_hintLineColor'];
                    },
                    'set': function (_0x1c9719) {
                         const _0x457af5 = _0xc3a123;
                         _0x3c0f70(_0x1c9719) && (this[_0x457af5(0x9c5)] = _0x3713c4[_0x457af5(0x432)](_0x1c9719, this[_0x457af5(0x9c5)]));
                    }
               },
               'hintLineVisible': {
                    'get': function () {
                         const _0x491841 = _0xc3a123;
                         return this[_0x491841(0x883)];
                    },
                    'set': function (_0xd5ab2c) {
                         const _0x371de = _0xc3a123;
                         this[_0x371de(0x883)] = _0xd5ab2c;
                    }
               },
               'brightness': {
                    'get': function () {
                         const _0x3be4e1 = _0xc3a123;
                         return this[_0x3be4e1(0xc94)];
                    },
                    'set': function (_0x1d20cf) {
                         const _0x5e923e = _0xc3a123;
                         _0x2ab36d['typeOf'][_0x5e923e(0x6f6)][_0x5e923e(0x8c7)](_0x5e923e(0x52c), _0x1d20cf, 0x0),
                              this[_0x5e923e(0xc94)] = _0x1d20cf;
                    }
               },
               'contrast': {
                    'get': function () {
                         return this['_contrast'];
                    },
                    'set': function (_0x4f6342) {
                         const _0x3d4b2c = _0xc3a123;
                         _0x2ab36d[_0x3d4b2c(0x6f5)][_0x3d4b2c(0x6f6)][_0x3d4b2c(0x8c7)](_0x3d4b2c(0x3b5), _0x4f6342, 0x0),
                              this['_contrast'] = _0x4f6342;
                    }
               },
               'hue': {
                    'get': function () {
                         const _0x1a7f97 = _0xc3a123;
                         return this[_0x1a7f97(0xc01)];
                    },
                    'set': function (_0x32d916) {
                         const _0x23d84e = _0xc3a123;
                         _0x2ab36d['typeOf']['number'][_0x23d84e(0x8c7)](_0x23d84e(0x4be), _0x32d916, 0x0),
                              this[_0x23d84e(0xc01)] = _0x32d916;
                    }
               },
               'saturation': {
                    'get': function () {
                         const _0x56ea04 = _0xc3a123;
                         return this[_0x56ea04(0x662)];
                    },
                    'set': function (_0x35ada5) {
                         const _0x3a450f = _0xc3a123;
                         _0x2ab36d[_0x3a450f(0x6f5)]['number'][_0x3a450f(0x8c7)](_0x3a450f(0x53a), _0x35ada5, 0x0),
                              this[_0x3a450f(0x662)] = _0x35ada5;
                    }
               },
               'gamma': {
                    'get': function () {
                         const _0x56ff46 = _0xc3a123;
                         return this[_0x56ff46(0x8d7)];
                    },
                    'set': function (_0x3da811) {
                         const _0x4d8671 = _0xc3a123;
                         _0x2ab36d['typeOf'][_0x4d8671(0x6f6)][_0x4d8671(0xb93)](_0x4d8671(0x7e6), _0x3da811, 0x0),
                              this[_0x4d8671(0x8d7)] = _0x3da811;
                    }
               },
               'visible': {
                    'get': function () {
                         const _0x36df73 = _0xc3a123;
                         return this[_0x36df73(0x693)];
                    },
                    'set': function (_0x148139) {
                         const _0x30fe85 = _0xc3a123;
                         _0x2ab36d[_0x30fe85(0x6f5)][_0x30fe85(0x880)](_0x30fe85(0x7f8), _0x148139),
                              this[_0x30fe85(0x693)] = _0x148139;
                    }
               },
               'visibleDistanceMax': {
                    'get': function () {
                         const _0x5b6abc = _0xc3a123;
                         return this[_0x5b6abc(0x7d3)];
                    },
                    'set': function (_0x4886fe) {
                         const _0x57d0c4 = _0xc3a123;
                         _0x2ab36d[_0x57d0c4(0x6f5)][_0x57d0c4(0x6f6)](_0x57d0c4(0x2bd), _0x4886fe),
                              this['_visibleDistanceMax'] = _0x4886fe;
                    }
               }
          }),
               _0x23de54[_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x245205) {
                    const _0x5065b6 = _0xc3a123
                         , _0xb75279 = _0x245205[_0x5065b6(0x878)]
                         , _0xc53cba = _0x245205[_0x5065b6(0x7c3)]
                         , _0x34ff1a = _0x245205['camera'];
                    _0x245205[_0x5065b6(0x2f9)] || !this[_0x5065b6(0x693)] || _0x34ff1a['bReflect'] || _0x3c0f70(this['_boundingSphereFromXML']) && _0x438581(_0x34ff1a, this[_0x5065b6(0xa04)], this[_0x5065b6(0x7d3)]) || 0x0 !== this[_0x5065b6(0x50f)][_0x5065b6(0x38b)] && !this[_0x5065b6(0xc8f)] && _0x438581(_0x34ff1a, this['_boundingSphere'], this[_0x5065b6(0x7d3)]) || (_0x49d9d1[_0x5065b6(0x59d)](this[_0x5065b6(0xa18)], _0x34ff1a['inverseViewMatrix'], this[_0x5065b6(0x862)]),
                         _0x3c0f70(this[_0x5065b6(0x658)]) && this[_0x5065b6(0x658)][_0x5065b6(0x6bd)] >= 0x2 && (_0x3c0f70(this[_0x5065b6(0x213)]) ? this[_0x5065b6(0x213)][_0x5065b6(0xb2b)](this[_0x5065b6(0x658)]) : this[_0x5065b6(0x213)] = new _0x3e064f({
                              'context': _0xb75279,
                              'source': this['_video']
                         })),
                         _0x3c0f70(this[_0x5065b6(0x213)]) && (this[_0x5065b6(0x2b4)],
                              this[_0x5065b6(0xc8f)] && (_0x3c0f70(this[_0x5065b6(0x1e3)]) || (this['_cameraDepthBuffer'] = new _0x206fd(_0xb75279)),
                                   this[_0x5065b6(0xc8f)] = !0x1,
                                   _0xf1c0d0(this),
                                   _0x461920(this, 0x0, _0x245205),
                                   _0x45f09e(this, _0xb75279)),
                              _0x3c0f70(this[_0x5065b6(0x1e3)][_0x5065b6(0x997)]) && (_0x3c0f70(this[_0x5065b6(0xc3d)]) && _0xc53cba[_0x5065b6(0x63e)](this[_0x5065b6(0xc3d)]),
                                   _0x3c0f70(this['_colorCommand']) && _0xc53cba['push'](this[_0x5065b6(0x232)]),
                                   _0x3c0f70(this[_0x5065b6(0x2ae)]) && this[_0x5065b6(0x883)])));
               }
               ,
               _0x23de54[_0xc3a123(0x2d4)][_0xc3a123(0x683)] = function (_0x12665b) {
                    const _0x1a08d3 = _0xc3a123;
                    if (!_0x3c0f70(_0x12665b))
                         throw new _0x4c001c(_0x1a08d3(0xb11));
                    if (!_0x3c0f70(_0x12665b[_0x1a08d3(0x29f)]) && !_0x3c0f70(_0x12665b['video']) && !_0x3c0f70(_0x12665b[_0x1a08d3(0x79b)]))
                         throw new _0x4c001c('options.url\x20or\x20options.video\x20or\x20options.image\x20are\x20required.');
                    if (_0x3c0f70(_0x12665b[_0x1a08d3(0x29f)])) {
                         const _0x21fa50 = _0x5731d6['createIfNeeded'](_0x12665b[_0x1a08d3(0x29f)])
                              , _0x1a5ff4 = this;
                         _0x21fa50[_0x1a08d3(0x8e6)]()[_0x1a08d3(0x7db)](_0x103b30 => {
                              const _0x2ffc83 = _0x1a08d3;
                              _0x3c0f70(_0x1a5ff4[_0x2ffc83(0x213)]) && _0x1a5ff4[_0x2ffc83(0x213)][_0x2ffc83(0x9bb)](),
                                   _0x1a5ff4[_0x2ffc83(0x213)] = new _0x3e064f({
                                        'context': _0x1a5ff4['scene'][_0x2ffc83(0xabe)],
                                        'source': _0x103b30
                                   });
                         }
                         );
                    } else
                         _0x3c0f70(_0x12665b[_0x1a08d3(0x79b)]) ? _0x3c0f70(this[_0x1a08d3(0x213)]) ? this['_texture'][_0x1a08d3(0xb2b)](_0x12665b[_0x1a08d3(0x79b)]) : this[_0x1a08d3(0x213)] = new _0x3e064f({
                              'context': this[_0x1a08d3(0x2b4)]['_context'],
                              'source': _0x12665b[_0x1a08d3(0x79b)]
                         }) : this[_0x1a08d3(0x658)] = _0x12665b[_0x1a08d3(0xcfc)];
               }
               ,
               _0x23de54[_0xc3a123(0x2d4)][_0xc3a123(0x3f0)] = function (_0x147c69) {
                    const _0x29a0eb = _0xc3a123;
                    if (_0x147c69[0x0] === this[_0x29a0eb(0x27e)][0x0] && _0x147c69[0x1] === this['_viewPosition'][0x1] && _0x147c69[0x2] === this['_viewPosition'][0x2])
                         throw new _0x4c001c('the\x20position\x20is\x20[longitude,\x20latitude\x20,height]\x20and\x20is\x20not\x20equals\x20viewPosition');
                    const _0x1a0092 = this[_0x29a0eb(0x2b4)][_0x29a0eb(0xc97)]
                         , _0x489baa = _0x1a0092['_projection'];
                    let _0x23dd25, _0x114484;
                    if (this[_0x29a0eb(0x2b4)][_0x29a0eb(0xac9)] === _0xe6f66a[_0x29a0eb(0xa65)])
                         _0x23dd25 = _0x2c03df['fromDegreesArrayHeights'](_0x147c69)[0x0],
                              _0x114484 = _0x2c03df[_0x29a0eb(0x7ac)](this['_viewPosition'])[0x0];
                    else {
                         const _0x5d150b = _0x3fb3fb[_0x29a0eb(0xd78)](_0x147c69[0x0], _0x147c69[0x1], _0x147c69[0x2]);
                         _0x23dd25 = _0x489baa[_0x29a0eb(0x488)](_0x5d150b, new _0x2c03df());
                         const _0x720be5 = _0x3fb3fb[_0x29a0eb(0xd78)](this[_0x29a0eb(0x27e)][0x0], this[_0x29a0eb(0x27e)][0x1], this[_0x29a0eb(0x27e)][0x2]);
                         _0x114484 = _0x489baa[_0x29a0eb(0x488)](_0x720be5, new _0x2c03df());
                    }
                    const _0x3cc365 = new _0x2c03df();
                    _0x2c03df[_0x29a0eb(0x60c)](_0x23dd25, _0x114484, _0x3cc365);
                    const _0x550834 = _0x2c03df[_0x29a0eb(0x869)](_0x3cc365);
                    _0x2c03df[_0x29a0eb(0x579)](_0x3cc365, _0x3cc365),
                         this[_0x29a0eb(0x3dd)] = _0x550834;
                    const _0x1e0155 = _0x1a0092[_0x29a0eb(0xcca)]
                         , _0x5095c7 = _0x1a0092[_0x29a0eb(0x929)]
                         , _0x26562d = _0x1a0092['roll']
                         , _0x1e5175 = new _0x2c03df();
                    _0x2c03df[_0x29a0eb(0x432)](_0x1a0092['position'], _0x1e5175);
                    const _0x38bd2d = _0x3cc365[_0x29a0eb(0x432)]();
                    let _0x3acae6 = _0x114484[_0x29a0eb(0x432)]();
                    _0x3acae6 = _0x2c03df[_0x29a0eb(0x579)](_0x3acae6, _0x3acae6),
                         Math[_0x29a0eb(0xbd6)](_0x2c03df[_0x29a0eb(0xd06)](_0x3acae6, _0x38bd2d)) >= 0x1 && (_0x3acae6 = Math['abs'](_0x2c03df['dot'](_0x38bd2d, _0x2c03df['UNIT_Y'])) < 0x1 ? _0x2c03df[_0x29a0eb(0x432)](_0x2c03df[_0x29a0eb(0xaa1)], _0x3acae6) : _0x2c03df[_0x29a0eb(0x432)](_0x2c03df['UNIT_Z'], _0x3acae6));
                    let _0x4985d8 = new _0x2c03df();
                    _0x2c03df[_0x29a0eb(0x765)](_0x3acae6, _0x38bd2d, _0x4985d8),
                         _0x4985d8 = _0x2c03df[_0x29a0eb(0x579)](_0x4985d8, _0x4985d8),
                         _0x2c03df[_0x29a0eb(0x765)](_0x38bd2d, _0x4985d8, _0x3acae6),
                         _0x3acae6 = _0x2c03df[_0x29a0eb(0x579)](_0x3acae6, _0x3acae6),
                         _0x1a0092[_0x29a0eb(0xc69)]({
                              'destination': _0x114484,
                              'orientation': {
                                   'direction': _0x38bd2d,
                                   'up': _0x3acae6
                              },
                              'convert': !0x1
                         }),
                         this['direction'] = _0x1a0092[_0x29a0eb(0xcca)] * _0x41bbc8[_0x29a0eb(0xb76)],
                         this[_0x29a0eb(0x929)] = _0x1a0092[_0x29a0eb(0x929)] * _0x41bbc8[_0x29a0eb(0xb76)],
                         _0x1a0092[_0x29a0eb(0xc69)]({
                              'destination': _0x1e5175,
                              'orientation': {
                                   'heading': _0x1e0155,
                                   'pitch': _0x5095c7,
                                   'roll': _0x26562d
                              },
                              'convert': !0x1
                         });
               }
               ,
               _0x23de54[_0xc3a123(0x2d4)][_0xc3a123(0xcec)] = function (_0x250921) {
                    const _0x39eb82 = _0xc3a123;
                    if (!_0x3c0f70(_0x250921))
                         throw new _0x4c001c(_0x39eb82(0xa84));
                    const _0x572564 = this;
                    return _0x5731d6['createIfNeeded'](_0x250921)[_0x39eb82(0x891)]()['then'](function (_0x5af83f) {
                         const _0xae81c9 = _0x39eb82
                              , _0x41ce25 = _0x2fa618(_0x5af83f[_0xae81c9(0xc09)]);
                         _0x572564[_0xae81c9(0x608)] = _0x41ce25[_0xae81c9(0xcca)],
                              _0x572564[_0xae81c9(0x929)] = _0xade623(_0x41ce25['pitch'], _0x572564[_0xae81c9(0x929)]),
                              _0x572564[_0xae81c9(0x9c3)] = _0xade623(_0x41ce25[_0xae81c9(0x8f0)], _0x572564[_0xae81c9(0x9c3)]),
                              _0x572564[_0xae81c9(0x76f)] = _0x41ce25[_0xae81c9(0x76f)],
                              _0x572564[_0xae81c9(0x88e)] = _0x41ce25[_0xae81c9(0x88e)],
                              _0x2c03df['clone'](_0x41ce25[_0xae81c9(0x8ca)], _0x572564['_v3AffineX']),
                              _0x2c03df['clone'](_0x41ce25['matrixV'], _0x572564[_0xae81c9(0x7c0)]),
                              _0x572564['distance'] = _0x41ce25[_0xae81c9(0x3dd)],
                              _0x572564['viewPosition'] = _0x41ce25[_0xae81c9(0x4e4)],
                              _0x572564[_0xae81c9(0xa04)] = _0x41ce25[_0xae81c9(0xa01)];
                    }, _0xb1a118 => {
                         const _0x2d661f = _0x39eb82;
                         console[_0x2d661f(0x749)](_0xb1a118);
                    }
                    );
               }
               ,
               _0x23de54[_0xc3a123(0x8af)] = function (_0x3f7624, _0x15b9ae, _0x43b5f5) {
                    const _0x15b347 = _0xc3a123;
                    if (!_0x3c0f70(_0x3f7624))
                         throw new _0x4c001c('No\x20scene\x20provided.');
                    if (!_0x3c0f70(_0x15b9ae))
                         throw new _0x4c001c(_0x15b347(0xa84));
                    return _0x5731d6[_0x15b347(0x773)](_0x15b9ae)[_0x15b347(0x891)]()['then'](function (_0x2116df) {
                         const _0x2f960f = _0x15b347
                              , _0x2db7d4 = {}
                              , _0x2a0a9d = _0x2116df[_0x2f960f(0xc09)];
                         for (let _0x277750 = 0x0, _0x290a51 = _0x2a0a9d[_0x2f960f(0x704)]['length']; _0x277750 < _0x290a51; _0x277750++) {
                              const _0x2bcead = _0x2fa618(_0x2a0a9d['children'][_0x277750]);
                              let _0x2a5ec7 = _0x2bcead['videoName'];
                              _0x2a5ec7 = _0x3c0f70(_0x43b5f5) ? _0x4d1162(_0x43b5f5) + _0x2bcead[_0x2f960f(0xd97)] : _0x15b9ae[_0x2f960f(0x21c)](0x0, _0x15b9ae[_0x2f960f(0x61c)]('/') + 0x1) + _0x2bcead[_0x2f960f(0xd97)];
                              const _0x293152 = new _0x23de54(_0x3f7624)
                                   , _0x4e2399 = _0x559a06(_0x2a5ec7, _0x293152[_0x2f960f(0xa7d)]);
                              _0x293152[_0x2f960f(0x4e4)] = _0x2bcead[_0x2f960f(0x4e4)],
                                   _0x293152[_0x2f960f(0x608)] = _0x2bcead[_0x2f960f(0xcca)],
                                   _0x293152['pitch'] = _0x2bcead['pitch'],
                                   _0x293152['horizontalFov'] = _0x2bcead[_0x2f960f(0x76f)],
                                   _0x293152[_0x2f960f(0x88e)] = _0x2bcead['verticalFov'],
                                   _0x2c03df[_0x2f960f(0x432)](_0x2bcead[_0x2f960f(0x8ca)], _0x293152[_0x2f960f(0x60e)]),
                                   _0x2c03df['clone'](_0x2bcead[_0x2f960f(0xbcd)], _0x293152[_0x2f960f(0x7c0)]),
                                   _0x293152[_0x2f960f(0x3dd)] = _0x2bcead[_0x2f960f(0x3dd)],
                                   _0x293152['setImage']({
                                        'video': _0x4e2399
                                   }),
                                   _0x293152[_0x2f960f(0x50f)] = XML = _0x2bcead['boundingSphere'],
                                   _0x4e2399[_0x2f960f(0xb1d)](_0x2f960f(0x9dd), function (_0x3241c4) {
                                        _0x3241c4['build']();
                                   }
                                   [_0x2f960f(0x5c4)](_0x4e2399, _0x293152)),
                                   _0x2db7d4[_0x2bcead[_0x2f960f(0xd97)]] = _0x293152;
                         }
                         return _0x2db7d4;
                    }, _0x434f7c => {
                         const _0x3529a5 = _0x15b347;
                         console[_0x3529a5(0x749)](_0x434f7c);
                    }
                    );
               }
               ,
               _0x23de54[_0xc3a123(0x2d4)]['build'] = function () {
                    const _0x4a55f4 = _0xc3a123;
                    this['isBuild'] || (this[_0x4a55f4(0x483)] = !0x0,
                         this['scene']['primitives'][_0x4a55f4(0x2ef)](this),
                         this[_0x4a55f4(0x800)] = this[_0x4a55f4(0x2b4)][_0x4a55f4(0x6d2)][_0x4a55f4(0xb1d)](_0x44e7f1 => {
                              const _0x44b9f5 = _0x4a55f4;
                              _0x3c0f70(this[_0x44b9f5(0x1e3)]) && this[_0x44b9f5(0x1e3)][_0x44b9f5(0x61e)](_0x44e7f1);
                         }
                              , this));
               }
               ,
               _0x23de54[_0xc3a123(0x2d4)]['clear'] = function () {
                    const _0x2f96a4 = _0xc3a123;
                    this[_0x2f96a4(0x483)] && (this['isBuild'] = !0x1,
                         this[_0x2f96a4(0x800)](),
                         this[_0x2f96a4(0x2b4)]['primitives'][_0x2f96a4(0xced)](this));
               }
               ,
               _0x23de54[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x381b5e = _0xc3a123
                         , _0x5a41ec = document[_0x381b5e(0xc49)](_0x381b5e(0x342) + this[_0x381b5e(0xa7d)]);
                    if (_0x5a41ec) {
                         const _0x122538 = _0x5a41ec[_0x381b5e(0x46a)];
                         _0x122538[_0x381b5e(0x6cf)](_0x5a41ec),
                              0x0 === _0x122538['children']['length'] && _0x122538[_0x381b5e(0x46a)][_0x381b5e(0x6cf)](_0x122538);
                    }
                    return this['_cameraDepthBuffer'] = this[_0x381b5e(0x1e3)] && this[_0x381b5e(0x1e3)][_0x381b5e(0x9bb)](),
                         _0xf1c0d0(this),
                         this[_0x381b5e(0x213)] = this[_0x381b5e(0x213)] && !this[_0x381b5e(0x213)][_0x381b5e(0x567)]() && this[_0x381b5e(0x213)][_0x381b5e(0x9bb)](),
                         this[_0x381b5e(0x2b4)][_0x381b5e(0xa7c)]['remove'](this),
                         _0x154dc5(this);
               }
               ;
          var _0x41179f = _0xc3a123(0xad8)
               , _0x1e9d62 = 'uniform\x20sampler2D\x20uTexture0;\x0auniform\x20vec4\x20uVisibleColor;\x0auniform\x20vec4\x20uHiddenColor;\x0avarying\x20vec4\x20renderTextureCoord;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20resultColor\x20=\x20uVisibleColor;\x0a\x20\x20\x20\x20vec4\x20texCoord\x20=\x20renderTextureCoord\x20/\x20renderTextureCoord.w;\x0a\x20\x20\x20\x20float\x20depth\x20=\x20texCoord.z\x20*\x200.5\x20+\x200.5;\x0a\x20\x20\x20\x20texCoord.xy\x20=\x20texCoord.xy\x20*\x200.5\x20+\x200.5;\x0a\x20\x20\x20\x20float\x20z_window\x20=\x20czm_unpackDepth(texture2D(uTexture0,\x20texCoord.xy));\x0a\x20\x20\x20\x20if(z_window\x20<\x20depth\x20&&\x20z_window\x20>\x200.0\x20&&\x20z_window\x20<\x201.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20resultColor\x20=\x20uHiddenColor;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20resultColor;\x0a}';
          function _0x53e342(_0x4c9c7d) {
               const _0x2947aa = _0xc3a123;
               this['scene'] = _0x4c9c7d,
                    this[_0x2947aa(0x2b7)] = void 0x0,
                    this[_0x2947aa(0x27e)] = [0x0, 0x0, 0x0],
                    this[_0x2947aa(0x628)] = new Adapter[(_0x2947aa(0x25b))](),
                    this[_0x2947aa(0x1e4)] = new Adapter[(_0x2947aa(0xc6e))](),
                    this[_0x2947aa(0xcd1)] = new Adapter[(_0x2947aa(0xc6e))](),
                    this[_0x2947aa(0xbb2)] = new Adapter['Color'](0x0, 0x1, 0x0, 0x1),
                    this[_0x2947aa(0xcf8)] = new Adapter[(_0x2947aa(0x821))](0x1, 0x0, 0x0, 0x1),
                    this['_targetPoints'] = new Adapter[(_0x2947aa(0xc6e))](),
                    this[_0x2947aa(0xd16)] = new Adapter[(_0x2947aa(0xc6e))](),
                    this[_0x2947aa(0xc8f)] = !0x1,
                    this[_0x2947aa(0x9f5)] = !0x1,
                    this[_0x2947aa(0x1ef)] = new Adapter[(_0x2947aa(0xc6e))](),
                    this['_depthBuffers'] = new Adapter['AssociativeArray'](),
                    this[_0x2947aa(0x6f3)] = new Adapter[(_0x2947aa(0xc6e))](),
                    this[_0x2947aa(0xb43)] = 0x2,
                    this['isBuild'] = !0x1;
          }
          function _0x1747aa(_0x3b41e4, _0x42231e, _0x83c7f6) {
               const _0x2a3964 = _0xc3a123
                    , _0x103180 = _0x83c7f6['camera']
                    , _0x265942 = _0x103180[_0x2a3964(0x48b)];
               let _0x29d839;
               if (_0x3b41e4[_0x2a3964(0x2b4)][_0x2a3964(0xac9)] === Adapter['SceneMode']['SCENE3D'])
                    _0x29d839 = Adapter['Cartesian3']['fromDegreesArrayHeights'](_0x3b41e4[_0x2a3964(0x27e)])[0x0];
               else {
                    const _0x608fbd = Adapter[_0x2a3964(0x6ca)]['fromDegrees'](_0x3b41e4['_viewPosition'][0x0], _0x3b41e4[_0x2a3964(0x27e)][0x1], _0x3b41e4['_viewPosition'][0x2]);
                    _0x29d839 = _0x265942[_0x2a3964(0x488)](_0x608fbd, new Adapter[(_0x2a3964(0x25b))]());
               }
               const _0x51685a = new Adapter[(_0x2a3964(0x25b))](0x0, 0x0, 0x0);
               _0x3b41e4[_0x2a3964(0xc74)][_0x2a3964(0xcc3)];
               let _0x59d74f = 0x0;
               const _0x1b4c16 = _0x3b41e4[_0x2a3964(0x852)];
               let _0x3b4515;
               if (_0x3b41e4[_0x2a3964(0x2b4)][_0x2a3964(0xac9)] === Adapter[_0x2a3964(0xa7f)]['SCENE3D'])
                    _0x3b4515 = Adapter[_0x2a3964(0x25b)][_0x2a3964(0x7ac)](_0x1b4c16)[0x0];
               else {
                    const _0x3edca0 = Adapter[_0x2a3964(0x6ca)][_0x2a3964(0xd78)](_0x1b4c16[0x0], _0x1b4c16[0x1], _0x1b4c16[0x2]);
                    _0x3b4515 = _0x265942[_0x2a3964(0x488)](_0x3edca0, new Adapter[(_0x2a3964(0x25b))]());
               }
               const _0x5382ad = new Adapter['Cartesian3']();
               Adapter[_0x2a3964(0x25b)][_0x2a3964(0x60c)](_0x3b4515, _0x29d839, _0x5382ad),
                    Adapter['Cartesian3'][_0x2a3964(0x579)](_0x5382ad, _0x5382ad),
                    Adapter[_0x2a3964(0x25b)][_0x2a3964(0x2ef)](_0x51685a, _0x5382ad, _0x51685a),
                    _0x59d74f = Math[_0x2a3964(0x590)](_0x59d74f, Adapter[_0x2a3964(0x25b)]['distance'](_0x3b4515, _0x29d839)),
                    Adapter[_0x2a3964(0x25b)][_0x2a3964(0x579)](_0x51685a, _0x51685a),
                    Adapter[_0x2a3964(0x25b)]['clone'](_0x51685a, _0x3b41e4[_0x2a3964(0x628)]);
               const _0xd65f24 = new Adapter['Cartesian3']()
                    , _0x50dd6e = new Adapter[(_0x2a3964(0x25b))]()
                    , _0x36360f = new Adapter[(_0x2a3964(0x25b))]();
               let _0xa1ada6 = _0x103180[_0x2a3964(0x8a1)][_0x2a3964(0x4c4)];
               Adapter[_0x2a3964(0x25b)]['clone'](_0x103180['position'], _0xd65f24),
                    Adapter['Cartesian3'][_0x2a3964(0x432)](_0x103180[_0x2a3964(0x608)], _0x50dd6e),
                    Adapter['Cartesian3'][_0x2a3964(0x432)](_0x103180['up'], _0x36360f);
               const _0x5b8848 = 0x2 * Adapter['Math']['PI'] / 0x3
                    , _0x3b1134 = _0x103180[_0x2a3964(0x8a1)][_0x2a3964(0x3ae)]
                    , _0x4f51a0 = _0x103180[_0x2a3964(0x8a1)][_0x2a3964(0xba6)]
                    , _0x37867c = _0x83c7f6[_0x2a3964(0x399)]
                    , _0x1338a6 = _0x3b41e4[_0x2a3964(0x902)];
               let _0x7819ad = _0x3b41e4['_depthBuffers']['get'](_0x1338a6);
               Adapter[_0x2a3964(0x336)](_0x7819ad) || (_0x7819ad = new _0x206fd(_0x42231e),
                    _0x3b41e4[_0x2a3964(0x6fd)][_0x2a3964(0x320)](_0x1338a6, _0x7819ad)),
                    _0x7819ad[_0x2a3964(0x9b4)] = !0x0,
                    _0x7819ad[_0x2a3964(0x7e8)] = () => {
                         const _0x1f480f = _0x2a3964;
                         _0x83c7f6[_0x1f480f(0x399)] = !0x1,
                              Adapter[_0x1f480f(0x25b)][_0x1f480f(0x432)](_0x103180[_0x1f480f(0x5a4)], _0xd65f24),
                              Adapter[_0x1f480f(0x25b)][_0x1f480f(0x432)](_0x103180[_0x1f480f(0x608)], _0x50dd6e),
                              Adapter[_0x1f480f(0x25b)][_0x1f480f(0x432)](_0x103180['up'], _0x36360f),
                              _0xa1ada6 = _0x103180[_0x1f480f(0x8a1)][_0x1f480f(0x4c4)],
                              _0x103180[_0x1f480f(0x8a1)][_0x1f480f(0x4c4)] = _0x5b8848;
                         const _0x25f436 = _0x51685a;
                         let _0x339fbc = new Adapter[(_0x1f480f(0x25b))]();
                         _0x339fbc = Adapter['Cartesian3'][_0x1f480f(0x432)](_0x29d839, _0x339fbc),
                              _0x339fbc = Adapter['Cartesian3'][_0x1f480f(0x579)](_0x339fbc, _0x339fbc),
                              Math[_0x1f480f(0xbd6)](Adapter['Cartesian3'][_0x1f480f(0xd06)](_0x339fbc, _0x25f436)) >= 0x1 && (_0x339fbc = Math['abs'](Adapter[_0x1f480f(0x25b)]['dot'](_0x25f436, Adapter[_0x1f480f(0x25b)][_0x1f480f(0xaa1)])) < 0x1 ? Adapter[_0x1f480f(0x25b)]['clone'](Cartesian3[_0x1f480f(0xaa1)], _0x339fbc) : Adapter[_0x1f480f(0x25b)][_0x1f480f(0x432)](Adapter['Cartesian3'][_0x1f480f(0xcc2)], _0x339fbc));
                         let _0x3ec398 = new Adapter[(_0x1f480f(0x25b))]();
                         Adapter[_0x1f480f(0x25b)][_0x1f480f(0x765)](_0x339fbc, _0x25f436, _0x3ec398),
                              _0x3ec398 = Adapter[_0x1f480f(0x25b)][_0x1f480f(0x579)](_0x3ec398, _0x3ec398),
                              Adapter['Cartesian3']['cross'](_0x25f436, _0x3ec398, _0x339fbc),
                              _0x339fbc = Adapter['Cartesian3'][_0x1f480f(0x579)](_0x339fbc, _0x339fbc);
                         const _0x680f24 = {
                              'destination': _0x29d839,
                              'orientation': {
                                   'direction': _0x25f436,
                                   'up': _0x339fbc
                              },
                              'convert': !0x1
                         };
                         _0x103180['setView'](_0x680f24),
                              _0x3b41e4[_0x1f480f(0xd16)][_0x1f480f(0x320)](_0x1338a6, _0x680f24),
                              _0x103180[_0x1f480f(0x8a1)][_0x1f480f(0x3ae)] = 0x1,
                              _0x103180[_0x1f480f(0x8a1)][_0x1f480f(0xba6)] = Math[_0x1f480f(0xc1f)](Math[_0x1f480f(0x590)](_0x59d74f, 0xa));
                         const _0x228835 = _0x3b41e4[_0x1f480f(0x2b4)]['_primitives']['_primitives'];
                         for (let _0x47ed5c = 0x0; _0x47ed5c < _0x228835[_0x1f480f(0x72b)]; ++_0x47ed5c) {
                              const _0x110152 = _0x228835[_0x47ed5c];
                              Adapter[_0x1f480f(0x336)](_0x110152['fileType']) || (_0x110152[_0x1f480f(0x651)] = _0x110152[_0x1f480f(0xc98)],
                                   _0x110152['show'] = !0x1);
                         }
                         const _0x46d2c1 = new Adapter[(_0x1f480f(0xcdf))]();
                         Adapter[_0x1f480f(0xcdf)][_0x1f480f(0x59d)](_0x103180[_0x1f480f(0x8a1)][_0x1f480f(0x74a)], _0x103180[_0x1f480f(0x578)], _0x46d2c1),
                              _0x3b41e4[_0x1f480f(0x1e4)][_0x1f480f(0x320)](_0x1338a6, _0x46d2c1),
                              _0x3b41e4['_renderTextureMatrixs']['set'](_0x1338a6, new Adapter[(_0x1f480f(0xcdf))]());
                    }
                    ,
                    _0x7819ad['endFunc'] = function () {
                         const _0x297884 = _0x2a3964;
                         _0x83c7f6[_0x297884(0x399)] = _0x37867c,
                              _0x103180[_0x297884(0x8a1)][_0x297884(0x4c4)] = _0xa1ada6,
                              _0x103180[_0x297884(0xc69)]({
                                   'destination': _0xd65f24,
                                   'orientation': {
                                        'direction': _0x50dd6e,
                                        'up': _0x36360f
                                   },
                                   'convert': !0x1
                              }),
                              _0x103180[_0x297884(0x8a1)][_0x297884(0x3ae)] = _0x3b1134,
                              _0x103180[_0x297884(0x8a1)][_0x297884(0xba6)] = _0x4f51a0,
                              _0x7819ad['isUpdate'] = !0x1;
                         const _0x4a89ec = _0x3b41e4[_0x297884(0x2b4)][_0x297884(0xb74)][_0x297884(0xb74)];
                         for (let _0x21ad36 = 0x0; _0x21ad36 < _0x4a89ec['length']; ++_0x21ad36) {
                              const _0x33937f = _0x4a89ec[_0x21ad36];
                              Adapter[_0x297884(0x336)](_0x33937f[_0x297884(0x747)]) || (_0x33937f['show'] = _0x33937f[_0x297884(0x651)]);
                         }
                         if (!_0x3b41e4[_0x297884(0xc8f)]) {
                              const _0x24c71a = _0x4f3c1b(_0x3b41e4, _0x1338a6);
                              _0x3b41e4['_barrierPointArray'][_0x297884(0x320)](_0x1338a6, _0x24c71a);
                         }
                    }
                    ;
          }
          Object[_0xc3a123(0xcde)](_0x53e342[_0xc3a123(0x2d4)], {
               'viewPosition': {
                    'get': function () {
                         const _0x43a0b1 = _0xc3a123;
                         return this[_0x43a0b1(0x27e)];
                    },
                    'set': function (_0x35da6e) {
                         const _0x167331 = _0xc3a123;
                         this['_viewPosition'] = _0x35da6e,
                              this['_updateAll'] = !0x0,
                              this[_0x167331(0xc8f)] = !0x0;
                    }
               },
               'visibleColor': {
                    'get': function () {
                         return this['_visibleColor'];
                    },
                    'set': function (_0x90ff2c) {
                         const _0x1e60a8 = _0xc3a123;
                         void 0x0 !== _0x90ff2c && (this[_0x1e60a8(0xbb2)] = Adapter['Color'][_0x1e60a8(0x432)](_0x90ff2c, this[_0x1e60a8(0xbb2)]));
                    }
               },
               'hiddenColor': {
                    'get': function () {
                         return this['_hiddenColor'];
                    },
                    'set': function (_0x25aa7e) {
                         const _0x26ecc4 = _0xc3a123;
                         void 0x0 !== _0x25aa7e && (this['_hiddenColor'] = Adapter['Color'][_0x26ecc4(0x432)](_0x25aa7e, this['_hiddenColor']));
                    }
               },
               'lineWidth': {
                    'get': function () {
                         return this['_lineWidth'];
                    },
                    'set': function (_0x46bb4e) {
                         const _0x704a24 = _0xc3a123;
                         void 0x0 !== _0x46bb4e && (this[_0x704a24(0xb43)] = _0x46bb4e);
                    }
               }
          }),
               _0x53e342[_0xc3a123(0x2d4)][_0xc3a123(0x92c)] = function (_0x47c834) {
                    const _0x32dad6 = _0xc3a123
                         , _0x591e29 = _0x47c834[_0x32dad6(0xca3)]
                         , _0x6e6948 = _0x47c834[_0x32dad6(0x5a4)];
                    return !(!Adapter[_0x32dad6(0x336)](_0x591e29) || !Adapter[_0x32dad6(0x336)](_0x6e6948)) && (this['_targetPoints'][_0x32dad6(0x320)](_0x591e29, _0x6e6948),
                         this[_0x32dad6(0x902)] = _0x591e29,
                         this[_0x32dad6(0x852)] = _0x6e6948,
                         this[_0x32dad6(0xc8f)] = !0x0,
                         this[_0x32dad6(0x1ef)][_0x32dad6(0x320)](_0x591e29, {}),
                         !0x0);
               }
               ,
               _0x53e342[_0xc3a123(0x2d4)][_0xc3a123(0x9ee)] = function (_0x2cb887) {
                    const _0x41e625 = _0xc3a123;
                    this[_0x41e625(0x1ef)][_0x41e625(0xced)](_0x2cb887);
                    const _0x3c9289 = this[_0x41e625(0xc74)][_0x41e625(0xced)](_0x2cb887);
                    if (this[_0x41e625(0xd16)][_0x41e625(0xced)](_0x2cb887),
                         !_0x3c9289)
                         return !0x1;
                    this[_0x41e625(0x1e4)]['remove'](_0x2cb887),
                         this[_0x41e625(0xcd1)][_0x41e625(0xced)](_0x2cb887);
                    const _0x298b18 = this[_0x41e625(0x6fd)][_0x41e625(0x420)](_0x2cb887);
                    Adapter[_0x41e625(0x336)](_0x298b18) && (_0x298b18[_0x41e625(0x9bb)](),
                         this[_0x41e625(0x6fd)]['remove'](_0x2cb887));
                    const _0x2e80c5 = this[_0x41e625(0x6f3)][_0x41e625(0x420)](_0x2cb887);
                    if (Adapter[_0x41e625(0x336)](_0x2e80c5)) {
                         for (let _0xf49a7d = 0x0; _0xf49a7d < _0x2e80c5[_0x41e625(0x72b)]; _0xf49a7d++) {
                              const _0x5cc166 = _0x2e80c5[_0xf49a7d];
                              _0x5cc166[_0x41e625(0x940)] = _0x5cc166[_0x41e625(0x940)] && !_0x5cc166[_0x41e625(0x940)]['isDestroyed']() && _0x5cc166[_0x41e625(0x940)][_0x41e625(0x9bb)](),
                                   _0x5cc166[_0x41e625(0x896)] = _0x5cc166[_0x41e625(0x896)] && !_0x5cc166[_0x41e625(0x896)][_0x41e625(0x567)]() && _0x5cc166[_0x41e625(0x896)][_0x41e625(0x9bb)]();
                         }
                         this['_commands'][_0x41e625(0xced)](_0x2cb887);
                    }
                    return this[_0x41e625(0xc8f)] = !0x0,
                         !0x0;
               }
               ,
               _0x53e342[_0xc3a123(0x2d4)][_0xc3a123(0x599)] = function () {
                    const _0x58bd43 = _0xc3a123;
                    this[_0x58bd43(0x1ef)][_0x58bd43(0x6c9)](),
                         this['_targetPoints']['removeAll'](),
                         this[_0x58bd43(0xd16)][_0x58bd43(0x6c9)]();
                    for (let _0xc8026b in this[_0x58bd43(0x6fd)][_0x58bd43(0xcc3)])
                         this[_0x58bd43(0x6fd)][_0x58bd43(0xcc3)][_0x58bd43(0x6e8)](_0xc8026b) && this[_0x58bd43(0x6fd)][_0x58bd43(0xcc3)][_0xc8026b]['destroy']();
                    this[_0x58bd43(0x6fd)]['removeAll']();
                    for (let _0x162ec5 = 0x0, _0x5042d0 = this[_0x58bd43(0x6f3)][_0x58bd43(0x72b)]; _0x162ec5 < _0x5042d0; _0x162ec5++) {
                         const _0x116962 = this[_0x58bd43(0x6f3)]['values'][_0x162ec5];
                         for (let _0x1e14cb = 0x0; _0x1e14cb < _0x116962[_0x58bd43(0x72b)]; _0x1e14cb++) {
                              const _0x11165c = _0x116962[_0x1e14cb];
                              _0x11165c[_0x58bd43(0x940)] = _0x11165c['shaderProgram'] && !_0x11165c[_0x58bd43(0x940)][_0x58bd43(0x567)]() && _0x11165c[_0x58bd43(0x940)]['destroy'](),
                                   _0x11165c[_0x58bd43(0x896)] = _0x11165c[_0x58bd43(0x896)] && !_0x11165c[_0x58bd43(0x896)]['isDestroyed']() && _0x11165c[_0x58bd43(0x896)]['destroy']();
                         }
                    }
                    this[_0x58bd43(0x6f3)][_0x58bd43(0x6c9)](),
                         this[_0x58bd43(0x1e4)][_0x58bd43(0x6c9)](),
                         this['_renderTextureMatrixs'][_0x58bd43(0x6c9)](),
                         this['_update'] = !0x0;
               }
               ;
          const _0x1bfa09 = new Adapter[(_0xc3a123(0xcdf))](0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1);
          let _0x3b3a0e = null;
          function _0xeb6914(_0x2c18f5) {
               const _0xece5e3 = _0xc3a123;
               if (Adapter[_0xece5e3(0x336)](_0x3b3a0e))
                    return _0x3b3a0e;
               const _0x2aa3f9 = new Float32Array(0x8);
               let _0x33d673 = 0x0;
               return _0x2aa3f9[_0x33d673++] = 0x0,
                    _0x2aa3f9[_0x33d673++] = 0x0,
                    _0x2aa3f9[_0x33d673++] = 0x0,
                    _0x2aa3f9[_0x33d673++] = 0x1,
                    _0x2aa3f9[_0x33d673++] = 0x1,
                    _0x2aa3f9[_0x33d673++] = 0x1,
                    _0x2aa3f9[_0x33d673++] = 0x1,
                    _0x2aa3f9[_0x33d673++] = 0x0,
                    _0x3b3a0e = Adapter[_0xece5e3(0xd3c)][_0xece5e3(0x856)]({
                         'context': _0x2c18f5,
                         'typedArray': _0x2aa3f9,
                         'usage': Adapter[_0xece5e3(0xbd0)][_0xece5e3(0x78f)]
                    }),
                    _0x3b3a0e[_0xece5e3(0x828)] = !0x1,
                    _0x3b3a0e;
          }
          function _0x30f123(_0x5cd7fa, _0x2d7986) {
               const _0x3e2133 = _0xc3a123
                    , _0x1a58d9 = Adapter['ComponentDatatype']['createTypedArray'](Adapter[_0x3e2133(0x5fa)]['FLOAT'], 0x6);
               return _0x1a58d9[0x0] = 0x0,
                    _0x1a58d9[0x1] = 0x0,
                    _0x1a58d9[0x2] = 0x0,
                    _0x1a58d9[0x3] = _0x2d7986['x'],
                    _0x1a58d9[0x4] = _0x2d7986['y'],
                    _0x1a58d9[0x5] = _0x2d7986['z'],
                    Adapter[_0x3e2133(0xd3c)]['createVertexBuffer']({
                         'context': _0x5cd7fa,
                         'typedArray': _0x1a58d9,
                         'usage': Adapter[_0x3e2133(0xbd0)]['STATIC_DRAW']
                    });
          }
          function _0x43e9f4() {
               const _0xc49835 = new Uint16Array(0x6);
               let _0x5792a3 = 0x0;
               return _0xc49835[_0x5792a3++] = 0x2,
                    _0xc49835[_0x5792a3++] = 0x1,
                    _0xc49835[_0x5792a3++] = 0x0,
                    _0xc49835[_0x5792a3++] = 0x3,
                    _0xc49835[_0x5792a3++] = 0x2,
                    _0xc49835[_0x5792a3++] = 0x0,
                    _0xc49835;
          }
          let _0x3c66a9 = null;
          function _0x3f524b(_0x5342a6) {
               const _0x1a3efc = _0xc3a123;
               return Adapter[_0x1a3efc(0x336)](_0x3c66a9) || (_0x3c66a9 = Adapter[_0x1a3efc(0xd3c)][_0x1a3efc(0x8c0)]({
                    'context': _0x5342a6,
                    'typedArray': _0x43e9f4(),
                    'usage': Adapter[_0x1a3efc(0xbd0)][_0x1a3efc(0x78f)],
                    'indexDatatype': Adapter['IndexDatatype'][_0x1a3efc(0x744)]
               }),
                    _0x3c66a9[_0x1a3efc(0x828)] = !0x1),
                    _0x3c66a9;
          }
          let _0x2099b8 = new Adapter[(_0xc3a123(0x821))]()
               , _0x371e9b = new Adapter[(_0xc3a123(0x821))]();
          function _0x727fe7(_0x23fc8b, _0x385b62, _0x612eaf) {
               const _0x11cdeb = _0xc3a123
                    , _0x4fea2a = _0x612eaf[_0x11cdeb(0xc97)][_0x11cdeb(0x48b)];
               let _0x420276;
               if (_0x23fc8b[_0x11cdeb(0x2b4)][_0x11cdeb(0xac9)] === Adapter[_0x11cdeb(0xa7f)][_0x11cdeb(0xa65)])
                    _0x420276 = Adapter[_0x11cdeb(0x25b)]['fromDegreesArrayHeights'](_0x23fc8b['_viewPosition'])[0x0];
               else {
                    const _0x23e3fa = Adapter['Cartographic'][_0x11cdeb(0xd78)](_0x23fc8b['_viewPosition'][0x0], _0x23fc8b['_viewPosition'][0x1], _0x23fc8b[_0x11cdeb(0x27e)][0x2]);
                    _0x420276 = _0x4fea2a[_0x11cdeb(0x488)](_0x23e3fa, new Adapter[(_0x11cdeb(0x25b))]());
               }
               const _0x3cd550 = _0x23fc8b[_0x11cdeb(0x852)];
               let _0x4bed06;
               if (_0x23fc8b['scene'][_0x11cdeb(0xac9)] === Adapter[_0x11cdeb(0xa7f)][_0x11cdeb(0xa65)])
                    _0x4bed06 = Adapter[_0x11cdeb(0x25b)][_0x11cdeb(0x7ac)](_0x3cd550)[0x0];
               else {
                    let _0x206f9b = Adapter[_0x11cdeb(0x6ca)]['fromDegrees'](_0x3cd550[0x0], _0x3cd550[0x1], _0x3cd550[0x2]);
                    _0x4bed06 = _0x4fea2a[_0x11cdeb(0x488)](_0x206f9b, new Adapter[(_0x11cdeb(0x25b))]());
               }
               const _0x451e0f = new Adapter['Cartesian3']();
               Adapter[_0x11cdeb(0x25b)]['subtract'](_0x4bed06, _0x420276, _0x451e0f);
               const _0x4544dd = _0xeb6914(_0x385b62)
                    , _0x69f772 = _0x30f123(_0x385b62, _0x451e0f)
                    , _0x1d3462 = []
                    , _0x5a423e = {
                         'aSideness': 0x0
                    };
               _0x1d3462[_0x11cdeb(0x63e)]({
                    'index': _0x5a423e[_0x11cdeb(0x5bc)],
                    'vertexBuffer': _0x4544dd,
                    'componentsPerAttribute': 0x2,
                    'componentDatatype': Adapter[_0x11cdeb(0x5fa)][_0x11cdeb(0xa80)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x8,
                    'normalize': !0x1
               }),
                    _0x5a423e[_0x11cdeb(0x770)] = 0x1,
                    _0x1d3462[_0x11cdeb(0x63e)]({
                         'index': _0x5a423e[_0x11cdeb(0x770)],
                         'vertexBuffer': _0x69f772,
                         'componentsPerAttribute': 0x3,
                         'componentDatatype': Adapter['ComponentDatatype']['FLOAT'],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0xc,
                         'normalize': !0x1,
                         'instanceDivisor': 0x1
                    }),
                    _0x5a423e['aPosition1'] = 0x2,
                    _0x1d3462[_0x11cdeb(0x63e)]({
                         'index': _0x5a423e[_0x11cdeb(0x5c1)],
                         'vertexBuffer': _0x69f772,
                         'componentsPerAttribute': 0x3,
                         'componentDatatype': Adapter[_0x11cdeb(0x5fa)][_0x11cdeb(0xa80)],
                         'offsetInBytes': 0xc,
                         'strideInBytes': 0xc,
                         'normalize': !0x1,
                         'instanceDivisor': 0x1
                    });
               const _0xfc5a11 = _0x3f524b(_0x385b62)
                    , _0x4b523f = new Adapter[(_0x11cdeb(0x2f8))]({
                         'primitiveType': Adapter[_0x11cdeb(0xa6c)][_0x11cdeb(0x415)],
                         'pass': Adapter[_0x11cdeb(0xd8a)][_0x11cdeb(0x3d7)],
                         'owner': _0x23fc8b,
                         'boundingVolume': new Adapter[(_0x11cdeb(0xc1c))](_0x420276, 0x2710),
                         'cull': !0x1
                    });
               let _0x457370 = new Adapter['Matrix4']();
               Adapter[_0x11cdeb(0xcdf)]['clone'](Adapter[_0x11cdeb(0xcdf)][_0x11cdeb(0x38c)], _0x457370),
                    Adapter[_0x11cdeb(0xcdf)][_0x11cdeb(0x844)](_0x457370, _0x420276, _0x457370),
                    _0x23fc8b[_0x11cdeb(0x2b4)][_0x11cdeb(0xac9)] !== Adapter['SceneMode'][_0x11cdeb(0xa65)] && Adapter[_0x11cdeb(0xcdf)][_0x11cdeb(0x59d)](_0x1bfa09, _0x457370, _0x457370),
                    _0x4b523f[_0x11cdeb(0xbbd)] = _0x457370,
                    _0x4b523f['vertexArray'] = new Adapter['VertexArray']({
                         'context': _0x385b62,
                         'attributes': _0x1d3462,
                         'indexBuffer': _0xfc5a11
                    }),
                    _0x4b523f[_0x11cdeb(0x940)] = Adapter[_0x11cdeb(0xc23)][_0x11cdeb(0x6d8)]({
                         'context': _0x385b62,
                         'vertexShaderSource': _0x41179f,
                         'fragmentShaderSource': _0x1e9d62,
                         'attributeLocations': _0x5a423e
                    }),
                    _0x4b523f['renderState'] = Adapter['RenderState']['fromCache']({
                         'cull': {
                              'enabled': !0x1
                         },
                         'depthTest': {
                              'enabled': !0x0
                         }
                    });
               const _0x563d80 = _0x23fc8b[_0x11cdeb(0x902)];
               _0x4b523f['uniformMap'] = {
                    'uRenderTextureMatrix': function () {
                         const _0x6d0f34 = _0x11cdeb;
                         return _0x23fc8b[_0x6d0f34(0xcd1)][_0x6d0f34(0x420)](_0x563d80);
                    },
                    'uTexture0': function () {
                         const _0x466851 = _0x11cdeb;
                         return _0x23fc8b[_0x466851(0x6fd)][_0x466851(0x420)](_0x563d80)[_0x466851(0x997)];
                    },
                    'uVisibleColor': function () {
                         const _0x4c63d3 = _0x11cdeb;
                         return _0x23fc8b[_0x4c63d3(0xbb2)];
                    },
                    'uHiddenColor': function () {
                         const _0x3a6244 = _0x11cdeb;
                         return _0x23fc8b[_0x3a6244(0xcf8)];
                    },
                    'uLineWidth': function () {
                         return _0x23fc8b['_lineWidth'];
                    }
               };
               const _0x1653d4 = Adapter[_0x11cdeb(0x2f8)][_0x11cdeb(0x4c8)](_0x4b523f);
               _0x1653d4['pass'] = Adapter[_0x11cdeb(0xd8a)][_0x11cdeb(0x3d7)],
                    _0x1653d4[_0x11cdeb(0x54e)] = Adapter[_0x11cdeb(0x259)][_0x11cdeb(0x6d8)]({
                         'depthMask': !0x1,
                         'depthTest': {
                              'enabled': !0x1
                         },
                         'blending': Adapter[_0x11cdeb(0x75d)]['ALPHA_BLEND']
                    }),
                    _0x1653d4[_0x11cdeb(0x7b8)][_0x11cdeb(0xd52)] = function () {
                         const _0x4799e9 = _0x11cdeb;
                         return Adapter['Color'][_0x4799e9(0x432)](_0x23fc8b[_0x4799e9(0xcf8)], _0x2099b8),
                              _0x2099b8[_0x4799e9(0x6b2)] = 0.2,
                              _0x2099b8;
                    }
                    ,
                    _0x1653d4[_0x11cdeb(0x7b8)][_0x11cdeb(0x3c5)] = function () {
                         const _0x55bbbe = _0x11cdeb;
                         return Adapter[_0x55bbbe(0x821)]['clone'](_0x23fc8b[_0x55bbbe(0xbb2)], _0x371e9b),
                              _0x371e9b[_0x55bbbe(0x6b2)] = 0.2,
                              _0x371e9b;
                    }
                    ,
                    _0x23fc8b['_commands']['set'](_0x563d80, [_0x1653d4, _0x4b523f]);
          }
          function _0x4f3c1b(_0x625f08, _0x135c71) {
               const _0xf47c42 = _0xc3a123
                    , _0x12f1ce = _0x625f08[_0xf47c42(0xc74)][_0xf47c42(0x420)](_0x135c71);
               if (!Adapter['defined'](_0x12f1ce))
                    return;
               const _0x5ee30f = {
                    'isViewer': !0x0
               }
                    , _0x429194 = Adapter['Cartesian3']['fromDegreesArrayHeights'](_0x12f1ce)[0x0]
                    , _0x2babeb = new Adapter['Cartesian4'](_0x429194['x'], _0x429194['y'], _0x429194['z'], 0x1)
                    , _0x5ee60b = _0x625f08[_0xf47c42(0x1e4)][_0xf47c42(0x420)](_0x135c71);
               if (Adapter[_0xf47c42(0xcdf)]['multiplyByVector'](_0x5ee60b, _0x2babeb, _0x2babeb),
                    Adapter['Cartesian4'][_0xf47c42(0x3fc)](_0x2babeb, _0x2babeb['w'], _0x2babeb),
                    _0x2babeb['x'] > 0x1 || _0x2babeb['x'] < -0x1 || _0x2babeb['y'] > 0x1 || _0x2babeb['y'] < -0x1)
                    return _0x5ee30f;
               const _0x420107 = _0x625f08[_0xf47c42(0x2b4)][_0xf47c42(0x878)]
                    , _0x439061 = _0x420107[_0xf47c42(0x4a4)]
                    , _0x1771b5 = _0x420107[_0xf47c42(0x6ab)]
                    , _0x4be9e7 = (0.5 * _0x2babeb['x'] + 0.5) * _0x439061 - 0.5
                    , _0x3ec863 = (0.5 * _0x2babeb['y'] + 0.5) * _0x1771b5 - 0.5;
               if (_0x4be9e7 < 0x0 || _0x3ec863 < 0x0)
                    return _0x5ee30f;
               const _0x388db2 = Math[_0xf47c42(0x763)](_0x4be9e7)
                    , _0x146c81 = _0x4be9e7 - _0x388db2
                    , _0x308ef6 = Math[_0xf47c42(0x763)](_0x3ec863)
                    , _0xf36dd5 = _0x3ec863 - _0x308ef6
                    , _0x350cc8 = _0x625f08[_0xf47c42(0x6fd)][_0xf47c42(0x420)](_0x135c71)
                    , _0x118d37 = _0x420107[_0xf47c42(0x79d)]({
                         'framebuffer': _0x350cc8[_0xf47c42(0x28d)],
                         'x': _0x388db2,
                         'y': _0x308ef6,
                         'width': 0x2,
                         'height': 0x2
                    })
                    , _0x2210a1 = new Adapter[(_0xf47c42(0xce9))]();
               new Adapter[(_0xf47c42(0x25b))]();
               const _0x5a6080 = new Adapter[(_0xf47c42(0xce9))](0x1 / 0xff, 0x1 / 0xfe01, 0x1 / 0x99246ff, 0x1 / 0xfc05fc01)
                    , _0x1c47cb = [];
               _0x625f08[_0xf47c42(0x2b4)];
               const _0x521ad1 = _0x420107[_0xf47c42(0xc7b)][_0xf47c42(0x553)];
               _0x521ad1['x'],
                    _0x521ad1['y'];
               for (let _0x526337 = 0x0; _0x526337 < 0x4; _0x526337++) {
                    const _0x84817a = Adapter[_0xf47c42(0xce9)]['unpack'](_0x118d37, 0x4 * _0x526337, _0x2210a1)
                         , _0x2dc732 = Adapter[_0xf47c42(0xce9)]['dot'](_0x84817a, _0x5a6080);
                    if (!(_0x2dc732 < 0x1 && _0x2dc732 > 0x0))
                         return _0x5ee30f;
                    _0x1c47cb[_0x526337] = 0x2 * _0x2dc732 - 0x1;
               }
               const _0x27273b = (0x1 - _0xf36dd5) * ((0x1 - _0x146c81) * _0x1c47cb[0x0] + _0x146c81 * _0x1c47cb[0x1]) + _0xf36dd5 * ((0x1 - _0x146c81) * _0x1c47cb[0x2] + _0x146c81 * _0x1c47cb[0x3]);
               if (_0x2babeb['z'] - _0x27273b > 0.000001) {
                    const _0x90628a = new Adapter[(_0xf47c42(0xcdf))]();
                    Adapter[_0xf47c42(0xcdf)]['inverse'](_0x5ee60b, _0x90628a),
                         _0x2babeb['z'] = _0x27273b,
                         Adapter[_0xf47c42(0xcdf)][_0xf47c42(0x754)](_0x90628a, _0x2babeb, _0x2babeb),
                         Adapter[_0xf47c42(0xce9)][_0xf47c42(0x3fc)](_0x2babeb, _0x2babeb['w'], _0x2babeb);
                    const _0x479941 = Adapter[_0xf47c42(0x6ca)][_0xf47c42(0x2d0)](_0x2babeb);
                    _0x5ee30f[_0xf47c42(0x5a4)] = _0x479941,
                         _0x5ee30f[_0xf47c42(0x8a0)] = !0x1,
                         _0x5ee30f['st'] = new Adapter[(_0xf47c42(0x1b7))](_0x388db2, _0x308ef6);
               }
               return _0x5ee30f;
          }
          _0x53e342['prototype'][_0xc3a123(0x2dc)] = function (_0x3e7697) {
               const _0x2fe15d = _0xc3a123;
               if (_0x3e7697[_0x2fe15d(0x2f9)] || _0x3e7697[_0x2fe15d(0x2ea)][_0x2fe15d(0x988)] || _0x3e7697[_0x2fe15d(0x2ea)][_0x2fe15d(0x691)])
                    return;
               const _0x3a07ee = _0x3e7697[_0x2fe15d(0xc97)];
               for (let _0x2daded in this[_0x2fe15d(0x1e4)][_0x2fe15d(0xcc3)])
                    if (this[_0x2fe15d(0x1e4)][_0x2fe15d(0xcc3)][_0x2fe15d(0x6e8)](_0x2daded)) {
                         const _0x12bbdc = this[_0x2fe15d(0x1e4)][_0x2fe15d(0x420)](_0x2daded);
                         Adapter[_0x2fe15d(0xcdf)][_0x2fe15d(0x59d)](_0x12bbdc, _0x3a07ee[_0x2fe15d(0xabf)], this['_renderTextureMatrixs'][_0x2fe15d(0x420)](_0x2daded));
                    }
               if (this[_0x2fe15d(0xc8f)]) {
                    if (this[_0x2fe15d(0xc8f)] = !0x1,
                         this['_targetPoints']['values'][_0x2fe15d(0x72b)] < 0x1)
                         return;
                    if (this[_0x2fe15d(0x9f5)]) {
                         this[_0x2fe15d(0x9f5)] = !0x1;
                         for (let _0x465f88 in this['_targetPoints'][_0x2fe15d(0xcc3)])
                              if (this['_targetPoints'][_0x2fe15d(0xcc3)]['hasOwnProperty'](_0x465f88)) {
                                   const _0x3f7c7a = this[_0x2fe15d(0xc74)][_0x2fe15d(0x420)](_0x465f88);
                                   this[_0x2fe15d(0x852)] = _0x3f7c7a,
                                        this[_0x2fe15d(0x902)] = _0x465f88,
                                        _0x1747aa(this, this[_0x2fe15d(0x2b4)][_0x2fe15d(0x878)], _0x3e7697),
                                        _0x727fe7(this, this[_0x2fe15d(0x2b4)][_0x2fe15d(0x878)], _0x3e7697);
                              }
                    } else
                         _0x1747aa(this, this['scene'][_0x2fe15d(0x878)], _0x3e7697),
                              _0x727fe7(this, this[_0x2fe15d(0x2b4)][_0x2fe15d(0x878)], _0x3e7697);
               }
               if (!_0x3e7697[_0x2fe15d(0x2ea)]['pick']) {
                    const _0x394a54 = this[_0x2fe15d(0x6f3)][_0x2fe15d(0x72b)];
                    for (let _0x16ff01 = 0x0; _0x16ff01 < _0x394a54; _0x16ff01++)
                         if (Adapter[_0x2fe15d(0x336)](this[_0x2fe15d(0x6fd)][_0x2fe15d(0xcd3)][_0x16ff01][_0x2fe15d(0x28d)])) {
                              const _0x2a1753 = this[_0x2fe15d(0x6f3)]['values'][_0x16ff01];
                              _0x3e7697[_0x2fe15d(0x7c3)][_0x2fe15d(0x63e)](_0x2a1753[0x0]),
                                   _0x3e7697[_0x2fe15d(0x7c3)]['push'](_0x2a1753[0x1]);
                         }
               }
          }
               ,
               _0x53e342[_0xc3a123(0x2d4)][_0xc3a123(0x39e)] = function (_0x23cf25, _0x3721d6) {
                    const _0x3a351a = _0xc3a123
                         , _0x53a131 = this[_0x3a351a(0x1ef)][_0x3a351a(0x420)](_0x23cf25);
                    return defined(_0x3721d6) && _0x3721d6['bind'](null, _0x53a131)(),
                         _0x53a131;
               }
               ,
               _0x53e342[_0xc3a123(0x2d4)]['build'] = function () {
                    const _0x1d9c03 = _0xc3a123;
                    this[_0x1d9c03(0x483)] || (this[_0x1d9c03(0x483)] = !0x0,
                         this['scene'][_0x1d9c03(0xa7c)][_0x1d9c03(0x2ef)](this),
                         this[_0x1d9c03(0x800)] = this[_0x1d9c03(0x2b4)][_0x1d9c03(0x6d2)][_0x1d9c03(0xb1d)]((_0x361d0c, _0x17ab22) => {
                              const _0x5a4a40 = _0x1d9c03;
                              for (let _0x4215d2 in this['_depthBuffers'][_0x5a4a40(0xcc3)])
                                   this['_depthBuffers'][_0x5a4a40(0xcc3)][_0x5a4a40(0x6e8)](_0x4215d2) && this['_depthBuffers'][_0x5a4a40(0xcc3)][_0x4215d2][_0x5a4a40(0x61e)](_0x361d0c);
                         }
                              , this));
               }
               ,
               _0x53e342[_0xc3a123(0x2d4)]['clear'] = function () {
                    const _0x9a3a90 = _0xc3a123;
                    this['isBuild'] && (this[_0x9a3a90(0x483)] = !0x1,
                         this[_0x9a3a90(0x800)](),
                         this['scene']['primitives'][_0x9a3a90(0xced)](this));
               }
               ,
               _0x53e342['prototype'][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x53e342[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x54c5fa = _0xc3a123;
                    return this['removeAllTargetPoint'](),
                         this[_0x54c5fa(0x2b4)][_0x54c5fa(0xa7c)][_0x54c5fa(0xced)](this),
                         Adapter[_0x54c5fa(0x8e1)](this);
               }
               ;
          var _0x2b8a4b = _0xc3a123(0x2b1)
               , _0x111b69 = 'uniform\x20vec4\x20uSkylineColor;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20gl_FragColor\x20=\x20uSkylineColor;\x0a}';
          window[_0xc3a123(0x5ed)] = Cesium;
          const _0x263eb2 = Adapter[_0xc3a123(0xc6e)]
               , _0xe2a7a4 = Adapter['BoundingSphere']
               , _0x4ed134 = Adapter[_0xc3a123(0x25b)]
               , _0x182d31 = Adapter[_0xc3a123(0xce9)]
               , _0x1ae9cc = Adapter['Cartographic']
               , _0xfd0709 = Adapter[_0xc3a123(0x821)]
               , _0x5407fd = Adapter[_0xc3a123(0x5fa)]
               , _0x207b39 = Adapter['defined']
               , _0x44c719 = Adapter['destroyObject']
               , _0xbc4e83 = Adapter[_0xc3a123(0x610)]
               , _0x3a92d3 = Adapter[_0xc3a123(0x36b)]
               , _0x4c0a8e = Adapter['Math']
               , _0x1685e4 = Adapter['Matrix4']
               , _0x38562c = Adapter[_0xc3a123(0xa6c)];
          Adapter['CommonNoLigthNoTextureVp'],
               Adapter[_0xc3a123(0xd79)];
          const _0xad39e2 = Adapter[_0xc3a123(0xd8a)]
               , _0x8613b7 = Adapter[_0xc3a123(0xd3c)]
               , _0x2e8827 = Adapter[_0xc3a123(0xbd0)]
               , _0x5353c4 = Adapter[_0xc3a123(0x8ab)]
               , _0x55fbd8 = Adapter[_0xc3a123(0x2f8)]
               , _0x16b3ee = Adapter[_0xc3a123(0x259)]
               , _0x4ea4f6 = Adapter['ShaderProgram']
               , _0x36ee9d = Adapter[_0xc3a123(0x8e5)]
               , _0x1832f3 = Adapter[_0xc3a123(0xa7f)]
               , _0xfc14f1 = Adapter[_0xc3a123(0x690)]
               , _0x4fb9e9 = Adapter[_0xc3a123(0x32d)]
               , _0x3bdd8b = Adapter['Transforms'];
          function _0x2ec37f(_0x2d801f) {
               const _0x546368 = _0xc3a123;
               if (!_0x207b39(_0x2d801f))
                    throw new _0xbc4e83(_0x546368(0x40c));
               if (!_0x2d801f[_0x546368(0x878)]['depthTexture'])
                    throw new _0xbc4e83(_0x546368(0x860));
               if (_0x5353c4[_0x546368(0x965)] < 0x1)
                    throw new _0xbc4e83(_0x546368(0xc64));
               this['_displayMode'] = {
                    'LINE': 0x0,
                    'FACE': 0x1
               },
                    this[_0x546368(0x2b4)] = _0x2d801f,
                    this[_0x546368(0x42c)] = void 0x0,
                    this[_0x546368(0x2b7)] = void 0x0,
                    this[_0x546368(0x2ae)] = void 0x0,
                    this[_0x546368(0x35e)] = void 0x0,
                    this[_0x546368(0x50f)] = new _0xe2a7a4(),
                    this[_0x546368(0x27e)] = [0x0, 0x0, 0x0],
                    this['_direction'] = 0x0,
                    this[_0x546368(0xd9a)] = 0x0,
                    this[_0x546368(0x9ed)] = this['_displayMode'][_0x546368(0xa64)],
                    this['_invertViewMatrix'] = new _0x1685e4(),
                    this[_0x546368(0x65b)] = new _0x1685e4(),
                    this['_color'] = new _0xfd0709(0x1, 0x0, 0x0, 0x1),
                    this[_0x546368(0x5f3)] = -0x1,
                    this[_0x546368(0x244)] = !0x1,
                    this['_limitBodys'] = new _0x263eb2(),
                    this[_0x546368(0xc8f)] = !0x1,
                    this[_0x546368(0xae3)] = [],
                    this['_lineWidth'] = 0x1,
                    this['_lineStripCollection'] = _0x2d801f['primitives'][_0x546368(0x2ef)](new _0xfc14f1()),
                    this[_0x546368(0x483)] = !0x1;
          }
          function _0x1bfdea(_0x36f647) {
               const _0xe02342 = _0xc3a123;
               _0x207b39(_0x36f647['_command']) && (_0x36f647[_0xe02342(0x2b7)][_0xe02342(0x896)] = _0x36f647[_0xe02342(0x2b7)][_0xe02342(0x896)] && _0x36f647[_0xe02342(0x2b7)][_0xe02342(0x896)]['destroy'](),
                    _0x36f647[_0xe02342(0x2b7)][_0xe02342(0x940)] = _0x36f647[_0xe02342(0x2b7)]['shaderProgram'] && _0x36f647[_0xe02342(0x2b7)][_0xe02342(0x940)][_0xe02342(0x9bb)](),
                    _0x36f647['_command'] = void 0x0),
                    _0x207b39(_0x36f647['_lineCommand']) && (_0x36f647['_lineCommand'][_0xe02342(0x896)] = _0x36f647[_0xe02342(0x2ae)][_0xe02342(0x896)] && _0x36f647[_0xe02342(0x2ae)][_0xe02342(0x896)]['destroy'](),
                         _0x36f647['_lineCommand']['shaderProgram'] = _0x36f647[_0xe02342(0x2ae)][_0xe02342(0x940)] && _0x36f647[_0xe02342(0x2ae)][_0xe02342(0x940)][_0xe02342(0x9bb)](),
                         _0x36f647[_0xe02342(0x2ae)] = void 0x0),
                    _0x207b39(_0x36f647[_0xe02342(0x77a)]) && (_0x36f647[_0xe02342(0x77a)]['vertexArray'] = _0x36f647[_0xe02342(0x77a)]['vertexArray'] && _0x36f647[_0xe02342(0x77a)]['vertexArray'][_0xe02342(0x9bb)](),
                         _0x36f647[_0xe02342(0x77a)][_0xe02342(0x940)] = _0x36f647[_0xe02342(0x77a)][_0xe02342(0x940)] && _0x36f647[_0xe02342(0x77a)]['shaderProgram'][_0xe02342(0x9bb)](),
                         _0x36f647['_faceCommand'] = void 0x0);
          }
          function _0x4d7436(_0x566f44, _0x6c2320, _0x3406b3) {
               const _0x58b900 = _0xc3a123
                    , _0x3eb4b1 = _0x566f44['_viewPosition'][0x2];
               let _0x377ae8 = 0.0005 * _0x3eb4b1;
               _0x377ae8 = _0x377ae8 < 0x1 ? 0x1 : _0x377ae8;
               const _0x151fba = Math[_0x58b900(0xbd6)](_0x3eb4b1) + 0x615299;
               let _0x444fae = Math['sqrt']((_0x151fba - 0x615299) * (_0x151fba + 0x615299));
               _0x3eb4b1 < 0x0 && _0x444fae < 0xc350 ? _0x444fae = 0xc350 : _0x3eb4b1 < 0x64 && _0x3eb4b1 > 0x0 && (_0x444fae *= 0x32);
               const _0x222da6 = _0x566f44[_0x58b900(0xaa3)] * _0x4c0a8e['RADIANS_PER_DEGREE']
                    , _0x3b66a0 = _0x566f44[_0x58b900(0xd9a)] * _0x4c0a8e['RADIANS_PER_DEGREE']
                    , _0x3799ab = _0x3406b3[_0x58b900(0xc97)]
                    , _0x455617 = _0x3799ab[_0x58b900(0x48b)];
               let _0x286220;
               if (_0x566f44[_0x58b900(0x2b4)][_0x58b900(0xac9)] === _0x1832f3[_0x58b900(0xa65)])
                    _0x286220 = _0x4ed134[_0x58b900(0x7ac)](_0x566f44['_viewPosition'])[0x0];
               else {
                    const _0x2d5047 = _0x1ae9cc[_0x58b900(0xd78)](_0x566f44[_0x58b900(0x27e)][0x0], _0x566f44[_0x58b900(0x27e)][0x1], _0x566f44[_0x58b900(0x27e)][0x2]);
                    _0x286220 = _0x455617[_0x58b900(0x488)](_0x2d5047, new _0x4ed134());
               }
               let _0x100ef = _0x3799ab[_0x58b900(0x8a1)][_0x58b900(0x3ae)]
                    , _0x5a4ca2 = _0x3799ab['frustum'][_0x58b900(0xba6)];
               const _0x3b12ba = new _0x4ed134();
               let _0xc4661e = _0x3799ab[_0x58b900(0xcca)]
                    , _0x152ec5 = _0x3799ab['pitch'];
               _0x4ed134[_0x58b900(0x432)](_0x3799ab[_0x58b900(0x5a4)], _0x3b12ba),
                    _0x566f44[_0x58b900(0x42c)][_0x58b900(0x9b4)] = !0x0,
                    _0x566f44[_0x58b900(0x42c)][_0x58b900(0x7e8)] = function () {
                         const _0x2265de = _0x58b900;
                         _0x100ef = _0x3799ab[_0x2265de(0x8a1)][_0x2265de(0x3ae)],
                              _0x5a4ca2 = _0x3799ab[_0x2265de(0x8a1)][_0x2265de(0xba6)],
                              _0xc4661e = _0x3799ab[_0x2265de(0xcca)],
                              _0x152ec5 = _0x3799ab[_0x2265de(0x929)],
                              _0x4ed134[_0x2265de(0x432)](_0x3799ab['position'], _0x3b12ba),
                              _0x3799ab[_0x2265de(0x8a1)]['near'] = _0x377ae8,
                              _0x3799ab['frustum'][_0x2265de(0xba6)] = _0x444fae;
                         const _0x538f28 = {
                              'destination': _0x286220,
                              'orientation': {
                                   'heading': _0x222da6,
                                   'pitch': _0x3b66a0
                              },
                              'convert': !0x1
                         };
                         if (_0x3799ab[_0x2265de(0xc69)](_0x538f28),
                              _0x566f44[_0x2265de(0xbf6)] = _0x538f28,
                              _0x1685e4[_0x2265de(0x432)](_0x3799ab['inverseViewMatrix'], _0x566f44['_invertViewMatrix']),
                              _0x1685e4[_0x2265de(0x59d)](_0x3799ab['frustum'][_0x2265de(0x74a)], _0x3799ab[_0x2265de(0x578)], _0x566f44[_0x2265de(0x65b)]),
                              _0x1685e4[_0x2265de(0x499)](_0x566f44[_0x2265de(0x65b)], _0x566f44['_invertViewProjectionMatrix']),
                              _0x566f44[_0x2265de(0x2b4)][_0x2265de(0xac9)] === _0x1832f3['SCENE3D'])
                              _0x4ed134[_0x2265de(0x432)](_0x286220, _0x566f44[_0x2265de(0x50f)][_0x2265de(0xa41)]);
                         else {
                              const _0xcc0a59 = _0x3bdd8b[_0x2265de(0x636)](_0x4ed134[_0x2265de(0xd78)](_0x566f44[_0x2265de(0x27e)][0x0], _0x566f44['_viewPosition'][0x1], _0x566f44['_viewPosition'][0x2]));
                              _0x4ed134[_0x2265de(0x432)](_0xcc0a59, _0x566f44[_0x2265de(0x50f)][_0x2265de(0xa41)]);
                         }
                         _0x566f44[_0x2265de(0x50f)][_0x2265de(0x38b)] = _0x444fae;
                    }
                    ,
                    _0x566f44['_depthBuffer'][_0x58b900(0x8b1)] = function () {
                         const _0x2d8562 = _0x58b900;
                         if (_0x207b39(_0x566f44['_lineCommand'])) {
                              _0x566f44[_0x2d8562(0xae3)][_0x2d8562(0x72b)] = 0x0;
                              const _0x99e1b3 = _0x6c2320[_0x2d8562(0x79d)]({
                                   'framebuffer': _0x566f44['_depthBuffer'][_0x2d8562(0x28d)]
                              });
                              let _0x55070c = _0x566f44[_0x2d8562(0x2ae)][_0x2d8562(0x896)][_0x2d8562(0x855)](0x0);
                              const _0x1c1759 = 0x0
                                   , _0x381455 = 0x4 * (_0x6c2320['drawingBufferWidth'] + 0x1)
                                   , _0x57215f = _0x5407fd[_0x2d8562(0x8bc)](_0x55070c[_0x2d8562(0x31a)], _0x381455);
                              _0x57215f[0x0] = 0x0,
                                   _0x57215f[0x1] = 0x0,
                                   _0x57215f[0x2] = 0x0,
                                   _0x57215f[0x3] = 0x1,
                                   0x4 * _0x381455 !== _0x55070c['vertexBuffer'][_0x2d8562(0xb0a)] && (_0x1bfdea(_0x566f44),
                                        _0x5b06aa(_0x566f44, _0x6c2320),
                                        _0x55070c = _0x566f44['_lineCommand'][_0x2d8562(0x896)][_0x2d8562(0x855)](0x0));
                              const _0x234ace = new _0x182d31()
                                   , _0x125f1b = new _0x182d31(0x1, 0x1 / 0xff, 0x1 / 0xfe01, 0x1 / 0x99246ff)
                                   , _0x310ddc = _0x6c2320[_0x2d8562(0xc7b)]
                                   , _0x453f26 = _0x310ddc[_0x2d8562(0x9ac)]
                                   , _0x38d7ec = _0x310ddc['currentFrustum']
                                   , _0x393c57 = _0x38d7ec['x']
                                   , _0x484a94 = _0x38d7ec['y'];
                              for (let _0xbc8dad = 0x0; _0xbc8dad < _0x6c2320[_0x2d8562(0x4a4)]; _0xbc8dad++) {
                                   let _0x5232ce = 0x0
                                        , _0x559c9b = _0x6c2320[_0x2d8562(0x6ab)] - 0x1;
                                   for (; _0x559c9b > -0x1; _0x559c9b--) {
                                        const _0x4d4b9c = 0x4 * (_0x6c2320['drawingBufferWidth'] * _0x559c9b + _0xbc8dad)
                                             , _0x2d863c = _0x182d31['unpack'](_0x99e1b3, _0x4d4b9c, _0x234ace);
                                        if (_0x182d31[_0x2d8562(0x3fc)](_0x2d863c, 0xff, _0x2d863c),
                                             _0x5232ce = _0x182d31[_0x2d8562(0xd06)](_0x2d863c, _0x125f1b),
                                             _0x5232ce > 0x0)
                                             break;
                                        _0x5232ce = 0x0;
                                   }
                                   if (_0x566f44[_0x2d8562(0x2b4)][_0x2d8562(0x4b6)][_0x2d8562(0x399)] && _0x5232ce > 0x0) {
                                        const _0x540e63 = _0x5232ce * _0x310ddc[_0x2d8562(0xc85)];
                                        _0x5232ce = _0x484a94 * (0x1 - _0x393c57 / (Math[_0x2d8562(0xd18)](0x2, _0x540e63) - 0x1 + _0x393c57)) / (_0x484a94 - _0x393c57);
                                   }
                                   _0x234ace['x'] = _0xbc8dad / _0x6c2320['drawingBufferWidth'] * 0x2 - 0x1,
                                        _0x234ace['y'] = _0x559c9b / _0x6c2320['drawingBufferHeight'] * 0x2 - 0x1,
                                        _0x234ace['z'] = 0x2 * _0x5232ce - 0x1,
                                        _0x234ace['w'] = 0x1,
                                        _0x1685e4['multiplyByVector'](_0x453f26, _0x234ace, _0x234ace);
                                   const _0x3f2967 = new _0x4ed134(_0x234ace['x'], _0x234ace['y'], _0x234ace['z']);
                                   _0x4ed134[_0x2d8562(0x3fc)](_0x3f2967, _0x234ace['w'], _0x3f2967);
                                   const _0x2cc5f7 = _0x4ed134[_0x2d8562(0x869)](_0x3f2967);
                                   _0x566f44[_0x2d8562(0x5f3)] > 0x0 && _0x2cc5f7 > _0x566f44[_0x2d8562(0x5f3)] && (_0x4ed134[_0x2d8562(0x579)](_0x3f2967, _0x3f2967),
                                        _0x3f2967['x'] *= _0x566f44[_0x2d8562(0x5f3)],
                                        _0x3f2967['y'] *= _0x566f44[_0x2d8562(0x5f3)],
                                        _0x3f2967['z'] *= _0x566f44[_0x2d8562(0x5f3)]),
                                        _0x234ace['x'] = _0x3f2967['x'],
                                        _0x234ace['y'] = _0x3f2967['y'],
                                        _0x234ace['z'] = _0x3f2967['z'],
                                        _0x234ace['w'] = 0x1;
                                   let _0x50bac3 = _0x4ed134[_0x2d8562(0x84d)](_0x1685e4[_0x2d8562(0x754)](_0x566f44[_0x2d8562(0x2f6)], _0x234ace, new _0x182d31()));
                                   if (_0x566f44[_0x2d8562(0x2b4)][_0x2d8562(0xac9)] === _0x1832f3[_0x2d8562(0x1b2)] && (_0x50bac3 = _0x3bdd8b[_0x2d8562(0x630)](_0x50bac3)),
                                        _0x566f44[_0x2d8562(0xae3)][_0x2d8562(0x72b)] > 0x0) {
                                        const _0x537ab0 = _0x4ed134[_0x2d8562(0x3dd)](_0x566f44['_points'][_0x566f44[_0x2d8562(0xae3)][_0x2d8562(0x72b)] - 0x1], _0x50bac3);
                                        if (_0x537ab0 > 0x3e8) {
                                             const _0x382de8 = Math['ceil'](_0x537ab0 / 0x3e8);
                                             for (let _0x1b8aae = 0x1; _0x1b8aae < _0x382de8; _0x1b8aae++) {
                                                  let _0x2f08ae = new _0x4ed134();
                                                  _0x2f08ae = _0x4ed134[_0x2d8562(0xc2b)](_0x566f44[_0x2d8562(0xae3)][_0x566f44['_points']['length'] - 0x1], _0x50bac3, _0x1b8aae / _0x382de8, _0x2f08ae),
                                                       _0x566f44[_0x2d8562(0xae3)][_0x2d8562(0x63e)](_0x2f08ae);
                                             }
                                        }
                                   }
                                   _0x566f44[_0x2d8562(0xae3)][_0x2d8562(0x63e)](_0x50bac3),
                                        _0x57215f[0x4 * (_0xbc8dad + 0x1)] = _0x234ace['x'],
                                        _0x57215f[0x4 * (_0xbc8dad + 0x1) + 0x1] = _0x234ace['y'],
                                        _0x57215f[0x4 * (_0xbc8dad + 0x1) + 0x2] = _0x234ace['z'],
                                        _0x57215f[0x4 * (_0xbc8dad + 0x1) + 0x3] = _0x234ace['w'];
                              }
                              _0x55070c['vertexBuffer'][_0x2d8562(0xce7)](_0x57215f, _0x1c1759);
                              for (let _0x1d09e0 = 0x0; _0x1d09e0 < _0x566f44[_0x2d8562(0x54c)]['values'][_0x2d8562(0x72b)]; _0x1d09e0++)
                                   _0x566f44[_0x2d8562(0x54c)][_0x2d8562(0xcd3)][_0x1d09e0][_0x2d8562(0x2dc)](_0x6c2320, _0x3799ab);
                              _0x566f44[_0x2d8562(0xa82)][_0x2d8562(0x6c9)](),
                                   _0x566f44[_0x2d8562(0xb43)] >= 0x2 && _0x566f44[_0x2d8562(0xa82)][_0x2d8562(0x2ef)]({
                                        'width': _0x566f44['_lineWidth'],
                                        'positions': _0x566f44[_0x2d8562(0xae3)],
                                        'material': _0x4fb9e9[_0x2d8562(0x361)](_0x4fb9e9[_0x2d8562(0x437)], {
                                             'color': _0x566f44[_0x2d8562(0x884)]
                                        })
                                   });
                         }
                         _0x3799ab['setView']({
                              'destination': _0x3b12ba,
                              'orientation': {
                                   'heading': _0xc4661e,
                                   'pitch': _0x152ec5,
                                   'roll': _0x3799ab[_0x2d8562(0x8f0)]
                              },
                              'convert': !0x1
                         }),
                              _0x3799ab[_0x2d8562(0x8a1)]['near'] = _0x100ef,
                              _0x3799ab[_0x2d8562(0x8a1)]['far'] = _0x5a4ca2,
                              _0x566f44[_0x2d8562(0x42c)][_0x2d8562(0x9b4)] = !0x1;
                    }
                    ;
          }
          function _0x5b06aa(_0x44b52e, _0x536628, _0x1d46a9) {
               const _0x2bc790 = _0xc3a123
                    , _0x16d553 = _0x536628[_0x2bc790(0x4a4)] + 0x1
                    , _0x46b112 = _0x5407fd[_0x2bc790(0x8bc)](_0x5407fd[_0x2bc790(0xa80)], 0x4 * _0x16d553)
                    , _0x1d35b2 = _0x5407fd[_0x2bc790(0x8bc)](_0x5407fd[_0x2bc790(0xa80)], 0x2 * _0x16d553)
                    , _0x388644 = _0x5407fd[_0x2bc790(0x8bc)](_0x5407fd[_0x2bc790(0x744)], _0x16d553 - 0x1)
                    , _0x23099d = _0x5407fd[_0x2bc790(0x8bc)](_0x5407fd[_0x2bc790(0x744)], _0x16d553);
               _0x1d35b2[0x0] = -0x1;
               for (let _0x47ccc3 = 0x1; _0x47ccc3 < _0x16d553; _0x47ccc3++)
                    _0x1d35b2[0x2 * _0x47ccc3] = _0x47ccc3 / (_0x16d553 - 0x1),
                         _0x1d35b2[0x2 * _0x47ccc3 + 0x1] = 0x0;
               for (let _0x21c9c5 = 0x0; _0x21c9c5 < _0x16d553 - 0x1; _0x21c9c5++)
                    _0x388644[_0x21c9c5] = _0x21c9c5 + 0x1,
                         _0x23099d[_0x21c9c5] = _0x21c9c5;
               _0x23099d[_0x16d553 - 0x1] = _0x16d553 - 0x1;
               const _0x4656e8 = _0x8613b7['createVertexBuffer']({
                    'context': _0x536628,
                    'typedArray': _0x46b112,
                    'usage': _0x2e8827[_0x2bc790(0x78f)]
               })
                    , _0x319441 = []
                    , _0xf6cc8 = {
                         'aPosition': 0x0
                    };
               _0x319441[_0x2bc790(0x63e)]({
                    'index': _0xf6cc8[_0x2bc790(0x5e2)],
                    'vertexBuffer': _0x4656e8,
                    'componentsPerAttribute': 0x4,
                    'componentDatatype': _0x5407fd['FLOAT'],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x10,
                    'normalize': !0x1
               }),
                    _0xf6cc8[_0x2bc790(0xc8d)] = 0x1;
               const _0x3c0503 = _0x8613b7['createVertexBuffer']({
                    'context': _0x536628,
                    'typedArray': _0x1d35b2,
                    'usage': _0x2e8827['STATIC_DRAW']
               });
               _0x319441[_0x2bc790(0x63e)]({
                    'index': _0xf6cc8['aTexCoord0'],
                    'vertexBuffer': _0x3c0503,
                    'componentsPerAttribute': 0x2,
                    'componentDatatype': _0x5407fd[_0x2bc790(0xa80)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x8,
                    'normalize': !0x1
               });
               const _0x50b2e7 = _0x8613b7[_0x2bc790(0x8c0)]({
                    'context': _0x536628,
                    'typedArray': _0x388644,
                    'usage': _0x2e8827[_0x2bc790(0x78f)],
                    'indexDatatype': _0x3a92d3['UNSIGNED_SHORT']
               })
                    , _0x1a6eeb = _0x8613b7['createIndexBuffer']({
                         'context': _0x536628,
                         'typedArray': _0x23099d,
                         'usage': _0x2e8827['STATIC_DRAW'],
                         'indexDatatype': _0x3a92d3['UNSIGNED_SHORT']
                    })
                    , _0x563eda = {
                         'uSkylineColor': function () {
                              const _0x11bf8b = _0x2bc790;
                              return _0x44b52e[_0x11bf8b(0x884)];
                         }
                    };
               _0x44b52e['_lineCommand'] = new _0x55fbd8({
                    'primitiveType': _0x38562c[_0x2bc790(0x654)],
                    'modelMatrix': _0x44b52e[_0x2bc790(0x2f6)],
                    'boundingVolume': _0x44b52e['_boundingSphere'],
                    'pass': _0xad39e2[_0x2bc790(0x3d7)],
                    'owner': _0x44b52e,
                    'cull': !0x1
               }),
                    _0x44b52e[_0x2bc790(0x2ae)][_0x2bc790(0x896)] = new _0x36ee9d({
                         'context': _0x536628,
                         'attributes': _0x319441,
                         'indexBuffer': _0x50b2e7
                    }),
                    _0x44b52e[_0x2bc790(0x2ae)][_0x2bc790(0x940)] = _0x4ea4f6[_0x2bc790(0x6d8)]({
                         'context': _0x536628,
                         'vertexShaderSource': _0x2b8a4b,
                         'fragmentShaderSource': _0x111b69,
                         'attributeLocations': _0xf6cc8
                    }),
                    _0x44b52e[_0x2bc790(0x2ae)]['renderState'] = _0x16b3ee[_0x2bc790(0x6d8)]({
                         'cull': {
                              'enabled': !0x1
                         },
                         'depthTest': {
                              'enabled': !0x0
                         }
                    }),
                    _0x44b52e[_0x2bc790(0x2ae)][_0x2bc790(0x7b8)] = _0x563eda,
                    _0x44b52e[_0x2bc790(0x77a)] = new _0x55fbd8({
                         'primitiveType': _0x38562c['TRIANGLE_FAN'],
                         'modelMatrix': _0x44b52e[_0x2bc790(0x2f6)],
                         'boundingVolume': _0x44b52e[_0x2bc790(0x50f)],
                         'pass': _0xad39e2[_0x2bc790(0x3d7)],
                         'owner': _0x44b52e,
                         'cull': !0x1
                    }),
                    _0x44b52e[_0x2bc790(0x77a)]['vertexArray'] = new _0x36ee9d({
                         'context': _0x536628,
                         'attributes': _0x319441,
                         'indexBuffer': _0x1a6eeb
                    }),
                    _0x44b52e[_0x2bc790(0x77a)][_0x2bc790(0x940)] = _0x4ea4f6[_0x2bc790(0x6d8)]({
                         'context': _0x536628,
                         'vertexShaderSource': _0x2b8a4b,
                         'fragmentShaderSource': _0x111b69,
                         'attributeLocations': _0xf6cc8
                    }),
                    _0x44b52e['_faceCommand'][_0x2bc790(0x54e)] = _0x16b3ee[_0x2bc790(0x6d8)]({
                         'cull': {
                              'enabled': !0x1
                         },
                         'depthTest': {
                              'enabled': !0x0
                         }
                    }),
                    _0x44b52e[_0x2bc790(0x77a)]['uniformMap'] = _0x563eda;
          }
          Object[_0xc3a123(0xcde)](_0x2ec37f[_0xc3a123(0x2d4)], {
               'viewPosition': {
                    'get': function () {
                         const _0xfd4150 = _0xc3a123;
                         return this[_0xfd4150(0x27e)];
                    },
                    'set': function (_0x5da411) {
                         const _0x2ea603 = _0xc3a123;
                         this[_0x2ea603(0x27e)] = _0x5da411,
                              this[_0x2ea603(0xc8f)] = !0x0;
                    }
               },
               'color': {
                    'get': function () {
                         const _0x2f1385 = _0xc3a123;
                         return this[_0x2f1385(0x884)];
                    },
                    'set': function (_0x48195d) {
                         const _0x239efc = _0xc3a123;
                         _0x207b39(_0x48195d) && (this['_color'] = _0xfd0709[_0x239efc(0x432)](_0x48195d, this[_0x239efc(0x884)]));
                    }
               },
               'direction': {
                    'get': function () {
                         const _0x1e3fce = _0xc3a123;
                         return this[_0x1e3fce(0xaa3)];
                    },
                    'set': function (_0x370282) {
                         const _0x12816d = _0xc3a123;
                         this[_0x12816d(0xaa3)] = _0x370282,
                              this[_0x12816d(0xc8f)] = !0x0;
                    }
               },
               'pitch': {
                    'get': function () {
                         const _0x3a23fd = _0xc3a123;
                         return this[_0x3a23fd(0xd9a)];
                    },
                    'set': function (_0x3beba2) {
                         const _0x4fe740 = _0xc3a123;
                         this[_0x4fe740(0xd9a)] = _0x3beba2,
                              this[_0x4fe740(0xc8f)] = !0x0;
                    }
               },
               'displayMode': {
                    'get': function () {
                         return this['_displayMode'];
                    }
               },
               'displayStyle': {
                    'get': function () {
                         const _0x2c5a56 = _0xc3a123;
                         return this[_0x2c5a56(0x9ed)];
                    },
                    'set': function (_0x466620) {
                         const _0x103a9d = _0xc3a123;
                         this[_0x103a9d(0x9ed)] = _0x466620;
                    }
               },
               'radius': {
                    'get': function () {
                         const _0x68eeb0 = _0xc3a123;
                         return this[_0x68eeb0(0x5f3)];
                    },
                    'set': function (_0xc1070a) {
                         const _0x2e6e2c = _0xc3a123;
                         this[_0x2e6e2c(0x5f3)] = _0xc1070a,
                              this[_0x2e6e2c(0xc8f)] = !0x0;
                    }
               },
               'lineWidth': {
                    'get': function () {
                         const _0xb4ad96 = _0xc3a123;
                         return this[_0xb4ad96(0xb43)];
                    },
                    'set': function (_0x38ef33) {
                         const _0x386726 = _0xc3a123;
                         this[_0x386726(0xb43)] = _0x38ef33,
                              this[_0x386726(0xc8f)] = !0x0;
                    }
               },
               'ignoreGlobe': {
                    'get': function () {
                         const _0x3324f4 = _0xc3a123;
                         return this[_0x3324f4(0x244)];
                    },
                    'set': function (_0x2e0ea2) {
                         const _0x5de24c = _0xc3a123;
                         this[_0x5de24c(0x244)] = _0x2e0ea2,
                              _0x207b39(this[_0x5de24c(0x42c)]) && (this[_0x5de24c(0x42c)][_0x5de24c(0x87e)][_0x5de24c(0x9ec)] = !this[_0x5de24c(0x244)],
                                   this['_update'] = !0x0);
                    }
               }
          }),
               _0x2ec37f[_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x5059e3) {
                    const _0x576aef = _0xc3a123;
                    if (!_0x5059e3[_0x576aef(0x2f9)]) {
                         this[_0x576aef(0xc8f)] && (_0x207b39(this[_0x576aef(0x42c)]) || (this[_0x576aef(0x42c)] = new _0x206fd(this[_0x576aef(0x2b4)][_0x576aef(0x878)]),
                              this[_0x576aef(0x42c)][_0x576aef(0x87e)]['isGlobalVisible'] = !this['_ignoreGlobe']),
                              this[_0x576aef(0xc8f)] = !0x1,
                              _0x1bfdea(this),
                              _0x4d7436(this, this['scene'][_0x576aef(0x878)], _0x5059e3),
                              _0x5b06aa(this, this[_0x576aef(0x2b4)][_0x576aef(0x878)]));
                         for (let _0x1ecb14 = 0x0; _0x1ecb14 < this[_0x576aef(0x54c)][_0x576aef(0xcd3)][_0x576aef(0x72b)]; _0x1ecb14++) {
                              const _0x1e3e3d = this[_0x576aef(0x54c)][_0x576aef(0xcd3)][_0x1ecb14];
                              _0x207b39(_0x1e3e3d) && _0x207b39(_0x1e3e3d[_0x576aef(0x2b7)]) && _0x5059e3['commandList'][_0x576aef(0x63e)](_0x1e3e3d[_0x576aef(0x2b7)]);
                         }
                         this[_0x576aef(0x9ed)] === this[_0x576aef(0x224)][_0x576aef(0xa64)] ? _0x207b39(this[_0x576aef(0x2ae)]) && this[_0x576aef(0xb43)] < 0x2 && _0x5059e3[_0x576aef(0x7c3)]['push'](this['_lineCommand']) : _0x207b39(this[_0x576aef(0x77a)]) && _0x5059e3[_0x576aef(0x7c3)][_0x576aef(0x63e)](this[_0x576aef(0x77a)]);
                    }
               }
               ,
               _0x2ec37f[_0xc3a123(0x2d4)][_0xc3a123(0x7cd)] = function () {
                    const _0x5c5ad6 = _0xc3a123;
                    if (this['_update'])
                         return;
                    const _0x5eabc7 = this['scene'][_0x5c5ad6(0x878)]
                         , _0x45255d = _0x5eabc7[_0x5c5ad6(0x79d)]({
                              'framebuffer': this[_0x5c5ad6(0x42c)][_0x5c5ad6(0x28d)]
                         });
                    _0x5eabc7[_0x5c5ad6(0x4a4)];
                    const _0xa3687b = []
                         , _0x231a6b = []
                         , _0x10213e = []
                         , _0x5060a3 = []
                         , _0x4e7b2e = new _0x182d31()
                         , _0x4a04f8 = new _0x182d31(0x1, 0x1 / 0xff, 0x1 / 0xfe01, 0x1 / 0x99246ff);
                    for (let _0x241e1b = 0x0; _0x241e1b < _0x5eabc7[_0x5c5ad6(0x4a4)]; _0x241e1b++) {
                         let _0x13044a = 0x0;
                         for (let _0x4f730a = _0x5eabc7[_0x5c5ad6(0x6ab)] - 0x1; _0x4f730a > -0x1; _0x4f730a--) {
                              const _0x5b6557 = 0x4 * (_0x5eabc7['drawingBufferWidth'] * _0x4f730a + _0x241e1b)
                                   , _0xa88236 = _0x182d31[_0x5c5ad6(0xb04)](_0x45255d, _0x5b6557, _0x4e7b2e);
                              if (_0x182d31[_0x5c5ad6(0x3fc)](_0xa88236, 0xff, _0xa88236),
                                   _0x13044a = _0x182d31['dot'](_0xa88236, _0x4a04f8),
                                   _0x13044a > 0x0) {
                                   _0xa3687b['push'](_0x241e1b / _0x5eabc7[_0x5c5ad6(0x4a4)]),
                                        _0x231a6b[_0x5c5ad6(0x63e)](_0x4f730a / _0x5eabc7[_0x5c5ad6(0x6ab)]),
                                        _0x10213e['push'](_0x241e1b),
                                        _0x5060a3[_0x5c5ad6(0x63e)](_0x4f730a);
                                   break;
                              }
                         }
                    }
                    return {
                         'x': _0xa3687b,
                         'y': _0x231a6b,
                         'drawingBufferXArr': _0x10213e,
                         'drawingBufferYArr': _0x5060a3
                    };
               }
               ,
               _0x2ec37f[_0xc3a123(0x2d4)][_0xc3a123(0x3b7)] = function () {
                    const _0x4719a4 = _0xc3a123;
                    if (this[_0x4719a4(0xc8f)])
                         return;
                    const _0x5d7d53 = []
                         , _0x580452 = []
                         , _0x1d8be6 = [];
                    let _0x53b7f0;
                    for (let _0x3fab3d = 0x0, _0x325dc9 = this[_0x4719a4(0xae3)][_0x4719a4(0x72b)]; _0x3fab3d < _0x325dc9; _0x3fab3d++)
                         _0x53b7f0 = _0x1ae9cc[_0x4719a4(0x2d0)](this['_points'][_0x3fab3d]),
                              _0x5d7d53[_0x4719a4(0x63e)](_0x53b7f0[_0x4719a4(0xb4c)] * _0x4c0a8e['DEGREES_PER_RADIAN']),
                              _0x580452[_0x4719a4(0x63e)](_0x53b7f0['latitude'] * _0x4c0a8e[_0x4719a4(0xb76)]),
                              _0x1d8be6[_0x4719a4(0x63e)](_0x53b7f0[_0x4719a4(0x48e)]);
                    return {
                         'x': _0x5d7d53,
                         'y': _0x580452,
                         'z': _0x1d8be6
                    };
               }
               ,
               _0x2ec37f['prototype'][_0xc3a123(0x692)] = function (_0x45ea82) {
                    const _0x2c310e = _0xc3a123
                         , _0x1f18cb = _0x45ea82[_0x2c310e(0xca3)]
                         , _0x357aaf = _0x45ea82[_0x2c310e(0x5a4)];
                    if (!_0x207b39(_0x1f18cb) || !_0x207b39(_0x357aaf))
                         return !0x1;
                    let _0x117e2f = this[_0x2c310e(0x54c)]['get'](_0x1f18cb);
                    if (_0x207b39(_0x117e2f))
                         return !0x1;
                    _0x117e2f = new LimitBody(_0x357aaf, this),
                         this[_0x2c310e(0x54c)][_0x2c310e(0x320)](_0x1f18cb, _0x117e2f),
                         _0x207b39(this['_depthBuffer']) && (this[_0x2c310e(0x42c)][_0x2c310e(0x9b4)] = !0x0);
               }
               ,
               _0x2ec37f[_0xc3a123(0x2d4)]['removeLimitbody'] = function (_0x44421a) {
                    const _0x2edccf = _0xc3a123;
                    return !!this[_0x2edccf(0x54c)][_0x2edccf(0xced)](_0x44421a);
               }
               ,
               _0x2ec37f[_0xc3a123(0x2d4)][_0xc3a123(0x784)] = function () {
                    const _0x40d459 = _0xc3a123;
                    for (let _0x5aac3b = 0x0; _0x5aac3b < this[_0x40d459(0x54c)][_0x40d459(0xcd3)][_0x40d459(0x72b)]; _0x5aac3b++)
                         this[_0x40d459(0x54c)][_0x40d459(0xcd3)][_0x5aac3b][_0x40d459(0x9bb)](),
                              this[_0x40d459(0x54c)][_0x40d459(0xcd3)][_0x5aac3b] = null;
                    this[_0x40d459(0x54c)]['removeAll']();
               }
               ,
               _0x2ec37f['prototype'][_0xc3a123(0x6fe)] = function () {
                    const _0x263338 = _0xc3a123
                         , _0x5e7413 = this[_0x263338(0x3b7)]();
                    if (!_0x207b39(_0x5e7413))
                         return;
                    const _0x57f0a2 = _0x5e7413['x']
                         , _0x2382c7 = _0x5e7413['y']
                         , _0x36beb1 = _0x5e7413['z'];
                    let _0x3a8821, _0x8acd20, _0x40c68a;
                    const _0x51b5c8 = new Point3Ds();
                    for (let _0x2a6646 = 0x0, _0x282830 = _0x57f0a2[_0x263338(0x72b)]; _0x2a6646 < _0x282830; _0x2a6646++)
                         _0x3a8821 = _0x57f0a2[_0x2a6646],
                              _0x8acd20 = _0x2382c7[_0x2a6646],
                              _0x40c68a = _0x36beb1[_0x2a6646],
                              _0x51b5c8[_0x263338(0x2ef)](new Point3D(_0x3a8821, _0x8acd20, _0x40c68a));
                    return {
                         'geoLine3D': new GeoLine3D([_0x51b5c8]),
                         'viewPos': new Point3D(this[_0x263338(0x27e)][0x0], this[_0x263338(0x27e)][0x1], this[_0x263338(0x27e)][0x2])
                    };
               }
               ,
               _0x2ec37f['prototype'][_0xc3a123(0xbb8)] = function () {
                    const _0xf569ea = _0xc3a123;
                    this[_0xf569ea(0x483)] || (this[_0xf569ea(0x483)] = !0x0,
                         this['scene'][_0xf569ea(0xa7c)][_0xf569ea(0x2ef)](this),
                         this[_0xf569ea(0x800)] = this[_0xf569ea(0x2b4)][_0xf569ea(0x6d2)]['addEventListener'](_0xf00d68 => {
                              const _0x1668f8 = _0xf569ea;
                              _0x207b39(this['_depthBuffer']) && this[_0x1668f8(0x42c)][_0x1668f8(0x61e)](_0xf00d68);
                         }
                              , this));
               }
               ,
               _0x2ec37f[_0xc3a123(0x2d4)][_0xc3a123(0x6bf)] = function () {
                    const _0x27c303 = _0xc3a123;
                    this[_0x27c303(0x483)] && (this['isBuild'] = !0x1,
                         this['removeAllLimitBody'](),
                         this[_0x27c303(0xa82)][_0x27c303(0x6c9)](),
                         this[_0x27c303(0x800)](),
                         this[_0x27c303(0x2b4)][_0x27c303(0xa7c)][_0x27c303(0xced)](this));
               }
               ,
               _0x2ec37f['prototype'][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x2ec37f[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x222cc2 = _0xc3a123;
                    return this[_0x222cc2(0x42c)] = this[_0x222cc2(0x42c)] && this['_depthBuffer'][_0x222cc2(0x9bb)](),
                         _0x1bfdea(this),
                         this['removeAllLimitBody'](),
                         this[_0x222cc2(0x2b4)][_0x222cc2(0xa7c)][_0x222cc2(0xced)](this),
                         _0x44c719(this);
               }
               ;
          var _0x2afc5e = '\x0a#ifdef\x20GL_EXT_frag_depth\x0a#extension\x20GL_EXT_frag_depth\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a\x0auniform\x20vec4\x20uVisibleAreaColor;\x0auniform\x20vec4\x20uHiddenAreaColor;\x0auniform\x20vec2\x20uTextureSize;\x0auniform\x20sampler2D\x20uGlobalDepthTexture;\x0auniform\x20sampler2D\x20uTexture;\x0auniform\x20mat4\x20uRenderTextureMatrix;\x0avarying\x20vec4\x20vClipPos;\x0a\x0afloat\x20getDepth(in\x20vec4\x20depth)\x0a{\x0a\x20\x20\x20\x20float\x20z_window\x20=\x20czm_unpackDepth(depth);\x0a\x20\x20\x20\x20return\x20z_window;\x0a}\x0a\x0afloat\x20getDepthFromShadowMap(in\x20sampler2D\x20viewShedTexture,\x20in\x20vec4\x20texCoord)\x0a{\x0a\x09vec2\x20tCoord;\x0a\x20\x20\x20\x20tCoord\x20=\x20texCoord.xy\x20*\x20uTextureSize\x20-\x200.5;\x0a\x09float\x20x0\x20=\x20floor(tCoord.x);\x0a\x09float\x20x1\x20=\x20ceil(tCoord.x);\x0a\x09float\x20y0\x20=\x20floor(tCoord.y);\x0a\x09float\x20y1\x20=\x20ceil(tCoord.y);\x0a\x09vec2\x20invTexSize\x20=\x201.0\x20/\x20uTextureSize;\x0a\x09vec2\x20t00\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t10\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t01\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t11\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09float\x20z00\x20=\x20getDepth(texture2D(uTexture,\x20t00));\x0a\x09float\x20z10\x20=\x20getDepth(texture2D(uTexture,\x20t01));\x0a\x09float\x20z01\x20=\x20getDepth(texture2D(uTexture,\x20t10));\x0a\x09float\x20z11\x20=\x20getDepth(texture2D(uTexture,\x20t11));\x0a\x09float\x20depth\x20=\x20max(max(z00,\x20z01),\x20max(z10,\x20z11));\x0a\x09return\x20depth;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20depthTexCoord\x20=\x20vClipPos\x20/\x20vClipPos.w;\x0a\x09depthTexCoord.xy\x20=\x20depthTexCoord.xy\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20sceneDepth\x20=\x20czm_unpackDepth(texture2D(uGlobalDepthTexture,\x20depthTexCoord.xy));\x0a\x09sceneDepth\x20=\x20sceneDepth\x20*\x202.0\x20-\x201.0;\x0a\x09vec4\x20pos\x20=\x20vClipPos;\x0a\x09pos.z\x20=\x20sceneDepth\x20*\x20pos.w;\x0a\x09vec4\x20renderTextureCoord\x20=\x20uRenderTextureMatrix\x20*\x20pos;\x0a\x09vec4\x20texCoord\x20=\x20renderTextureCoord\x20/\x20renderTextureCoord.w;\x0a\x09texCoord.xyz\x20=\x20texCoord.xyz\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20depth\x20=\x20getDepthFromShadowMap(uTexture,\x20texCoord);\x0a\x09float\x20dxc\x20=\x20abs(dFdx(texCoord.z));\x0a\x09float\x20dyc\x20=\x20abs(dFdy(texCoord.z));\x0a\x09float\x20dF\x20=\x20max(dxc,\x20dyc)\x20*\x203.0;\x0a\x09float\x20bias\x20=\x201.0e-6\x20+\x20dF;\x0a\x09float\x20c\x20=\x20float(depth\x20+\x20bias\x20<\x20texCoord.z);\x0a\x09vec4\x20finalColor\x20=\x20mix(uVisibleAreaColor,\x20uHiddenAreaColor,\x20vec4(c));\x0a\x09if(finalColor.a\x20<\x200.1)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x09gl_FragColor\x20=\x20czm_gammaCorrect(finalColor);\x0a}\x0a';
          function _0x167ba2(_0x15db6f) {
               const _0x8619c4 = _0xc3a123;
               this[_0x8619c4(0x2b4)] = _0x15db6f,
                    this[_0x8619c4(0xb25)] = new _0x206fd(_0x15db6f[_0x8619c4(0xabe)]),
                    this['globalDepthBuffer'] = new _0x206fd(_0x15db6f['_context']),
                    this[_0x8619c4(0x454)] = 0x14,
                    this[_0x8619c4(0x27e)] = [0x0, 0x0, 0x0],
                    this['_direction'] = 0x0,
                    this['_pitch'] = 0x0,
                    this[_0x8619c4(0xa37)] = 0x5a,
                    this[_0x8619c4(0xbe8)] = 0x3c,
                    this['_distance'] = 0x64,
                    this[_0x8619c4(0x313)] = new Adapter['Color'](0x0, 0x1, 0x0, 0.5),
                    this['_hiddenAreaColor'] = new Adapter[(_0x8619c4(0x821))](0x1, 0x0, 0x0, 0.5),
                    this['_hintLineColor'] = new Adapter['Color'](0x1, 0x1, 0x1, 0x1),
                    this['boundingSphere'] = new Adapter[(_0x8619c4(0xc1c))](),
                    this['viewProjectionMatrix'] = new Adapter[(_0x8619c4(0xcdf))](),
                    this[_0x8619c4(0x414)] = new Adapter[(_0x8619c4(0xcdf))](),
                    this[_0x8619c4(0x543)] = new Adapter[(_0x8619c4(0xcdf))](),
                    this[_0x8619c4(0x486)] = void 0x0,
                    this[_0x8619c4(0xcdb)] = void 0x0,
                    this[_0x8619c4(0xafd)] = void 0x0,
                    this[_0x8619c4(0x29a)] = !0x1,
                    this[_0x8619c4(0x483)] = !0x1;
          }
          function _0xeb5a92(_0x563b4d) {
               const _0x10913e = _0xc3a123
                    , _0x47860c = _0x563b4d[_0x10913e(0x454)]
                    , _0xf3a12f = _0x563b4d[_0x10913e(0x454)] + 0x1
                    , _0x4daa0c = _0x563b4d[_0x10913e(0x95c)];
               let _0x3b18f2 = _0xf3a12f * _0xf3a12f + 0x1
                    , _0x20d252 = Adapter['ComponentDatatype'][_0x10913e(0x8bc)](Adapter[_0x10913e(0x5fa)][_0x10913e(0xa80)], 0x3 * _0x3b18f2)
                    , _0x5f1fd6 = _0x563b4d[_0x10913e(0xa37)] * Adapter[_0x10913e(0x417)]['RADIANS_PER_DEGREE']
                    , _0x406314 = _0x563b4d[_0x10913e(0xbe8)] * Adapter[_0x10913e(0x417)]['RADIANS_PER_DEGREE']
                    , _0x1253e8 = Math[_0x10913e(0x3c1)](0.5 * _0x406314)
                    , _0x706cbc = Math['PI'] - 0.5 * _0x5f1fd6
                    , _0x5afb9c = _0x4daa0c * _0x1253e8
                    , _0x26276d = 0x0
                    , _0x201374 = 0x0
                    , _0xa450e5 = _0x5f1fd6 / _0x47860c
                    , _0x1860a4 = 0x3;
               for (let _0x2a1474 = 0x0; _0x2a1474 < _0xf3a12f; _0x2a1474++) {
                    _0x26276d = _0x706cbc + _0x2a1474 * _0xa450e5;
                    let _0xabc0c0 = _0x5afb9c / (_0x4daa0c / Math[_0x10913e(0x2c7)](_0x26276d))
                         , _0x44f002 = Math[_0x10913e(0x5af)](_0xabc0c0)
                         , _0x482786 = -_0x44f002
                         , _0x196ae2 = 0x2 * _0x44f002 / _0x47860c;
                    for (let _0xe3aaa7 = 0x0; _0xe3aaa7 < _0xf3a12f; _0xe3aaa7++) {
                         _0x201374 = _0x482786 + _0xe3aaa7 * _0x196ae2;
                         let _0x4b16a4 = _0x4daa0c * Math['cos'](_0x201374) * Math[_0x10913e(0xa86)](_0x26276d)
                              , _0x2cbc8a = _0x4daa0c * Math['sin'](_0x201374)
                              , _0x368008 = _0x4daa0c * Math[_0x10913e(0x2c7)](_0x201374) * Math[_0x10913e(0x2c7)](_0x26276d);
                         _0x20d252[_0x1860a4++] = _0x4b16a4,
                              _0x20d252[_0x1860a4++] = _0x2cbc8a,
                              _0x20d252[_0x1860a4++] = _0x368008;
                    }
               }
               return _0x20d252;
          }
          function _0x1cb10c(_0x2e8f85) {
               const _0x18ff21 = _0xc3a123
                    , _0x37ff50 = _0x2e8f85['segmentCount']
                    , _0x594ba9 = _0x37ff50 + 0x1;
               let _0x212179 = _0x37ff50 * _0x37ff50 * 0x3 * 0x2 + 0x3 * _0x37ff50 * 0x4
                    , _0x51d09c = Adapter[_0x18ff21(0x5fa)]['createTypedArray'](Adapter['ComponentDatatype']['UNSIGNED_SHORT'], _0x212179)
                    , _0x41afe0 = 0x0;
               for (let _0x2e604a = 0x0; _0x2e604a < _0x37ff50; _0x2e604a++)
                    for (let _0x22b1e = 0x0; _0x22b1e < _0x37ff50; _0x22b1e++)
                         _0x51d09c[_0x41afe0++] = 0x1 + _0x2e604a + _0x22b1e * _0x594ba9,
                              _0x51d09c[_0x41afe0++] = 0x1 + _0x2e604a + 0x1 + _0x22b1e * _0x594ba9,
                              _0x51d09c[_0x41afe0++] = 0x1 + _0x2e604a + (_0x22b1e + 0x1) * _0x594ba9,
                              _0x51d09c[_0x41afe0++] = 0x1 + _0x2e604a + 0x1 + _0x22b1e * _0x594ba9,
                              _0x51d09c[_0x41afe0++] = 0x1 + _0x2e604a + 0x1 + (_0x22b1e + 0x1) * _0x594ba9,
                              _0x51d09c[_0x41afe0++] = 0x1 + _0x2e604a + (_0x22b1e + 0x1) * _0x594ba9;
               for (let _0xad8091 = 0x0; _0xad8091 < _0x37ff50; _0xad8091++)
                    _0x51d09c[_0x41afe0++] = _0xad8091 + 0x1 + 0x1,
                         _0x51d09c[_0x41afe0++] = _0xad8091 + 0x1,
                         _0x51d09c[_0x41afe0++] = 0x0,
                         _0x51d09c[_0x41afe0++] = 0x0,
                         _0x51d09c[_0x41afe0++] = _0xad8091 + _0x37ff50 * _0x594ba9 + 0x1,
                         _0x51d09c[_0x41afe0++] = _0xad8091 + 0x1 + _0x37ff50 * _0x594ba9 + 0x1;
               for (let _0x20ca9e = 0x0; _0x20ca9e < _0x37ff50; _0x20ca9e++)
                    _0x51d09c[_0x41afe0++] = 0x0,
                         _0x51d09c[_0x41afe0++] = _0x20ca9e * _0x594ba9 + 0x1,
                         _0x51d09c[_0x41afe0++] = (_0x20ca9e + 0x1) * _0x594ba9 + 0x1,
                         _0x51d09c[_0x41afe0++] = _0x37ff50 + (_0x20ca9e + 0x1) * _0x594ba9 + 0x1,
                         _0x51d09c[_0x41afe0++] = _0x37ff50 + _0x20ca9e * _0x594ba9 + 0x1,
                         _0x51d09c[_0x41afe0++] = 0x0;
               return _0x51d09c;
          }
          function _0x3206d7(_0x3f1b88) {
               const _0x4060b5 = _0xc3a123
                    , _0x37a2d9 = _0x3f1b88[_0x4060b5(0x454)]
                    , _0x4018be = _0x37a2d9 + 0x1
                    , _0x3b950d = 0x2 * (0x4 + 0x5 * _0x37a2d9 + 0x2 * _0x37a2d9 * 0x3);
               let _0x383a67 = Adapter[_0x4060b5(0x5fa)][_0x4060b5(0x8bc)](Adapter[_0x4060b5(0x5fa)][_0x4060b5(0x744)], _0x3b950d)
                    , _0x88d71a = 0x0;
               _0x383a67[_0x88d71a++] = 0x0,
                    _0x383a67[_0x88d71a++] = 0x1,
                    _0x383a67[_0x88d71a++] = 0x0,
                    _0x383a67[_0x88d71a++] = _0x4018be,
                    _0x383a67[_0x88d71a++] = 0x0,
                    _0x383a67[_0x88d71a++] = _0x37a2d9 * _0x4018be + 0x1,
                    _0x383a67[_0x88d71a++] = 0x0,
                    _0x383a67[_0x88d71a++] = _0x4018be * _0x4018be;
               for (let _0x3767cd = 0x0; _0x3767cd < 0x5; _0x3767cd++)
                    for (let _0x5b610f = 0x0; _0x5b610f < _0x37a2d9; _0x5b610f++)
                         _0x383a67[_0x88d71a++] = 0x1 + _0x5b610f + 0x5 * _0x4018be * _0x3767cd,
                              _0x383a67[_0x88d71a++] = 0x1 + (_0x5b610f + 0x1) + 0x5 * _0x4018be * _0x3767cd;
               for (let _0x3e8c83 = 0x0; _0x3e8c83 < 0x5; _0x3e8c83++)
                    for (let _0x361708 = 0x0; _0x361708 < _0x37a2d9; _0x361708++)
                         _0x383a67[_0x88d71a++] = 0x1 + _0x4018be * _0x361708 + 0x5 * _0x3e8c83,
                              _0x383a67[_0x88d71a++] = 0x1 + _0x4018be * (_0x361708 + 0x1) + 0x5 * _0x3e8c83;
               return _0x383a67;
          }
          Object[_0xc3a123(0xcde)](_0x167ba2[_0xc3a123(0x2d4)], {
               'viewPosition': {
                    'get': function () {
                         const _0x5baeca = _0xc3a123;
                         return this[_0x5baeca(0x27e)];
                    },
                    'set': function (_0x21d0c0) {
                         const _0x3da996 = _0xc3a123;
                         this[_0x3da996(0x27e)] = _0x21d0c0;
                    }
               },
               'direction': {
                    'get': function () {
                         const _0x5cf8ab = _0xc3a123;
                         return this[_0x5cf8ab(0xaa3)];
                    },
                    'set': function (_0x3189f8) {
                         const _0x4567dc = _0xc3a123;
                         this[_0x4567dc(0xaa3)] = _0x3189f8,
                              this[_0x4567dc(0x29a)] = !0x0;
                    }
               },
               'pitch': {
                    'get': function () {
                         const _0x52cddc = _0xc3a123;
                         return this[_0x52cddc(0xd9a)];
                    },
                    'set': function (_0x28da2a) {
                         const _0x2e6b87 = _0xc3a123;
                         this[_0x2e6b87(0xd9a)] = _0x28da2a,
                              this['dirty'] = !0x0;
                    }
               },
               'horizontalFov': {
                    'get': function () {
                         return this['_horizontalFov'];
                    },
                    'set': function (_0x22c2f4) {
                         const _0x3378d8 = _0xc3a123;
                         this[_0x3378d8(0xa37)] = _0x22c2f4,
                              this[_0x3378d8(0x29a)] = !0x0;
                    }
               },
               'verticalFov': {
                    'get': function () {
                         const _0x445300 = _0xc3a123;
                         return this[_0x445300(0xbe8)];
                    },
                    'set': function (_0xfd771a) {
                         this['_verticalFov'] = _0xfd771a,
                              this['dirty'] = !0x0;
                    }
               },
               'distance': {
                    'get': function () {
                         const _0x5ec22f = _0xc3a123;
                         return this[_0x5ec22f(0x95c)];
                    },
                    'set': function (_0x3bec29) {
                         const _0x29e4bc = _0xc3a123;
                         this['_distance'] = Math[_0x29e4bc(0x590)](_0x3bec29, 0x0),
                              this['dirty'] = !0x0;
                    }
               }
          }),
               _0x167ba2[_0xc3a123(0x2d4)]['_updateCamera'] = function (_0x145a47) {
                    const _0x1a8d1e = _0xc3a123;
                    let _0x5bd8bb = _0x145a47['camera']
                         , _0x290213 = this[_0x1a8d1e(0xa37)] * Adapter[_0x1a8d1e(0x417)][_0x1a8d1e(0x89b)]
                         , _0x196e6b = this[_0x1a8d1e(0xbe8)] * Adapter[_0x1a8d1e(0x417)]['RADIANS_PER_DEGREE']
                         , _0xed564c = Math[_0x1a8d1e(0x3c1)](0.5 * _0x290213) / Math[_0x1a8d1e(0x3c1)](0.5 * _0x196e6b);
                    this['_distance'];
                    let _0x694960 = Math[_0x1a8d1e(0x590)](this[_0x1a8d1e(0x95c)], 0xa)
                         , _0x43de4d = this[_0x1a8d1e(0xaa3)] * Adapter[_0x1a8d1e(0x417)]['RADIANS_PER_DEGREE']
                         , _0xe14918 = this[_0x1a8d1e(0xd9a)] * Adapter[_0x1a8d1e(0x417)]['RADIANS_PER_DEGREE']
                         , _0x36c935 = Adapter['Cartesian3'][_0x1a8d1e(0x7ac)](this[_0x1a8d1e(0x27e)])[0x0]
                         , _0x345eb4 = _0x5bd8bb[_0x1a8d1e(0x8a1)]['aspectRatio']
                         , _0x76bc23 = _0x5bd8bb[_0x1a8d1e(0x8a1)][_0x1a8d1e(0x4c4)]
                         , _0x5f29d0 = _0x5bd8bb['frustum'][_0x1a8d1e(0x3ae)]
                         , _0x1a27e6 = _0x5bd8bb[_0x1a8d1e(0x8a1)]['far']
                         , _0x11d539 = new Adapter[(_0x1a8d1e(0x25b))]()
                         , _0x3d799d = _0x5bd8bb[_0x1a8d1e(0xcca)]
                         , _0x2abab0 = _0x5bd8bb[_0x1a8d1e(0x929)];
                    Adapter['Cartesian3'][_0x1a8d1e(0x432)](_0x5bd8bb[_0x1a8d1e(0x5a4)], _0x11d539);
                    let _0xd22d23 = _0x145a47[_0x1a8d1e(0x399)]
                         , _0x5a2223 = this[_0x1a8d1e(0x2b4)][_0x1a8d1e(0xdb7)];
                    this[_0x1a8d1e(0xb25)]['isUpdate'] = !0x0,
                         this['cameraDepthBuffer'][_0x1a8d1e(0x7e8)] = _0x11911b => {
                              const _0x188a32 = _0x1a8d1e;
                              _0x11911b['useLogDepth'] = !0x1,
                                   _0x345eb4 = _0x5bd8bb[_0x188a32(0x8a1)]['aspectRatio'],
                                   _0x76bc23 = _0x5bd8bb['frustum'][_0x188a32(0x4c4)],
                                   _0x5f29d0 = _0x5bd8bb[_0x188a32(0x8a1)][_0x188a32(0x3ae)],
                                   _0x1a27e6 = _0x5bd8bb[_0x188a32(0x8a1)][_0x188a32(0xba6)],
                                   _0x3d799d = _0x5bd8bb[_0x188a32(0xcca)],
                                   _0x2abab0 = _0x5bd8bb[_0x188a32(0x929)],
                                   Adapter['Cartesian3'][_0x188a32(0x432)](_0x5bd8bb[_0x188a32(0x5a4)], _0x11d539),
                                   _0x5bd8bb['frustum'][_0x188a32(0x3e3)] = _0xed564c,
                                   _0x5bd8bb[_0x188a32(0x8a1)][_0x188a32(0x4c4)] = _0x290213,
                                   _0x5bd8bb[_0x188a32(0x8a1)][_0x188a32(0x3ae)] = 0x1,
                                   _0x5bd8bb[_0x188a32(0x8a1)][_0x188a32(0xba6)] = _0x694960 + 0x1,
                                   _0x5bd8bb[_0x188a32(0xc69)]({
                                        'destination': _0x36c935,
                                        'orientation': {
                                             'heading': _0x43de4d,
                                             'pitch': _0xe14918,
                                             'roll': _0x5bd8bb[_0x188a32(0x8f0)]
                                        }
                                   });
                              const _0x3e7820 = this[_0x188a32(0x2b4)][_0x188a32(0xb74)][_0x188a32(0xb74)];
                              for (let _0x1a3aeb = 0x0; _0x1a3aeb < _0x3e7820[_0x188a32(0x72b)]; ++_0x1a3aeb) {
                                   const _0x2abc01 = _0x3e7820[_0x1a3aeb];
                                   Adapter[_0x188a32(0x336)](_0x2abc01[_0x188a32(0x747)]) || (_0x2abc01[_0x188a32(0x651)] = _0x2abc01[_0x188a32(0xc98)],
                                        _0x2abc01[_0x188a32(0xc98)] = !0x1);
                              }
                              Adapter[_0x188a32(0xcdf)][_0x188a32(0x59d)](_0x5bd8bb[_0x188a32(0x8a1)]['projectionMatrix'], _0x5bd8bb['viewMatrix'], this['viewProjectionMatrix']),
                                   Adapter[_0x188a32(0xcdf)]['clone'](_0x5bd8bb[_0x188a32(0xabf)], this['invViewMatrix']),
                                   Adapter[_0x188a32(0x25b)][_0x188a32(0x432)](Adapter[_0x188a32(0x25b)]['ZERO'], this['boundingSphere'][_0x188a32(0xa41)]),
                                   this[_0x188a32(0xa01)][_0x188a32(0x38b)] = this[_0x188a32(0x95c)],
                                   Adapter[_0x188a32(0xc1c)][_0x188a32(0x335)](this[_0x188a32(0xa01)], this[_0x188a32(0x414)], this[_0x188a32(0xa01)]);
                         }
                         ,
                         this[_0x1a8d1e(0xb25)][_0x1a8d1e(0x8b1)] = _0x223fa8 => {
                              const _0xc49eea = _0x1a8d1e;
                              _0x5bd8bb[_0xc49eea(0xc69)]({
                                   'destination': _0x11d539,
                                   'orientation': {
                                        'heading': _0x3d799d,
                                        'pitch': _0x2abab0,
                                        'roll': _0x5bd8bb[_0xc49eea(0x8f0)]
                                   },
                                   'convert': !0x1
                              }),
                                   _0x5bd8bb[_0xc49eea(0x8a1)][_0xc49eea(0x3e3)] = _0x345eb4,
                                   _0x5bd8bb[_0xc49eea(0x8a1)][_0xc49eea(0x4c4)] = _0x76bc23,
                                   _0x5bd8bb[_0xc49eea(0x8a1)]['near'] = _0x5f29d0,
                                   _0x5bd8bb[_0xc49eea(0x8a1)]['far'] = _0x1a27e6;
                              const _0x2fd50f = this[_0xc49eea(0x2b4)]['_primitives'][_0xc49eea(0xb74)];
                              for (let _0x52eb64 = 0x0; _0x52eb64 < _0x2fd50f['length']; ++_0x52eb64) {
                                   const _0x522d18 = _0x2fd50f[_0x52eb64];
                                   Adapter['defined'](_0x522d18[_0xc49eea(0x747)]) || (_0x522d18[_0xc49eea(0xc98)] = _0x522d18[_0xc49eea(0x651)]);
                              }
                              this[_0xc49eea(0xb25)][_0xc49eea(0x9b4)] = !0x1,
                                   _0x223fa8['useLogDepth'] = _0xd22d23;
                         }
                         ,
                         this[_0x1a8d1e(0x6e4)]['isUpdate'] = !0x0,
                         this['globalDepthBuffer']['beginFunc'] = _0xe35a89 => {
                              const _0xdd36d8 = _0x1a8d1e;
                              _0xe35a89[_0xdd36d8(0x399)] = !0x1,
                                   _0x5bd8bb[_0xdd36d8(0x8a1)][_0xdd36d8(0x3ae)] = 0xa,
                                   this['scene'][_0xdd36d8(0xdb7)] = this[_0xdd36d8(0x2b4)][_0xdd36d8(0x2f0)];
                         }
                         ,
                         this[_0x1a8d1e(0x6e4)]['endFunc'] = _0x1d3f6f => {
                              const _0x5d83cc = _0x1a8d1e;
                              if (this[_0x5d83cc(0x2b4)]['view']['frustumCommandsList'][_0x5d83cc(0x72b)] > 0x0) {
                                   let _0x19d966 = this[_0x5d83cc(0x2b4)][_0x5d83cc(0x65a)][_0x5d83cc(0x289)][0x0];
                                   _0x5bd8bb[_0x5d83cc(0x8a1)][_0x5d83cc(0x3ae)] = _0x19d966[_0x5d83cc(0x3ae)],
                                        _0x5bd8bb[_0x5d83cc(0x8a1)][_0x5d83cc(0xba6)] = _0x19d966[_0x5d83cc(0xba6)];
                              }
                              let _0x243f08 = Adapter['Matrix4'][_0x5d83cc(0x499)](_0x5bd8bb[_0x5d83cc(0x8a1)][_0x5d83cc(0x74a)], new Adapter[(_0x5d83cc(0xcdf))]())
                                   , _0x311e17 = Adapter[_0x5d83cc(0xcdf)][_0x5d83cc(0x59d)](_0x5bd8bb[_0x5d83cc(0xabf)], _0x243f08, new Adapter[(_0x5d83cc(0xcdf))]());
                              Adapter['Matrix4']['multiply'](this[_0x5d83cc(0xb94)], _0x311e17, this[_0x5d83cc(0x543)]),
                                   _0x1d3f6f[_0x5d83cc(0x399)] = _0xd22d23,
                                   this[_0x5d83cc(0x2b4)][_0x5d83cc(0xdb7)] = _0x5a2223,
                                   _0x5bd8bb[_0x5d83cc(0x8a1)][_0x5d83cc(0x3ae)] = _0x5f29d0,
                                   _0x5bd8bb['frustum'][_0x5d83cc(0xba6)] = _0x1a27e6;
                         }
                         ;
               }
               ,
               _0x167ba2[_0xc3a123(0x2d4)][_0xc3a123(0xba1)] = function (_0x599af3) {
                    const _0x3c4656 = _0xc3a123;
                    let _0x4c486f = _0xeb5a92(this)
                         , _0x1e838e = _0x1cb10c(this)
                         , _0x2be84a = _0x3206d7(this)
                         , _0x1858cb = _0x599af3[_0x3c4656(0x878)]
                         , _0x419ec0 = Adapter[_0x3c4656(0xd3c)][_0x3c4656(0x856)]({
                              'context': _0x1858cb,
                              'typedArray': _0x4c486f,
                              'usage': Adapter['BufferUsage'][_0x3c4656(0x78f)]
                         })
                         , _0x1d71f6 = Adapter['Buffer'][_0x3c4656(0x8c0)]({
                              'context': _0x1858cb,
                              'typedArray': _0x1e838e,
                              'usage': Adapter[_0x3c4656(0xbd0)]['STATIC_DRAW'],
                              'indexDatatype': Adapter[_0x3c4656(0x36b)][_0x3c4656(0x744)]
                         })
                         , _0x1f22a7 = [{
                              'index': 0x0,
                              'vertexBuffer': _0x419ec0,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Adapter[_0x3c4656(0x5fa)]['FLOAT'],
                              'offsetInBytes': 0x0,
                              'strideInBytes': 0xc,
                              'normalize': !0x1
                         }]
                         , _0x40dd6f = {
                              'aPosition': 0x0
                         }
                         , _0x56724f = new Adapter[(_0x3c4656(0x8e5))]({
                              'context': _0x1858cb,
                              'attributes': _0x1f22a7,
                              'indexBuffer': _0x1d71f6
                         })
                         , _0x1e21b6 = new Adapter[(_0x3c4656(0x62f))]({
                              'sources': [_0x199682]
                         })
                         , _0x5d2745 = new Adapter['ShaderSource']({
                              'sources': [_0x2afc5e]
                         })
                         , _0x383160 = Adapter['ShaderProgram']['fromCache']({
                              'context': _0x1858cb,
                              'vertexShaderSource': _0x1e21b6,
                              'fragmentShaderSource': _0x5d2745,
                              'attributeLocations': _0x40dd6f
                         })
                         , _0x2b6847 = Adapter[_0x3c4656(0x259)][_0x3c4656(0x6d8)]({
                              'cull': {
                                   'enabled': !0x1
                              },
                              'depthTest': {
                                   'enabled': !0x1
                              },
                              'depthMask': !0x1,
                              'stencilTest': {
                                   'enabled': !0x0,
                                   'frontFunction': Adapter[_0x3c4656(0xbac)][_0x3c4656(0x61d)],
                                   'frontOperation': {
                                        'fail': Adapter[_0x3c4656(0x753)][_0x3c4656(0x3aa)],
                                        'zFail': Adapter[_0x3c4656(0x753)][_0x3c4656(0x3aa)],
                                        'zPass': Adapter[_0x3c4656(0x753)]['DECREMENT_WRAP']
                                   },
                                   'backFunction': Adapter[_0x3c4656(0xbac)][_0x3c4656(0x61d)],
                                   'backOperation': {
                                        'fail': Adapter[_0x3c4656(0x753)][_0x3c4656(0x3aa)],
                                        'zFail': Adapter[_0x3c4656(0x753)][_0x3c4656(0x3aa)],
                                        'zPass': Adapter[_0x3c4656(0x753)][_0x3c4656(0x819)]
                                   },
                                   'reference': 0x0,
                                   'mask': -0x1
                              },
                              'blending': Adapter[_0x3c4656(0x75d)][_0x3c4656(0x276)]
                         });
                    this[_0x3c4656(0x486)] = new Adapter[(_0x3c4656(0x2f8))]({
                         'primitiveType': Adapter[_0x3c4656(0xa6c)][_0x3c4656(0x415)],
                         'modelMatrix': this[_0x3c4656(0x414)],
                         'boundingVolume': this[_0x3c4656(0xa01)],
                         'pass': Adapter[_0x3c4656(0xd8a)][_0x3c4656(0x3d7)],
                         'shaderProgram': _0x383160,
                         'vertexArray': _0x56724f,
                         'renderState': _0x2b6847,
                         'owner': this,
                         'cull': !0x0
                    }),
                         this[_0x3c4656(0x486)]['uniformMap'] = {
                              'uVisibleAreaColor': () => this[_0x3c4656(0x313)],
                              'uHiddenAreaColor': () => this[_0x3c4656(0x467)],
                              'uRenderTextureMatrix': () => this[_0x3c4656(0x543)],
                              'uTextureSize': () => {
                                   const _0x3ff7c3 = _0x3c4656;
                                   let _0x512fbf = this['cameraDepthBuffer'][_0x3ff7c3(0x997)];
                                   return new Adapter[(_0x3ff7c3(0x1b7))](_0x512fbf['width'], _0x512fbf['height']);
                              }
                              ,
                              'uTexture': () => this['cameraDepthBuffer'][_0x3c4656(0x997)],
                              'uGlobalDepthTexture': () => this['globalDepthBuffer'][_0x3c4656(0x997)]
                         };
                    let _0x5b523e = Adapter[_0x3c4656(0x2f8)][_0x3c4656(0x4c8)](this[_0x3c4656(0x486)]);
                    _0x5b523e['renderState'] = Adapter[_0x3c4656(0x259)]['fromCache']({
                         'depthMask': !0x1,
                         'colorMask': {
                              'red': !0x1,
                              'green': !0x1,
                              'blue': !0x1,
                              'alpha': !0x1
                         },
                         'depthTest': {
                              'enabled': !0x0,
                              'func': Adapter[_0x3c4656(0x98b)][_0x3c4656(0x18a)]
                         },
                         'stencilTest': {
                              'enabled': !0x0,
                              'frontFunction': Adapter[_0x3c4656(0xbac)]['ALWAYS'],
                              'frontOperation': {
                                   'fail': Adapter[_0x3c4656(0x753)][_0x3c4656(0x3aa)],
                                   'zFail': Adapter['StencilOperation'][_0x3c4656(0x3aa)],
                                   'zPass': Adapter['StencilOperation'][_0x3c4656(0x7a6)]
                              },
                              'backFunction': Adapter['StencilFunction'][_0x3c4656(0xd7e)],
                              'backOperation': {
                                   'fail': Adapter[_0x3c4656(0x753)][_0x3c4656(0x3aa)],
                                   'zFail': Adapter[_0x3c4656(0x753)]['KEEP'],
                                   'zPass': Adapter[_0x3c4656(0x753)]['DECREMENT_WRAP']
                              },
                              'reference': 0x0,
                              'mask': -0x1
                         }
                    }),
                         this[_0x3c4656(0xcdb)] = _0x5b523e;
                    let _0xe169e9 = Adapter[_0x3c4656(0xd3c)][_0x3c4656(0x8c0)]({
                         'context': _0x1858cb,
                         'typedArray': _0x2be84a,
                         'usage': Adapter['BufferUsage'][_0x3c4656(0x78f)],
                         'indexDatatype': Adapter[_0x3c4656(0x36b)][_0x3c4656(0x744)]
                    });
                    this[_0x3c4656(0xafd)] = new Adapter['DrawCommand']({
                         'primitiveType': Adapter[_0x3c4656(0xa6c)]['LINES'],
                         'modelMatrix': this[_0x3c4656(0x414)],
                         'boundingVolume': this[_0x3c4656(0xa01)],
                         'pass': Adapter[_0x3c4656(0xd8a)][_0x3c4656(0x3d7)],
                         'owner': this,
                         'cull': !0x0
                    }),
                         this['lineCommand'][_0x3c4656(0x896)] = new Adapter[(_0x3c4656(0x8e5))]({
                              'context': _0x1858cb,
                              'attributes': _0x1f22a7,
                              'indexBuffer': _0xe169e9
                         }),
                         this['lineCommand'][_0x3c4656(0x940)] = Adapter[_0x3c4656(0xc23)]['fromCache']({
                              'context': _0x1858cb,
                              'vertexShaderSource': _0xf3ba83,
                              'fragmentShaderSource': _0x442caf,
                              'attributeLocations': _0x40dd6f
                         }),
                         this['lineCommand'][_0x3c4656(0x54e)] = Adapter[_0x3c4656(0x259)]['fromCache']({
                              'cull': {
                                   'enabled': !0x1
                              },
                              'depthTest': {
                                   'enabled': !0x0
                              },
                              'blending': Adapter[_0x3c4656(0x75d)][_0x3c4656(0x276)]
                         }),
                         this['lineCommand']['uniformMap'] = {
                              'uColor': () => this['_hintLineColor']
                         };
               }
               ,
               _0x167ba2[_0xc3a123(0x2d4)][_0xc3a123(0x3f0)] = function (_0x3d2887) {
                    const _0x97131a = _0xc3a123;
                    let _0x48cb6b = this[_0x97131a(0x2b4)][_0x97131a(0xc97)];
                    _0x48cb6b['_projection'];
                    let _0x19ca13 = Adapter[_0x97131a(0x25b)][_0x97131a(0x7ac)](_0x3d2887)[0x0]
                         , _0x51fe26 = Adapter['Cartesian3']['fromDegreesArrayHeights'](this[_0x97131a(0x27e)])[0x0]
                         , _0x5191ba = new Adapter[(_0x97131a(0x25b))]();
                    Adapter['Cartesian3'][_0x97131a(0x60c)](_0x19ca13, _0x51fe26, _0x5191ba);
                    let _0xab6ff1 = Adapter['Cartesian3'][_0x97131a(0x869)](_0x5191ba);
                    Adapter['Cartesian3'][_0x97131a(0x579)](_0x5191ba, _0x5191ba),
                         this[_0x97131a(0x3dd)] = _0xab6ff1;
                    let _0x4dc32d = _0x48cb6b['heading']
                         , _0x26886e = _0x48cb6b[_0x97131a(0x929)]
                         , _0x570e50 = _0x48cb6b[_0x97131a(0x8f0)]
                         , _0x3dac55 = new Adapter['Cartesian3']();
                    Adapter[_0x97131a(0x25b)][_0x97131a(0x432)](_0x48cb6b['position'], _0x3dac55);
                    let _0x4c96eb = _0x5191ba['clone']()
                         , _0x3b47ed = _0x51fe26[_0x97131a(0x432)]();
                    _0x3b47ed = Adapter[_0x97131a(0x25b)][_0x97131a(0x579)](_0x3b47ed, _0x3b47ed),
                         Math[_0x97131a(0xbd6)](Adapter['Cartesian3'][_0x97131a(0xd06)](_0x3b47ed, _0x4c96eb)) >= 0x1 && (_0x3b47ed = Math[_0x97131a(0xbd6)](Adapter[_0x97131a(0x25b)][_0x97131a(0xd06)](_0x4c96eb, Adapter['Cartesian3']['UNIT_Y'])) < 0x1 ? Adapter[_0x97131a(0x25b)][_0x97131a(0x432)](Cartesian3[_0x97131a(0xaa1)], _0x3b47ed) : Adapter[_0x97131a(0x25b)][_0x97131a(0x432)](Cartesian3[_0x97131a(0xcc2)], _0x3b47ed));
                    let _0xec5aba = new Adapter[(_0x97131a(0x25b))]();
                    Adapter[_0x97131a(0x25b)][_0x97131a(0x765)](_0x3b47ed, _0x4c96eb, _0xec5aba),
                         _0xec5aba = Adapter[_0x97131a(0x25b)][_0x97131a(0x579)](_0xec5aba, _0xec5aba),
                         Adapter['Cartesian3'][_0x97131a(0x765)](_0x4c96eb, _0xec5aba, _0x3b47ed),
                         _0x3b47ed = Adapter[_0x97131a(0x25b)][_0x97131a(0x579)](_0x3b47ed, _0x3b47ed),
                         _0x48cb6b[_0x97131a(0xc69)]({
                              'destination': _0x51fe26,
                              'orientation': {
                                   'direction': _0x4c96eb,
                                   'up': _0x3b47ed
                              },
                              'convert': !0x1
                         }),
                         this[_0x97131a(0x608)] = _0x48cb6b[_0x97131a(0xcca)] * Adapter['Math'][_0x97131a(0xb76)],
                         this[_0x97131a(0x929)] = _0x48cb6b['pitch'] * Adapter['Math'][_0x97131a(0xb76)],
                         _0x48cb6b[_0x97131a(0xc69)]({
                              'destination': _0x3dac55,
                              'orientation': {
                                   'heading': _0x4dc32d,
                                   'pitch': _0x26886e,
                                   'roll': _0x570e50
                              },
                              'convert': !0x1
                         });
               }
               ,
               _0x167ba2['prototype'][_0xc3a123(0x1ee)] = function () {
                    const _0x383a87 = _0xc3a123;
                    this['colorCommand'] && (this[_0x383a87(0x486)]['vertexArray'] = this[_0x383a87(0x486)][_0x383a87(0x896)] && !this[_0x383a87(0x486)][_0x383a87(0x896)][_0x383a87(0x567)]() && this[_0x383a87(0x486)][_0x383a87(0x896)][_0x383a87(0x9bb)](),
                         this[_0x383a87(0x486)][_0x383a87(0x940)] = this['colorCommand'][_0x383a87(0x940)] && !this[_0x383a87(0x486)][_0x383a87(0x940)][_0x383a87(0x567)]() && this[_0x383a87(0x486)][_0x383a87(0x940)]['destroy'](),
                         this[_0x383a87(0x486)] = void 0x0),
                         this[_0x383a87(0xcdb)] && (this[_0x383a87(0xcdb)][_0x383a87(0x896)] = this[_0x383a87(0xcdb)][_0x383a87(0x896)] && !this[_0x383a87(0xcdb)][_0x383a87(0x896)]['isDestroyed']() && this[_0x383a87(0xcdb)]['vertexArray'][_0x383a87(0x9bb)](),
                              this[_0x383a87(0xcdb)][_0x383a87(0x940)] = this['stencilCommand']['shaderProgram'] && !this[_0x383a87(0xcdb)][_0x383a87(0x940)][_0x383a87(0x567)]() && this['stencilCommand'][_0x383a87(0x940)][_0x383a87(0x9bb)](),
                              this['stencilCommand'] = void 0x0),
                         this['lineCommand'] && (this[_0x383a87(0xafd)][_0x383a87(0x896)] = this[_0x383a87(0xafd)][_0x383a87(0x896)] && !this[_0x383a87(0xafd)][_0x383a87(0x896)][_0x383a87(0x567)]() && this[_0x383a87(0xafd)][_0x383a87(0x896)][_0x383a87(0x9bb)](),
                              this[_0x383a87(0xafd)][_0x383a87(0x940)] = this[_0x383a87(0xafd)][_0x383a87(0x940)] && !this['lineCommand']['shaderProgram']['isDestroyed']() && this[_0x383a87(0xafd)][_0x383a87(0x940)][_0x383a87(0x9bb)](),
                              this[_0x383a87(0xafd)] = void 0x0);
               }
               ,
               _0x167ba2['prototype'][_0xc3a123(0x2dc)] = function (_0x57933f) {
                    const _0x1add16 = _0xc3a123;
                    _0x57933f[_0x1add16(0x2f9)] || _0x57933f[_0x1add16(0x2ea)][_0x1add16(0x988)] || _0x57933f[_0x1add16(0x2ea)][_0x1add16(0x691)] || (this['dirty'] && (this[_0x1add16(0x29a)] = !0x1,
                         this['_destroyCommand'](),
                         this[_0x1add16(0x69a)](_0x57933f),
                         this[_0x1add16(0xba1)](_0x57933f)),
                         this[_0x1add16(0xcdb)] && _0x57933f[_0x1add16(0x7c3)][_0x1add16(0x63e)](this[_0x1add16(0xcdb)]),
                         this[_0x1add16(0x486)] && _0x57933f[_0x1add16(0x7c3)][_0x1add16(0x63e)](this['colorCommand']),
                         this[_0x1add16(0xafd)] && _0x57933f[_0x1add16(0x7c3)][_0x1add16(0x63e)](this[_0x1add16(0xafd)]));
               }
               ,
               _0x167ba2[_0xc3a123(0x2d4)][_0xc3a123(0xbb8)] = function () {
                    const _0x82d367 = _0xc3a123;
                    this[_0x82d367(0x483)] || (this[_0x82d367(0x483)] = !0x0,
                         this[_0x82d367(0x2b4)]['primitives']['add'](this),
                         this[_0x82d367(0x800)] = this[_0x82d367(0x2b4)]['preUpdate'][_0x82d367(0xb1d)]((_0x53ebd0, _0x59f06a) => {
                              const _0x19d641 = _0x82d367;
                              this[_0x19d641(0xb25)][_0x19d641(0x61e)](_0x53ebd0),
                                   this[_0x19d641(0x6e4)][_0x19d641(0x61e)](_0x53ebd0);
                         }
                              , this));
               }
               ,
               _0x167ba2[_0xc3a123(0x2d4)]['clear'] = function () {
                    const _0x3e18bf = _0xc3a123;
                    this[_0x3e18bf(0x483)] && (this[_0x3e18bf(0x483)] = !0x1,
                         this[_0x3e18bf(0x800)](),
                         this[_0x3e18bf(0x2b4)]['primitives'][_0x3e18bf(0xced)](this));
               }
               ,
               _0x167ba2['prototype']['isDestroyed'] = function () {
                    return !0x1;
               }
               ,
               _0x167ba2['prototype'][_0xc3a123(0x9bb)] = function () {
                    const _0x3b8cf9 = _0xc3a123;
                    if (this[_0x3b8cf9(0xb25)] = this['cameraDepthBuffer'][_0x3b8cf9(0x9bb)](),
                         this['globalDepthBuffer'] = this[_0x3b8cf9(0x6e4)][_0x3b8cf9(0x9bb)](),
                         this['colorCommand']) {
                         let _0x56bda7 = this['colorCommand'][_0x3b8cf9(0x896)]
                              , _0x45e532 = this['colorCommand']['shaderProgram'];
                         _0x56bda7 = _0x56bda7 && !_0x56bda7[_0x3b8cf9(0x567)]() && _0x56bda7['destroy'](),
                              _0x45e532 = _0x45e532 && !_0x45e532[_0x3b8cf9(0x567)]() && _0x45e532[_0x3b8cf9(0x9bb)](),
                              this[_0x3b8cf9(0x486)] = void 0x0;
                    }
                    if (this[_0x3b8cf9(0xcdb)]) {
                         let _0x2c60b4 = this[_0x3b8cf9(0xcdb)][_0x3b8cf9(0x896)]
                              , _0x343f2b = this['stencilCommand'][_0x3b8cf9(0x940)];
                         _0x2c60b4 = _0x2c60b4 && !_0x2c60b4[_0x3b8cf9(0x567)]() && _0x2c60b4[_0x3b8cf9(0x9bb)](),
                              _0x343f2b = _0x343f2b && !_0x343f2b[_0x3b8cf9(0x567)]() && _0x343f2b[_0x3b8cf9(0x9bb)](),
                              this[_0x3b8cf9(0xcdb)] = void 0x0;
                    }
                    if (this[_0x3b8cf9(0xafd)]) {
                         let _0xad200f = this[_0x3b8cf9(0xafd)][_0x3b8cf9(0x896)]
                              , _0x2dce5f = this['lineCommand'][_0x3b8cf9(0x940)];
                         _0xad200f = _0xad200f && !_0xad200f[_0x3b8cf9(0x567)]() && _0xad200f[_0x3b8cf9(0x9bb)](),
                              _0x2dce5f = _0x2dce5f && !_0x2dce5f[_0x3b8cf9(0x567)]() && _0x2dce5f['destroy'](),
                              this['lineCommand'] = void 0x0;
                    }
               }
               ;
          var _0x242410 = {
               'ISERVER_TOKEN': _0xc3a123(0xb19),
               'IPORTAL_KEY': _0xc3a123(0xb64)
          }
               , _0x4c3d28 = Object[_0xc3a123(0xb56)](_0x242410);
          /**
           * @license
           *
           * Grauw URI utilities
           *
           * See: http://hg.grauw.nl/grauw-lib/file/tip/src/uri.js
           *
           * @author Laurens Holst (http://www.grauw.nl/)
           *
           *   Copyright 2012 Laurens Holst
           *
           *   Licensed under the Apache License, Version 2.0 (the "License");
           *   you may not use this file except in compliance with the License.
           *   You may obtain a copy of the License at
           *
           *       http://www.apache.org/licenses/LICENSE-2.0
           *
           *   Unless required by applicable law or agreed to in writing, software
           *   distributed under the License is distributed on an "AS IS" BASIS,
           *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
           *   See the License for the specific language governing permissions and
           *   limitations under the License.
           *
           */
          function _0x5a9ea2(_0x458035) {
               const _0x35ac24 = _0xc3a123;
               if (_0x458035 instanceof _0x5a9ea2)
                    this[_0x35ac24(0x964)] = _0x458035[_0x35ac24(0x964)],
                         this[_0x35ac24(0x8a9)] = _0x458035['authority'],
                         this[_0x35ac24(0x6c6)] = _0x458035[_0x35ac24(0x6c6)],
                         this[_0x35ac24(0x72d)] = _0x458035['query'],
                         this['fragment'] = _0x458035[_0x35ac24(0x4a5)];
               else {
                    if (_0x458035) {
                         var _0x7bbb3a = _0x258f98['exec'](_0x458035);
                         this[_0x35ac24(0x964)] = _0x7bbb3a[0x1],
                              this['authority'] = _0x7bbb3a[0x2],
                              this[_0x35ac24(0x6c6)] = _0x7bbb3a[0x3],
                              this[_0x35ac24(0x72d)] = _0x7bbb3a[0x4],
                              this[_0x35ac24(0x4a5)] = _0x7bbb3a[0x5];
                    }
               }
          }
          _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x964)] = null,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x8a9)] = null,
               _0x5a9ea2[_0xc3a123(0x2d4)]['path'] = '',
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x72d)] = null,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x4a5)] = null;
          var _0x258f98 = new RegExp(_0xc3a123(0xbe3));
          _0x5a9ea2['prototype']['getScheme'] = function () {
               const _0x3cfb2b = _0xc3a123;
               return this[_0x3cfb2b(0x964)];
          }
               ,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x9af)] = function () {
                    return this['authority'];
               }
               ,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x309)] = function () {
                    const _0x33f096 = _0xc3a123;
                    return this[_0x33f096(0x6c6)];
               }
               ,
               _0x5a9ea2['prototype'][_0xc3a123(0x2df)] = function () {
                    return this['query'];
               }
               ,
               _0x5a9ea2['prototype']['getFragment'] = function () {
                    const _0x3c6de4 = _0xc3a123;
                    return this[_0x3c6de4(0x4a5)];
               }
               ,
               _0x5a9ea2['prototype']['isAbsolute'] = function () {
                    const _0x43b777 = _0xc3a123;
                    return !!this[_0x43b777(0x964)] && !this['fragment'];
               }
               ,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0xaf6)] = function (_0x1a887b) {
                    const _0x42a93d = _0xc3a123;
                    return _0x1a887b[_0x42a93d(0x964)] == this[_0x42a93d(0x964)] && _0x1a887b[_0x42a93d(0x8a9)] == this[_0x42a93d(0x8a9)] && _0x1a887b[_0x42a93d(0x6c6)] == this['path'] && _0x1a887b[_0x42a93d(0x72d)] == this['query'];
               }
               ,
               _0x5a9ea2[_0xc3a123(0x2d4)]['equals'] = function (_0x28dda) {
                    const _0x1c830a = _0xc3a123;
                    return this[_0x1c830a(0xaf6)](_0x28dda) && _0x28dda['fragment'] == this[_0x1c830a(0x4a5)];
               }
               ,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x579)] = function () {
                    const _0x21c3e2 = _0xc3a123;
                    this[_0x21c3e2(0xab7)](),
                         this['scheme'] && (this[_0x21c3e2(0x964)] = this['scheme'][_0x21c3e2(0x91c)]()),
                         this['authority'] && (this[_0x21c3e2(0x8a9)] = this[_0x21c3e2(0x8a9)][_0x21c3e2(0x6c0)](_0x342be1, _0x360733)[_0x21c3e2(0x6c0)](_0x51a435, _0x4647f8)),
                         this[_0x21c3e2(0x6c6)] && (this[_0x21c3e2(0x6c6)] = this[_0x21c3e2(0x6c6)][_0x21c3e2(0x6c0)](_0x51a435, _0x4647f8)),
                         this[_0x21c3e2(0x72d)] && (this['query'] = this[_0x21c3e2(0x72d)][_0x21c3e2(0x6c0)](_0x51a435, _0x4647f8)),
                         this[_0x21c3e2(0x4a5)] && (this[_0x21c3e2(0x4a5)] = this[_0x21c3e2(0x4a5)][_0x21c3e2(0x6c0)](_0x51a435, _0x4647f8));
               }
               ;
          var _0x51a435 = /%[0-9a-z]{2}/gi
               , _0x3fc95d = /[a-zA-Z0-9\-\._~]/
               , _0x342be1 = /(.*@)?([^@:]*)(:.*)?/;
          function _0x4647f8(_0x3c6744) {
               const _0x527b21 = _0xc3a123;
               var _0x9bc2da = unescape(_0x3c6744);
               return _0x3fc95d[_0x527b21(0xbd5)](_0x9bc2da) ? _0x9bc2da : _0x3c6744[_0x527b21(0xc17)]();
          }
          function _0x360733(_0x4a1507, _0x20b102, _0x3f1da1, _0x149ecf) {
               const _0x57e801 = _0xc3a123;
               return (_0x20b102 || '') + _0x3f1da1[_0x57e801(0x91c)]() + (_0x149ecf || '');
          }
          _0x5a9ea2['prototype']['resolve'] = function (_0x5d6adf) {
               const _0x2165db = _0xc3a123;
               var _0x2515bb = new _0x5a9ea2();
               return this[_0x2165db(0x964)] ? (_0x2515bb[_0x2165db(0x964)] = this[_0x2165db(0x964)],
                    _0x2515bb[_0x2165db(0x8a9)] = this[_0x2165db(0x8a9)],
                    _0x2515bb['path'] = this[_0x2165db(0x6c6)],
                    _0x2515bb[_0x2165db(0x72d)] = this[_0x2165db(0x72d)]) : (_0x2515bb['scheme'] = _0x5d6adf['scheme'],
                         this[_0x2165db(0x8a9)] ? (_0x2515bb['authority'] = this[_0x2165db(0x8a9)],
                              _0x2515bb[_0x2165db(0x6c6)] = this[_0x2165db(0x6c6)],
                              _0x2515bb[_0x2165db(0x72d)] = this[_0x2165db(0x72d)]) : (_0x2515bb[_0x2165db(0x8a9)] = _0x5d6adf[_0x2165db(0x8a9)],
                                   '' == this[_0x2165db(0x6c6)] ? (_0x2515bb[_0x2165db(0x6c6)] = _0x5d6adf[_0x2165db(0x6c6)],
                                        _0x2515bb[_0x2165db(0x72d)] = this['query'] || _0x5d6adf[_0x2165db(0x72d)]) : ('/' == this[_0x2165db(0x6c6)][_0x2165db(0x318)](0x0) ? (_0x2515bb[_0x2165db(0x6c6)] = this[_0x2165db(0x6c6)],
                                             _0x2515bb[_0x2165db(0xab7)]()) : (_0x5d6adf[_0x2165db(0x8a9)] && '' == _0x5d6adf['path'] ? _0x2515bb[_0x2165db(0x6c6)] = '/' + this[_0x2165db(0x6c6)] : _0x2515bb['path'] = _0x5d6adf[_0x2165db(0x6c6)][_0x2165db(0x617)](0x0, _0x5d6adf[_0x2165db(0x6c6)][_0x2165db(0x61c)]('/') + 0x1) + this[_0x2165db(0x6c6)],
                                                  _0x2515bb[_0x2165db(0xab7)]()),
                                             _0x2515bb[_0x2165db(0x72d)] = this[_0x2165db(0x72d)]))),
                    _0x2515bb[_0x2165db(0x4a5)] = this[_0x2165db(0x4a5)],
                    _0x2515bb;
          }
               ,
               _0x5a9ea2['prototype'][_0xc3a123(0xab7)] = function () {
                    const _0x1e2c7d = _0xc3a123;
                    var _0x5b16d6, _0x243e47 = this[_0x1e2c7d(0x6c6)][_0x1e2c7d(0x39b)]('/'), _0x3bf588 = [], _0x3bf20f = '' == _0x243e47[0x0];
                    for (_0x3bf20f && _0x243e47[_0x1e2c7d(0x90f)](),
                         '' == _0x243e47[0x0] && _0x243e47[_0x1e2c7d(0x90f)](); _0x243e47['length'];)
                         '..' == (_0x5b16d6 = _0x243e47['shift']()) ? _0x3bf588[_0x1e2c7d(0x82c)]() : '.' != _0x5b16d6 && _0x3bf588[_0x1e2c7d(0x63e)](_0x5b16d6);
                    '.' != _0x5b16d6 && '..' != _0x5b16d6 || _0x3bf588[_0x1e2c7d(0x63e)](''),
                         _0x3bf20f && _0x3bf588[_0x1e2c7d(0x4ec)](''),
                         this[_0x1e2c7d(0x6c6)] = _0x3bf588[_0x1e2c7d(0xd5a)]('/');
               }
               ,
               _0x5a9ea2[_0xc3a123(0x2d4)][_0xc3a123(0x892)] = function () {
                    const _0xe50422 = _0xc3a123;
                    var _0x2445c5 = '';
                    return this['scheme'] && (_0x2445c5 += this[_0xe50422(0x964)] + ':'),
                         this[_0xe50422(0x8a9)] && (_0x2445c5 += '//' + this['authority']),
                         _0x2445c5 += this['path'],
                         this[_0xe50422(0x72d)] && (_0x2445c5 += '?' + this[_0xe50422(0x72d)]),
                         this['fragment'] && (_0x2445c5 += '#' + this[_0xe50422(0x4a5)]),
                         _0x2445c5;
               }
               ;
          const _0x52b2ee = Cesium[_0xc3a123(0x4d9)]
               , _0x16c586 = Cesium[_0xc3a123(0x336)]
               , _0x26a187 = Cesium['DeveloperError'];
          function _0x10d2cb(_0x1af4ea, _0x5088c2, _0x278c2e) {
               const _0x492e18 = _0xc3a123;
               if (!_0x16c586(_0x1af4ea))
                    throw new _0x26a187(_0x492e18(0x4ad));
               if (!_0x16c586(_0x5088c2))
                    throw new _0x26a187(_0x492e18(0x255));
               if (_0x278c2e = _0x52b2ee(_0x278c2e, !0x0),
                    _0x1af4ea instanceof _0x5a9ea2 || (_0x1af4ea = new _0x5a9ea2(_0x1af4ea)),
                    _0x5088c2 instanceof _0x5a9ea2 || (_0x5088c2 = new _0x5a9ea2(_0x5088c2)),
                    _0x492e18(0x1ab) === _0x1af4ea[_0x492e18(0x964)])
                    return _0x1af4ea[_0x492e18(0x892)]();
               if (_0x492e18(0x1ab) === _0x5088c2[_0x492e18(0x964)])
                    return _0x5088c2[_0x492e18(0x892)]();
               _0x16c586(_0x5088c2[_0x492e18(0x8a9)]) && !_0x16c586(_0x5088c2[_0x492e18(0x964)]) && (_0x492e18(0x211) != typeof document && _0x16c586(document[_0x492e18(0xb1f)]) && _0x16c586(document['location']['href']) ? _0x5088c2[_0x492e18(0x964)] = new _0x5a9ea2(document[_0x492e18(0xb1f)][_0x492e18(0x9fd)])['scheme'] : _0x5088c2['scheme'] = _0x1af4ea[_0x492e18(0x964)]);
               var _0x4b2711 = _0x1af4ea;
               _0x5088c2[_0x492e18(0x5c3)]() && (_0x4b2711 = _0x5088c2);
               var _0x274a82 = '';
               _0x16c586(_0x4b2711[_0x492e18(0x964)]) && (_0x274a82 += _0x4b2711[_0x492e18(0x964)] + ':'),
                    _0x16c586(_0x4b2711[_0x492e18(0x8a9)]) && (_0x274a82 += '//' + _0x4b2711[_0x492e18(0x8a9)],
                         '' !== _0x4b2711['path'] && '/' !== _0x4b2711[_0x492e18(0x6c6)] && (_0x274a82 = _0x274a82[_0x492e18(0x6c0)](/\/?$/, '/'),
                              _0x4b2711['path'] = _0x4b2711[_0x492e18(0x6c6)][_0x492e18(0x6c0)](/^\/?/g, ''),
                              '' === _0x4b2711['authority'] && (_0x274a82 += '/'))),
                    _0x274a82 += _0x4b2711 === _0x1af4ea ? _0x278c2e ? _0x1af4ea['path'][_0x492e18(0x6c0)](/\/?$/, '/') + _0x5088c2['path'][_0x492e18(0x6c0)](/^\/?/g, '') : _0x1af4ea[_0x492e18(0x6c6)] + _0x5088c2['path'] : _0x5088c2[_0x492e18(0x6c6)];
               var _0x4164c3 = _0x16c586(_0x1af4ea[_0x492e18(0x72d)])
                    , _0x3a0627 = _0x16c586(_0x5088c2[_0x492e18(0x72d)]);
               _0x4164c3 && _0x3a0627 ? _0x274a82 += '?' + _0x1af4ea['query'] + '&' + _0x5088c2[_0x492e18(0x72d)] : _0x4164c3 && !_0x3a0627 ? _0x274a82 += '?' + _0x1af4ea['query'] : !_0x4164c3 && _0x3a0627 && (_0x274a82 += '?' + _0x5088c2[_0x492e18(0x72d)]);
               var _0x2afb3b = _0x16c586(_0x5088c2['fragment']);
               return _0x16c586(_0x1af4ea[_0x492e18(0x4a5)]) && !_0x2afb3b ? _0x274a82 += '#' + _0x1af4ea['fragment'] : _0x2afb3b && (_0x274a82 += '#' + _0x5088c2[_0x492e18(0x4a5)]),
                    _0x274a82;
          }
          const _0x27b246 = Cesium[_0xc3a123(0x336)]
               , _0x2856e7 = Cesium['defaultValue']
               , _0x153194 = Cesium[_0xc3a123(0x610)]
               , _0xe1ca16 = Cesium['objectToQuery'];
          function _0x424c59(_0x166b4d, _0x3d2ce0) {
               const _0x495538 = _0xc3a123;
               this[_0x495538(0x1a1)] = {},
                    this[_0x495538(0x4b8)](_0x166b4d, _0x3d2ce0);
          }
          Object[_0xc3a123(0xcde)](_0x424c59[_0xc3a123(0x2d4)], {
               'value': {
                    'get': function () {
                         return this['_value'];
                    },
                    'set': function (_0x48c100) {
                         const _0x1f43f5 = _0xc3a123;
                         this[_0x1f43f5(0x2d6)] = _0x48c100;
                    }
               },
               'name': {
                    'get': function () {
                         const _0x339690 = _0xc3a123;
                         return this[_0x339690(0x922)];
                    },
                    'set': function (_0xd4182b) {
                         const _0x445b16 = _0xc3a123;
                         this[_0x445b16(0x922)] = _0xd4182b;
                    }
               }
          }),
               _0x424c59[_0xc3a123(0x6be)] = function (_0x4b047d) {
                    const _0x52dadc = _0xc3a123;
                    var _0x156f73, _0x593bdf = _0x4b047d[_0x52dadc(0x617)](0x0, _0x4b047d[_0x52dadc(0xcef)](_0x52dadc(0xa90)) + 0xa);
                    if (_0x27b246(_0x424c59['CREDENTIAL']['_keymap'][_0x593bdf]))
                         switch (_0x424c59[_0x52dadc(0x597)][_0x52dadc(0x1a1)][_0x593bdf][_0x52dadc(0xc8e)]) {
                              case _0x4c3d28[_0x52dadc(0x6d7)]:
                                   _0x156f73 = '?' + _0xe1ca16({
                                        'token': _0x424c59['CREDENTIAL'][_0x52dadc(0x1a1)][_0x593bdf][_0x52dadc(0x41a)]
                                   });
                                   break;
                              case _0x4c3d28[_0x52dadc(0x2c2)]:
                                   _0x156f73 = '?' + _0xe1ca16({
                                        'key': _0x424c59[_0x52dadc(0x597)][_0x52dadc(0x1a1)][_0x593bdf][_0x52dadc(0x41a)]
                                   });
                                   break;
                              default:
                                   _0x156f73 = '';
                         }
                    else
                         switch (_0x424c59[_0x52dadc(0x597)]['name']) {
                              case _0x4c3d28['ISERVER_TOKEN']:
                                   _0x156f73 = '?' + _0xe1ca16({
                                        'token': _0x424c59[_0x52dadc(0x597)][_0x52dadc(0x41a)]
                                   });
                                   break;
                              case _0x4c3d28[_0x52dadc(0x2c2)]:
                                   _0x156f73 = '?' + _0xe1ca16({
                                        'key': _0x424c59[_0x52dadc(0x597)]['value']
                                   });
                                   break;
                              default:
                                   _0x156f73 = '?' + _0x424c59[_0x52dadc(0x597)][_0x52dadc(0xca3)] + '=' + _0x424c59[_0x52dadc(0x597)][_0x52dadc(0x41a)];
                         }
                    return _0x10d2cb(_0x4b047d, _0x156f73, !0x1);
               }
               ,
               _0x424c59[_0xc3a123(0x44b)] = function (_0x40ac68, _0x529ed7) {
                    const _0x1a544a = _0xc3a123;
                    var _0x5a5f0a;
                    if (_0x27b246(_0x424c59[_0x1a544a(0x597)][_0x1a544a(0x1a1)][_0x40ac68])) {
                         if (_0x424c59['CREDENTIAL'][_0x1a544a(0x1a1)][_0x40ac68]['type'] instanceof Array) {
                              var _0x17baa0, _0x176bb1 = _0x424c59[_0x1a544a(0x597)][_0x1a544a(0x1a1)][_0x40ac68][_0x1a544a(0xc8e)], _0x13e6f6 = _0x424c59[_0x1a544a(0x597)]['_keymap'][_0x40ac68][_0x1a544a(0x41a)];
                              (_0x27e24f = {})[_0x176bb1[0x0]] = _0x13e6f6[0x0],
                                   _0x17baa0 = _0x10d2cb(_0x529ed7, '?' + _0xe1ca16(_0x27e24f), !0x1);
                              for (var _0x578e27 = 0x1; _0x578e27 < _0x176bb1[_0x1a544a(0x72b)]; _0x578e27++) {
                                   (_0x27e24f = {})[_0x176bb1[_0x578e27]] = _0x13e6f6[_0x578e27],
                                        _0x17baa0 = _0x17baa0 + '&' + _0xe1ca16(_0x27e24f);
                              }
                              return _0x17baa0;
                         }
                         switch (_0x424c59['CREDENTIAL'][_0x1a544a(0x1a1)][_0x40ac68][_0x1a544a(0xc8e)]) {
                              case _0x4c3d28[_0x1a544a(0x6d7)]:
                                   _0x5a5f0a = '?' + _0xe1ca16({
                                        'token': _0x424c59[_0x1a544a(0x597)][_0x1a544a(0x1a1)][_0x40ac68][_0x1a544a(0x41a)]
                                   });
                                   break;
                              case _0x4c3d28[_0x1a544a(0x2c2)]:
                                   _0x5a5f0a = '?' + _0xe1ca16({
                                        'key': _0x424c59[_0x1a544a(0x597)][_0x1a544a(0x1a1)][_0x40ac68][_0x1a544a(0x41a)]
                                   });
                                   break;
                              default:
                                   var _0x27e24f;
                                   (_0x27e24f = {})[_0x424c59[_0x1a544a(0x597)]['_keymap'][_0x40ac68]['type']] = _0x424c59['CREDENTIAL'][_0x1a544a(0x1a1)][_0x40ac68][_0x1a544a(0x41a)],
                                        _0x5a5f0a = '?' + _0xe1ca16(_0x27e24f);
                         }
                    } else
                         switch (_0x424c59[_0x1a544a(0x597)][_0x1a544a(0xca3)]) {
                              case _0x4c3d28['ISERVER_TOKEN']:
                                   _0x5a5f0a = '?' + _0xe1ca16({
                                        'token': _0x424c59[_0x1a544a(0x597)][_0x1a544a(0x41a)]
                                   });
                                   break;
                              case _0x4c3d28['IPORTAL_KEY']:
                                   _0x5a5f0a = '?' + _0xe1ca16({
                                        'key': _0x424c59['CREDENTIAL']['value']
                                   });
                                   break;
                              default:
                                   _0x5a5f0a = '?' + _0x424c59['CREDENTIAL']['name'] + '=' + _0x424c59[_0x1a544a(0x597)][_0x1a544a(0x41a)];
                         }
                    return _0x10d2cb(_0x529ed7, _0x5a5f0a, !0x1);
               }
               ,
               _0x424c59[_0xc3a123(0x2d4)]['addCredential'] = function (_0x5c5f45, _0x3f1be2) {
                    const _0x320173 = _0xc3a123;
                    if (_0x5c5f45 instanceof Array) {
                         for (var _0x4365f7 = 0x0, _0x6544d = _0x5c5f45['length']; _0x4365f7 < _0x6544d; _0x4365f7++)
                              if (this[_0x320173(0x1a1)][_0x5c5f45[_0x4365f7][_0x320173(0x943)]] = {
                                   'type': _0x5c5f45[_0x4365f7][_0x320173(0xc8e)] || _0x4c3d28[_0x320173(0x6d7)],
                                   'value': _0x5c5f45[_0x4365f7][_0x320173(0x41a)]
                              },
                                   -0x1 !== _0x5c5f45[_0x4365f7][_0x320173(0x943)][_0x320173(0xcef)](_0x320173(0xa90))) {
                                   var _0x25fd83 = _0x5c5f45[_0x4365f7]['rooturl'][_0x320173(0x617)](0x0, _0x5c5f45[_0x4365f7][_0x320173(0x943)][_0x320173(0x61c)]('/realspace') + 0xa);
                                   this[_0x320173(0x1a1)][_0x25fd83] = {
                                        'type': _0x5c5f45[_0x4365f7]['type'] || _0x4c3d28[_0x320173(0x6d7)],
                                        'value': _0x5c5f45[_0x4365f7][_0x320173(0x41a)]
                                   };
                              }
                    } else {
                         if (this[_0x320173(0x2d6)] = _0x2856e7(_0x5c5f45, ''),
                              null == _0x5c5f45)
                              throw new _0x153194(_0x320173(0x5f6));
                         this['_name'] = _0x2856e7(_0x3f1be2, _0x4c3d28[_0x320173(0x6d7)]),
                              this[_0x320173(0x1a1)]['default'] = {
                                   'type': this[_0x320173(0x922)],
                                   'value': this[_0x320173(0x2d6)]
                              };
                    }
               }
               ,
               _0x424c59[_0xc3a123(0x597)] = null;
          var _0x4f3948, _0x131ca1, _0x5d2784, _0x571ed9 = /((?:.*\/)|^)SuperMap3D\.js$/;
          function _0x200578() {
               const _0x24876e = _0xc3a123;
               for (var _0x4b58f0 = document[_0x24876e(0xbb0)](_0x24876e(0xaee)), _0x22fa27 = 0x0, _0x396e52 = _0x4b58f0['length']; _0x22fa27 < _0x396e52; ++_0x22fa27) {
                    var _0x5d7ffb = _0x4b58f0[_0x22fa27][_0x24876e(0x855)](_0x24876e(0xaa4))
                         , _0x5f45b9 = _0x571ed9[_0x24876e(0x535)](_0x5d7ffb);
                    if (null !== _0x5f45b9)
                         return _0x5f45b9[0x1];
               }
          }
          function _0x3c6c3b(_0x208352) {
               const _0x566a7b = _0xc3a123;
               return 'undefined' == typeof document ? _0x208352 : (Adapter['defined'](_0x4f3948) || (_0x4f3948 = document[_0x566a7b(0xd69)]('a')),
                    _0x4f3948[_0x566a7b(0x9fd)] = _0x208352,
                    _0x4f3948[_0x566a7b(0x9fd)] = _0x4f3948[_0x566a7b(0x9fd)],
                    _0x4f3948[_0x566a7b(0x9fd)]);
          }
          function _0x261c66() {
               const _0x2c7294 = _0xc3a123;
               if (Adapter[_0x2c7294(0x336)](_0x131ca1))
                    return _0x131ca1;
               var _0x2bc295;
               if (_0x2bc295 = 'undefined' != typeof SUPERMAP_BASE_URL ? SUPERMAP_BASE_URL : _0x200578(),
                    !Adapter[_0x2c7294(0x336)](_0x2bc295))
                    throw new Adapter[(_0x2c7294(0x610))](_0x2c7294(0x438));
               return (_0x131ca1 = new Adapter[(_0x2c7294(0x6e9))]({
                    'url': _0x3c6c3b(_0x2bc295)
               }))[_0x2c7294(0x9cb)](),
                    _0x131ca1;
          }
          function _0x7ee5fd(_0x264d86) {
               const _0x22308f = _0xc3a123;
               return _0x3c6c3b(require['toUrl'](_0x22308f(0x989) + _0x264d86));
          }
          function _0x421645(_0x1a16ce) {
               const _0x1cd234 = _0xc3a123;
               return _0x261c66()[_0x1cd234(0x9d4)]({
                    'url': _0x1a16ce
               })[_0x1cd234(0x29f)];
          }
          function _0x3b80ec(_0x1e796) {
               const _0x341e26 = _0xc3a123;
               return Adapter[_0x341e26(0x336)](_0x5d2784) || (_0x5d2784 = 'object' == typeof define && Adapter[_0x341e26(0x336)](define[_0x341e26(0xcdc)]) && !define[_0x341e26(0xcdc)][_0x341e26(0xa6b)] && Adapter[_0x341e26(0x336)](require[_0x341e26(0xd3a)]) ? _0x7ee5fd : _0x421645),
                    _0x5d2784(_0x1e796);
          }
          function _0x9879e5() { }
          _0x3b80ec['_buildModuleUrlFromBaseUrl'] = _0x421645,
               _0x3b80ec[_0xc3a123(0xd8f)] = function () {
                    _0x131ca1 = void 0x0;
               }
               ,
               _0x3b80ec[_0xc3a123(0x20b)] = function (_0x3f4a38) {
                    const _0x8743f2 = _0xc3a123;
                    _0x131ca1 = Adapter[_0x8743f2(0x6e9)]['DEFAULT'][_0x8743f2(0x9d4)]({
                         'url': _0x3f4a38
                    });
               }
               ,
               _0x3b80ec[_0xc3a123(0x6c7)] = _0x261c66,
               _0x9879e5[_0xc3a123(0xb51)] = function (_0x25d4eb) {
                    const _0x4088ed = _0xc3a123;
                    let _0xfb7ee6 = _0x25d4eb[_0x4088ed(0xcef)]('<');
                    return _0xfb7ee6 > 0x0 && (_0x25d4eb = _0x25d4eb['substring'](_0xfb7ee6)),
                         DOMParser ? (_0x9879e5[_0x4088ed(0x94b)] || (_0x9879e5['xmldom'] = new DOMParser()),
                              _0x9879e5[_0x4088ed(0x94b)][_0x4088ed(0x9a9)](_0x25d4eb, 'text/xml')) : (_0x9879e5[_0x4088ed(0x94b)] || (_0x9879e5[_0x4088ed(0x94b)] = new ActiveXObject('Microsoft.XMLDOM')),
                                   _0x9879e5[_0x4088ed(0x94b)]['loadXML'](_0x25d4eb));
               }
               ,
               _0x9879e5[_0xc3a123(0x45d)] = function (_0xba9a67, _0x289def, _0x17f0eb) {
                    const _0x4667ab = _0xc3a123;
                    let _0x5d5683 = [];
                    if (_0xba9a67[_0x4667ab(0x45d)])
                         _0x5d5683 = _0xba9a67['getElementsByTagNameNS'](_0x289def, _0x17f0eb);
                    else {
                         let _0x3286dd, _0x515253, _0x1fbb5d = _0xba9a67[_0x4667ab(0xbb0)]('*');
                         for (let _0x35ae87 = 0x0, _0x20e19c = _0x1fbb5d[_0x4667ab(0x72b)]; _0x35ae87 < _0x20e19c; ++_0x35ae87)
                              _0x3286dd = _0x1fbb5d[_0x35ae87],
                                   _0x515253 = _0x3286dd[_0x4667ab(0x9a8)] ? _0x3286dd[_0x4667ab(0x9a8)] + ':' + _0x17f0eb : _0x17f0eb,
                                   '*' !== _0x17f0eb && _0x515253 !== _0x3286dd[_0x4667ab(0xbaf)] || '*' !== _0x289def && _0x289def !== _0x3286dd[_0x4667ab(0xabd)] || _0x5d5683[_0x4667ab(0x63e)](_0x3286dd);
                    }
                    return _0x5d5683;
               }
               ,
               _0x9879e5['getAttributeNodeNS'] = function (_0x2b5a6c, _0xbf5e10, _0x5ac8d3) {
                    const _0x2d19db = _0xc3a123;
                    let _0x4b9174 = null;
                    if (_0x2b5a6c[_0x2d19db(0x93f)])
                         _0x4b9174 = _0x2b5a6c[_0x2d19db(0x93f)](_0xbf5e10, _0x5ac8d3);
                    else {
                         let _0x572acb, _0x42a519, _0x2184bb = _0x2b5a6c[_0x2d19db(0x732)];
                         for (let _0x362844 = 0x0, _0x3b74ea = _0x2184bb[_0x2d19db(0x72b)]; _0x362844 < _0x3b74ea; ++_0x362844)
                              if (_0x572acb = _0x2184bb[_0x362844],
                                   _0x572acb[_0x2d19db(0xabd)] === _0xbf5e10 && (_0x42a519 = _0x572acb[_0x2d19db(0x9a8)] ? _0x572acb['prefix'] + ':' + _0x5ac8d3 : _0x5ac8d3,
                                        _0x42a519 === _0x572acb[_0x2d19db(0xbaf)])) {
                                   _0x4b9174 = _0x572acb;
                                   break;
                              }
                    }
                    return _0x4b9174;
               }
               ,
               _0x9879e5[_0xc3a123(0xaf1)] = function (_0x594408, _0x44f73d) {
                    const _0xff008f = _0xc3a123;
                    let _0x15cd08 = _0x44f73d || '';
                    if (_0x594408) {
                         for (let _0x4014c7 = _0x594408[_0xff008f(0xc09)]; _0x4014c7; _0x4014c7 = _0x4014c7[_0xff008f(0x8c1)])
                              switch (_0x4014c7[_0xff008f(0x9fa)]) {
                                   case 0x3:
                                   case 0x4:
                                        _0x15cd08 += _0x4014c7[_0xff008f(0x67f)];
                              }
                    }
                    return _0x15cd08;
               }
               ,
               _0x9879e5[_0xc3a123(0xab2)] = function (_0x3092f6, _0x10ec16) {
                    const _0x27a7db = _0xc3a123;
                    if (!_0x3092f6)
                         return;
                    let _0x151dc3 = _0x3092f6[_0x27a7db(0x855)](_0x10ec16);
                    if (null !== _0x151dc3) {
                         let _0x1c11eb = parseFloat(_0x151dc3);
                         return isNaN(_0x1c11eb) ? void 0x0 : _0x1c11eb;
                    }
               }
               ,
               _0x9879e5[_0xc3a123(0x6e7)] = function (_0xaea9f, _0xdbf2ed) {
                    const _0x2ff853 = _0xc3a123;
                    if (!_0xaea9f)
                         return;
                    let _0x5948ce = _0xaea9f[_0x2ff853(0x855)](_0xdbf2ed);
                    return null !== _0x5948ce ? _0x5948ce : void 0x0;
               }
               ,
               _0x9879e5[_0xc3a123(0x8cc)] = function (_0x2a79a1, _0x27817b) {
                    const _0x1ffa04 = _0xc3a123;
                    if (!_0x2a79a1)
                         return;
                    let _0x351175 = _0x2a79a1[_0x1ffa04(0x855)](_0x27817b);
                    return _0x351175 = _0x351175[_0x1ffa04(0x91c)](),
                         _0x1ffa04(0x2d8) !== _0x351175 && (_0x1ffa04(0xd0c) === _0x351175 || void 0x0);
               }
               ,
               _0x9879e5['queryFirstNode'] = function (_0x33427f, _0x647ec5, _0x3245d5) {
                    const _0xe1f746 = _0xc3a123;
                    if (!_0x33427f)
                         return;
                    let _0x72122c = _0x33427f['childNodes']
                         , _0xb66077 = _0x72122c[_0xe1f746(0x72b)];
                    for (let _0x5a5ffe = 0x0; _0x5a5ffe < _0xb66077; _0x5a5ffe++) {
                         let _0x263970 = _0x72122c[_0x5a5ffe];
                         if (_0x3245d5) {
                              if (_0x263970[_0xe1f746(0x28f)] === _0x647ec5 && -0x1 !== _0x3245d5['indexOf'](_0x263970['namespaceURI']))
                                   return _0x263970;
                         } else {
                              if (_0x263970[_0xe1f746(0x28f)] === _0x647ec5)
                                   return _0x263970;
                         }
                    }
               }
               ,
               _0x9879e5['queryNodes'] = function (_0xfd4378, _0x5c0cc2, _0x1d550d) {
                    const _0x3c9c13 = _0xc3a123;
                    if (!_0xfd4378)
                         return;
                    let _0x480bff = []
                         , _0xb8a997 = _0xfd4378['getElementsByTagNameNS']('*', _0x5c0cc2)
                         , _0x356d6e = _0xb8a997[_0x3c9c13(0x72b)];
                    for (let _0x409cd9 = 0x0; _0x409cd9 < _0x356d6e; _0x409cd9++) {
                         let _0x119de8 = _0xb8a997[_0x409cd9];
                         _0x1d550d ? _0x119de8[_0x3c9c13(0x28f)] === _0x5c0cc2 && -0x1 !== _0x1d550d['indexOf'](_0x119de8['namespaceURI']) && _0x480bff[_0x3c9c13(0x63e)](_0x119de8) : _0x119de8[_0x3c9c13(0x28f)] === _0x5c0cc2 && _0x480bff[_0x3c9c13(0x63e)](_0x119de8);
                    }
                    return _0x480bff;
               }
               ,
               _0x9879e5[_0xc3a123(0x6c3)] = function (_0x43926e, _0x47a2c3, _0xdc32be) {
                    const _0x47643e = _0xc3a123;
                    if (!_0x43926e)
                         return [];
                    let _0x20069c = []
                         , _0x2a92ff = _0x43926e['childNodes']
                         , _0x1609bc = _0x2a92ff[_0x47643e(0x72b)];
                    for (let _0x2716d2 = 0x0; _0x2716d2 < _0x1609bc; _0x2716d2++) {
                         let _0x17f0f9 = _0x2a92ff[_0x2716d2];
                         _0xdc32be ? _0x17f0f9[_0x47643e(0x28f)] === _0x47a2c3 && -0x1 !== _0xdc32be['indexOf'](_0x17f0f9[_0x47643e(0xabd)]) && _0x20069c[_0x47643e(0x63e)](_0x17f0f9) : _0x17f0f9['localName'] === _0x47a2c3 && _0x20069c['push'](_0x17f0f9);
                    }
                    return _0x20069c;
               }
               ,
               _0x9879e5[_0xc3a123(0x2cd)] = function (_0x27ada4, _0x5452cf, _0x5bf027) {
                    const _0x6edb8a = _0xc3a123;
                    let _0xb31e2c = _0x9879e5[_0x6edb8a(0xd4c)](_0x27ada4, _0x5452cf, _0x5bf027);
                    if (_0xb31e2c) {
                         let _0x3ab3c7 = parseFloat(_0xb31e2c[_0x6edb8a(0x615)]);
                         return isNaN(_0x3ab3c7) ? void 0x0 : _0x3ab3c7;
                    }
               }
               ,
               _0x9879e5[_0xc3a123(0x7b3)] = function (_0x2ec68b, _0x2cd84b, _0x419099) {
                    const _0x3a9c3b = _0xc3a123;
                    let _0x4c04e4 = _0x9879e5[_0x3a9c3b(0xd4c)](_0x2ec68b, _0x2cd84b, _0x419099);
                    if (_0x4c04e4)
                         return _0x4c04e4['textContent'][_0x3a9c3b(0x5bb)]();
               }
               ,
               _0x9879e5[_0xc3a123(0xbf8)] = function (_0x27b272, _0x438e5c, _0x4e9d11) {
                    const _0x1e45cc = _0xc3a123;
                    let _0x398176 = _0x9879e5['queryFirstNode'](_0x27b272, _0x438e5c, _0x4e9d11);
                    if (_0x398176) {
                         let _0x109b31 = _0x398176[_0x1e45cc(0x615)]['trim']();
                         return '1' === _0x109b31 || /^true$/i[_0x1e45cc(0xbd5)](_0x109b31);
                    }
               }
               ;
          const _0x5937e2 = {
               'Fill': 0x0,
               'WireFrame': 0x1,
               'Fill_And_WireFrame': 0x2
          };
          var _0x26f6a9 = Object[_0xc3a123(0xb56)](_0x5937e2);
          const _0x4cda80 = {
               'None': 0x0,
               'FixedZ': 0x1,
               'FixedXYZ': 0x2
          };
          var _0x102330 = Object[_0xc3a123(0xb56)](_0x4cda80);
          function _0x2e1928() {
               const _0x120fc1 = _0xc3a123;
               this['_fillForeColor'] = new Cesium[(_0x120fc1(0x821))](),
                    this[_0x120fc1(0x2be)] = _0x26f6a9[_0x120fc1(0x8ac)],
                    this['_lineColor'] = new Cesium[(_0x120fc1(0x821))](),
                    this[_0x120fc1(0xb43)] = 0x1,
                    this[_0x120fc1(0x81c)] = 0x0,
                    this[_0x120fc1(0x7b1)] = 0x1,
                    this[_0x120fc1(0xa7e)] = new Cesium['Color'](),
                    this['_altitudeMode'] = Cesium[_0x120fc1(0xbaa)][_0x120fc1(0x1d9)],
                    this[_0x120fc1(0xa24)] = new Cesium['Color'](0x1, 0x1, 0x1, 0x1),
                    this[_0x120fc1(0x3d2)] = void 0x0,
                    this[_0x120fc1(0x1d1)] = !0x1,
                    this[_0x120fc1(0x4a8)] = void 0x0,
                    this['_imageReady'] = !0x0,
                    this[_0x120fc1(0x78e)] = Cesium[_0x120fc1(0x821)][_0x120fc1(0x6a7)],
                    this[_0x120fc1(0x5ff)] = 0x1,
                    this[_0x120fc1(0x1c3)] = _0x102330[_0x120fc1(0x3cc)];
          }
          Object[_0xc3a123(0xcde)](_0x2e1928[_0xc3a123(0x2d4)], {
               'fillForeColor': {
                    'get': function () {
                         return this['_fillForeColor'];
                    },
                    'set': function (_0x14925a) {
                         const _0x4ad4e6 = _0xc3a123;
                         Cesium[_0x4ad4e6(0x6d5)][_0x4ad4e6(0x6f5)][_0x4ad4e6(0xb70)](_0x4ad4e6(0xb48), _0x14925a),
                              Cesium[_0x4ad4e6(0x821)][_0x4ad4e6(0x432)](_0x14925a, this[_0x4ad4e6(0x699)]);
                    }
               },
               'bottomAltitude': {
                    'get': function () {
                         const _0x499810 = _0xc3a123;
                         return this[_0x499810(0x81c)];
                    },
                    'set': function (_0x4c3c00) {
                         const _0x2eec78 = _0xc3a123;
                         Cesium[_0x2eec78(0x6d5)][_0x2eec78(0x6f5)][_0x2eec78(0x6f6)](_0x2eec78(0x771), _0x4c3c00),
                              this['_bottomAltitude'] !== _0x4c3c00 && (this['_bottomAltitude'] = _0x4c3c00,
                                   this[_0x2eec78(0x1d1)] = !0x0);
                    }
               },
               'altitudeMode': {
                    'get': function () {
                         return this['_altitudeMode'];
                    },
                    'set': function (_0x247fd8) {
                         const _0x146f13 = _0xc3a123;
                         Cesium['Check']['typeOf'][_0x146f13(0x6f6)](_0x146f13(0x66a), _0x247fd8),
                              this['_altitudeMode'] = _0x247fd8;
                    }
               },
               'fillStyle': {
                    'get': function () {
                         const _0x1bb86b = _0xc3a123;
                         return this[_0x1bb86b(0x2be)];
                    },
                    'set': function (_0x104d8e) {
                         const _0x31e94c = _0xc3a123;
                         Cesium['Check'][_0x31e94c(0x6f5)][_0x31e94c(0x6f6)]('fillStyle\x20value', _0x104d8e);
                         let _0x18be66 = this['_fillStyle'];
                         this[_0x31e94c(0x2be)] = _0x104d8e,
                              _0x104d8e !== _0x18be66 && this[_0x31e94c(0x3d2)] && this[_0x31e94c(0x3d2)]['fillStyleChange']();
                    }
               },
               'lineColor': {
                    'get': function () {
                         const _0x274ad0 = _0xc3a123;
                         return this[_0x274ad0(0x3b1)];
                    },
                    'set': function (_0x28fa3e) {
                         const _0x2e48a2 = _0xc3a123;
                         Cesium['Check'][_0x2e48a2(0x6f5)][_0x2e48a2(0xb70)](_0x2e48a2(0x528), _0x28fa3e),
                              Cesium[_0x2e48a2(0x821)][_0x2e48a2(0x432)](_0x28fa3e, this[_0x2e48a2(0x3b1)]);
                    }
               },
               'lineWidth': {
                    'get': function () {
                         const _0x91e96d = _0xc3a123;
                         return this[_0x91e96d(0xb43)];
                    },
                    'set': function (_0x563674) {
                         const _0x5dbab9 = _0xc3a123;
                         Cesium[_0x5dbab9(0x6d5)][_0x5dbab9(0x6f5)][_0x5dbab9(0x6f6)](_0x5dbab9(0x725), _0x563674),
                              this[_0x5dbab9(0xb43)] = _0x563674;
                    }
               },
               'pointSize': {
                    'get': function () {
                         const _0x16d604 = _0xc3a123;
                         return this[_0x16d604(0x7b1)];
                    },
                    'set': function (_0x4a6fe7) {
                         const _0x2ba9f1 = _0xc3a123;
                         Cesium[_0x2ba9f1(0x6d5)][_0x2ba9f1(0x6f5)][_0x2ba9f1(0x6f6)](_0x2ba9f1(0x8f6), _0x4a6fe7),
                              this[_0x2ba9f1(0x7b1)] = _0x4a6fe7;
                    }
               },
               'pointColor': {
                    'get': function () {
                         const _0x2a382a = _0xc3a123;
                         return this[_0x2a382a(0xa7e)];
                    },
                    'set': function (_0x3852e4) {
                         const _0x49339a = _0xc3a123;
                         Cesium[_0x49339a(0x6d5)][_0x49339a(0x6f5)][_0x49339a(0xb70)](_0x49339a(0x508), _0x3852e4),
                              Cesium['Color']['clone'](_0x3852e4, this['_pointColor']);
                    }
               },
               'emissionColor': {
                    'get': function () {
                         const _0x30709b = _0xc3a123;
                         return this[_0x30709b(0xa24)];
                    },
                    'set': function (_0x325a38) {
                         const _0x4cbe69 = _0xc3a123;
                         Cesium['Check'][_0x4cbe69(0x6f5)][_0x4cbe69(0xb70)]('emission\x20color', _0x325a38),
                              Cesium[_0x4cbe69(0x821)][_0x4cbe69(0x432)](_0x325a38, this[_0x4cbe69(0xa24)]);
                    }
               },
               'image': {
                    'get': function () {
                         return this['_image'];
                    },
                    'set': function (_0x276238) {
                         const _0x4468fe = _0xc3a123;
                         this[_0x4468fe(0x5a5)] = !0x1,
                              this[_0x4468fe(0x4a8)] = _0x276238,
                              _0x4468fe(0x379) == typeof _0x276238 ? this[_0x4468fe(0x90c)]() : this['_imageReady'] = !0x0;
                    }
               },
               'imageReady': {
                    'get': function () {
                         const _0x1c7934 = _0xc3a123;
                         return this[_0x1c7934(0x5a5)];
                    }
               },
               'calloutColor': {
                    'get': function () {
                         return this['_calloutColor'];
                    },
                    'set': function (_0x18a553) {
                         const _0x54fde7 = _0xc3a123;
                         this[_0x54fde7(0x78e)] !== _0x18a553 && (this[_0x54fde7(0x78e)] = _0x18a553);
                    }
               },
               'calloutWidth': {
                    'get': function () {
                         return this['_calloutWidth'];
                    },
                    'set': function (_0x4ee79f) {
                         const _0xe1c873 = _0xc3a123;
                         this[_0xe1c873(0x5ff)] !== _0x4ee79f && (this[_0xe1c873(0x5ff)] = _0x4ee79f);
                    }
               },
               'billboardMode': {
                    'get': function () {
                         return this['_billboardMode'];
                    },
                    'set': function (_0x50c90e) {
                         const _0x819d9d = _0xc3a123;
                         this[_0x819d9d(0x1c3)] !== _0x50c90e && (this[_0x819d9d(0x1c3)] = _0x50c90e);
                    }
               }
          });
          const _0x4c13fd = {
               'UNLOADED': 0x0,
               'LOADING': 0x1,
               'PARSING': 0x2,
               'READY': 0x3,
               'FAILED': 0x4
          };
          var _0x15a287 = Object[_0xc3a123(0xb56)](_0x4c13fd);
          const _0x3d7774 = {
               'LUMINANCE_8': 0x1,
               'LUMINANCE_16': 0x2,
               'ALPHA': 0x3,
               'ALPHA_4_LUMINANCE_4': 0x4,
               'LUMINANCE_ALPHA': 0x5,
               'RGB_565': 0x6,
               'BGR565': 0x7,
               'RGB': 0xa,
               'BGR': 0xb,
               'ARGB': 0xc,
               'ABGR': 0xd,
               'BGRA': 0xe,
               'WEBP': 0x19,
               'RGBA': 0x1c,
               'DXT1': 0x11,
               'DXT2': 0x12,
               'DXT3': 0x13,
               'DXT4': 0x14,
               'DXT5': 0x15,
               'CRN_DXT5': 0x1a,
               'STANDARD_CRN': 0x1b
          };
          var _0x582a9d = Object[_0xc3a123(0xb56)](_0x3d7774);
          const _0x2df86b = {
               'encNONE': 0x0,
               'enrS3TCDXTN': 0xe,
               'enrPVRTPF_PVRTC2': 0x13,
               'enrPVRTPF_PVRTC': 0x14,
               'enrPVRTPF_PVRTC_4bpp': 0x15,
               'enrPVRTPF_ETC1': 0x16
          };
          var _0x4836e0 = Object[_0xc3a123(0xb56)](_0x2df86b);
          const _0x45480b = {
               'SVC_Vertex': 0x1,
               'SVC_Normal': 0x2,
               'SVC_VertexColor': 0x4,
               'SVC_SecondColor': 0x8,
               'SVC_TexutreCoord': 0x10,
               'SVC_TexutreCoordIsW': 0x20
          };
          var _0x38a067 = Object[_0xc3a123(0xb56)](_0x45480b)
               , _0x2ae4e6 = {};
          _0x2ae4e6 = function _0x25dcfc(_0xe259e8, _0x21f806, _0x2e08f9) {
               const _0x35e382 = _0xc3a123;
               function _0x40d462(_0x56d3a9, _0x340345) {
                    const _0x970f5c = _0x5e91;
                    if (!_0x21f806[_0x56d3a9]) {
                         if (!_0xe259e8[_0x56d3a9]) {
                              var _0x5a0c81 = 'function' == typeof require && require;
                              if (!_0x340345 && _0x5a0c81)
                                   return _0x5a0c81(_0x56d3a9, !0x0);
                              if (_0x34dfea)
                                   return _0x34dfea(_0x56d3a9, !0x0);
                              var _0x1147c2 = new Error(_0x970f5c(0xc0f) + _0x56d3a9 + '\x27');
                              throw _0x1147c2[_0x970f5c(0x75f)] = _0x970f5c(0x220),
                              _0x1147c2;
                         }
                         var _0x1c40bb = _0x21f806[_0x56d3a9] = {
                              'exports': {}
                         };
                         _0xe259e8[_0x56d3a9][0x0][_0x970f5c(0x3fa)](_0x1c40bb[_0x970f5c(0x705)], function (_0x292f62) {
                              var _0x1037c7 = _0xe259e8[_0x56d3a9][0x1][_0x292f62];
                              return _0x40d462(_0x1037c7 || _0x292f62);
                         }, _0x1c40bb, _0x1c40bb['exports'], _0x25dcfc, _0xe259e8, _0x21f806, _0x2e08f9);
                    }
                    return _0x21f806[_0x56d3a9]['exports'];
               }
               for (var _0x34dfea = _0x35e382(0x1a2) == typeof require && require, _0x3ad8b2 = 0x0; _0x3ad8b2 < _0x2e08f9[_0x35e382(0x72b)]; _0x3ad8b2++)
                    _0x40d462(_0x2e08f9[_0x3ad8b2]);
               return _0x40d462;
          }({
               0x1: [function (_0x1664ac, _0x7c9b1c, _0x15ffae) {
                    const _0x2a248e = _0xc3a123;
                    var _0x43875c = _0x2a248e(0x211) != typeof Uint8Array && _0x2a248e(0x211) != typeof Uint16Array && _0x2a248e(0x211) != typeof Int32Array;
                    _0x15ffae[_0x2a248e(0x9d5)] = function (_0x3e90a7) {
                         const _0x34e0a9 = _0x2a248e;
                         for (var _0x1d95ee = Array[_0x34e0a9(0x2d4)]['slice']['call'](arguments, 0x1); _0x1d95ee[_0x34e0a9(0x72b)];) {
                              var _0x17c7d9 = _0x1d95ee['shift']();
                              if (_0x17c7d9) {
                                   if (_0x34e0a9(0xb70) != typeof _0x17c7d9)
                                        throw new TypeError(_0x17c7d9 + _0x34e0a9(0xc72));
                                   for (var _0x47bcaa in _0x17c7d9)
                                        _0x17c7d9[_0x34e0a9(0x6e8)](_0x47bcaa) && (_0x3e90a7[_0x47bcaa] = _0x17c7d9[_0x47bcaa]);
                              }
                         }
                         return _0x3e90a7;
                    }
                         ,
                         _0x15ffae[_0x2a248e(0x348)] = function (_0x195f92, _0x375835) {
                              const _0x395c01 = _0x2a248e;
                              return _0x195f92[_0x395c01(0x72b)] === _0x375835 ? _0x195f92 : _0x195f92[_0x395c01(0x4ca)] ? _0x195f92[_0x395c01(0x4ca)](0x0, _0x375835) : (_0x195f92[_0x395c01(0x72b)] = _0x375835,
                                   _0x195f92);
                         }
                         ;
                    var _0x1ac9cc = {
                         'arraySet': function (_0xc80a76, _0x228b7b, _0x9a3d56, _0x171ef1, _0x5a877d) {
                              const _0x4877a7 = _0x2a248e;
                              if (_0x228b7b[_0x4877a7(0x4ca)] && _0xc80a76[_0x4877a7(0x4ca)])
                                   _0xc80a76[_0x4877a7(0x320)](_0x228b7b['subarray'](_0x9a3d56, _0x9a3d56 + _0x171ef1), _0x5a877d);
                              else {
                                   for (var _0x3a3764 = 0x0; _0x3a3764 < _0x171ef1; _0x3a3764++)
                                        _0xc80a76[_0x5a877d + _0x3a3764] = _0x228b7b[_0x9a3d56 + _0x3a3764];
                              }
                         },
                         'flattenChunks': function (_0xb9570e) {
                              const _0x57240e = _0x2a248e;
                              var _0x18eea6, _0x3dc763, _0x22ffc7, _0x105f38, _0x4dfeaf, _0x5b3996;
                              for (_0x22ffc7 = 0x0,
                                   _0x18eea6 = 0x0,
                                   _0x3dc763 = _0xb9570e[_0x57240e(0x72b)]; _0x18eea6 < _0x3dc763; _0x18eea6++)
                                   _0x22ffc7 += _0xb9570e[_0x18eea6][_0x57240e(0x72b)];
                              for (_0x5b3996 = new Uint8Array(_0x22ffc7),
                                   _0x105f38 = 0x0,
                                   _0x18eea6 = 0x0,
                                   _0x3dc763 = _0xb9570e['length']; _0x18eea6 < _0x3dc763; _0x18eea6++)
                                   _0x4dfeaf = _0xb9570e[_0x18eea6],
                                        _0x5b3996['set'](_0x4dfeaf, _0x105f38),
                                        _0x105f38 += _0x4dfeaf[_0x57240e(0x72b)];
                              return _0x5b3996;
                         }
                    }
                         , _0x264e07 = {
                              'arraySet': function (_0x58d909, _0x439bd4, _0xae7ccc, _0x29e814, _0x44a509) {
                                   for (var _0x2d9e9e = 0x0; _0x2d9e9e < _0x29e814; _0x2d9e9e++)
                                        _0x58d909[_0x44a509 + _0x2d9e9e] = _0x439bd4[_0xae7ccc + _0x2d9e9e];
                              },
                              'flattenChunks': function (_0x156507) {
                                   const _0x5c69a1 = _0x2a248e;
                                   return [][_0x5c69a1(0x77e)]['apply']([], _0x156507);
                              }
                         };
                    _0x15ffae[_0x2a248e(0x8e0)] = function (_0x1c8567) {
                         const _0x282b5 = _0x2a248e;
                         _0x1c8567 ? (_0x15ffae['Buf8'] = Uint8Array,
                              _0x15ffae[_0x282b5(0xa83)] = Uint16Array,
                              _0x15ffae[_0x282b5(0x89e)] = Int32Array,
                              _0x15ffae['assign'](_0x15ffae, _0x1ac9cc)) : (_0x15ffae[_0x282b5(0x1b6)] = Array,
                                   _0x15ffae[_0x282b5(0xa83)] = Array,
                                   _0x15ffae[_0x282b5(0x89e)] = Array,
                                   _0x15ffae[_0x282b5(0x9d5)](_0x15ffae, _0x264e07));
                    }
                         ,
                         _0x15ffae[_0x2a248e(0x8e0)](_0x43875c);
               }
                    , {}],
               0x2: [function (_0x2962bf, _0x33c546, _0x3859d7) {
                    const _0x4915c3 = _0xc3a123;
                    var _0x5b5cdc = _0x2962bf(_0x4915c3(0xca4))
                         , _0x37468e = !0x0
                         , _0x421b3b = !0x0;
                    try {
                         String[_0x4915c3(0x8a3)][_0x4915c3(0x83b)](null, [0x0]);
                    } catch (_0x4080c6) {
                         _0x37468e = !0x1;
                    }
                    try {
                         String[_0x4915c3(0x8a3)]['apply'](null, new Uint8Array(0x1));
                    } catch (_0x2a6bb6) {
                         _0x421b3b = !0x1;
                    }
                    for (var _0x493c20 = new _0x5b5cdc[(_0x4915c3(0x1b6))](0x100), _0x3482a2 = 0x0; _0x3482a2 < 0x100; _0x3482a2++)
                         _0x493c20[_0x3482a2] = _0x3482a2 >= 0xfc ? 0x6 : _0x3482a2 >= 0xf8 ? 0x5 : _0x3482a2 >= 0xf0 ? 0x4 : _0x3482a2 >= 0xe0 ? 0x3 : _0x3482a2 >= 0xc0 ? 0x2 : 0x1;
                    function _0x3b23ed(_0x3f2172, _0x46d808) {
                         const _0xa024a8 = _0x4915c3;
                         if (_0x46d808 < 0x10001 && (_0x3f2172[_0xa024a8(0x4ca)] && _0x421b3b || !_0x3f2172['subarray'] && _0x37468e))
                              return String[_0xa024a8(0x8a3)][_0xa024a8(0x83b)](null, _0x5b5cdc[_0xa024a8(0x348)](_0x3f2172, _0x46d808));
                         for (var _0x3f8329 = '', _0x322196 = 0x0; _0x322196 < _0x46d808; _0x322196++)
                              _0x3f8329 += String['fromCharCode'](_0x3f2172[_0x322196]);
                         return _0x3f8329;
                    }
                    _0x493c20[0xfe] = _0x493c20[0xfe] = 0x1,
                         _0x3859d7['string2buf'] = function (_0x3317e8) {
                              const _0x33b8d6 = _0x4915c3;
                              var _0x4df19f, _0x2fabc9, _0x49c6a4, _0x514db4, _0x2fba15, _0x4ce79f = _0x3317e8[_0x33b8d6(0x72b)], _0x5e022c = 0x0;
                              for (_0x514db4 = 0x0; _0x514db4 < _0x4ce79f; _0x514db4++)
                                   0xd800 == (0xfc00 & (_0x2fabc9 = _0x3317e8['charCodeAt'](_0x514db4))) && _0x514db4 + 0x1 < _0x4ce79f && 0xdc00 == (0xfc00 & (_0x49c6a4 = _0x3317e8[_0x33b8d6(0x1ad)](_0x514db4 + 0x1))) && (_0x2fabc9 = 0x10000 + (_0x2fabc9 - 0xd800 << 0xa) + (_0x49c6a4 - 0xdc00),
                                        _0x514db4++),
                                        _0x5e022c += _0x2fabc9 < 0x80 ? 0x1 : _0x2fabc9 < 0x800 ? 0x2 : _0x2fabc9 < 0x10000 ? 0x3 : 0x4;
                              for (_0x4df19f = new _0x5b5cdc[(_0x33b8d6(0x1b6))](_0x5e022c),
                                   _0x2fba15 = 0x0,
                                   _0x514db4 = 0x0; _0x2fba15 < _0x5e022c; _0x514db4++)
                                   0xd800 == (0xfc00 & (_0x2fabc9 = _0x3317e8[_0x33b8d6(0x1ad)](_0x514db4))) && _0x514db4 + 0x1 < _0x4ce79f && 0xdc00 == (0xfc00 & (_0x49c6a4 = _0x3317e8['charCodeAt'](_0x514db4 + 0x1))) && (_0x2fabc9 = 0x10000 + (_0x2fabc9 - 0xd800 << 0xa) + (_0x49c6a4 - 0xdc00),
                                        _0x514db4++),
                                        _0x2fabc9 < 0x80 ? _0x4df19f[_0x2fba15++] = _0x2fabc9 : _0x2fabc9 < 0x800 ? (_0x4df19f[_0x2fba15++] = 0xc0 | _0x2fabc9 >>> 0x6,
                                             _0x4df19f[_0x2fba15++] = 0x80 | 0x3f & _0x2fabc9) : _0x2fabc9 < 0x10000 ? (_0x4df19f[_0x2fba15++] = 0xe0 | _0x2fabc9 >>> 0xc,
                                                  _0x4df19f[_0x2fba15++] = 0x80 | _0x2fabc9 >>> 0x6 & 0x3f,
                                                  _0x4df19f[_0x2fba15++] = 0x80 | 0x3f & _0x2fabc9) : (_0x4df19f[_0x2fba15++] = 0xf0 | _0x2fabc9 >>> 0x12,
                                                       _0x4df19f[_0x2fba15++] = 0x80 | _0x2fabc9 >>> 0xc & 0x3f,
                                                       _0x4df19f[_0x2fba15++] = 0x80 | _0x2fabc9 >>> 0x6 & 0x3f,
                                                       _0x4df19f[_0x2fba15++] = 0x80 | 0x3f & _0x2fabc9);
                              return _0x4df19f;
                         }
                         ,
                         _0x3859d7[_0x4915c3(0x84f)] = function (_0x1caa7a) {
                              return _0x3b23ed(_0x1caa7a, _0x1caa7a['length']);
                         }
                         ,
                         _0x3859d7[_0x4915c3(0x505)] = function (_0x273249) {
                              const _0x3b6df2 = _0x4915c3;
                              for (var _0x31a6cc = new _0x5b5cdc[(_0x3b6df2(0x1b6))](_0x273249[_0x3b6df2(0x72b)]), _0x5d7c6e = 0x0, _0xc3ec96 = _0x31a6cc[_0x3b6df2(0x72b)]; _0x5d7c6e < _0xc3ec96; _0x5d7c6e++)
                                   _0x31a6cc[_0x5d7c6e] = _0x273249[_0x3b6df2(0x1ad)](_0x5d7c6e);
                              return _0x31a6cc;
                         }
                         ,
                         _0x3859d7['buf2string'] = function (_0x3ef7ce, _0x460fa0) {
                              const _0x11ef88 = _0x4915c3;
                              var _0x338e6d, _0x2b9f38, _0x4b1cf1, _0x2695b1, _0x56395e = _0x460fa0 || _0x3ef7ce[_0x11ef88(0x72b)], _0x903453 = new Array(0x2 * _0x56395e);
                              for (_0x2b9f38 = 0x0,
                                   _0x338e6d = 0x0; _0x338e6d < _0x56395e;)
                                   if ((_0x4b1cf1 = _0x3ef7ce[_0x338e6d++]) < 0x80)
                                        _0x903453[_0x2b9f38++] = _0x4b1cf1;
                                   else {
                                        if ((_0x2695b1 = _0x493c20[_0x4b1cf1]) > 0x4)
                                             _0x903453[_0x2b9f38++] = 0xfffd,
                                                  _0x338e6d += _0x2695b1 - 0x1;
                                        else {
                                             for (_0x4b1cf1 &= 0x2 === _0x2695b1 ? 0x1f : 0x3 === _0x2695b1 ? 0xf : 0x7; _0x2695b1 > 0x1 && _0x338e6d < _0x56395e;)
                                                  _0x4b1cf1 = _0x4b1cf1 << 0x6 | 0x3f & _0x3ef7ce[_0x338e6d++],
                                                       _0x2695b1--;
                                             _0x2695b1 > 0x1 ? _0x903453[_0x2b9f38++] = 0xfffd : _0x4b1cf1 < 0x10000 ? _0x903453[_0x2b9f38++] = _0x4b1cf1 : (_0x4b1cf1 -= 0x10000,
                                                  _0x903453[_0x2b9f38++] = 0xd800 | _0x4b1cf1 >> 0xa & 0x3ff,
                                                  _0x903453[_0x2b9f38++] = 0xdc00 | 0x3ff & _0x4b1cf1);
                                        }
                                   }
                              return _0x3b23ed(_0x903453, _0x2b9f38);
                         }
                         ,
                         _0x3859d7[_0x4915c3(0xb46)] = function (_0x31ea39, _0x399746) {
                              const _0x4d883f = _0x4915c3;
                              var _0x3ea371;
                              for ((_0x399746 = _0x399746 || _0x31ea39['length']) > _0x31ea39[_0x4d883f(0x72b)] && (_0x399746 = _0x31ea39[_0x4d883f(0x72b)]),
                                   _0x3ea371 = _0x399746 - 0x1; _0x3ea371 >= 0x0 && 0x80 == (0xc0 & _0x31ea39[_0x3ea371]);)
                                   _0x3ea371--;
                              return _0x3ea371 < 0x0 || 0x0 === _0x3ea371 ? _0x399746 : _0x3ea371 + _0x493c20[_0x31ea39[_0x3ea371]] > _0x399746 ? _0x3ea371 : _0x399746;
                         }
                         ;
               }
                    , {
                    './common': 0x1
               }],
               0x3: [function (_0xd6c5d5, _0x145d70, _0x48701a) {
                    const _0x501103 = _0xc3a123;
                    function _0x12d4d2(_0x59c0de, _0x2e55dd, _0x41743b, _0x8ffe23) {
                         for (var _0x588f98 = 0xffff & _0x59c0de | 0x0, _0x3278eb = _0x59c0de >>> 0x10 & 0xffff | 0x0, _0x172f49 = 0x0; 0x0 !== _0x41743b;) {
                              _0x41743b -= _0x172f49 = _0x41743b > 0x7d0 ? 0x7d0 : _0x41743b;
                              do {
                                   _0x3278eb = _0x3278eb + (_0x588f98 = _0x588f98 + _0x2e55dd[_0x8ffe23++] | 0x0) | 0x0;
                              } while (--_0x172f49);
                              _0x588f98 %= 0xfff1,
                                   _0x3278eb %= 0xfff1;
                         }
                         return _0x588f98 | _0x3278eb << 0x10 | 0x0;
                    }
                    _0x145d70[_0x501103(0x705)] = _0x12d4d2;
               }
                    , {}],
               0x4: [function (_0x3148ca, _0x2fbb49, _0x492fd6) {
                    const _0x828784 = _0xc3a123;
                    _0x2fbb49[_0x828784(0x705)] = {
                         'Z_NO_FLUSH': 0x0,
                         'Z_PARTIAL_FLUSH': 0x1,
                         'Z_SYNC_FLUSH': 0x2,
                         'Z_FULL_FLUSH': 0x3,
                         'Z_FINISH': 0x4,
                         'Z_BLOCK': 0x5,
                         'Z_TREES': 0x6,
                         'Z_OK': 0x0,
                         'Z_STREAM_END': 0x1,
                         'Z_NEED_DICT': 0x2,
                         'Z_ERRNO': -0x1,
                         'Z_STREAM_ERROR': -0x2,
                         'Z_DATA_ERROR': -0x3,
                         'Z_BUF_ERROR': -0x5,
                         'Z_NO_COMPRESSION': 0x0,
                         'Z_BEST_SPEED': 0x1,
                         'Z_BEST_COMPRESSION': 0x9,
                         'Z_DEFAULT_COMPRESSION': -0x1,
                         'Z_FILTERED': 0x1,
                         'Z_HUFFMAN_ONLY': 0x2,
                         'Z_RLE': 0x3,
                         'Z_FIXED': 0x4,
                         'Z_DEFAULT_STRATEGY': 0x0,
                         'Z_BINARY': 0x0,
                         'Z_TEXT': 0x1,
                         'Z_UNKNOWN': 0x2,
                         'Z_DEFLATED': 0x8
                    };
               }
                    , {}],
               0x5: [function (_0x123d48, _0x57e95a, _0x5475c3) {
                    const _0x593ed4 = _0xc3a123;
                    function _0x75e7d9() {
                         for (var _0x5200fc, _0x3c8b04 = [], _0x14b0f9 = 0x0; _0x14b0f9 < 0x100; _0x14b0f9++) {
                              _0x5200fc = _0x14b0f9;
                              for (var _0x30b2dc = 0x0; _0x30b2dc < 0x8; _0x30b2dc++)
                                   _0x5200fc = 0x1 & _0x5200fc ? 0xedb88320 ^ _0x5200fc >>> 0x1 : _0x5200fc >>> 0x1;
                              _0x3c8b04[_0x14b0f9] = _0x5200fc;
                         }
                         return _0x3c8b04;
                    }
                    var _0x24e520 = _0x75e7d9();
                    function _0x5a13b2(_0x34869f, _0x44c74f, _0x1fcd2c, _0x256202) {
                         var _0x1c6ea8 = _0x24e520
                              , _0x29ea9f = _0x256202 + _0x1fcd2c;
                         _0x34869f ^= -0x1;
                         for (var _0x16d890 = _0x256202; _0x16d890 < _0x29ea9f; _0x16d890++)
                              _0x34869f = _0x34869f >>> 0x8 ^ _0x1c6ea8[0xff & (_0x34869f ^ _0x44c74f[_0x16d890])];
                         return -0x1 ^ _0x34869f;
                    }
                    _0x57e95a[_0x593ed4(0x705)] = _0x5a13b2;
               }
                    , {}],
               0x6: [function (_0x557993, _0x30f64e, _0x3befb5) {
                    const _0x425189 = _0xc3a123;
                    function _0x5d9356() {
                         const _0x348eaf = _0x5e91;
                         this[_0x348eaf(0x886)] = 0x0,
                              this[_0x348eaf(0x458)] = 0x0,
                              this[_0x348eaf(0xd15)] = 0x0,
                              this['os'] = 0x0,
                              this[_0x348eaf(0x7cb)] = null,
                              this[_0x348eaf(0x68d)] = 0x0,
                              this['name'] = '',
                              this['comment'] = '',
                              this[_0x348eaf(0x9e1)] = 0x0,
                              this[_0x348eaf(0x889)] = !0x1;
                    }
                    _0x30f64e[_0x425189(0x705)] = _0x5d9356;
               }
                    , {}],
               0x7: [function (_0x549428, _0x47f349, _0x42086c) {
                    var _0x1ccd4f = 0x1e
                         , _0x9a5e56 = 0xc;
                    _0x47f349['exports'] = function (_0x8f3805, _0x33533f) {
                         const _0x52f96b = _0x5e91;
                         var _0x3b4fb1, _0x53fd9f, _0xb5c29e, _0x5cf240, _0x16a280, _0x559d8c, _0x13a7c8, _0x16f314, _0x209c22, _0x15cc4e, _0x31db95, _0x1b6394, _0x373afe, _0x2940eb, _0x4966b8, _0x4aaad3, _0xb6cc4a, _0x5bce54, _0x1f02e8, _0x566489, _0x25ce73, _0xbee903, _0x6298d8, _0xfa9e3b, _0x2648e7;
                         _0x3b4fb1 = _0x8f3805['state'],
                              _0x53fd9f = _0x8f3805['next_in'],
                              _0xfa9e3b = _0x8f3805[_0x52f96b(0x70d)],
                              _0xb5c29e = _0x53fd9f + (_0x8f3805[_0x52f96b(0x2a5)] - 0x5),
                              _0x5cf240 = _0x8f3805[_0x52f96b(0xd36)],
                              _0x2648e7 = _0x8f3805[_0x52f96b(0x7c6)],
                              _0x16a280 = _0x5cf240 - (_0x33533f - _0x8f3805[_0x52f96b(0x378)]),
                              _0x559d8c = _0x5cf240 + (_0x8f3805['avail_out'] - 0x101),
                              _0x13a7c8 = _0x3b4fb1['dmax'],
                              _0x16f314 = _0x3b4fb1[_0x52f96b(0xaba)],
                              _0x209c22 = _0x3b4fb1['whave'],
                              _0x15cc4e = _0x3b4fb1[_0x52f96b(0x31e)],
                              _0x31db95 = _0x3b4fb1[_0x52f96b(0x6e2)],
                              _0x1b6394 = _0x3b4fb1[_0x52f96b(0xa46)],
                              _0x373afe = _0x3b4fb1[_0x52f96b(0x504)],
                              _0x2940eb = _0x3b4fb1[_0x52f96b(0x602)],
                              _0x4966b8 = _0x3b4fb1[_0x52f96b(0x64b)],
                              _0x4aaad3 = (0x1 << _0x3b4fb1['lenbits']) - 0x1,
                              _0xb6cc4a = (0x1 << _0x3b4fb1[_0x52f96b(0x60d)]) - 0x1;
                         _0x56266c: do {
                              _0x373afe < 0xf && (_0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                   _0x373afe += 0x8,
                                   _0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                   _0x373afe += 0x8),
                                   _0x5bce54 = _0x2940eb[_0x1b6394 & _0x4aaad3];
                              _0x773522: for (; ;) {
                                   if (_0x1b6394 >>>= _0x1f02e8 = _0x5bce54 >>> 0x18,
                                        _0x373afe -= _0x1f02e8,
                                        0x0 == (_0x1f02e8 = _0x5bce54 >>> 0x10 & 0xff))
                                        _0x2648e7[_0x5cf240++] = 0xffff & _0x5bce54;
                                   else {
                                        if (!(0x10 & _0x1f02e8)) {
                                             if (0x0 == (0x40 & _0x1f02e8)) {
                                                  _0x5bce54 = _0x2940eb[(0xffff & _0x5bce54) + (_0x1b6394 & (0x1 << _0x1f02e8) - 0x1)];
                                                  continue _0x773522;
                                             }
                                             if (0x20 & _0x1f02e8) {
                                                  _0x3b4fb1[_0x52f96b(0xac9)] = _0x9a5e56;
                                                  break _0x56266c;
                                             }
                                             _0x8f3805[_0x52f96b(0xd58)] = _0x52f96b(0xb18),
                                                  _0x3b4fb1['mode'] = _0x1ccd4f;
                                             break _0x56266c;
                                        }
                                        _0x566489 = 0xffff & _0x5bce54,
                                             (_0x1f02e8 &= 0xf) && (_0x373afe < _0x1f02e8 && (_0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                                  _0x373afe += 0x8),
                                                  _0x566489 += _0x1b6394 & (0x1 << _0x1f02e8) - 0x1,
                                                  _0x1b6394 >>>= _0x1f02e8,
                                                  _0x373afe -= _0x1f02e8),
                                             _0x373afe < 0xf && (_0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                                  _0x373afe += 0x8,
                                                  _0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                                  _0x373afe += 0x8),
                                             _0x5bce54 = _0x4966b8[_0x1b6394 & _0xb6cc4a];
                                        _0x4f1d1d: for (; ;) {
                                             if (_0x1b6394 >>>= _0x1f02e8 = _0x5bce54 >>> 0x18,
                                                  _0x373afe -= _0x1f02e8,
                                                  !(0x10 & (_0x1f02e8 = _0x5bce54 >>> 0x10 & 0xff))) {
                                                  if (0x0 == (0x40 & _0x1f02e8)) {
                                                       _0x5bce54 = _0x4966b8[(0xffff & _0x5bce54) + (_0x1b6394 & (0x1 << _0x1f02e8) - 0x1)];
                                                       continue _0x4f1d1d;
                                                  }
                                                  _0x8f3805[_0x52f96b(0xd58)] = _0x52f96b(0x4d5),
                                                       _0x3b4fb1['mode'] = _0x1ccd4f;
                                                  break _0x56266c;
                                             }
                                             if (_0x25ce73 = 0xffff & _0x5bce54,
                                                  _0x373afe < (_0x1f02e8 &= 0xf) && (_0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                                       (_0x373afe += 0x8) < _0x1f02e8 && (_0x1b6394 += _0xfa9e3b[_0x53fd9f++] << _0x373afe,
                                                            _0x373afe += 0x8)),
                                                  (_0x25ce73 += _0x1b6394 & (0x1 << _0x1f02e8) - 0x1) > _0x13a7c8) {
                                                  _0x8f3805['msg'] = _0x52f96b(0x9db),
                                                       _0x3b4fb1[_0x52f96b(0xac9)] = _0x1ccd4f;
                                                  break _0x56266c;
                                             }
                                             if (_0x1b6394 >>>= _0x1f02e8,
                                                  _0x373afe -= _0x1f02e8,
                                                  _0x25ce73 > (_0x1f02e8 = _0x5cf240 - _0x16a280)) {
                                                  if ((_0x1f02e8 = _0x25ce73 - _0x1f02e8) > _0x209c22 && _0x3b4fb1[_0x52f96b(0x8a8)]) {
                                                       _0x8f3805[_0x52f96b(0xd58)] = _0x52f96b(0x9db),
                                                            _0x3b4fb1[_0x52f96b(0xac9)] = _0x1ccd4f;
                                                       break _0x56266c;
                                                  }
                                                  if (_0xbee903 = 0x0,
                                                       _0x6298d8 = _0x31db95,
                                                       0x0 === _0x15cc4e) {
                                                       if (_0xbee903 += _0x16f314 - _0x1f02e8,
                                                            _0x1f02e8 < _0x566489) {
                                                            _0x566489 -= _0x1f02e8;
                                                            do {
                                                                 _0x2648e7[_0x5cf240++] = _0x31db95[_0xbee903++];
                                                            } while (--_0x1f02e8);
                                                            _0xbee903 = _0x5cf240 - _0x25ce73,
                                                                 _0x6298d8 = _0x2648e7;
                                                       }
                                                  } else {
                                                       if (_0x15cc4e < _0x1f02e8) {
                                                            if (_0xbee903 += _0x16f314 + _0x15cc4e - _0x1f02e8,
                                                                 (_0x1f02e8 -= _0x15cc4e) < _0x566489) {
                                                                 _0x566489 -= _0x1f02e8;
                                                                 do {
                                                                      _0x2648e7[_0x5cf240++] = _0x31db95[_0xbee903++];
                                                                 } while (--_0x1f02e8);
                                                                 if (_0xbee903 = 0x0,
                                                                      _0x15cc4e < _0x566489) {
                                                                      _0x566489 -= _0x1f02e8 = _0x15cc4e;
                                                                      do {
                                                                           _0x2648e7[_0x5cf240++] = _0x31db95[_0xbee903++];
                                                                      } while (--_0x1f02e8);
                                                                      _0xbee903 = _0x5cf240 - _0x25ce73,
                                                                           _0x6298d8 = _0x2648e7;
                                                                 }
                                                            }
                                                       } else {
                                                            if (_0xbee903 += _0x15cc4e - _0x1f02e8,
                                                                 _0x1f02e8 < _0x566489) {
                                                                 _0x566489 -= _0x1f02e8;
                                                                 do {
                                                                      _0x2648e7[_0x5cf240++] = _0x31db95[_0xbee903++];
                                                                 } while (--_0x1f02e8);
                                                                 _0xbee903 = _0x5cf240 - _0x25ce73,
                                                                      _0x6298d8 = _0x2648e7;
                                                            }
                                                       }
                                                  }
                                                  for (; _0x566489 > 0x2;)
                                                       _0x2648e7[_0x5cf240++] = _0x6298d8[_0xbee903++],
                                                            _0x2648e7[_0x5cf240++] = _0x6298d8[_0xbee903++],
                                                            _0x2648e7[_0x5cf240++] = _0x6298d8[_0xbee903++],
                                                            _0x566489 -= 0x3;
                                                  _0x566489 && (_0x2648e7[_0x5cf240++] = _0x6298d8[_0xbee903++],
                                                       _0x566489 > 0x1 && (_0x2648e7[_0x5cf240++] = _0x6298d8[_0xbee903++]));
                                             } else {
                                                  _0xbee903 = _0x5cf240 - _0x25ce73;
                                                  do {
                                                       _0x2648e7[_0x5cf240++] = _0x2648e7[_0xbee903++],
                                                            _0x2648e7[_0x5cf240++] = _0x2648e7[_0xbee903++],
                                                            _0x2648e7[_0x5cf240++] = _0x2648e7[_0xbee903++],
                                                            _0x566489 -= 0x3;
                                                  } while (_0x566489 > 0x2);
                                                  _0x566489 && (_0x2648e7[_0x5cf240++] = _0x2648e7[_0xbee903++],
                                                       _0x566489 > 0x1 && (_0x2648e7[_0x5cf240++] = _0x2648e7[_0xbee903++]));
                                             }
                                             break;
                                        }
                                   }
                                   break;
                              }
                         } while (_0x53fd9f < _0xb5c29e && _0x5cf240 < _0x559d8c);
                         _0x53fd9f -= _0x566489 = _0x373afe >> 0x3,
                              _0x1b6394 &= (0x1 << (_0x373afe -= _0x566489 << 0x3)) - 0x1,
                              _0x8f3805[_0x52f96b(0x7ea)] = _0x53fd9f,
                              _0x8f3805['next_out'] = _0x5cf240,
                              _0x8f3805[_0x52f96b(0x2a5)] = _0x53fd9f < _0xb5c29e ? _0xb5c29e - _0x53fd9f + 0x5 : 0x5 - (_0x53fd9f - _0xb5c29e),
                              _0x8f3805['avail_out'] = _0x5cf240 < _0x559d8c ? _0x559d8c - _0x5cf240 + 0x101 : 0x101 - (_0x5cf240 - _0x559d8c),
                              _0x3b4fb1['hold'] = _0x1b6394,
                              _0x3b4fb1[_0x52f96b(0x504)] = _0x373afe;
                    }
                         ;
               }
                    , {}],
               0x8: [function (_0x25df85, _0x8fed89, _0x148a53) {
                    const _0x55a1d9 = _0xc3a123;
                    var _0x565555 = _0x25df85(_0x55a1d9(0xcb3))
                         , _0x1a9e1c = _0x25df85('./adler32')
                         , _0xd232de = _0x25df85('./crc32')
                         , _0x486bb5 = _0x25df85(_0x55a1d9(0x734))
                         , _0x5f1001 = _0x25df85(_0x55a1d9(0xbdb))
                         , _0x184a33 = 0x0
                         , _0x18f97c = 0x1
                         , _0x7b5d03 = 0x2
                         , _0x4cfb1b = 0x4
                         , _0x421df0 = 0x5
                         , _0x1e3990 = 0x6
                         , _0x314d42 = 0x0
                         , _0x1253d0 = 0x1
                         , _0x3b4972 = 0x2
                         , _0x146486 = -0x2
                         , _0x17e834 = -0x3
                         , _0xaef937 = -0x4
                         , _0x57d246 = -0x5
                         , _0x28e20d = 0x8
                         , _0x4db90d = 0x1
                         , _0x4f30c5 = 0x2
                         , _0x1d9344 = 0x3
                         , _0x5d3d4e = 0x4
                         , _0x3c561a = 0x5
                         , _0x370aad = 0x6
                         , _0x2d1b93 = 0x7
                         , _0x5a8068 = 0x8
                         , _0x23aa45 = 0x9
                         , _0x54b0be = 0xa
                         , _0x309af9 = 0xb
                         , _0x1260db = 0xc
                         , _0x15393c = 0xd
                         , _0x3944a9 = 0xe
                         , _0x1dddc6 = 0xf
                         , _0xea12bd = 0x10
                         , _0x46e777 = 0x11
                         , _0x555273 = 0x12
                         , _0xb8aaee = 0x13
                         , _0x26eb9b = 0x14
                         , _0x2bb872 = 0x15
                         , _0x58d6cb = 0x16
                         , _0x29d9eb = 0x17
                         , _0x5f28b6 = 0x18
                         , _0x2c3f06 = 0x19
                         , _0x54b622 = 0x1a
                         , _0x2f8239 = 0x1b
                         , _0x4242df = 0x1c
                         , _0x47f76d = 0x1d
                         , _0x16b609 = 0x1e
                         , _0x7392cc = 0x1f
                         , _0x4765b6 = 0x354
                         , _0x3d79ad = 0x250
                         , _0x5930c7 = 0xf;
                    function _0x3ba382(_0x36d38c) {
                         return (_0x36d38c >>> 0x18 & 0xff) + (_0x36d38c >>> 0x8 & 0xff00) + ((0xff00 & _0x36d38c) << 0x8) + ((0xff & _0x36d38c) << 0x18);
                    }
                    function _0x36195d() {
                         const _0x1243c6 = _0x55a1d9;
                         this[_0x1243c6(0xac9)] = 0x0,
                              this[_0x1243c6(0x41d)] = !0x1,
                              this[_0x1243c6(0x24c)] = 0x0,
                              this[_0x1243c6(0x62e)] = !0x1,
                              this['flags'] = 0x0,
                              this[_0x1243c6(0xc5d)] = 0x0,
                              this['check'] = 0x0,
                              this['total'] = 0x0,
                              this[_0x1243c6(0xd0a)] = null,
                              this[_0x1243c6(0x755)] = 0x0,
                              this[_0x1243c6(0xaba)] = 0x0,
                              this[_0x1243c6(0x393)] = 0x0,
                              this[_0x1243c6(0x31e)] = 0x0,
                              this[_0x1243c6(0x6e2)] = null,
                              this[_0x1243c6(0xa46)] = 0x0,
                              this['bits'] = 0x0,
                              this['length'] = 0x0,
                              this['offset'] = 0x0,
                              this[_0x1243c6(0x7cb)] = 0x0,
                              this[_0x1243c6(0x602)] = null,
                              this[_0x1243c6(0x64b)] = null,
                              this['lenbits'] = 0x0,
                              this[_0x1243c6(0x60d)] = 0x0,
                              this[_0x1243c6(0x91a)] = 0x0,
                              this['nlen'] = 0x0,
                              this['ndist'] = 0x0,
                              this[_0x1243c6(0x554)] = 0x0,
                              this[_0x1243c6(0xb06)] = null,
                              this['lens'] = new _0x565555[(_0x1243c6(0xa83))](0x140),
                              this[_0x1243c6(0xbf7)] = new _0x565555[(_0x1243c6(0xa83))](0x120),
                              this['lendyn'] = null,
                              this[_0x1243c6(0x3c6)] = null,
                              this[_0x1243c6(0x8a8)] = 0x0,
                              this[_0x1243c6(0x85a)] = 0x0,
                              this[_0x1243c6(0x491)] = 0x0;
                    }
                    function _0x391d93(_0x4d986e) {
                         const _0x369bcd = _0x55a1d9;
                         var _0x161763;
                         return _0x4d986e && _0x4d986e[_0x369bcd(0x4f1)] ? (_0x161763 = _0x4d986e[_0x369bcd(0x4f1)],
                              _0x4d986e['total_in'] = _0x4d986e[_0x369bcd(0x4a2)] = _0x161763[_0x369bcd(0x7b0)] = 0x0,
                              _0x4d986e[_0x369bcd(0xd58)] = '',
                              _0x161763['wrap'] && (_0x4d986e[_0x369bcd(0x358)] = 0x1 & _0x161763[_0x369bcd(0x24c)]),
                              _0x161763[_0x369bcd(0xac9)] = _0x4db90d,
                              _0x161763[_0x369bcd(0x41d)] = 0x0,
                              _0x161763[_0x369bcd(0x62e)] = 0x0,
                              _0x161763['dmax'] = 0x8000,
                              _0x161763[_0x369bcd(0xd0a)] = null,
                              _0x161763[_0x369bcd(0xa46)] = 0x0,
                              _0x161763[_0x369bcd(0x504)] = 0x0,
                              _0x161763[_0x369bcd(0x602)] = _0x161763[_0x369bcd(0x91e)] = new _0x565555['Buf32'](_0x4765b6),
                              _0x161763[_0x369bcd(0x64b)] = _0x161763[_0x369bcd(0x3c6)] = new _0x565555['Buf32'](_0x3d79ad),
                              _0x161763[_0x369bcd(0x8a8)] = 0x1,
                              _0x161763[_0x369bcd(0x85a)] = -0x1,
                              _0x314d42) : _0x146486;
                    }
                    function _0x3d95b1(_0x18c4fd) {
                         const _0x3cc2d7 = _0x55a1d9;
                         var _0x2f33c2;
                         return _0x18c4fd && _0x18c4fd['state'] ? ((_0x2f33c2 = _0x18c4fd[_0x3cc2d7(0x4f1)])[_0x3cc2d7(0xaba)] = 0x0,
                              _0x2f33c2[_0x3cc2d7(0x393)] = 0x0,
                              _0x2f33c2[_0x3cc2d7(0x31e)] = 0x0,
                              _0x391d93(_0x18c4fd)) : _0x146486;
                    }
                    function _0x544d71(_0x1bd141, _0x515e15) {
                         const _0x1ee858 = _0x55a1d9;
                         var _0x413961, _0x30ec0a;
                         return _0x1bd141 && _0x1bd141[_0x1ee858(0x4f1)] ? (_0x30ec0a = _0x1bd141[_0x1ee858(0x4f1)],
                              _0x515e15 < 0x0 ? (_0x413961 = 0x0,
                                   _0x515e15 = -_0x515e15) : (_0x413961 = 0x1 + (_0x515e15 >> 0x4),
                                        _0x515e15 < 0x30 && (_0x515e15 &= 0xf)),
                              _0x515e15 && (_0x515e15 < 0x8 || _0x515e15 > 0xf) ? _0x146486 : (null !== _0x30ec0a[_0x1ee858(0x6e2)] && _0x30ec0a[_0x1ee858(0x755)] !== _0x515e15 && (_0x30ec0a[_0x1ee858(0x6e2)] = null),
                                   _0x30ec0a[_0x1ee858(0x24c)] = _0x413961,
                                   _0x30ec0a[_0x1ee858(0x755)] = _0x515e15,
                                   _0x3d95b1(_0x1bd141))) : _0x146486;
                    }
                    function _0x1eb2f6(_0x218f04, _0x51e2b3) {
                         const _0x4f680d = _0x55a1d9;
                         var _0x12a078, _0x2cc795;
                         return _0x218f04 ? (_0x2cc795 = new _0x36195d(),
                              _0x218f04[_0x4f680d(0x4f1)] = _0x2cc795,
                              _0x2cc795[_0x4f680d(0x6e2)] = null,
                              (_0x12a078 = _0x544d71(_0x218f04, _0x51e2b3)) !== _0x314d42 && (_0x218f04['state'] = null),
                              _0x12a078) : _0x146486;
                    }
                    function _0x505bb5(_0x47154b) {
                         return _0x1eb2f6(_0x47154b, _0x5930c7);
                    }
                    var _0x1e134f, _0x2000a0, _0x2ff1f2 = !0x0;
                    function _0xbfad92(_0x5c8b8c) {
                         const _0x249504 = _0x55a1d9;
                         if (_0x2ff1f2) {
                              var _0x22a56d;
                              for (_0x1e134f = new _0x565555[(_0x249504(0x89e))](0x200),
                                   _0x2000a0 = new _0x565555[(_0x249504(0x89e))](0x20),
                                   _0x22a56d = 0x0; _0x22a56d < 0x90;)
                                   _0x5c8b8c[_0x249504(0xc7e)][_0x22a56d++] = 0x8;
                              for (; _0x22a56d < 0x100;)
                                   _0x5c8b8c['lens'][_0x22a56d++] = 0x9;
                              for (; _0x22a56d < 0x118;)
                                   _0x5c8b8c[_0x249504(0xc7e)][_0x22a56d++] = 0x7;
                              for (; _0x22a56d < 0x120;)
                                   _0x5c8b8c[_0x249504(0xc7e)][_0x22a56d++] = 0x8;
                              for (_0x5f1001(_0x18f97c, _0x5c8b8c[_0x249504(0xc7e)], 0x0, 0x120, _0x1e134f, 0x0, _0x5c8b8c['work'], {
                                   'bits': 0x9
                              }),
                                   _0x22a56d = 0x0; _0x22a56d < 0x20;)
                                   _0x5c8b8c[_0x249504(0xc7e)][_0x22a56d++] = 0x5;
                              _0x5f1001(_0x7b5d03, _0x5c8b8c[_0x249504(0xc7e)], 0x0, 0x20, _0x2000a0, 0x0, _0x5c8b8c[_0x249504(0xbf7)], {
                                   'bits': 0x5
                              }),
                                   _0x2ff1f2 = !0x1;
                         }
                         _0x5c8b8c[_0x249504(0x602)] = _0x1e134f,
                              _0x5c8b8c[_0x249504(0xd20)] = 0x9,
                              _0x5c8b8c['distcode'] = _0x2000a0,
                              _0x5c8b8c[_0x249504(0x60d)] = 0x5;
                    }
                    function _0x31b377(_0x130267, _0x288835, _0x52549b, _0x95cbfd) {
                         const _0x3efc54 = _0x55a1d9;
                         var _0x59c940, _0x457ffd = _0x130267[_0x3efc54(0x4f1)];
                         return null === _0x457ffd[_0x3efc54(0x6e2)] && (_0x457ffd['wsize'] = 0x1 << _0x457ffd[_0x3efc54(0x755)],
                              _0x457ffd[_0x3efc54(0x31e)] = 0x0,
                              _0x457ffd['whave'] = 0x0,
                              _0x457ffd[_0x3efc54(0x6e2)] = new _0x565555[(_0x3efc54(0x1b6))](_0x457ffd[_0x3efc54(0xaba)])),
                              _0x95cbfd >= _0x457ffd[_0x3efc54(0xaba)] ? (_0x565555[_0x3efc54(0x198)](_0x457ffd[_0x3efc54(0x6e2)], _0x288835, _0x52549b - _0x457ffd[_0x3efc54(0xaba)], _0x457ffd[_0x3efc54(0xaba)], 0x0),
                                   _0x457ffd[_0x3efc54(0x31e)] = 0x0,
                                   _0x457ffd[_0x3efc54(0x393)] = _0x457ffd[_0x3efc54(0xaba)]) : ((_0x59c940 = _0x457ffd['wsize'] - _0x457ffd[_0x3efc54(0x31e)]) > _0x95cbfd && (_0x59c940 = _0x95cbfd),
                                        _0x565555[_0x3efc54(0x198)](_0x457ffd[_0x3efc54(0x6e2)], _0x288835, _0x52549b - _0x95cbfd, _0x59c940, _0x457ffd['wnext']),
                                        (_0x95cbfd -= _0x59c940) ? (_0x565555[_0x3efc54(0x198)](_0x457ffd[_0x3efc54(0x6e2)], _0x288835, _0x52549b - _0x95cbfd, _0x95cbfd, 0x0),
                                             _0x457ffd[_0x3efc54(0x31e)] = _0x95cbfd,
                                             _0x457ffd[_0x3efc54(0x393)] = _0x457ffd[_0x3efc54(0xaba)]) : (_0x457ffd[_0x3efc54(0x31e)] += _0x59c940,
                                                  _0x457ffd[_0x3efc54(0x31e)] === _0x457ffd['wsize'] && (_0x457ffd[_0x3efc54(0x31e)] = 0x0),
                                                  _0x457ffd[_0x3efc54(0x393)] < _0x457ffd[_0x3efc54(0xaba)] && (_0x457ffd['whave'] += _0x59c940))),
                              0x0;
                    }
                    function _0x58a325(_0x448be8, _0x340088) {
                         const _0x3d9e87 = _0x55a1d9;
                         var _0x1e63be, _0x2cfc08, _0x2594b9, _0x11c575, _0x44dd76, _0x3cbf8c, _0x234349, _0x4f7a5f, _0x5e902e, _0x5d9b62, _0x40d65d, _0x46dc62, _0x462cfa, _0x1435f5, _0x2c73be, _0x21c0d6, _0x195152, _0x4257d8, _0x339d2c, _0x44d91b, _0x5a3bb0, _0x1879a1, _0x458cff, _0x54e1f5, _0x4bf771 = 0x0, _0x3caccc = new _0x565555[(_0x3d9e87(0x1b6))](0x4), _0x15be93 = [0x10, 0x11, 0x12, 0x0, 0x8, 0x7, 0x9, 0x6, 0xa, 0x5, 0xb, 0x4, 0xc, 0x3, 0xd, 0x2, 0xe, 0x1, 0xf];
                         if (!_0x448be8 || !_0x448be8[_0x3d9e87(0x4f1)] || !_0x448be8[_0x3d9e87(0x7c6)] || !_0x448be8[_0x3d9e87(0x70d)] && 0x0 !== _0x448be8[_0x3d9e87(0x2a5)])
                              return _0x146486;
                         (_0x1e63be = _0x448be8[_0x3d9e87(0x4f1)])[_0x3d9e87(0xac9)] === _0x1260db && (_0x1e63be[_0x3d9e87(0xac9)] = _0x15393c),
                              _0x44dd76 = _0x448be8[_0x3d9e87(0xd36)],
                              _0x2594b9 = _0x448be8[_0x3d9e87(0x7c6)],
                              _0x234349 = _0x448be8['avail_out'],
                              _0x11c575 = _0x448be8[_0x3d9e87(0x7ea)],
                              _0x2cfc08 = _0x448be8[_0x3d9e87(0x70d)],
                              _0x3cbf8c = _0x448be8[_0x3d9e87(0x2a5)],
                              _0x4f7a5f = _0x1e63be[_0x3d9e87(0xa46)],
                              _0x5e902e = _0x1e63be[_0x3d9e87(0x504)],
                              _0x5d9b62 = _0x3cbf8c,
                              _0x40d65d = _0x234349,
                              _0x1879a1 = _0x314d42;
                         _0x163510: for (; ;)
                              switch (_0x1e63be[_0x3d9e87(0xac9)]) {
                                   case _0x4db90d:
                                        if (0x0 === _0x1e63be['wrap']) {
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x15393c;
                                             break;
                                        }
                                        for (; _0x5e902e < 0x10;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        if (0x2 & _0x1e63be[_0x3d9e87(0x24c)] && 0x8b1f === _0x4f7a5f) {
                                             _0x1e63be[_0x3d9e87(0x811)] = 0x0,
                                                  _0x3caccc[0x0] = 0xff & _0x4f7a5f,
                                                  _0x3caccc[0x1] = _0x4f7a5f >>> 0x8 & 0xff,
                                                  _0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x3caccc, 0x2, 0x0),
                                                  _0x4f7a5f = 0x0,
                                                  _0x5e902e = 0x0,
                                                  _0x1e63be['mode'] = _0x4f30c5;
                                             break;
                                        }
                                        if (_0x1e63be[_0x3d9e87(0xd34)] = 0x0,
                                             _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)]['done'] = !0x1),
                                             !(0x1 & _0x1e63be['wrap']) || (((0xff & _0x4f7a5f) << 0x8) + (_0x4f7a5f >> 0x8)) % 0x1f) {
                                             _0x448be8['msg'] = _0x3d9e87(0xca6),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        if ((0xf & _0x4f7a5f) !== _0x28e20d) {
                                             _0x448be8['msg'] = _0x3d9e87(0xa4b),
                                                  _0x1e63be['mode'] = _0x16b609;
                                             break;
                                        }
                                        if (_0x5e902e -= 0x4,
                                             _0x5a3bb0 = 0x8 + (0xf & (_0x4f7a5f >>>= 0x4)),
                                             0x0 === _0x1e63be['wbits'])
                                             _0x1e63be[_0x3d9e87(0x755)] = _0x5a3bb0;
                                        else {
                                             if (_0x5a3bb0 > _0x1e63be[_0x3d9e87(0x755)]) {
                                                  _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x93e),
                                                       _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                  break;
                                             }
                                        }
                                        _0x1e63be[_0x3d9e87(0xc5d)] = 0x1 << _0x5a3bb0,
                                             _0x448be8[_0x3d9e87(0x358)] = _0x1e63be[_0x3d9e87(0x811)] = 0x1,
                                             _0x1e63be['mode'] = 0x200 & _0x4f7a5f ? _0x54b0be : _0x1260db,
                                             _0x4f7a5f = 0x0,
                                             _0x5e902e = 0x0;
                                        break;
                                   case _0x4f30c5:
                                        for (; _0x5e902e < 0x10;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        if (_0x1e63be[_0x3d9e87(0xd34)] = _0x4f7a5f,
                                             (0xff & _0x1e63be[_0x3d9e87(0xd34)]) !== _0x28e20d) {
                                             _0x448be8['msg'] = 'unknown\x20compression\x20method',
                                                  _0x1e63be['mode'] = _0x16b609;
                                             break;
                                        }
                                        if (0xe000 & _0x1e63be[_0x3d9e87(0xd34)]) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x191),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)]['text'] = _0x4f7a5f >> 0x8 & 0x1),
                                             0x200 & _0x1e63be[_0x3d9e87(0xd34)] && (_0x3caccc[0x0] = 0xff & _0x4f7a5f,
                                                  _0x3caccc[0x1] = _0x4f7a5f >>> 0x8 & 0xff,
                                                  _0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x3caccc, 0x2, 0x0)),
                                             _0x4f7a5f = 0x0,
                                             _0x5e902e = 0x0,
                                             _0x1e63be['mode'] = _0x1d9344;
                                   case _0x1d9344:
                                        for (; _0x5e902e < 0x20;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        _0x1e63be['head'] && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x458)] = _0x4f7a5f),
                                             0x200 & _0x1e63be[_0x3d9e87(0xd34)] && (_0x3caccc[0x0] = 0xff & _0x4f7a5f,
                                                  _0x3caccc[0x1] = _0x4f7a5f >>> 0x8 & 0xff,
                                                  _0x3caccc[0x2] = _0x4f7a5f >>> 0x10 & 0xff,
                                                  _0x3caccc[0x3] = _0x4f7a5f >>> 0x18 & 0xff,
                                                  _0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x3caccc, 0x4, 0x0)),
                                             _0x4f7a5f = 0x0,
                                             _0x5e902e = 0x0,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x5d3d4e;
                                   case _0x5d3d4e:
                                        for (; _0x5e902e < 0x10;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0xd15)] = 0xff & _0x4f7a5f,
                                             _0x1e63be['head']['os'] = _0x4f7a5f >> 0x8),
                                             0x200 & _0x1e63be['flags'] && (_0x3caccc[0x0] = 0xff & _0x4f7a5f,
                                                  _0x3caccc[0x1] = _0x4f7a5f >>> 0x8 & 0xff,
                                                  _0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be['check'], _0x3caccc, 0x2, 0x0)),
                                             _0x4f7a5f = 0x0,
                                             _0x5e902e = 0x0,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x3c561a;
                                   case _0x3c561a:
                                        if (0x400 & _0x1e63be[_0x3d9e87(0xd34)]) {
                                             for (; _0x5e902e < 0x10;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             _0x1e63be[_0x3d9e87(0x72b)] = _0x4f7a5f,
                                                  _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be['head'][_0x3d9e87(0x68d)] = _0x4f7a5f),
                                                  0x200 & _0x1e63be['flags'] && (_0x3caccc[0x0] = 0xff & _0x4f7a5f,
                                                       _0x3caccc[0x1] = _0x4f7a5f >>> 0x8 & 0xff,
                                                       _0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x3caccc, 0x2, 0x0)),
                                                  _0x4f7a5f = 0x0,
                                                  _0x5e902e = 0x0;
                                        } else
                                             _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x7cb)] = null);
                                        _0x1e63be[_0x3d9e87(0xac9)] = _0x370aad;
                                   case _0x370aad:
                                        if (0x400 & _0x1e63be['flags'] && ((_0x46dc62 = _0x1e63be[_0x3d9e87(0x72b)]) > _0x3cbf8c && (_0x46dc62 = _0x3cbf8c),
                                             _0x46dc62 && (_0x1e63be[_0x3d9e87(0xd0a)] && (_0x5a3bb0 = _0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x68d)] - _0x1e63be[_0x3d9e87(0x72b)],
                                                  _0x1e63be['head'][_0x3d9e87(0x7cb)] || (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x7cb)] = new Array(_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x68d)])),
                                                  _0x565555['arraySet'](_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x7cb)], _0x2cfc08, _0x11c575, _0x46dc62, _0x5a3bb0)),
                                                  0x200 & _0x1e63be['flags'] && (_0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x2cfc08, _0x46dc62, _0x11c575)),
                                                  _0x3cbf8c -= _0x46dc62,
                                                  _0x11c575 += _0x46dc62,
                                                  _0x1e63be['length'] -= _0x46dc62),
                                             _0x1e63be[_0x3d9e87(0x72b)]))
                                             break _0x163510;
                                        _0x1e63be[_0x3d9e87(0x72b)] = 0x0,
                                             _0x1e63be['mode'] = _0x2d1b93;
                                   case _0x2d1b93:
                                        if (0x800 & _0x1e63be[_0x3d9e87(0xd34)]) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x46dc62 = 0x0;
                                             do {
                                                  _0x5a3bb0 = _0x2cfc08[_0x11c575 + _0x46dc62++],
                                                       _0x1e63be[_0x3d9e87(0xd0a)] && _0x5a3bb0 && _0x1e63be['length'] < 0x10000 && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0xca3)] += String[_0x3d9e87(0x8a3)](_0x5a3bb0));
                                             } while (_0x5a3bb0 && _0x46dc62 < _0x3cbf8c);
                                             if (0x200 & _0x1e63be[_0x3d9e87(0xd34)] && (_0x1e63be['check'] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x2cfc08, _0x46dc62, _0x11c575)),
                                                  _0x3cbf8c -= _0x46dc62,
                                                  _0x11c575 += _0x46dc62,
                                                  _0x5a3bb0)
                                                  break _0x163510;
                                        } else
                                             _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0xca3)] = null);
                                        _0x1e63be[_0x3d9e87(0x72b)] = 0x0,
                                             _0x1e63be['mode'] = _0x5a8068;
                                   case _0x5a8068:
                                        if (0x1000 & _0x1e63be[_0x3d9e87(0xd34)]) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x46dc62 = 0x0;
                                             do {
                                                  _0x5a3bb0 = _0x2cfc08[_0x11c575 + _0x46dc62++],
                                                       _0x1e63be['head'] && _0x5a3bb0 && _0x1e63be['length'] < 0x10000 && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x22f)] += String[_0x3d9e87(0x8a3)](_0x5a3bb0));
                                             } while (_0x5a3bb0 && _0x46dc62 < _0x3cbf8c);
                                             if (0x200 & _0x1e63be[_0x3d9e87(0xd34)] && (_0x1e63be[_0x3d9e87(0x811)] = _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x2cfc08, _0x46dc62, _0x11c575)),
                                                  _0x3cbf8c -= _0x46dc62,
                                                  _0x11c575 += _0x46dc62,
                                                  _0x5a3bb0)
                                                  break _0x163510;
                                        } else
                                             _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x22f)] = null);
                                        _0x1e63be[_0x3d9e87(0xac9)] = _0x23aa45;
                                   case _0x23aa45:
                                        if (0x200 & _0x1e63be[_0x3d9e87(0xd34)]) {
                                             for (; _0x5e902e < 0x10;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             if (_0x4f7a5f !== (0xffff & _0x1e63be[_0x3d9e87(0x811)])) {
                                                  _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x39f),
                                                       _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                  break;
                                             }
                                             _0x4f7a5f = 0x0,
                                                  _0x5e902e = 0x0;
                                        }
                                        _0x1e63be[_0x3d9e87(0xd0a)] && (_0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x9e1)] = _0x1e63be[_0x3d9e87(0xd34)] >> 0x9 & 0x1,
                                             _0x1e63be[_0x3d9e87(0xd0a)][_0x3d9e87(0x889)] = !0x0),
                                             _0x448be8['adler'] = _0x1e63be[_0x3d9e87(0x811)] = 0x0,
                                             _0x1e63be['mode'] = _0x1260db;
                                        break;
                                   case _0x54b0be:
                                        for (; _0x5e902e < 0x20;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        _0x448be8[_0x3d9e87(0x358)] = _0x1e63be[_0x3d9e87(0x811)] = _0x3ba382(_0x4f7a5f),
                                             _0x4f7a5f = 0x0,
                                             _0x5e902e = 0x0,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x309af9;
                                   case _0x309af9:
                                        if (0x0 === _0x1e63be['havedict'])
                                             return _0x448be8['next_out'] = _0x44dd76,
                                                  _0x448be8['avail_out'] = _0x234349,
                                                  _0x448be8[_0x3d9e87(0x7ea)] = _0x11c575,
                                                  _0x448be8['avail_in'] = _0x3cbf8c,
                                                  _0x1e63be[_0x3d9e87(0xa46)] = _0x4f7a5f,
                                                  _0x1e63be[_0x3d9e87(0x504)] = _0x5e902e,
                                                  _0x3b4972;
                                        _0x448be8[_0x3d9e87(0x358)] = _0x1e63be[_0x3d9e87(0x811)] = 0x1,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x1260db;
                                   case _0x1260db:
                                        if (_0x340088 === _0x421df0 || _0x340088 === _0x1e3990)
                                             break _0x163510;
                                   case _0x15393c:
                                        if (_0x1e63be[_0x3d9e87(0x41d)]) {
                                             _0x4f7a5f >>>= 0x7 & _0x5e902e,
                                                  _0x5e902e -= 0x7 & _0x5e902e,
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x2f8239;
                                             break;
                                        }
                                        for (; _0x5e902e < 0x3;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        switch (_0x1e63be[_0x3d9e87(0x41d)] = 0x1 & _0x4f7a5f,
                                        _0x5e902e -= 0x1,
                                        0x3 & (_0x4f7a5f >>>= 0x1)) {
                                             case 0x0:
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x3944a9;
                                                  break;
                                             case 0x1:
                                                  if (_0xbfad92(_0x1e63be),
                                                       _0x1e63be[_0x3d9e87(0xac9)] = _0x26eb9b,
                                                       _0x340088 === _0x1e3990) {
                                                       _0x4f7a5f >>>= 0x2,
                                                            _0x5e902e -= 0x2;
                                                       break _0x163510;
                                                  }
                                                  break;
                                             case 0x2:
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x46e777;
                                                  break;
                                             case 0x3:
                                                  _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x57d),
                                                       _0x1e63be['mode'] = _0x16b609;
                                        }
                                        _0x4f7a5f >>>= 0x2,
                                             _0x5e902e -= 0x2;
                                        break;
                                   case _0x3944a9:
                                        for (_0x4f7a5f >>>= 0x7 & _0x5e902e,
                                             _0x5e902e -= 0x7 & _0x5e902e; _0x5e902e < 0x20;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        if ((0xffff & _0x4f7a5f) != (_0x4f7a5f >>> 0x10 ^ 0xffff)) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x874),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        if (_0x1e63be[_0x3d9e87(0x72b)] = 0xffff & _0x4f7a5f,
                                             _0x4f7a5f = 0x0,
                                             _0x5e902e = 0x0,
                                             _0x1e63be['mode'] = _0x1dddc6,
                                             _0x340088 === _0x1e3990)
                                             break _0x163510;
                                   case _0x1dddc6:
                                        _0x1e63be['mode'] = _0xea12bd;
                                   case _0xea12bd:
                                        if (_0x46dc62 = _0x1e63be[_0x3d9e87(0x72b)]) {
                                             if (_0x46dc62 > _0x3cbf8c && (_0x46dc62 = _0x3cbf8c),
                                                  _0x46dc62 > _0x234349 && (_0x46dc62 = _0x234349),
                                                  0x0 === _0x46dc62)
                                                  break _0x163510;
                                             _0x565555[_0x3d9e87(0x198)](_0x2594b9, _0x2cfc08, _0x11c575, _0x46dc62, _0x44dd76),
                                                  _0x3cbf8c -= _0x46dc62,
                                                  _0x11c575 += _0x46dc62,
                                                  _0x234349 -= _0x46dc62,
                                                  _0x44dd76 += _0x46dc62,
                                                  _0x1e63be[_0x3d9e87(0x72b)] -= _0x46dc62;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0xac9)] = _0x1260db;
                                        break;
                                   case _0x46e777:
                                        for (; _0x5e902e < 0xe;) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        if (_0x1e63be[_0x3d9e87(0xb4d)] = 0x101 + (0x1f & _0x4f7a5f),
                                             _0x4f7a5f >>>= 0x5,
                                             _0x5e902e -= 0x5,
                                             _0x1e63be[_0x3d9e87(0xcaa)] = 0x1 + (0x1f & _0x4f7a5f),
                                             _0x4f7a5f >>>= 0x5,
                                             _0x5e902e -= 0x5,
                                             _0x1e63be['ncode'] = 0x4 + (0xf & _0x4f7a5f),
                                             _0x4f7a5f >>>= 0x4,
                                             _0x5e902e -= 0x4,
                                             _0x1e63be[_0x3d9e87(0xb4d)] > 0x11e || _0x1e63be[_0x3d9e87(0xcaa)] > 0x1e) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x364),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0x554)] = 0x0,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x555273;
                                   case _0x555273:
                                        for (; _0x1e63be['have'] < _0x1e63be[_0x3d9e87(0x91a)];) {
                                             for (; _0x5e902e < 0x3;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             _0x1e63be['lens'][_0x15be93[_0x1e63be[_0x3d9e87(0x554)]++]] = 0x7 & _0x4f7a5f,
                                                  _0x4f7a5f >>>= 0x3,
                                                  _0x5e902e -= 0x3;
                                        }
                                        for (; _0x1e63be['have'] < 0x13;)
                                             _0x1e63be[_0x3d9e87(0xc7e)][_0x15be93[_0x1e63be[_0x3d9e87(0x554)]++]] = 0x0;
                                        if (_0x1e63be[_0x3d9e87(0x602)] = _0x1e63be[_0x3d9e87(0x91e)],
                                             _0x1e63be['lenbits'] = 0x7,
                                             _0x458cff = {
                                                  'bits': _0x1e63be[_0x3d9e87(0xd20)]
                                             },
                                             _0x1879a1 = _0x5f1001(_0x184a33, _0x1e63be['lens'], 0x0, 0x13, _0x1e63be[_0x3d9e87(0x602)], 0x0, _0x1e63be[_0x3d9e87(0xbf7)], _0x458cff),
                                             _0x1e63be[_0x3d9e87(0xd20)] = _0x458cff[_0x3d9e87(0x504)],
                                             _0x1879a1) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x44d),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0x554)] = 0x0,
                                             _0x1e63be['mode'] = _0xb8aaee;
                                   case _0xb8aaee:
                                        for (; _0x1e63be[_0x3d9e87(0x554)] < _0x1e63be[_0x3d9e87(0xb4d)] + _0x1e63be[_0x3d9e87(0xcaa)];) {
                                             for (; _0x21c0d6 = (_0x4bf771 = _0x1e63be['lencode'][_0x4f7a5f & (0x1 << _0x1e63be['lenbits']) - 0x1]) >>> 0x10 & 0xff,
                                                  _0x195152 = 0xffff & _0x4bf771,
                                                  !((_0x2c73be = _0x4bf771 >>> 0x18) <= _0x5e902e);) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             if (_0x195152 < 0x10)
                                                  _0x4f7a5f >>>= _0x2c73be,
                                                       _0x5e902e -= _0x2c73be,
                                                       _0x1e63be[_0x3d9e87(0xc7e)][_0x1e63be[_0x3d9e87(0x554)]++] = _0x195152;
                                             else {
                                                  if (0x10 === _0x195152) {
                                                       for (_0x54e1f5 = _0x2c73be + 0x2; _0x5e902e < _0x54e1f5;) {
                                                            if (0x0 === _0x3cbf8c)
                                                                 break _0x163510;
                                                            _0x3cbf8c--,
                                                                 _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                                 _0x5e902e += 0x8;
                                                       }
                                                       if (_0x4f7a5f >>>= _0x2c73be,
                                                            _0x5e902e -= _0x2c73be,
                                                            0x0 === _0x1e63be[_0x3d9e87(0x554)]) {
                                                            _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0xcb8),
                                                                 _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                            break;
                                                       }
                                                       _0x5a3bb0 = _0x1e63be['lens'][_0x1e63be[_0x3d9e87(0x554)] - 0x1],
                                                            _0x46dc62 = 0x3 + (0x3 & _0x4f7a5f),
                                                            _0x4f7a5f >>>= 0x2,
                                                            _0x5e902e -= 0x2;
                                                  } else {
                                                       if (0x11 === _0x195152) {
                                                            for (_0x54e1f5 = _0x2c73be + 0x3; _0x5e902e < _0x54e1f5;) {
                                                                 if (0x0 === _0x3cbf8c)
                                                                      break _0x163510;
                                                                 _0x3cbf8c--,
                                                                      _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                                      _0x5e902e += 0x8;
                                                            }
                                                            _0x5e902e -= _0x2c73be,
                                                                 _0x5a3bb0 = 0x0,
                                                                 _0x46dc62 = 0x3 + (0x7 & (_0x4f7a5f >>>= _0x2c73be)),
                                                                 _0x4f7a5f >>>= 0x3,
                                                                 _0x5e902e -= 0x3;
                                                       } else {
                                                            for (_0x54e1f5 = _0x2c73be + 0x7; _0x5e902e < _0x54e1f5;) {
                                                                 if (0x0 === _0x3cbf8c)
                                                                      break _0x163510;
                                                                 _0x3cbf8c--,
                                                                      _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                                      _0x5e902e += 0x8;
                                                            }
                                                            _0x5e902e -= _0x2c73be,
                                                                 _0x5a3bb0 = 0x0,
                                                                 _0x46dc62 = 0xb + (0x7f & (_0x4f7a5f >>>= _0x2c73be)),
                                                                 _0x4f7a5f >>>= 0x7,
                                                                 _0x5e902e -= 0x7;
                                                       }
                                                  }
                                                  if (_0x1e63be[_0x3d9e87(0x554)] + _0x46dc62 > _0x1e63be[_0x3d9e87(0xb4d)] + _0x1e63be['ndist']) {
                                                       _0x448be8[_0x3d9e87(0xd58)] = 'invalid\x20bit\x20length\x20repeat',
                                                            _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                       break;
                                                  }
                                                  for (; _0x46dc62--;)
                                                       _0x1e63be['lens'][_0x1e63be[_0x3d9e87(0x554)]++] = _0x5a3bb0;
                                             }
                                        }
                                        if (_0x1e63be[_0x3d9e87(0xac9)] === _0x16b609)
                                             break;
                                        if (0x0 === _0x1e63be[_0x3d9e87(0xc7e)][0x100]) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0xb2e),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        if (_0x1e63be[_0x3d9e87(0xd20)] = 0x9,
                                             _0x458cff = {
                                                  'bits': _0x1e63be['lenbits']
                                             },
                                             _0x1879a1 = _0x5f1001(_0x18f97c, _0x1e63be['lens'], 0x0, _0x1e63be[_0x3d9e87(0xb4d)], _0x1e63be[_0x3d9e87(0x602)], 0x0, _0x1e63be[_0x3d9e87(0xbf7)], _0x458cff),
                                             _0x1e63be[_0x3d9e87(0xd20)] = _0x458cff[_0x3d9e87(0x504)],
                                             _0x1879a1) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x277),
                                                  _0x1e63be['mode'] = _0x16b609;
                                             break;
                                        }
                                        if (_0x1e63be['distbits'] = 0x6,
                                             _0x1e63be[_0x3d9e87(0x64b)] = _0x1e63be[_0x3d9e87(0x3c6)],
                                             _0x458cff = {
                                                  'bits': _0x1e63be[_0x3d9e87(0x60d)]
                                             },
                                             _0x1879a1 = _0x5f1001(_0x7b5d03, _0x1e63be[_0x3d9e87(0xc7e)], _0x1e63be[_0x3d9e87(0xb4d)], _0x1e63be['ndist'], _0x1e63be[_0x3d9e87(0x64b)], 0x0, _0x1e63be[_0x3d9e87(0xbf7)], _0x458cff),
                                             _0x1e63be[_0x3d9e87(0x60d)] = _0x458cff[_0x3d9e87(0x504)],
                                             _0x1879a1) {
                                             _0x448be8[_0x3d9e87(0xd58)] = 'invalid\x20distances\x20set',
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        if (_0x1e63be['mode'] = _0x26eb9b,
                                             _0x340088 === _0x1e3990)
                                             break _0x163510;
                                   case _0x26eb9b:
                                        _0x1e63be[_0x3d9e87(0xac9)] = _0x2bb872;
                                   case _0x2bb872:
                                        if (_0x3cbf8c >= 0x6 && _0x234349 >= 0x102) {
                                             _0x448be8[_0x3d9e87(0xd36)] = _0x44dd76,
                                                  _0x448be8['avail_out'] = _0x234349,
                                                  _0x448be8[_0x3d9e87(0x7ea)] = _0x11c575,
                                                  _0x448be8[_0x3d9e87(0x2a5)] = _0x3cbf8c,
                                                  _0x1e63be[_0x3d9e87(0xa46)] = _0x4f7a5f,
                                                  _0x1e63be['bits'] = _0x5e902e,
                                                  _0x486bb5(_0x448be8, _0x40d65d),
                                                  _0x44dd76 = _0x448be8[_0x3d9e87(0xd36)],
                                                  _0x2594b9 = _0x448be8[_0x3d9e87(0x7c6)],
                                                  _0x234349 = _0x448be8[_0x3d9e87(0x378)],
                                                  _0x11c575 = _0x448be8[_0x3d9e87(0x7ea)],
                                                  _0x2cfc08 = _0x448be8[_0x3d9e87(0x70d)],
                                                  _0x3cbf8c = _0x448be8[_0x3d9e87(0x2a5)],
                                                  _0x4f7a5f = _0x1e63be[_0x3d9e87(0xa46)],
                                                  _0x5e902e = _0x1e63be[_0x3d9e87(0x504)],
                                                  _0x1e63be[_0x3d9e87(0xac9)] === _0x1260db && (_0x1e63be['back'] = -0x1);
                                             break;
                                        }
                                        for (_0x1e63be[_0x3d9e87(0x85a)] = 0x0; _0x21c0d6 = (_0x4bf771 = _0x1e63be[_0x3d9e87(0x602)][_0x4f7a5f & (0x1 << _0x1e63be[_0x3d9e87(0xd20)]) - 0x1]) >>> 0x10 & 0xff,
                                             _0x195152 = 0xffff & _0x4bf771,
                                             !((_0x2c73be = _0x4bf771 >>> 0x18) <= _0x5e902e);) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        if (_0x21c0d6 && 0x0 == (0xf0 & _0x21c0d6)) {
                                             for (_0x4257d8 = _0x2c73be,
                                                  _0x339d2c = _0x21c0d6,
                                                  _0x44d91b = _0x195152; _0x21c0d6 = (_0x4bf771 = _0x1e63be[_0x3d9e87(0x602)][_0x44d91b + ((_0x4f7a5f & (0x1 << _0x4257d8 + _0x339d2c) - 0x1) >> _0x4257d8)]) >>> 0x10 & 0xff,
                                                  _0x195152 = 0xffff & _0x4bf771,
                                                  !(_0x4257d8 + (_0x2c73be = _0x4bf771 >>> 0x18) <= _0x5e902e);) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             _0x4f7a5f >>>= _0x4257d8,
                                                  _0x5e902e -= _0x4257d8,
                                                  _0x1e63be['back'] += _0x4257d8;
                                        }
                                        if (_0x4f7a5f >>>= _0x2c73be,
                                             _0x5e902e -= _0x2c73be,
                                             _0x1e63be[_0x3d9e87(0x85a)] += _0x2c73be,
                                             _0x1e63be[_0x3d9e87(0x72b)] = _0x195152,
                                             0x0 === _0x21c0d6) {
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x54b622;
                                             break;
                                        }
                                        if (0x20 & _0x21c0d6) {
                                             _0x1e63be['back'] = -0x1,
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x1260db;
                                             break;
                                        }
                                        if (0x40 & _0x21c0d6) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0xb18),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0x7cb)] = 0xf & _0x21c0d6,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x58d6cb;
                                   case _0x58d6cb:
                                        if (_0x1e63be[_0x3d9e87(0x7cb)]) {
                                             for (_0x54e1f5 = _0x1e63be[_0x3d9e87(0x7cb)]; _0x5e902e < _0x54e1f5;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             _0x1e63be[_0x3d9e87(0x72b)] += _0x4f7a5f & (0x1 << _0x1e63be[_0x3d9e87(0x7cb)]) - 0x1,
                                                  _0x4f7a5f >>>= _0x1e63be[_0x3d9e87(0x7cb)],
                                                  _0x5e902e -= _0x1e63be[_0x3d9e87(0x7cb)],
                                                  _0x1e63be[_0x3d9e87(0x85a)] += _0x1e63be['extra'];
                                        }
                                        _0x1e63be[_0x3d9e87(0x491)] = _0x1e63be[_0x3d9e87(0x72b)],
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x29d9eb;
                                   case _0x29d9eb:
                                        for (; _0x21c0d6 = (_0x4bf771 = _0x1e63be[_0x3d9e87(0x64b)][_0x4f7a5f & (0x1 << _0x1e63be[_0x3d9e87(0x60d)]) - 0x1]) >>> 0x10 & 0xff,
                                             _0x195152 = 0xffff & _0x4bf771,
                                             !((_0x2c73be = _0x4bf771 >>> 0x18) <= _0x5e902e);) {
                                             if (0x0 === _0x3cbf8c)
                                                  break _0x163510;
                                             _0x3cbf8c--,
                                                  _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                  _0x5e902e += 0x8;
                                        }
                                        if (0x0 == (0xf0 & _0x21c0d6)) {
                                             for (_0x4257d8 = _0x2c73be,
                                                  _0x339d2c = _0x21c0d6,
                                                  _0x44d91b = _0x195152; _0x21c0d6 = (_0x4bf771 = _0x1e63be[_0x3d9e87(0x64b)][_0x44d91b + ((_0x4f7a5f & (0x1 << _0x4257d8 + _0x339d2c) - 0x1) >> _0x4257d8)]) >>> 0x10 & 0xff,
                                                  _0x195152 = 0xffff & _0x4bf771,
                                                  !(_0x4257d8 + (_0x2c73be = _0x4bf771 >>> 0x18) <= _0x5e902e);) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             _0x4f7a5f >>>= _0x4257d8,
                                                  _0x5e902e -= _0x4257d8,
                                                  _0x1e63be[_0x3d9e87(0x85a)] += _0x4257d8;
                                        }
                                        if (_0x4f7a5f >>>= _0x2c73be,
                                             _0x5e902e -= _0x2c73be,
                                             _0x1e63be[_0x3d9e87(0x85a)] += _0x2c73be,
                                             0x40 & _0x21c0d6) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x4d5),
                                                  _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0x4e8)] = _0x195152,
                                             _0x1e63be[_0x3d9e87(0x7cb)] = 0xf & _0x21c0d6,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x5f28b6;
                                   case _0x5f28b6:
                                        if (_0x1e63be['extra']) {
                                             for (_0x54e1f5 = _0x1e63be['extra']; _0x5e902e < _0x54e1f5;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             _0x1e63be[_0x3d9e87(0x4e8)] += _0x4f7a5f & (0x1 << _0x1e63be[_0x3d9e87(0x7cb)]) - 0x1,
                                                  _0x4f7a5f >>>= _0x1e63be[_0x3d9e87(0x7cb)],
                                                  _0x5e902e -= _0x1e63be['extra'],
                                                  _0x1e63be['back'] += _0x1e63be[_0x3d9e87(0x7cb)];
                                        }
                                        if (_0x1e63be['offset'] > _0x1e63be[_0x3d9e87(0xc5d)]) {
                                             _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x9db),
                                                  _0x1e63be['mode'] = _0x16b609;
                                             break;
                                        }
                                        _0x1e63be[_0x3d9e87(0xac9)] = _0x2c3f06;
                                   case _0x2c3f06:
                                        if (0x0 === _0x234349)
                                             break _0x163510;
                                        if (_0x46dc62 = _0x40d65d - _0x234349,
                                             _0x1e63be[_0x3d9e87(0x4e8)] > _0x46dc62) {
                                             if ((_0x46dc62 = _0x1e63be[_0x3d9e87(0x4e8)] - _0x46dc62) > _0x1e63be[_0x3d9e87(0x393)] && _0x1e63be[_0x3d9e87(0x8a8)]) {
                                                  _0x448be8['msg'] = _0x3d9e87(0x9db),
                                                       _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                  break;
                                             }
                                             _0x46dc62 > _0x1e63be[_0x3d9e87(0x31e)] ? (_0x46dc62 -= _0x1e63be[_0x3d9e87(0x31e)],
                                                  _0x462cfa = _0x1e63be['wsize'] - _0x46dc62) : _0x462cfa = _0x1e63be[_0x3d9e87(0x31e)] - _0x46dc62,
                                                  _0x46dc62 > _0x1e63be[_0x3d9e87(0x72b)] && (_0x46dc62 = _0x1e63be[_0x3d9e87(0x72b)]),
                                                  _0x1435f5 = _0x1e63be[_0x3d9e87(0x6e2)];
                                        } else
                                             _0x1435f5 = _0x2594b9,
                                                  _0x462cfa = _0x44dd76 - _0x1e63be[_0x3d9e87(0x4e8)],
                                                  _0x46dc62 = _0x1e63be[_0x3d9e87(0x72b)];
                                        _0x46dc62 > _0x234349 && (_0x46dc62 = _0x234349),
                                             _0x234349 -= _0x46dc62,
                                             _0x1e63be[_0x3d9e87(0x72b)] -= _0x46dc62;
                                        do {
                                             _0x2594b9[_0x44dd76++] = _0x1435f5[_0x462cfa++];
                                        } while (--_0x46dc62);
                                        0x0 === _0x1e63be[_0x3d9e87(0x72b)] && (_0x1e63be[_0x3d9e87(0xac9)] = _0x2bb872);
                                        break;
                                   case _0x54b622:
                                        if (0x0 === _0x234349)
                                             break _0x163510;
                                        _0x2594b9[_0x44dd76++] = _0x1e63be['length'],
                                             _0x234349--,
                                             _0x1e63be[_0x3d9e87(0xac9)] = _0x2bb872;
                                        break;
                                   case _0x2f8239:
                                        if (_0x1e63be[_0x3d9e87(0x24c)]) {
                                             for (; _0x5e902e < 0x20;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f |= _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             if (_0x40d65d -= _0x234349,
                                                  _0x448be8['total_out'] += _0x40d65d,
                                                  _0x1e63be[_0x3d9e87(0x7b0)] += _0x40d65d,
                                                  _0x40d65d && (_0x448be8[_0x3d9e87(0x358)] = _0x1e63be[_0x3d9e87(0x811)] = _0x1e63be[_0x3d9e87(0xd34)] ? _0xd232de(_0x1e63be['check'], _0x2594b9, _0x40d65d, _0x44dd76 - _0x40d65d) : _0x1a9e1c(_0x1e63be[_0x3d9e87(0x811)], _0x2594b9, _0x40d65d, _0x44dd76 - _0x40d65d)),
                                                  _0x40d65d = _0x234349,
                                                  (_0x1e63be[_0x3d9e87(0xd34)] ? _0x4f7a5f : _0x3ba382(_0x4f7a5f)) !== _0x1e63be[_0x3d9e87(0x811)]) {
                                                  _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x838),
                                                       _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                  break;
                                             }
                                             _0x4f7a5f = 0x0,
                                                  _0x5e902e = 0x0;
                                        }
                                        _0x1e63be['mode'] = _0x4242df;
                                   case _0x4242df:
                                        if (_0x1e63be['wrap'] && _0x1e63be[_0x3d9e87(0xd34)]) {
                                             for (; _0x5e902e < 0x20;) {
                                                  if (0x0 === _0x3cbf8c)
                                                       break _0x163510;
                                                  _0x3cbf8c--,
                                                       _0x4f7a5f += _0x2cfc08[_0x11c575++] << _0x5e902e,
                                                       _0x5e902e += 0x8;
                                             }
                                             if (_0x4f7a5f !== (0xffffffff & _0x1e63be[_0x3d9e87(0x7b0)])) {
                                                  _0x448be8[_0x3d9e87(0xd58)] = _0x3d9e87(0x673),
                                                       _0x1e63be[_0x3d9e87(0xac9)] = _0x16b609;
                                                  break;
                                             }
                                             _0x4f7a5f = 0x0,
                                                  _0x5e902e = 0x0;
                                        }
                                        _0x1e63be[_0x3d9e87(0xac9)] = _0x47f76d;
                                   case _0x47f76d:
                                        _0x1879a1 = _0x1253d0;
                                        break _0x163510;
                                   case _0x16b609:
                                        _0x1879a1 = _0x17e834;
                                        break _0x163510;
                                   case _0x7392cc:
                                        return _0xaef937;
                                   default:
                                        return _0x146486;
                              }
                         return _0x448be8['next_out'] = _0x44dd76,
                              _0x448be8['avail_out'] = _0x234349,
                              _0x448be8[_0x3d9e87(0x7ea)] = _0x11c575,
                              _0x448be8[_0x3d9e87(0x2a5)] = _0x3cbf8c,
                              _0x1e63be[_0x3d9e87(0xa46)] = _0x4f7a5f,
                              _0x1e63be['bits'] = _0x5e902e,
                              (_0x1e63be[_0x3d9e87(0xaba)] || _0x40d65d !== _0x448be8[_0x3d9e87(0x378)] && _0x1e63be['mode'] < _0x16b609 && (_0x1e63be[_0x3d9e87(0xac9)] < _0x2f8239 || _0x340088 !== _0x4cfb1b)) && _0x31b377(_0x448be8, _0x448be8[_0x3d9e87(0x7c6)], _0x448be8['next_out'], _0x40d65d - _0x448be8['avail_out']),
                              _0x5d9b62 -= _0x448be8[_0x3d9e87(0x2a5)],
                              _0x40d65d -= _0x448be8[_0x3d9e87(0x378)],
                              _0x448be8[_0x3d9e87(0x1f5)] += _0x5d9b62,
                              _0x448be8[_0x3d9e87(0x4a2)] += _0x40d65d,
                              _0x1e63be['total'] += _0x40d65d,
                              _0x1e63be[_0x3d9e87(0x24c)] && _0x40d65d && (_0x448be8[_0x3d9e87(0x358)] = _0x1e63be[_0x3d9e87(0x811)] = _0x1e63be['flags'] ? _0xd232de(_0x1e63be[_0x3d9e87(0x811)], _0x2594b9, _0x40d65d, _0x448be8['next_out'] - _0x40d65d) : _0x1a9e1c(_0x1e63be['check'], _0x2594b9, _0x40d65d, _0x448be8[_0x3d9e87(0xd36)] - _0x40d65d)),
                              _0x448be8[_0x3d9e87(0x428)] = _0x1e63be[_0x3d9e87(0x504)] + (_0x1e63be['last'] ? 0x40 : 0x0) + (_0x1e63be[_0x3d9e87(0xac9)] === _0x1260db ? 0x80 : 0x0) + (_0x1e63be[_0x3d9e87(0xac9)] === _0x26eb9b || _0x1e63be[_0x3d9e87(0xac9)] === _0x1dddc6 ? 0x100 : 0x0),
                              (0x0 === _0x5d9b62 && 0x0 === _0x40d65d || _0x340088 === _0x4cfb1b) && _0x1879a1 === _0x314d42 && (_0x1879a1 = _0x57d246),
                              _0x1879a1;
                    }
                    function _0x3711f9(_0x5c9aa2) {
                         const _0x566573 = _0x55a1d9;
                         if (!_0x5c9aa2 || !_0x5c9aa2['state'])
                              return _0x146486;
                         var _0x66af06 = _0x5c9aa2['state'];
                         return _0x66af06[_0x566573(0x6e2)] && (_0x66af06[_0x566573(0x6e2)] = null),
                              _0x5c9aa2['state'] = null,
                              _0x314d42;
                    }
                    function _0x3e3d48(_0x3184bd, _0xdad975) {
                         const _0x1e78ee = _0x55a1d9;
                         var _0x349d46;
                         return _0x3184bd && _0x3184bd[_0x1e78ee(0x4f1)] ? 0x0 == (0x2 & (_0x349d46 = _0x3184bd[_0x1e78ee(0x4f1)])[_0x1e78ee(0x24c)]) ? _0x146486 : (_0x349d46[_0x1e78ee(0xd0a)] = _0xdad975,
                              _0xdad975[_0x1e78ee(0x889)] = !0x1,
                              _0x314d42) : _0x146486;
                    }
                    function _0x19188a(_0x121ebe, _0x247f12) {
                         const _0x3c0071 = _0x55a1d9;
                         var _0x28c558, _0x3a7c96 = _0x247f12['length'];
                         return _0x121ebe && _0x121ebe[_0x3c0071(0x4f1)] ? 0x0 !== (_0x28c558 = _0x121ebe[_0x3c0071(0x4f1)])[_0x3c0071(0x24c)] && _0x28c558[_0x3c0071(0xac9)] !== _0x309af9 ? _0x146486 : _0x28c558[_0x3c0071(0xac9)] === _0x309af9 && _0x1a9e1c(0x1, _0x247f12, _0x3a7c96, 0x0) !== _0x28c558['check'] ? _0x17e834 : _0x31b377(_0x121ebe, _0x247f12, _0x3a7c96, _0x3a7c96) ? (_0x28c558[_0x3c0071(0xac9)] = _0x7392cc,
                              _0xaef937) : (_0x28c558[_0x3c0071(0x62e)] = 0x1,
                                   _0x314d42) : _0x146486;
                    }
                    _0x148a53[_0x55a1d9(0x1a3)] = _0x3d95b1,
                         _0x148a53[_0x55a1d9(0x33d)] = _0x544d71,
                         _0x148a53[_0x55a1d9(0x712)] = _0x391d93,
                         _0x148a53[_0x55a1d9(0x380)] = _0x505bb5,
                         _0x148a53[_0x55a1d9(0x4c7)] = _0x1eb2f6,
                         _0x148a53['inflate'] = _0x58a325,
                         _0x148a53['inflateEnd'] = _0x3711f9,
                         _0x148a53[_0x55a1d9(0x5ef)] = _0x3e3d48,
                         _0x148a53[_0x55a1d9(0xa54)] = _0x19188a,
                         _0x148a53['inflateInfo'] = _0x55a1d9(0xcb2);
               }
                    , {
                    '../utils/common': 0x1,
                    './adler32': 0x3,
                    './crc32': 0x5,
                    './inffast': 0x7,
                    './inftrees': 0x9
               }],
               0x9: [function (_0x22c026, _0x5c4f8b, _0x30010d) {
                    const _0x292e2e = _0xc3a123;
                    var _0x72cc45 = _0x22c026(_0x292e2e(0xcb3))
                         , _0x29d1fa = 0xf
                         , _0x2d9840 = 0x354
                         , _0x45fd8f = 0x250
                         , _0x41bfa2 = 0x0
                         , _0x12cf80 = 0x1
                         , _0x2c5fbd = 0x2
                         , _0x50dc2d = [0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xd, 0xf, 0x11, 0x13, 0x17, 0x1b, 0x1f, 0x23, 0x2b, 0x33, 0x3b, 0x43, 0x53, 0x63, 0x73, 0x83, 0xa3, 0xc3, 0xe3, 0x102, 0x0, 0x0]
                         , _0x5a5b75 = [0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x11, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14, 0x14, 0x15, 0x15, 0x15, 0x15, 0x10, 0x48, 0x4e]
                         , _0x34f398 = [0x1, 0x2, 0x3, 0x4, 0x5, 0x7, 0x9, 0xd, 0x11, 0x19, 0x21, 0x31, 0x41, 0x61, 0x81, 0xc1, 0x101, 0x181, 0x201, 0x301, 0x401, 0x601, 0x801, 0xc01, 0x1001, 0x1801, 0x2001, 0x3001, 0x4001, 0x6001, 0x0, 0x0]
                         , _0x5ab6df = [0x10, 0x10, 0x10, 0x10, 0x11, 0x11, 0x12, 0x12, 0x13, 0x13, 0x14, 0x14, 0x15, 0x15, 0x16, 0x16, 0x17, 0x17, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x40, 0x40];
                    _0x5c4f8b[_0x292e2e(0x705)] = function (_0x3bfc27, _0x30842c, _0x5a96ac, _0xfea110, _0x54b88a, _0x2a05d1, _0x43ec33, _0x2d4ac4) {
                         const _0x2ec95c = _0x292e2e;
                         var _0x2ab5b7, _0x5b035c, _0xfe06ef, _0x3cfdf6, _0x15e2da, _0x29cead, _0x135876, _0x4514cf, _0x329cb2, _0x573cf1 = _0x2d4ac4[_0x2ec95c(0x504)], _0x4a117d = 0x0, _0x200991 = 0x0, _0x9d8ee1 = 0x0, _0x49cbf3 = 0x0, _0x217d47 = 0x0, _0x347798 = 0x0, _0x35594b = 0x0, _0x3cc66b = 0x0, _0x4deaec = 0x0, _0x1f3c66 = 0x0, _0x1f5dd3 = null, _0x44d4b8 = 0x0, _0x38aa8d = new _0x72cc45[(_0x2ec95c(0xa83))](_0x29d1fa + 0x1), _0x296722 = new _0x72cc45[(_0x2ec95c(0xa83))](_0x29d1fa + 0x1), _0x1d5250 = null, _0xa1743b = 0x0;
                         for (_0x4a117d = 0x0; _0x4a117d <= _0x29d1fa; _0x4a117d++)
                              _0x38aa8d[_0x4a117d] = 0x0;
                         for (_0x200991 = 0x0; _0x200991 < _0xfea110; _0x200991++)
                              _0x38aa8d[_0x30842c[_0x5a96ac + _0x200991]]++;
                         for (_0x217d47 = _0x573cf1,
                              _0x49cbf3 = _0x29d1fa; _0x49cbf3 >= 0x1 && 0x0 === _0x38aa8d[_0x49cbf3]; _0x49cbf3--)
                              ;
                         if (_0x217d47 > _0x49cbf3 && (_0x217d47 = _0x49cbf3),
                              0x0 === _0x49cbf3)
                              return _0x54b88a[_0x2a05d1++] = 0x1400000,
                                   _0x54b88a[_0x2a05d1++] = 0x1400000,
                                   _0x2d4ac4['bits'] = 0x1,
                                   0x0;
                         for (_0x9d8ee1 = 0x1; _0x9d8ee1 < _0x49cbf3 && 0x0 === _0x38aa8d[_0x9d8ee1]; _0x9d8ee1++)
                              ;
                         for (_0x217d47 < _0x9d8ee1 && (_0x217d47 = _0x9d8ee1),
                              _0x3cc66b = 0x1,
                              _0x4a117d = 0x1; _0x4a117d <= _0x29d1fa; _0x4a117d++)
                              if (_0x3cc66b <<= 0x1,
                                   (_0x3cc66b -= _0x38aa8d[_0x4a117d]) < 0x0)
                                   return -0x1;
                         if (_0x3cc66b > 0x0 && (_0x3bfc27 === _0x41bfa2 || 0x1 !== _0x49cbf3))
                              return -0x1;
                         for (_0x296722[0x1] = 0x0,
                              _0x4a117d = 0x1; _0x4a117d < _0x29d1fa; _0x4a117d++)
                              _0x296722[_0x4a117d + 0x1] = _0x296722[_0x4a117d] + _0x38aa8d[_0x4a117d];
                         for (_0x200991 = 0x0; _0x200991 < _0xfea110; _0x200991++)
                              0x0 !== _0x30842c[_0x5a96ac + _0x200991] && (_0x43ec33[_0x296722[_0x30842c[_0x5a96ac + _0x200991]]++] = _0x200991);
                         if (_0x3bfc27 === _0x41bfa2 ? (_0x1f5dd3 = _0x1d5250 = _0x43ec33,
                              _0x29cead = 0x13) : _0x3bfc27 === _0x12cf80 ? (_0x1f5dd3 = _0x50dc2d,
                                   _0x44d4b8 -= 0x101,
                                   _0x1d5250 = _0x5a5b75,
                                   _0xa1743b -= 0x101,
                                   _0x29cead = 0x100) : (_0x1f5dd3 = _0x34f398,
                                        _0x1d5250 = _0x5ab6df,
                                        _0x29cead = -0x1),
                              _0x1f3c66 = 0x0,
                              _0x200991 = 0x0,
                              _0x4a117d = _0x9d8ee1,
                              _0x15e2da = _0x2a05d1,
                              _0x347798 = _0x217d47,
                              _0x35594b = 0x0,
                              _0xfe06ef = -0x1,
                              _0x3cfdf6 = (_0x4deaec = 0x1 << _0x217d47) - 0x1,
                              _0x3bfc27 === _0x12cf80 && _0x4deaec > _0x2d9840 || _0x3bfc27 === _0x2c5fbd && _0x4deaec > _0x45fd8f)
                              return 0x1;
                         for (; ;) {
                              _0x135876 = _0x4a117d - _0x35594b,
                                   _0x43ec33[_0x200991] < _0x29cead ? (_0x4514cf = 0x0,
                                        _0x329cb2 = _0x43ec33[_0x200991]) : _0x43ec33[_0x200991] > _0x29cead ? (_0x4514cf = _0x1d5250[_0xa1743b + _0x43ec33[_0x200991]],
                                             _0x329cb2 = _0x1f5dd3[_0x44d4b8 + _0x43ec33[_0x200991]]) : (_0x4514cf = 0x60,
                                                  _0x329cb2 = 0x0),
                                   _0x2ab5b7 = 0x1 << _0x4a117d - _0x35594b,
                                   _0x9d8ee1 = _0x5b035c = 0x1 << _0x347798;
                              do {
                                   _0x54b88a[_0x15e2da + (_0x1f3c66 >> _0x35594b) + (_0x5b035c -= _0x2ab5b7)] = _0x135876 << 0x18 | _0x4514cf << 0x10 | _0x329cb2 | 0x0;
                              } while (0x0 !== _0x5b035c);
                              for (_0x2ab5b7 = 0x1 << _0x4a117d - 0x1; _0x1f3c66 & _0x2ab5b7;)
                                   _0x2ab5b7 >>= 0x1;
                              if (0x0 !== _0x2ab5b7 ? (_0x1f3c66 &= _0x2ab5b7 - 0x1,
                                   _0x1f3c66 += _0x2ab5b7) : _0x1f3c66 = 0x0,
                                   _0x200991++,
                                   0x0 == --_0x38aa8d[_0x4a117d]) {
                                   if (_0x4a117d === _0x49cbf3)
                                        break;
                                   _0x4a117d = _0x30842c[_0x5a96ac + _0x43ec33[_0x200991]];
                              }
                              if (_0x4a117d > _0x217d47 && (_0x1f3c66 & _0x3cfdf6) !== _0xfe06ef) {
                                   for (0x0 === _0x35594b && (_0x35594b = _0x217d47),
                                        _0x15e2da += _0x9d8ee1,
                                        _0x3cc66b = 0x1 << (_0x347798 = _0x4a117d - _0x35594b); _0x347798 + _0x35594b < _0x49cbf3 && !((_0x3cc66b -= _0x38aa8d[_0x347798 + _0x35594b]) <= 0x0);)
                                        _0x347798++,
                                             _0x3cc66b <<= 0x1;
                                   if (_0x4deaec += 0x1 << _0x347798,
                                        _0x3bfc27 === _0x12cf80 && _0x4deaec > _0x2d9840 || _0x3bfc27 === _0x2c5fbd && _0x4deaec > _0x45fd8f)
                                        return 0x1;
                                   _0x54b88a[_0xfe06ef = _0x1f3c66 & _0x3cfdf6] = _0x217d47 << 0x18 | _0x347798 << 0x10 | _0x15e2da - _0x2a05d1 | 0x0;
                              }
                         }
                         return 0x0 !== _0x1f3c66 && (_0x54b88a[_0x15e2da + _0x1f3c66] = _0x4a117d - _0x35594b << 0x18 | 0x40 << 0x10 | 0x0),
                              _0x2d4ac4[_0x2ec95c(0x504)] = _0x217d47,
                              0x0;
                    }
                         ;
               }
                    , {
                    '../utils/common': 0x1
               }],
               0xa: [function (_0x199033, _0x49cf23, _0x1bbb6f) {
                    const _0x551999 = _0xc3a123;
                    _0x49cf23[_0x551999(0x705)] = {
                         0x2: _0x551999(0x951),
                         0x1: _0x551999(0xca1),
                         0x0: '',
                         '-1': _0x551999(0x64f),
                         '-2': 'stream\x20error',
                         '-3': _0x551999(0xaae),
                         '-4': 'insufficient\x20memory',
                         '-5': _0x551999(0x3ee),
                         '-6': _0x551999(0x4dd)
                    };
               }
                    , {}],
               0xb: [function (_0x369445, _0x35b803, _0x33bda0) {
                    function _0x211336() {
                         const _0x5f8b2b = _0x5e91;
                         this[_0x5f8b2b(0x70d)] = null,
                              this[_0x5f8b2b(0x7ea)] = 0x0,
                              this[_0x5f8b2b(0x2a5)] = 0x0,
                              this[_0x5f8b2b(0x1f5)] = 0x0,
                              this[_0x5f8b2b(0x7c6)] = null,
                              this[_0x5f8b2b(0xd36)] = 0x0,
                              this['avail_out'] = 0x0,
                              this[_0x5f8b2b(0x4a2)] = 0x0,
                              this['msg'] = '',
                              this[_0x5f8b2b(0x4f1)] = null,
                              this[_0x5f8b2b(0x428)] = 0x2,
                              this['adler'] = 0x0;
                    }
                    _0x35b803['exports'] = _0x211336;
               }
                    , {}],
               '/lib/inflate.js': [function (_0x461420, _0x560bd4, _0x1bf54a) {
                    const _0x4e2f53 = _0xc3a123;
                    var _0x54be31 = _0x461420('./zlib/inflate')
                         , _0x5654c9 = _0x461420('./utils/common')
                         , _0x42dadb = _0x461420(_0x4e2f53(0x952))
                         , _0x580b98 = _0x461420(_0x4e2f53(0x8ec))
                         , _0x2ded9f = _0x461420(_0x4e2f53(0xd77))
                         , _0x1c14e0 = _0x461420(_0x4e2f53(0x8fe))
                         , _0x3f100b = _0x461420('./zlib/gzheader')
                         , _0x243953 = Object[_0x4e2f53(0x2d4)][_0x4e2f53(0x892)];
                    function _0xa715f0(_0x10c14d) {
                         const _0x1a899d = _0x4e2f53;
                         if (!(this instanceof _0xa715f0))
                              return new _0xa715f0(_0x10c14d);
                         this[_0x1a899d(0x419)] = _0x5654c9[_0x1a899d(0x9d5)]({
                              'chunkSize': 0x4000,
                              'windowBits': 0x0,
                              'to': ''
                         }, _0x10c14d || {});
                         var _0x25c642 = this[_0x1a899d(0x419)];
                         _0x25c642[_0x1a899d(0x8f2)] && _0x25c642[_0x1a899d(0x76b)] >= 0x0 && _0x25c642[_0x1a899d(0x76b)] < 0x10 && (_0x25c642[_0x1a899d(0x76b)] = -_0x25c642[_0x1a899d(0x76b)],
                              0x0 === _0x25c642[_0x1a899d(0x76b)] && (_0x25c642[_0x1a899d(0x76b)] = -0xf)),
                              !(_0x25c642[_0x1a899d(0x76b)] >= 0x0 && _0x25c642[_0x1a899d(0x76b)] < 0x10) || _0x10c14d && _0x10c14d[_0x1a899d(0x76b)] || (_0x25c642[_0x1a899d(0x76b)] += 0x20),
                              _0x25c642[_0x1a899d(0x76b)] > 0xf && _0x25c642[_0x1a899d(0x76b)] < 0x30 && 0x0 == (0xf & _0x25c642[_0x1a899d(0x76b)]) && (_0x25c642['windowBits'] |= 0xf),
                              this[_0x1a899d(0xcc4)] = 0x0,
                              this[_0x1a899d(0xd58)] = '',
                              this[_0x1a899d(0x76c)] = !0x1,
                              this[_0x1a899d(0x40a)] = [],
                              this[_0x1a899d(0xbd4)] = new _0x1c14e0(),
                              this['strm'][_0x1a899d(0x378)] = 0x0;
                         var _0x1a6f59 = _0x54be31['inflateInit2'](this['strm'], _0x25c642[_0x1a899d(0x76b)]);
                         if (_0x1a6f59 !== _0x580b98['Z_OK'])
                              throw new Error(_0x2ded9f[_0x1a6f59]);
                         this[_0x1a899d(0x69f)] = new _0x3f100b(),
                              _0x54be31[_0x1a899d(0x5ef)](this[_0x1a899d(0xbd4)], this[_0x1a899d(0x69f)]);
                    }
                    function _0x6f7c09(_0x442403, _0x14cadb) {
                         var _0x259735 = new _0xa715f0(_0x14cadb);
                         if (_0x259735['push'](_0x442403, !0x0),
                              _0x259735['err'])
                              throw _0x259735['msg'] || _0x2ded9f[_0x259735['err']];
                         return _0x259735['result'];
                    }
                    function _0x2a082f(_0x1e1394, _0x3788cc) {
                         const _0xb6ebd3 = _0x4e2f53;
                         return (_0x3788cc = _0x3788cc || {})[_0xb6ebd3(0x8f2)] = !0x0,
                              _0x6f7c09(_0x1e1394, _0x3788cc);
                    }
                    _0xa715f0[_0x4e2f53(0x2d4)]['push'] = function (_0x3777e3, _0x457792) {
                         const _0x322fc9 = _0x4e2f53;
                         var _0x3f8bcb, _0x41f4d9, _0xe917c, _0x34936f, _0xe0b27a, _0x4c9fea, _0xdb069c = this[_0x322fc9(0xbd4)], _0x5276ff = this[_0x322fc9(0x419)][_0x322fc9(0x5fc)], _0x63bfc3 = this[_0x322fc9(0x419)][_0x322fc9(0x591)], _0x51b356 = !0x1;
                         if (this[_0x322fc9(0x76c)])
                              return !0x1;
                         _0x41f4d9 = _0x457792 === ~~_0x457792 ? _0x457792 : !0x0 === _0x457792 ? _0x580b98[_0x322fc9(0xd23)] : _0x580b98[_0x322fc9(0x992)],
                              'string' == typeof _0x3777e3 ? _0xdb069c[_0x322fc9(0x70d)] = _0x42dadb[_0x322fc9(0x505)](_0x3777e3) : '[object\x20ArrayBuffer]' === _0x243953[_0x322fc9(0x3fa)](_0x3777e3) ? _0xdb069c[_0x322fc9(0x70d)] = new Uint8Array(_0x3777e3) : _0xdb069c[_0x322fc9(0x70d)] = _0x3777e3,
                              _0xdb069c[_0x322fc9(0x7ea)] = 0x0,
                              _0xdb069c[_0x322fc9(0x2a5)] = _0xdb069c[_0x322fc9(0x70d)][_0x322fc9(0x72b)];
                         do {
                              if (0x0 === _0xdb069c['avail_out'] && (_0xdb069c[_0x322fc9(0x7c6)] = new _0x5654c9[(_0x322fc9(0x1b6))](_0x5276ff),
                                   _0xdb069c['next_out'] = 0x0,
                                   _0xdb069c[_0x322fc9(0x378)] = _0x5276ff),
                                   (_0x3f8bcb = _0x54be31[_0x322fc9(0xcb6)](_0xdb069c, _0x580b98[_0x322fc9(0x992)])) === _0x580b98[_0x322fc9(0xaf7)] && _0x63bfc3 && (_0x4c9fea = 'string' == typeof _0x63bfc3 ? _0x42dadb[_0x322fc9(0x822)](_0x63bfc3) : '[object\x20ArrayBuffer]' === _0x243953[_0x322fc9(0x3fa)](_0x63bfc3) ? new Uint8Array(_0x63bfc3) : _0x63bfc3,
                                        _0x3f8bcb = _0x54be31[_0x322fc9(0xa54)](this[_0x322fc9(0xbd4)], _0x4c9fea)),
                                   _0x3f8bcb === _0x580b98[_0x322fc9(0x5ee)] && !0x0 === _0x51b356 && (_0x3f8bcb = _0x580b98[_0x322fc9(0xa70)],
                                        _0x51b356 = !0x1),
                                   _0x3f8bcb !== _0x580b98[_0x322fc9(0x71b)] && _0x3f8bcb !== _0x580b98[_0x322fc9(0xa70)])
                                   return this[_0x322fc9(0x794)](_0x3f8bcb),
                                        this[_0x322fc9(0x76c)] = !0x0,
                                        !0x1;
                              _0xdb069c[_0x322fc9(0xd36)] && (0x0 !== _0xdb069c[_0x322fc9(0x378)] && _0x3f8bcb !== _0x580b98[_0x322fc9(0x71b)] && (0x0 !== _0xdb069c[_0x322fc9(0x2a5)] || _0x41f4d9 !== _0x580b98[_0x322fc9(0xd23)] && _0x41f4d9 !== _0x580b98['Z_SYNC_FLUSH']) || (_0x322fc9(0x379) === this[_0x322fc9(0x419)]['to'] ? (_0xe917c = _0x42dadb[_0x322fc9(0xb46)](_0xdb069c[_0x322fc9(0x7c6)], _0xdb069c[_0x322fc9(0xd36)]),
                                   _0x34936f = _0xdb069c[_0x322fc9(0xd36)] - _0xe917c,
                                   _0xe0b27a = _0x42dadb[_0x322fc9(0xa29)](_0xdb069c[_0x322fc9(0x7c6)], _0xe917c),
                                   _0xdb069c[_0x322fc9(0xd36)] = _0x34936f,
                                   _0xdb069c[_0x322fc9(0x378)] = _0x5276ff - _0x34936f,
                                   _0x34936f && _0x5654c9[_0x322fc9(0x198)](_0xdb069c[_0x322fc9(0x7c6)], _0xdb069c[_0x322fc9(0x7c6)], _0xe917c, _0x34936f, 0x0),
                                   this[_0x322fc9(0x33c)](_0xe0b27a)) : this[_0x322fc9(0x33c)](_0x5654c9['shrinkBuf'](_0xdb069c[_0x322fc9(0x7c6)], _0xdb069c[_0x322fc9(0xd36)])))),
                                   0x0 === _0xdb069c[_0x322fc9(0x2a5)] && 0x0 === _0xdb069c['avail_out'] && (_0x51b356 = !0x0);
                         } while ((_0xdb069c[_0x322fc9(0x2a5)] > 0x0 || 0x0 === _0xdb069c[_0x322fc9(0x378)]) && _0x3f8bcb !== _0x580b98[_0x322fc9(0x71b)]);
                         return _0x3f8bcb === _0x580b98[_0x322fc9(0x71b)] && (_0x41f4d9 = _0x580b98[_0x322fc9(0xd23)]),
                              _0x41f4d9 === _0x580b98[_0x322fc9(0xd23)] ? (_0x3f8bcb = _0x54be31[_0x322fc9(0xaa0)](this['strm']),
                                   this['onEnd'](_0x3f8bcb),
                                   this[_0x322fc9(0x76c)] = !0x0,
                                   _0x3f8bcb === _0x580b98['Z_OK']) : _0x41f4d9 !== _0x580b98['Z_SYNC_FLUSH'] || (this['onEnd'](_0x580b98[_0x322fc9(0xa70)]),
                                        _0xdb069c[_0x322fc9(0x378)] = 0x0,
                                        !0x0);
                    }
                         ,
                         _0xa715f0[_0x4e2f53(0x2d4)][_0x4e2f53(0x33c)] = function (_0x24adbe) {
                              const _0x4674c2 = _0x4e2f53;
                              this[_0x4674c2(0x40a)][_0x4674c2(0x63e)](_0x24adbe);
                         }
                         ,
                         _0xa715f0[_0x4e2f53(0x2d4)]['onEnd'] = function (_0x1aa185) {
                              const _0x2fcb82 = _0x4e2f53;
                              _0x1aa185 === _0x580b98[_0x2fcb82(0xa70)] && ('string' === this['options']['to'] ? this['result'] = this['chunks']['join']('') : this[_0x2fcb82(0x9bd)] = _0x5654c9['flattenChunks'](this[_0x2fcb82(0x40a)])),
                                   this[_0x2fcb82(0x40a)] = [],
                                   this[_0x2fcb82(0xcc4)] = _0x1aa185,
                                   this[_0x2fcb82(0xd58)] = this['strm']['msg'];
                         }
                         ,
                         _0x1bf54a['Inflate'] = _0xa715f0,
                         _0x1bf54a['inflate'] = _0x6f7c09,
                         _0x1bf54a['inflateRaw'] = _0x2a082f,
                         _0x1bf54a[_0x4e2f53(0x6d6)] = _0x6f7c09;
               }
                    , {
                    './utils/common': 0x1,
                    './utils/strings': 0x2,
                    './zlib/constants': 0x4,
                    './zlib/gzheader': 0x6,
                    './zlib/inflate': 0x8,
                    './zlib/messages': 0xa,
                    './zlib/zstream': 0xb
               }]
          }, {}, [])(_0xc3a123(0x26c));
          var _0xce368 = _0x2ae4e6;
          function _0x1d0b86() { }
          _0x1d0b86[_0xc3a123(0xd17)] = 0x9,
               _0x1d0b86[_0xc3a123(0x3a4)] = function (_0x1db673, _0x5616e4, _0xc78589) {
                    const _0x1f20b5 = _0xc3a123;
                    if (0x0 == _0x5616e4['length'])
                         return null;
                    let _0x27acb6, _0x5df934 = _0x5616e4[0x0];
                    _0x27acb6 = 0x0 === _0x5df934['indexType'] ? new Uint16Array(_0x5df934[_0x1f20b5(0xa9c)][_0x1f20b5(0x25d)], _0x5df934[_0x1f20b5(0xa9c)][_0x1f20b5(0x490)], _0x5df934[_0x1f20b5(0xa9c)][_0x1f20b5(0x62b)] / 0x2) : new Uint32Array(_0x5df934[_0x1f20b5(0xa9c)]['buffer'], _0x5df934['indicesTypedArray'][_0x1f20b5(0x490)], _0x5df934[_0x1f20b5(0xa9c)]['byteLength'] / 0x4);
                    let _0x14d33b = _0x1d0b86['extractEdgeInformation'](_0x1db673, !0x1, _0x27acb6)
                         , _0x3416e9 = EdgePreprocessing[_0x1f20b5(0x593)](_0x14d33b);
                    return _0xc78589 && (_0x3416e9['regular']['instancesData'] && _0xc78589[_0x1f20b5(0x63e)](_0x3416e9[_0x1f20b5(0xc7d)][_0x1f20b5(0x5f4)][_0x1f20b5(0x25d)]),
                         _0x3416e9['silhouette'][_0x1f20b5(0x5f4)] && _0xc78589['push'](_0x3416e9[_0x1f20b5(0xbad)][_0x1f20b5(0x5f4)][_0x1f20b5(0x25d)])),
                         _0x3416e9;
               }
               ;
          let _0x365a43 = null;
          function _0x4906a9(_0x3bf8e1) {
               const _0x5d0826 = _0xc3a123;
               if (_0x365a43)
                    return _0x365a43;
               let _0x1c759c = new Float32Array(0x8)
                    , _0x5a77a5 = 0x0;
               return _0x1c759c[_0x5a77a5++] = 0x0,
                    _0x1c759c[_0x5a77a5++] = 0x0,
                    _0x1c759c[_0x5a77a5++] = 0x0,
                    _0x1c759c[_0x5a77a5++] = 0x1,
                    _0x1c759c[_0x5a77a5++] = 0x1,
                    _0x1c759c[_0x5a77a5++] = 0x1,
                    _0x1c759c[_0x5a77a5++] = 0x1,
                    _0x1c759c[_0x5a77a5++] = 0x0,
                    _0x365a43 = Cesium[_0x5d0826(0xd3c)][_0x5d0826(0x856)]({
                         'context': _0x3bf8e1,
                         'typedArray': _0x1c759c,
                         'usage': Cesium[_0x5d0826(0xbd0)][_0x5d0826(0x78f)]
                    }),
                    _0x365a43['vertexArrayDestroyable'] = !0x1,
                    _0x365a43;
          }
          function _0x15fc03() {
               let _0x1bf012 = new Uint16Array(0x6)
                    , _0xfa956a = 0x0;
               return _0x1bf012[_0xfa956a++] = 0x2,
                    _0x1bf012[_0xfa956a++] = 0x1,
                    _0x1bf012[_0xfa956a++] = 0x0,
                    _0x1bf012[_0xfa956a++] = 0x3,
                    _0x1bf012[_0xfa956a++] = 0x2,
                    _0x1bf012[_0xfa956a++] = 0x0,
                    _0x1bf012;
          }
          let _0x51e0f3 = null;
          _0x1d0b86['createIndexBuffer'] = function (_0xfe728c) {
               const _0xfed049 = _0xc3a123;
               return _0x51e0f3 || (_0x51e0f3 = Cesium[_0xfed049(0xd3c)][_0xfed049(0x8c0)]({
                    'context': _0xfe728c,
                    'typedArray': _0x15fc03(),
                    'usage': Cesium['BufferUsage'][_0xfed049(0x78f)],
                    'indexDatatype': Cesium[_0xfed049(0x36b)][_0xfed049(0x744)]
               }),
                    _0x51e0f3[_0xfed049(0x828)] = !0x1,
                    _0x51e0f3);
          }
               ,
               _0x1d0b86['createRegularEdgeAttributes'] = function (_0x10ea44, _0x24dd58) {
                    const _0x2b9ad0 = _0xc3a123;
                    if (!_0x24dd58[_0x2b9ad0(0x5f4)] || 0x0 === _0x24dd58[_0x2b9ad0(0x5f4)][_0x2b9ad0(0x72b)])
                         return;
                    let _0x54f699 = {}
                         , _0x59aefb = [];
                    _0x24dd58[_0x2b9ad0(0x273)] = _0x54f699,
                         _0x24dd58['attributes'] = _0x59aefb;
                    let _0x27a251 = Cesium['Buffer'][_0x2b9ad0(0x856)]({
                         'context': _0x10ea44,
                         'typedArray': _0x24dd58['instancesData'],
                         'usage': Cesium[_0x2b9ad0(0xbd0)][_0x2b9ad0(0x78f)]
                    });
                    _0x24dd58['instancesData'] = null;
                    let _0x260302 = Cesium[_0x2b9ad0(0x5fa)][_0x2b9ad0(0x961)](Cesium[_0x2b9ad0(0x5fa)][_0x2b9ad0(0xa80)])
                         , _0x1af42a = _0x4906a9(_0x10ea44)
                         , _0x29afcb = 0x0;
                    _0x54f699[_0x2b9ad0(0x5bc)] = _0x29afcb++,
                         _0x59aefb[_0x2b9ad0(0x63e)]({
                              'index': _0x54f699['aSideness'],
                              'vertexBuffer': _0x1af42a,
                              'componentsPerAttribute': 0x2,
                              'componentDatatype': Cesium[_0x2b9ad0(0x5fa)][_0x2b9ad0(0xa80)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': 0x2 * Cesium[_0x2b9ad0(0x5fa)][_0x2b9ad0(0x961)](Cesium['ComponentDatatype'][_0x2b9ad0(0xa80)]),
                              'normalize': !0x1
                         });
                    let _0x57c0a3 = _0x1d0b86[_0x2b9ad0(0xd17)]
                         , _0x3daded = 0x0;
                    _0x54f699[_0x2b9ad0(0x770)] = _0x29afcb++,
                         _0x59aefb[_0x2b9ad0(0x63e)]({
                              'index': _0x54f699[_0x2b9ad0(0x770)],
                              'vertexBuffer': _0x27a251,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium['ComponentDatatype'][_0x2b9ad0(0xa80)],
                              'normalize': !0x1,
                              'offsetInBytes': _0x260302 * _0x3daded,
                              'strideInBytes': _0x260302 * _0x57c0a3,
                              'instanceDivisor': 0x1
                         }),
                         _0x3daded += 0x3,
                         _0x54f699[_0x2b9ad0(0x5c1)] = _0x29afcb++,
                         _0x59aefb[_0x2b9ad0(0x63e)]({
                              'index': _0x54f699[_0x2b9ad0(0x5c1)],
                              'vertexBuffer': _0x27a251,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium[_0x2b9ad0(0x5fa)][_0x2b9ad0(0xa80)],
                              'normalize': !0x1,
                              'offsetInBytes': _0x260302 * _0x3daded,
                              'strideInBytes': _0x260302 * _0x57c0a3,
                              'instanceDivisor': 0x1
                         }),
                         _0x3daded += 0x3,
                         _0x54f699[_0x2b9ad0(0x637)] = _0x29afcb++,
                         _0x59aefb[_0x2b9ad0(0x63e)]({
                              'index': _0x54f699[_0x2b9ad0(0x637)],
                              'vertexBuffer': _0x27a251,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium[_0x2b9ad0(0x5fa)]['FLOAT'],
                              'normalize': !0x0,
                              'offsetInBytes': _0x260302 * _0x3daded,
                              'strideInBytes': _0x260302 * _0x57c0a3,
                              'instanceDivisor': 0x1
                         }),
                         _0x3daded += 0x3;
               }
               ,
               _0x1d0b86[_0xc3a123(0x33b)] = function (_0x202ec7, _0x5abc3d) {
                    const _0x41d07a = _0xc3a123;
                    if (!_0x5abc3d['instancesData'] || 0x0 == _0x5abc3d[_0x41d07a(0x5f4)][_0x41d07a(0x72b)])
                         return;
                    let _0x22fee7 = {}
                         , _0x50203e = [];
                    _0x5abc3d['attributeLocations'] = _0x22fee7,
                         _0x5abc3d[_0x41d07a(0x732)] = _0x50203e;
                    let _0x531c68 = Cesium[_0x41d07a(0xd3c)][_0x41d07a(0x856)]({
                         'context': _0x202ec7,
                         'typedArray': _0x5abc3d[_0x41d07a(0x5f4)],
                         'usage': Cesium['BufferUsage'][_0x41d07a(0x78f)]
                    });
                    _0x5abc3d[_0x41d07a(0x5f4)] = null;
                    let _0x4011a4 = Cesium[_0x41d07a(0x5fa)][_0x41d07a(0x961)](Cesium[_0x41d07a(0x5fa)]['FLOAT'])
                         , _0x2fb879 = 0x0;
                    _0x22fee7[_0x41d07a(0x5bc)] = _0x2fb879++,
                         _0x50203e[_0x41d07a(0x63e)]({
                              'index': _0x22fee7['aSideness'],
                              'vertexBuffer': _0x4906a9(_0x202ec7),
                              'componentsPerAttribute': 0x2,
                              'componentDatatype': Cesium[_0x41d07a(0x5fa)][_0x41d07a(0xa80)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': 0x2 * _0x4011a4,
                              'normalize': !0x1
                         });
                    let _0x4141e0 = 0x0;
                    _0x22fee7[_0x41d07a(0x770)] = _0x2fb879++,
                         _0x50203e[_0x41d07a(0x63e)]({
                              'index': _0x22fee7['aPosition0'],
                              'vertexBuffer': _0x531c68,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium[_0x41d07a(0x5fa)][_0x41d07a(0xa80)],
                              'normalize': !0x1,
                              'offsetInBytes': _0x4011a4 * _0x4141e0,
                              'strideInBytes': 0xc * _0x4011a4,
                              'instanceDivisor': 0x1
                         }),
                         _0x4141e0 += 0x3,
                         _0x22fee7['aPosition1'] = _0x2fb879++,
                         _0x50203e[_0x41d07a(0x63e)]({
                              'index': _0x22fee7[_0x41d07a(0x5c1)],
                              'vertexBuffer': _0x531c68,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium[_0x41d07a(0x5fa)][_0x41d07a(0xa80)],
                              'normalize': !0x1,
                              'offsetInBytes': _0x4011a4 * _0x4141e0,
                              'strideInBytes': 0xc * _0x4011a4,
                              'instanceDivisor': 0x1
                         }),
                         _0x4141e0 += 0x3,
                         _0x22fee7['aNormalA'] = _0x2fb879++,
                         _0x50203e['push']({
                              'index': _0x22fee7[_0x41d07a(0x735)],
                              'vertexBuffer': _0x531c68,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium[_0x41d07a(0x5fa)]['FLOAT'],
                              'normalize': !0x0,
                              'offsetInBytes': _0x4011a4 * _0x4141e0,
                              'strideInBytes': 0xc * _0x4011a4,
                              'instanceDivisor': 0x1
                         }),
                         _0x4141e0 += 0x3,
                         _0x22fee7[_0x41d07a(0x57e)] = _0x2fb879++,
                         _0x50203e[_0x41d07a(0x63e)]({
                              'index': _0x22fee7['aNormalB'],
                              'vertexBuffer': _0x531c68,
                              'componentsPerAttribute': 0x3,
                              'componentDatatype': Cesium['ComponentDatatype'][_0x41d07a(0xa80)],
                              'normalize': !0x0,
                              'offsetInBytes': _0x4011a4 * _0x4141e0,
                              'strideInBytes': 0xc * _0x4011a4,
                              'instanceDivisor': 0x1
                         }),
                         _0x4141e0 += 0x3;
               }
               ,
               _0x1d0b86[_0xc3a123(0x1d7)] = function (_0x13542f, _0x203b7a, _0x1c6950) {
                    const _0x5c7130 = _0xc3a123;
                    let _0x1f97a3 = _0x13542f[_0x5c7130(0x360)][_0x5c7130(0x5e2)]
                         , _0x22bdd4 = _0x13542f[_0x5c7130(0x761)][_0x1f97a3]
                         , _0x27eb21 = _0x22bdd4[_0x5c7130(0x8cf)]
                         , _0x4f3fdd = new Float32Array(_0x22bdd4[_0x5c7130(0xcfb)]['buffer'], _0x22bdd4[_0x5c7130(0xcfb)][_0x5c7130(0x490)], _0x22bdd4['typedArray']['byteLength'] / 0x4)
                         , _0x5dadaf = _0x4f3fdd['length'] / _0x27eb21;
                    if (_0x203b7a && _0x1c6950)
                         return {
                              'faces': _0x1c6950,
                              'neighbors': MeshProcessing[_0x5c7130(0x52f)](_0x1c6950, _0x5dadaf),
                              'vertices': _0x4f3fdd,
                              'dim': _0x27eb21
                         };
                    let _0x536a4f, _0x35b539 = _0x22bdd4['typedArray'][_0x5c7130(0x25d)];
                    _0x536a4f = isCompress ? _0x4f3fdd[_0x5c7130(0x25d)] : _0x35b539[_0x5c7130(0x21c)](_0x22bdd4[_0x5c7130(0xcfb)][_0x5c7130(0x490)], _0x22bdd4[_0x5c7130(0xcfb)][_0x5c7130(0x490)] + _0x22bdd4[_0x5c7130(0xcfb)][_0x5c7130(0x62b)]);
                    let _0xfb844c = MeshProcessing[_0x5c7130(0x8ea)](_0x536a4f, _0x27eb21)
                         , _0x233ae4 = _0x1d0b86[_0x5c7130(0x25e)](_0xfb844c[_0x5c7130(0xcae)], _0x1c6950);
                    return {
                         'faces': _0x233ae4,
                         'neighbors': MeshProcessing[_0x5c7130(0x52f)](_0x233ae4, _0xfb844c['uniqueCount']),
                         'vertices': new Float32Array(_0xfb844c['buffer']),
                         'dim': _0x27eb21
                    };
               }
               ,
               _0x1d0b86[_0xc3a123(0x25e)] = function (_0x572372, _0x548eb7) {
                    const _0x275372 = _0xc3a123;
                    if (_0x548eb7) {
                         _0x548eb7 = _0x548eb7['slice']();
                         for (let _0x475a62 = 0x0; _0x475a62 < _0x548eb7[_0x275372(0x72b)]; _0x475a62++)
                              _0x548eb7[_0x475a62] = _0x572372[_0x548eb7[_0x475a62]];
                         return _0x548eb7;
                    }
                    return _0x572372;
               }
               ;
          let _0x25fabf = new Cesium[(_0xc3a123(0x25b))]()
               , _0x305145 = new Cesium[(_0xc3a123(0x25b))]()
               , _0x4a4f26 = new Cesium[(_0xc3a123(0x25b))]()
               , _0x570f48 = new Cesium[(_0xc3a123(0x25b))]()
               , _0x39c9b2 = new Cesium['Cartesian3']()
               , _0x289376 = new Cesium['Cartesian3']()
               , _0x4785f2 = new Cesium[(_0xc3a123(0x25b))]()
               , _0x2138f1 = new Cesium[(_0xc3a123(0x25b))]();
          _0x1d0b86['createEdgeDataByIndices'] = function (_0x1e3992, _0x4bee59) {
               const _0x5b4ca2 = _0xc3a123;
               let _0x38b0d0, _0x4f520e = _0x1e3992[_0x5b4ca2(0x360)][_0x5b4ca2(0x5e2)], _0x998bd6 = _0x1e3992[_0x5b4ca2(0x761)][_0x4f520e], _0x40b380 = _0x998bd6['componentsPerAttribute'], _0x5010f6 = new Float32Array(_0x998bd6['typedArray'][_0x5b4ca2(0x25d)], _0x998bd6[_0x5b4ca2(0xcfb)]['byteOffset'], _0x998bd6[_0x5b4ca2(0xcfb)][_0x5b4ca2(0x62b)] / 0x4);
               _0x38b0d0 = 0x0 === _0x4bee59['indexType'] ? new Uint16Array(_0x4bee59[_0x5b4ca2(0xa9c)]['buffer'], _0x4bee59[_0x5b4ca2(0xa9c)][_0x5b4ca2(0x490)], _0x4bee59['indicesTypedArray'][_0x5b4ca2(0x62b)] / 0x2) : new Uint32Array(_0x4bee59['indicesTypedArray'][_0x5b4ca2(0x25d)], _0x4bee59['indicesTypedArray']['byteOffset'], _0x4bee59[_0x5b4ca2(0xa9c)][_0x5b4ca2(0x62b)] / 0x4);
               let _0x31d494 = []
                    , _0x384616 = []
                    , _0xe1b668 = _0x38b0d0['length']
                    , _0x5c6c58 = 0x0;
               for (let _0xfc7119 = 0x0, _0x1ed79c = 0x4 * Math['floor'](_0xe1b668 / 0x4); _0xfc7119 < _0x1ed79c; _0xfc7119 += 0x4) {
                    let _0x43ca4b = _0x38b0d0[_0xfc7119]
                         , _0x11e228 = _0x38b0d0[_0xfc7119 + 0x1]
                         , _0x182d4b = _0x38b0d0[_0xfc7119 + 0x2]
                         , _0x5b7087 = _0x38b0d0[_0xfc7119 + 0x3];
                    if (_0x25fabf['x'] = _0x5010f6[_0x40b380 * _0x43ca4b],
                         _0x25fabf['y'] = _0x5010f6[_0x40b380 * _0x43ca4b + 0x1],
                         _0x25fabf['z'] = _0x5010f6[_0x40b380 * _0x43ca4b + 0x2],
                         _0x305145['x'] = _0x5010f6[_0x40b380 * _0x11e228],
                         _0x305145['y'] = _0x5010f6[_0x40b380 * _0x11e228 + 0x1],
                         _0x305145['z'] = _0x5010f6[_0x40b380 * _0x11e228 + 0x2],
                         _0x4a4f26['x'] = _0x5010f6[_0x40b380 * _0x182d4b],
                         _0x4a4f26['y'] = _0x5010f6[_0x40b380 * _0x182d4b + 0x1],
                         _0x4a4f26['z'] = _0x5010f6[_0x40b380 * _0x182d4b + 0x2],
                         _0x570f48['x'] = _0x5010f6[_0x40b380 * _0x5b7087],
                         _0x570f48['y'] = _0x5010f6[_0x40b380 * _0x5b7087 + 0x1],
                         _0x570f48['z'] = _0x5010f6[_0x40b380 * _0x5b7087 + 0x2],
                         !(Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0xb32)](_0x305145, _0x4a4f26) || Cesium[_0x5b4ca2(0x25b)]['equals'](_0x305145, _0x570f48) || Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0xb32)](_0x305145, _0x25fabf) || Cesium['Cartesian3'][_0x5b4ca2(0xb32)](_0x4a4f26, _0x25fabf) || Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0xb32)](_0x570f48, _0x25fabf))) {
                         if (_0x182d4b === _0x5b7087) {
                              if (Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x60c)](_0x305145, _0x25fabf, _0x39c9b2),
                                   Cesium[_0x5b4ca2(0x25b)]['subtract'](_0x4a4f26, _0x25fabf, _0x289376),
                                   Cesium[_0x5b4ca2(0x25b)]['cross'](_0x39c9b2, _0x289376, _0x39c9b2),
                                   Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0xb32)](_0x39c9b2, Cesium['Cartesian3']['ZERO']))
                                   continue;
                              Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x579)](_0x39c9b2, _0x39c9b2),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x25fabf['x']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x25fabf['y']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x25fabf['z']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x305145['x']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x305145['y']),
                                   _0x31d494['push'](_0x305145['z']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x39c9b2['x']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x39c9b2['y']),
                                   _0x31d494[_0x5b4ca2(0x63e)](_0x39c9b2['z']);
                         } else {
                              if (Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x60c)](_0x305145, _0x25fabf, _0x39c9b2),
                                   Cesium[_0x5b4ca2(0x25b)]['subtract'](_0x4a4f26, _0x25fabf, _0x289376),
                                   Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x765)](_0x39c9b2, _0x289376, _0x39c9b2),
                                   Cesium['Cartesian3']['equals'](_0x39c9b2, Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x780)]))
                                   continue;
                              if (Cesium['Cartesian3'][_0x5b4ca2(0x579)](_0x39c9b2, _0x39c9b2),
                                   Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x60c)](_0x305145, _0x25fabf, _0x4785f2),
                                   Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x60c)](_0x570f48, _0x25fabf, _0x2138f1),
                                   Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x765)](_0x4785f2, _0x2138f1, _0x4785f2),
                                   Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0xb32)](_0x4785f2, Cesium['Cartesian3'][_0x5b4ca2(0x780)]))
                                   continue;
                              Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x579)](_0x4785f2, _0x4785f2),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x25fabf['x']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x25fabf['y']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x25fabf['z']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x305145['x']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x305145['y']),
                                   _0x384616['push'](_0x305145['z']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x39c9b2['x']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x39c9b2['y']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x39c9b2['z']),
                                   _0x384616['push'](_0x4785f2['x']),
                                   _0x384616[_0x5b4ca2(0x63e)](_0x4785f2['y']),
                                   _0x384616['push'](_0x4785f2['z']);
                         }
                         _0x5c6c58 += Cesium[_0x5b4ca2(0x25b)][_0x5b4ca2(0x3dd)](_0x25fabf, _0x305145);
                    }
               }
               let _0x329e1d = _0x5c6c58 / (_0xe1b668 / 0x4)
                    , _0x1c3df1 = _0x31d494[_0x5b4ca2(0x72b)] / _0x1d0b86[_0x5b4ca2(0xd17)]
                    , _0x28f739 = _0x384616[_0x5b4ca2(0x72b)] / 0xc;
               return {
                    'regular': {
                         'instancesData': new Float32Array(_0x31d494),
                         'instanceCount': _0x1c3df1,
                         'edgeLength': _0x1c3df1 * _0x329e1d
                    },
                    'silhouette': {
                         'instancesData': new Float32Array(_0x384616),
                         'instanceCount': _0x28f739,
                         'edgeLength': _0x28f739
                    },
                    'averageEdgeLength': _0x329e1d
               };
          }
               ;
          const _0x279694 = Cesium[_0xc3a123(0x336)]
               , _0x949121 = Cesium[_0xc3a123(0x1b7)]
               , _0x4e434c = Cesium[_0xc3a123(0xce9)]
               , _0x44a221 = Cesium[_0xc3a123(0x5fa)]
               , _0x45281f = Cesium[_0xc3a123(0x36b)]
               , _0x4002df = Cesium['PrimitiveType']
               , _0x302db4 = Cesium[_0xc3a123(0xd5c)]
               , _0x4464b6 = Cesium[_0xc3a123(0x6ca)]
               , _0x1ba338 = Cesium['Cartesian3']
               , _0x5e82c9 = Cesium[_0xc3a123(0xcdf)]
               , _0x212950 = Cesium[_0xc3a123(0x4b9)];
          function _0x11b39f() { }
          var _0x3cee7b;
          function _0x467e8c(_0x2ff565, _0x106879) {
               const _0x269aaa = _0xc3a123;
               for (var _0x443f4e = _0x2ff565[_0x269aaa(0x5ba)](), _0x28339a = _0x2ff565[_0x269aaa(0x389)](), _0x3c77a0 = new _0x3cee7b[(_0x269aaa(0x82b))](), _0x436abd = 0x3 * _0x28339a, _0x330760 = _0x45281f[_0x269aaa(0x8bc)](_0x443f4e, _0x436abd), _0x2ab29c = 0x0, _0x1a285a = 0x0; _0x1a285a < _0x28339a; ++_0x1a285a)
                    _0x106879[_0x269aaa(0x9be)](_0x2ff565, _0x1a285a, _0x3c77a0),
                         _0x330760[_0x2ab29c + 0x0] = _0x3c77a0['GetValue'](0x0),
                         _0x330760[_0x2ab29c + 0x1] = _0x3c77a0['GetValue'](0x1),
                         _0x330760[_0x2ab29c + 0x2] = _0x3c77a0['GetValue'](0x2),
                         _0x2ab29c += 0x3;
               var _0x59c5fa = _0x45281f[_0x269aaa(0x744)];
               return _0x330760 instanceof Uint32Array && (_0x59c5fa = _0x45281f[_0x269aaa(0xc7a)]),
                    _0x3cee7b[_0x269aaa(0x9bb)](_0x3c77a0),
               {
                    'typedArray': _0x330760,
                    'numberOfIndices': _0x436abd,
                    'indexDataType': _0x59c5fa
               };
          }
          function _0x2e4ffd(_0x232653, _0x53c290, _0x34200f, _0x9abf09, _0x432e18) {
               const _0x2acded = _0xc3a123;
               var _0x327e9d, _0x3a7224;
               _0x9abf09[_0x2acded(0x42a)] <= 0x8 ? (_0x3a7224 = new _0x3cee7b[(_0x2acded(0x312))](),
                    _0x327e9d = new Uint8Array(_0x432e18),
                    _0x53c290[_0x2acded(0x521)](_0x232653, _0x34200f, _0x3a7224)) : (_0x3a7224 = new _0x3cee7b['DracoUInt16Array'](),
                         _0x327e9d = new Uint16Array(_0x432e18),
                         _0x53c290['GetAttributeUInt16ForAllPoints'](_0x232653, _0x34200f, _0x3a7224));
               for (var _0x3145a8 = 0x0; _0x3145a8 < _0x432e18; ++_0x3145a8)
                    _0x327e9d[_0x3145a8] = _0x3a7224['GetValue'](_0x3145a8);
               return _0x3cee7b[_0x2acded(0x9bb)](_0x3a7224),
                    _0x327e9d;
          }
          function _0x309c2a(_0x2584bf, _0x23b7fb, _0x1c6c9b, _0x1581e8) {
               const _0xdbe63 = _0xc3a123;
               var _0x4aa0ac, _0x4f600e;
               switch (_0x1c6c9b[_0xdbe63(0x428)]()) {
                    case 0x1:
                    case 0xb:
                         _0x4f600e = new _0x3cee7b[(_0xdbe63(0x88d))](),
                              _0x4aa0ac = new Int8Array(_0x1581e8),
                              _0x23b7fb['GetAttributeInt8ForAllPoints'](_0x2584bf, _0x1c6c9b, _0x4f600e);
                         break;
                    case 0x2:
                         _0x4f600e = new _0x3cee7b['DracoUInt8Array'](),
                              _0x4aa0ac = new Uint8Array(_0x1581e8),
                              _0x23b7fb[_0xdbe63(0x521)](_0x2584bf, _0x1c6c9b, _0x4f600e);
                         break;
                    case 0x3:
                         _0x4f600e = new _0x3cee7b['DracoInt16Array'](),
                              _0x4aa0ac = new Int16Array(_0x1581e8),
                              _0x23b7fb[_0xdbe63(0x3f8)](_0x2584bf, _0x1c6c9b, _0x4f600e);
                         break;
                    case 0x4:
                         _0x4f600e = new _0x3cee7b['DracoUInt16Array'](),
                              _0x4aa0ac = new Uint16Array(_0x1581e8),
                              _0x23b7fb[_0xdbe63(0xd39)](_0x2584bf, _0x1c6c9b, _0x4f600e);
                         break;
                    case 0x5:
                    case 0x7:
                         _0x4f600e = new _0x3cee7b['DracoInt32Array'](),
                              _0x4aa0ac = new Int32Array(_0x1581e8),
                              _0x23b7fb[_0xdbe63(0x897)](_0x2584bf, _0x1c6c9b, _0x4f600e);
                         break;
                    case 0x6:
                    case 0x8:
                         _0x4f600e = new _0x3cee7b[(_0xdbe63(0x737))](),
                              _0x4aa0ac = new Uint32Array(_0x1581e8),
                              _0x23b7fb[_0xdbe63(0x7fa)](_0x2584bf, _0x1c6c9b, _0x4f600e);
                         break;
                    case 0x9:
                    case 0xa:
                         _0x4f600e = new _0x3cee7b[(_0xdbe63(0x58a))](),
                              _0x4aa0ac = new Float32Array(_0x1581e8),
                              _0x23b7fb[_0xdbe63(0xab5)](_0x2584bf, _0x1c6c9b, _0x4f600e);
               }
               for (var _0x1ff8ed = 0x0; _0x1ff8ed < _0x1581e8; ++_0x1ff8ed)
                    _0x4aa0ac[_0x1ff8ed] = _0x4f600e['GetValue'](_0x1ff8ed);
               return _0x3cee7b[_0xdbe63(0x9bb)](_0x4f600e),
                    _0x4aa0ac;
          }
          function _0x17f16f(_0x1d9ac2, _0x2d395a, _0x583290) {
               const _0x40a751 = _0xc3a123;
               var _0xe8c20a, _0x364b51 = _0x1d9ac2['num_points'](), _0x2f0d98 = _0x583290[_0x40a751(0x868)](), _0x55d2f6 = new _0x3cee7b['AttributeQuantizationTransform']();
               if (_0x55d2f6[_0x40a751(0xdaf)](_0x583290)) {
                    for (var _0x312eee = new Array(_0x2f0d98), _0x175141 = 0x0; _0x175141 < _0x2f0d98; ++_0x175141)
                         _0x312eee[_0x175141] = _0x55d2f6['min_value'](_0x175141);
                    _0xe8c20a = {
                         'quantizationBits': _0x55d2f6[_0x40a751(0x39d)](),
                         'minValues': _0x312eee,
                         'range': _0x55d2f6[_0x40a751(0xa03)](),
                         'octEncoded': !0x1
                    };
               }
               _0x3cee7b['destroy'](_0x55d2f6),
                    (_0x55d2f6 = new _0x3cee7b['AttributeOctahedronTransform']())['InitFromAttribute'](_0x583290) && (_0xe8c20a = {
                         'quantizationBits': _0x55d2f6['quantization_bits'](),
                         'octEncoded': !0x0
                    }),
                    _0x3cee7b[_0x40a751(0x9bb)](_0x55d2f6);
               var _0xce2a04, _0x6e82b = _0x364b51 * _0x2f0d98;
               _0xce2a04 = _0x279694(_0xe8c20a) ? _0x2e4ffd(_0x1d9ac2, _0x2d395a, _0x583290, _0xe8c20a, _0x6e82b) : _0x309c2a(_0x1d9ac2, _0x2d395a, _0x583290, _0x6e82b);
               var _0x238ab9 = _0x44a221[_0x40a751(0x407)](_0xce2a04);
               return {
                    'array': _0xce2a04,
                    'data': {
                         'componentsPerAttribute': _0x2f0d98,
                         'componentDatatype': _0x238ab9,
                         'byteOffset': _0x583290['byte_offset'](),
                         'byteStride': _0x44a221['getSizeInBytes'](_0x238ab9) * _0x2f0d98,
                         'normalized': _0x583290[_0x40a751(0x4d4)](),
                         'quantization': _0xe8c20a
                    }
               };
          }
          var _0x1d56bb = new _0x1ba338(0x24ffb2985f71, 0x24ffb2985f71, 40408299984661.445)
               , _0x4c1815 = new _0x1ba338()
               , _0x34c7f6 = new _0x1ba338();
          function _0x303281(_0x1821a9, _0x3ae7f7, _0x2f8e6b, _0xe7ee3) {
               const _0x5ee172 = _0xc3a123;
               var _0x4f4eac = Math['cos'](_0x3ae7f7);
               _0x4c1815['x'] = _0x4f4eac * Math[_0x5ee172(0x2c7)](_0x1821a9),
                    _0x4c1815['y'] = _0x4f4eac * Math[_0x5ee172(0xa86)](_0x1821a9),
                    _0x4c1815['z'] = Math[_0x5ee172(0xa86)](_0x3ae7f7),
                    _0x4c1815 = _0x1ba338['normalize'](_0x4c1815, _0x4c1815),
                    _0x1ba338[_0x5ee172(0x2a6)](_0x1d56bb, _0x4c1815, _0x34c7f6);
               var _0x199537 = Math['sqrt'](_0x1ba338[_0x5ee172(0xd06)](_0x4c1815, _0x34c7f6));
               return _0x34c7f6 = _0x1ba338[_0x5ee172(0x3fc)](_0x34c7f6, _0x199537, _0x34c7f6),
                    _0x4c1815 = _0x1ba338['multiplyByScalar'](_0x4c1815, _0x2f8e6b, _0x4c1815),
                    _0x279694(_0xe7ee3) || (_0xe7ee3 = new _0x1ba338()),
                    _0x1ba338[_0x5ee172(0x2ef)](_0x34c7f6, _0x4c1815, _0xe7ee3);
          }
          var _0x369ca6 = new _0x5e82c9()
               , _0x1e42b3 = new _0x5e82c9()
               , _0x56603d = new _0x1ba338()
               , _0x1c07a8 = new _0x4464b6();
          function _0x46f2a7(_0x50c2fa, _0x476a09, _0x43ebee, _0x161b11, _0x2e8ad8, _0x24a85a, _0x219698, _0xf6798e) {
               const _0x245040 = _0xc3a123;
               var _0x2896b2 = void 0x0
                    , _0xa21a3f = void 0x0
                    , _0x41f411 = void 0x0
                    , _0x4f5002 = void 0x0
                    , _0x23de1a = _0x43ebee['vertexAttributes']
                    , _0x5410a9 = _0x43ebee[_0x245040(0x360)];
               if (_0x43ebee[_0x245040(0x408)] = 0x0,
                    _0x279694(_0x161b11['posUniqueID']) && _0x161b11['posUniqueID'] >= 0x0) {
                    _0x279694(_0xf6798e) || (_0x43ebee[_0x245040(0x408)] |= _0x38a067['SVC_Vertex']);
                    var _0x540e07 = _0x476a09[_0x245040(0xb6b)](_0x50c2fa, _0x161b11[_0x245040(0x288)])
                         , _0x345b25 = _0x17f16f(_0x50c2fa, _0x476a09, _0x540e07)
                         , _0x176633 = _0x345b25[_0x245040(0x1ab)][_0x245040(0x8cf)];
                    _0x43ebee[_0x245040(0x8d0)] = _0x345b25[_0x245040(0xcb1)][_0x245040(0x72b)] / _0x176633,
                         _0x43ebee[_0x245040(0x474)] = _0x345b25['data'][_0x245040(0x8c9)][_0x245040(0xa03)] / (0x1 << _0x345b25[_0x245040(0x1ab)]['quantization'][_0x245040(0x42a)]);
                    var _0x32c0c2 = _0x345b25['data'][_0x245040(0x8c9)][_0x245040(0xa67)];
                    _0x43ebee[_0x245040(0x472)] = new _0x4e434c(_0x32c0c2[0x0], _0x32c0c2[0x1], _0x32c0c2[0x2], 0x1),
                         _0x176633 > 0x3 && (_0x43ebee['minVerticesValue']['w'] = _0x32c0c2[0x3]);
                    var _0x35b81d = _0x43ebee[_0x245040(0x8d0)];
                    if (_0x24a85a && (_0x2896b2 = new _0x4464b6(),
                         _0xa21a3f = new _0x4464b6(),
                         _0x41f411 = new Float32Array(0x2 * _0x35b81d),
                         _0x4f5002 = new Float64Array(0x2 * _0x35b81d)),
                         _0x279694(_0xf6798e)) {
                         var _0x3cb390 = _0x345b25[_0x245040(0xcb1)]
                              , _0x1bb77c = 0x3 === _0x176633 ? _0x1ba338[_0x245040(0x4a3)](_0x3cb390) : _0x4e434c[_0x245040(0x4a3)](_0x3cb390);
                         for (let _0xc76b64 = 0x0, _0x58119b = _0x1bb77c[_0x245040(0x72b)]; _0xc76b64 < _0x58119b; _0xc76b64++) {
                              let _0x1e67ba = _0x1bb77c[_0xc76b64];
                              _0x1ba338['multiplyByScalar'](_0x1e67ba, _0x43ebee['vertCompressConstant'], _0x1e67ba),
                                   _0x1ba338['add'](_0x1e67ba, _0x43ebee[_0x245040(0x472)], _0x1e67ba);
                         }
                         var _0x273fcb = _0x5e82c9[_0x245040(0x59d)](_0xf6798e['sphereMatrix'], _0xf6798e[_0x245040(0x8e8)], _0x369ca6)
                              , _0x339389 = _0x5e82c9[_0x245040(0x59d)](_0xf6798e[_0x245040(0x5f0)], _0xf6798e[_0x245040(0x8e8)], _0x1e42b3);
                         _0x5e82c9[_0x245040(0x499)](_0x339389, _0x339389);
                         var _0x4bbfb5 = new _0x212950(0x615299, 0x615299, 0x615299);
                         for (let _0x423b1c = 0x0, _0x103bfe = _0x1bb77c[_0x245040(0x72b)]; _0x423b1c < _0x103bfe; _0x423b1c++) {
                              let _0x31f848 = _0x1bb77c[_0x423b1c];
                              _0x5e82c9['multiplyByPoint'](_0x273fcb, _0x31f848, _0x56603d);
                              let _0x2c5f66 = _0x4bbfb5['cartesianToCartographic'](_0x56603d, _0x1c07a8);
                              _0x24a85a && (_0x4f5002[0x2 * _0x423b1c] = _0x2c5f66[_0x245040(0xb4c)],
                                   _0x4f5002[0x2 * _0x423b1c + 0x1] = _0x2c5f66[_0x245040(0x400)],
                                   0x0 === _0x423b1c ? (_0x2896b2[_0x245040(0xb4c)] = _0x2c5f66['longitude'],
                                        _0x2896b2[_0x245040(0x400)] = _0x2c5f66[_0x245040(0x400)],
                                        _0xa21a3f[_0x245040(0xb4c)] = _0x2c5f66[_0x245040(0xb4c)],
                                        _0xa21a3f['latitude'] = _0x2c5f66[_0x245040(0x400)]) : (_0x2896b2[_0x245040(0xb4c)] = Math[_0x245040(0x590)](_0x2c5f66[_0x245040(0xb4c)], _0x2896b2[_0x245040(0xb4c)]),
                                             _0x2896b2[_0x245040(0x400)] = Math[_0x245040(0x590)](_0x2c5f66['latitude'], _0x2896b2[_0x245040(0x400)]),
                                             _0xa21a3f['longitude'] = Math[_0x245040(0x455)](_0x2c5f66['longitude'], _0xa21a3f['longitude']),
                                             _0xa21a3f[_0x245040(0x400)] = Math['min'](_0x2c5f66[_0x245040(0x400)], _0xa21a3f['latitude'])));
                              let _0x5d3804 = _0x303281(_0x2c5f66[_0x245040(0xb4c)], _0x2c5f66[_0x245040(0x400)], _0x2c5f66[_0x245040(0x48e)], _0x56603d);
                              _0x5e82c9['multiplyByPoint'](_0x339389, _0x5d3804, _0x31f848);
                         }
                         var _0x505aae = new Array(0x3 * _0x1bb77c[_0x245040(0x72b)]);
                         0x3 === _0x176633 ? _0x1ba338[_0x245040(0x6e0)](_0x1bb77c, _0x505aae) : _0x4e434c['packArray'](_0x1bb77c, _0x505aae),
                              _0x345b25[_0x245040(0xcb1)] = new Float32Array(_0x505aae),
                              _0x345b25[_0x245040(0x1ab)][_0x245040(0x31a)] = _0x44a221[_0x245040(0xa80)],
                              _0x345b25['data'][_0x245040(0xae5)] = 0x4 * _0x176633;
                    }
                    if (_0x5410a9[_0x245040(0x5e2)] = _0x23de1a[_0x245040(0x72b)],
                         _0x23de1a[_0x245040(0x63e)]({
                              'index': _0x5410a9[_0x245040(0x5e2)],
                              'typedArray': _0x345b25['array'],
                              'componentsPerAttribute': _0x176633,
                              'componentDatatype': _0x345b25[_0x245040(0x1ab)]['componentDatatype'],
                              'offsetInBytes': _0x345b25['data'][_0x245040(0x490)],
                              'strideInBytes': _0x345b25[_0x245040(0x1ab)]['byteStride'],
                              'normalize': _0x345b25[_0x245040(0x1ab)][_0x245040(0x4d4)]
                         }),
                         !_0x279694(_0xf6798e) && _0x24a85a) {
                         for (var _0x381e03 = new _0x1ba338(), _0x31f77e = new _0x1ba338(), _0x2827b4 = new _0x4464b6(), _0x4e5c82 = 0x0; _0x4e5c82 < _0x35b81d; _0x4e5c82++)
                              _0x5e82c9[_0x245040(0xbde)](_0x2e8ad8, _0x1ba338[_0x245040(0xc5a)](_0x345b25['array'][0x3 * _0x4e5c82] * _0x43ebee['vertCompressConstant'] + _0x32c0c2[0x0], _0x345b25[_0x245040(0xcb1)][0x3 * _0x4e5c82 + 0x1] * _0x43ebee['vertCompressConstant'] + _0x32c0c2[0x1], _0x345b25[_0x245040(0xcb1)][0x3 * _0x4e5c82 + 0x2] * _0x43ebee['vertCompressConstant'] + _0x32c0c2[0x2], _0x381e03), _0x31f77e),
                                   _0x2827b4 = _0x4464b6[_0x245040(0x2d0)](_0x31f77e),
                                   _0x4f5002[0x2 * _0x4e5c82] = _0x2827b4['longitude'],
                                   _0x4f5002[0x2 * _0x4e5c82 + 0x1] = _0x2827b4[_0x245040(0x400)],
                                   0x0 === _0x4e5c82 ? (_0x2896b2[_0x245040(0xb4c)] = _0x2827b4[_0x245040(0xb4c)],
                                        _0x2896b2['latitude'] = _0x2827b4[_0x245040(0x400)],
                                        _0xa21a3f[_0x245040(0xb4c)] = _0x2827b4[_0x245040(0xb4c)],
                                        _0xa21a3f['latitude'] = _0x2827b4[_0x245040(0x400)]) : (_0x2896b2[_0x245040(0xb4c)] = Math['max'](_0x2827b4[_0x245040(0xb4c)], _0x2896b2['longitude']),
                                             _0x2896b2[_0x245040(0x400)] = Math[_0x245040(0x590)](_0x2827b4['latitude'], _0x2896b2[_0x245040(0x400)]),
                                             _0xa21a3f['longitude'] = Math[_0x245040(0x455)](_0x2827b4[_0x245040(0xb4c)], _0xa21a3f[_0x245040(0xb4c)]),
                                             _0xa21a3f[_0x245040(0x400)] = Math[_0x245040(0x455)](_0x2827b4['latitude'], _0xa21a3f[_0x245040(0x400)]));
                    }
                    if (_0x24a85a) {
                         for (_0x4e5c82 = 0x0; _0x4e5c82 < _0x35b81d; _0x4e5c82++)
                              _0x41f411[0x2 * _0x4e5c82] = _0x4f5002[0x2 * _0x4e5c82] - _0xa21a3f[_0x245040(0xb4c)],
                                   _0x41f411[0x2 * _0x4e5c82 + 0x1] = _0x4f5002[0x2 * _0x4e5c82 + 0x1] - _0xa21a3f['latitude'];
                         _0x5410a9['img'] = _0x23de1a[_0x245040(0x72b)],
                              _0x23de1a[_0x245040(0x63e)]({
                                   'index': _0x5410a9[_0x245040(0x310)],
                                   'typedArray': _0x41f411,
                                   'componentsPerAttribute': 0x2,
                                   'componentDatatype': _0x44a221[_0x245040(0xa80)],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': 0x2 * Float32Array[_0x245040(0x385)],
                                   'normalize': !0x1
                              }),
                              _0x219698[_0x245040(0x590)] = _0x2896b2,
                              _0x219698[_0x245040(0x455)] = _0xa21a3f;
                    }
               }
               if (_0x279694(_0x161b11[_0x245040(0x976)]) && _0x161b11[_0x245040(0x976)] >= 0x0) {
                    _0x43ebee['compressOptions'] |= _0x38a067[_0x245040(0xa26)];
                    var _0x42f67c = _0x476a09[_0x245040(0xb6b)](_0x50c2fa, _0x161b11[_0x245040(0x976)])
                         , _0x113300 = _0x17f16f(_0x50c2fa, _0x476a09, _0x42f67c)
                         , _0x474786 = _0x113300['data'][_0x245040(0x8c9)];
                    _0x43ebee['normalRangeConstant'] = (0x1 << _0x474786[_0x245040(0x42a)]) - 0x1,
                         _0x5410a9[_0x245040(0x637)] = _0x23de1a[_0x245040(0x72b)],
                         _0x23de1a[_0x245040(0x63e)]({
                              'index': _0x5410a9['aNormal'],
                              'typedArray': _0x113300[_0x245040(0xcb1)],
                              'componentsPerAttribute': _0x113300[_0x245040(0x1ab)][_0x245040(0x8cf)],
                              'componentDatatype': _0x113300[_0x245040(0x1ab)][_0x245040(0x31a)],
                              'offsetInBytes': _0x113300[_0x245040(0x1ab)]['byteOffset'],
                              'strideInBytes': _0x113300[_0x245040(0x1ab)]['byteStride'],
                              'normalize': _0x113300[_0x245040(0x1ab)][_0x245040(0x4d4)]
                         });
               }
               if (_0x279694(_0x161b11[_0x245040(0x3af)]) && _0x161b11[_0x245040(0x3af)] >= 0x0) {
                    _0x43ebee[_0x245040(0x408)] |= _0x38a067[_0x245040(0x864)];
                    var _0x11b2fb = _0x476a09['GetAttribute'](_0x50c2fa, _0x161b11[_0x245040(0x3af)])
                         , _0x289656 = _0x17f16f(_0x50c2fa, _0x476a09, _0x11b2fb);
                    _0x5410a9[_0x245040(0x7a0)] = _0x23de1a['length'],
                         _0x23de1a[_0x245040(0x63e)]({
                              'index': _0x5410a9['aColor'],
                              'typedArray': _0x289656[_0x245040(0xcb1)],
                              'componentsPerAttribute': _0x289656[_0x245040(0x1ab)]['componentsPerAttribute'],
                              'componentDatatype': _0x289656['data']['componentDatatype'],
                              'offsetInBytes': _0x289656[_0x245040(0x1ab)][_0x245040(0x490)],
                              'strideInBytes': _0x289656[_0x245040(0x1ab)][_0x245040(0xae5)],
                              'normalize': _0x289656[_0x245040(0x1ab)][_0x245040(0x4d4)]
                         });
               }
               for (_0x4e5c82 = 0x0; _0x4e5c82 < _0x161b11[_0x245040(0x226)]['length']; _0x4e5c82++) {
                    _0x43ebee[_0x245040(0x541)] = [],
                         _0x43ebee[_0x245040(0x302)] = [];
                    var _0x14a73f = _0x161b11['texCoordUniqueIDs'][_0x4e5c82];
                    if (!(_0x14a73f < 0x0)) {
                         var _0x1f6902 = _0x476a09['GetAttribute'](_0x50c2fa, _0x14a73f)
                              , _0xf4603c = _0x17f16f(_0x50c2fa, _0x476a09, _0x1f6902);
                         _0x279694(_0xf4603c[_0x245040(0x1ab)][_0x245040(0x8c9)]) && (_0x43ebee[_0x245040(0x408)] |= _0x38a067[_0x245040(0x7d9)],
                              _0x43ebee[_0x245040(0x541)][_0x245040(0x63e)](_0xf4603c[_0x245040(0x1ab)][_0x245040(0x8c9)][_0x245040(0xa03)] / (0x1 << _0xf4603c[_0x245040(0x1ab)]['quantization'][_0x245040(0x42a)])),
                              _0x32c0c2 = _0xf4603c[_0x245040(0x1ab)][_0x245040(0x8c9)]['minValues'],
                              _0x43ebee[_0x245040(0x302)][_0x245040(0x63e)](new _0x949121(_0x32c0c2[0x0], _0x32c0c2[0x1])));
                         var _0x326621 = 'aTexCoord' + _0x4e5c82;
                         _0x5410a9[_0x326621] = _0x23de1a[_0x245040(0x72b)],
                              _0x23de1a[_0x245040(0x63e)]({
                                   'index': _0x5410a9[_0x326621],
                                   'typedArray': _0xf4603c['array'],
                                   'componentsPerAttribute': _0xf4603c[_0x245040(0x1ab)]['componentsPerAttribute'],
                                   'componentDatatype': _0xf4603c[_0x245040(0x1ab)][_0x245040(0x31a)],
                                   'offsetInBytes': _0xf4603c[_0x245040(0x1ab)][_0x245040(0x490)],
                                   'strideInBytes': _0xf4603c[_0x245040(0x1ab)]['byteStride'],
                                   'normalize': _0xf4603c[_0x245040(0x1ab)][_0x245040(0x4d4)]
                              }),
                              _0x43ebee[_0x245040(0xb7d)] = !0x0;
                    }
               }
               for (_0x4e5c82 = 0x0; _0x4e5c82 < _0x161b11['vertexAttrUniqueIDs'][_0x245040(0x72b)]; _0x4e5c82++) {
                    var _0x43a3d4 = _0x161b11[_0x245040(0x603)][_0x4e5c82];
                    if (!(_0x43a3d4 < 0x0)) {
                         var _0x2232ae = _0x476a09[_0x245040(0xb6b)](_0x50c2fa, _0x43a3d4)
                              , _0x2da09e = _0x17f16f(_0x50c2fa, _0x476a09, _0x2232ae);
                         _0x5410a9[_0x245040(0x5eb)] = _0x23de1a[_0x245040(0x72b)],
                              _0x23de1a[_0x245040(0x63e)]({
                                   'index': _0x5410a9[_0x245040(0x5eb)],
                                   'typedArray': _0x2da09e['array'],
                                   'componentsPerAttribute': _0x2da09e[_0x245040(0x1ab)][_0x245040(0x8cf)],
                                   'componentDatatype': _0x2da09e[_0x245040(0x1ab)][_0x245040(0x31a)],
                                   'offsetInBytes': _0x2da09e[_0x245040(0x1ab)]['byteOffset'],
                                   'strideInBytes': _0x2da09e[_0x245040(0x1ab)][_0x245040(0xae5)],
                                   'normalize': _0x2da09e[_0x245040(0x1ab)][_0x245040(0x4d4)]
                              }),
                              _0x43ebee[_0x245040(0x783)] = {
                                   'VertexWeight': 0x0
                              };
                    }
               }
          }
          function _0x2263e3(_0x143aba) {
               const _0x34fcc3 = _0xc3a123;
               var _0x48552c = 'undefined' != typeof document && document['currentScript'] ? document[_0x34fcc3(0x959)]['src'] : void 0x0;
               function _0x1059cf(_0x5b2f0d, _0x49a8b) {
                    const _0x1b3c63 = _0x34fcc3;
                    _0x5b2f0d || _0x5d7999(_0x1b3c63(0x44a) + _0x49a8b);
               }
               function _0x2f18d7(_0x1236d2, _0x20f357, _0x11b036) {
                    const _0x44789b = _0x34fcc3;
                    var _0x5de7c3 = _0x20f357 + _0x11b036;
                    for (_0x11b036 = _0x20f357; _0x1236d2[_0x11b036] && !(_0x11b036 >= _0x5de7c3);)
                         ++_0x11b036;
                    if (0x10 < _0x11b036 - _0x20f357 && _0x1236d2[_0x44789b(0x4ca)] && _0x389bd6)
                         return _0x389bd6[_0x44789b(0xcb7)](_0x1236d2['subarray'](_0x20f357, _0x11b036));
                    for (_0x5de7c3 = ''; _0x20f357 < _0x11b036;) {
                         var _0x1e7dcb = _0x1236d2[_0x20f357++];
                         if (0x80 & _0x1e7dcb) {
                              var _0x57a201 = 0x3f & _0x1236d2[_0x20f357++];
                              if (0xc0 == (0xe0 & _0x1e7dcb))
                                   _0x5de7c3 += String[_0x44789b(0x8a3)]((0x1f & _0x1e7dcb) << 0x6 | _0x57a201);
                              else {
                                   var _0x4a81f7 = 0x3f & _0x1236d2[_0x20f357++];
                                   0x10000 > (_0x1e7dcb = 0xe0 == (0xf0 & _0x1e7dcb) ? (0xf & _0x1e7dcb) << 0xc | _0x57a201 << 0x6 | _0x4a81f7 : (0x7 & _0x1e7dcb) << 0x12 | _0x57a201 << 0xc | _0x4a81f7 << 0x6 | 0x3f & _0x1236d2[_0x20f357++]) ? _0x5de7c3 += String[_0x44789b(0x8a3)](_0x1e7dcb) : (_0x1e7dcb -= 0x10000,
                                        _0x5de7c3 += String['fromCharCode'](0xd800 | _0x1e7dcb >> 0xa, 0xdc00 | 0x3ff & _0x1e7dcb));
                              }
                         } else
                              _0x5de7c3 += String['fromCharCode'](_0x1e7dcb);
                    }
                    return _0x5de7c3;
               }
               function _0x5b5f5f(_0x112196, _0x5c9b18) {
                    return _0x112196 ? _0x2f18d7(_0x36d503, _0x112196, _0x5c9b18) : '';
               }
               function _0x53a3a0(_0x37c08b, _0x77f3c6) {
                    return 0x0 < _0x37c08b % _0x77f3c6 && (_0x37c08b += _0x77f3c6 - _0x37c08b % _0x77f3c6),
                         _0x37c08b;
               }
               function _0x5a74f0(_0x2de7d9) {
                    const _0x41536c = _0x34fcc3;
                    _0x3f7767 = _0x2de7d9,
                         _0x55022e[_0x41536c(0x5b4)] = _0x36fa23 = new Int8Array(_0x2de7d9),
                         _0x55022e['HEAP16'] = new Int16Array(_0x2de7d9),
                         _0x55022e['HEAP32'] = _0x287ca4 = new Int32Array(_0x2de7d9),
                         _0x55022e[_0x41536c(0x79f)] = _0x36d503 = new Uint8Array(_0x2de7d9),
                         _0x55022e[_0x41536c(0xbfb)] = new Uint16Array(_0x2de7d9),
                         _0x55022e['HEAPU32'] = new Uint32Array(_0x2de7d9),
                         _0x55022e[_0x41536c(0xccf)] = new Float32Array(_0x2de7d9),
                         _0x55022e[_0x41536c(0x5e7)] = new Float64Array(_0x2de7d9);
               }
               function _0x4fb506(_0x42244a) {
                    const _0x3a4fb1 = _0x34fcc3;
                    for (; 0x0 < _0x42244a[_0x3a4fb1(0x72b)];) {
                         var _0x5dc177 = _0x42244a[_0x3a4fb1(0x90f)]();
                         if ('function' == typeof _0x5dc177)
                              _0x5dc177();
                         else {
                              var _0x574a2b = _0x5dc177[_0x3a4fb1(0xb97)];
                              'number' == typeof _0x574a2b ? void 0x0 === _0x5dc177[_0x3a4fb1(0xa11)] ? _0x55022e[_0x3a4fb1(0xbb3)](_0x574a2b) : _0x55022e['dynCall_vi'](_0x574a2b, _0x5dc177[_0x3a4fb1(0xa11)]) : _0x574a2b(void 0x0 === _0x5dc177['arg'] ? null : _0x5dc177[_0x3a4fb1(0xa11)]);
                         }
                    }
               }
               function _0x5d7999(_0x462258) {
                    const _0x4d6b16 = _0x34fcc3;
                    throw _0x55022e[_0x4d6b16(0x907)] && _0x55022e[_0x4d6b16(0x907)](_0x462258),
                    _0x33f9ad(_0x462258 += ''),
                    _0x4ca326(_0x462258),
                    _0x3cfcaf = !0x0,
                    new WebAssembly[(_0x4d6b16(0xd5c))](_0x4d6b16(0xccd) + _0x462258 + _0x4d6b16(0x6df));
               }
               function _0x2b2709(_0x137531) {
                    const _0x55523a = _0x34fcc3;
                    return String['prototype'][_0x55523a(0x203)] ? _0x137531[_0x55523a(0x203)]('data:application/octet-stream;base64,') : 0x0 === _0x137531[_0x55523a(0xcef)](_0x55523a(0x5b8));
               }
               function _0x324070() {
                    const _0x65772f = _0x34fcc3;
                    try {
                         if (_0x3e8b04)
                              return new Uint8Array(_0x3e8b04);
                         if (_0x67fc98)
                              return _0x67fc98(_0x416276);
                         throw _0x65772f(0xc83);
                    } catch (_0x295998) {
                         _0x5d7999(_0x295998);
                    }
               }
               function _0x1c5662() {
                    const _0x54dc8b = _0x34fcc3;
                    if (!_0x1c5662[_0x54dc8b(0xd47)]) {
                         var _0x440abe, _0x2b9340 = {
                              'USER': _0x54dc8b(0x231),
                              'LOGNAME': _0x54dc8b(0x231),
                              'PATH': '/',
                              'PWD': '/',
                              'HOME': _0x54dc8b(0x23a),
                              'LANG': (_0x54dc8b(0xb70) == typeof navigator && navigator[_0x54dc8b(0xc2c)] && navigator[_0x54dc8b(0xc2c)][0x0] || 'C')[_0x54dc8b(0x6c0)]('-', '_') + _0x54dc8b(0x55f),
                              '_': _0x11856c
                         };
                         for (_0x440abe in _0x5b7c60)
                              _0x2b9340[_0x440abe] = _0x5b7c60[_0x440abe];
                         var _0x52c91c = [];
                         for (_0x440abe in _0x2b9340)
                              _0x52c91c[_0x54dc8b(0x63e)](_0x440abe + '=' + _0x2b9340[_0x440abe]);
                         _0x1c5662['strings'] = _0x52c91c;
                    }
                    return _0x1c5662[_0x54dc8b(0xd47)];
               }
               function _0x562a88(_0x52e020) {
                    const _0x4f36ec = _0x34fcc3;
                    function _0x391855() {
                         const _0x3d0d04 = _0x5e91;
                         if (!_0x2eeed3 && (_0x2eeed3 = !0x0,
                              !_0x3cfcaf)) {
                              if (_0x48ebb3 = !0x0,
                                   _0x4fb506(_0x142601),
                                   _0x4fb506(_0x1a7b09),
                                   _0x55022e[_0x3d0d04(0x8c5)] && _0x55022e[_0x3d0d04(0x8c5)](),
                                   _0x55022e[_0x3d0d04(0x3e2)]) {
                                   for ('function' == typeof _0x55022e[_0x3d0d04(0x3e2)] && (_0x55022e['postRun'] = [_0x55022e['postRun']]); _0x55022e[_0x3d0d04(0x3e2)][_0x3d0d04(0x72b)];)
                                        _0x3aff83[_0x3d0d04(0x4ec)](_0x55022e['postRun'][_0x3d0d04(0x90f)]());
                              }
                              _0x4fb506(_0x3aff83);
                         }
                    }
                    if (!(0x0 < _0x24c34c)) {
                         if (_0x55022e['preRun']) {
                              for (_0x4f36ec(0x1a2) == typeof _0x55022e[_0x4f36ec(0x7ce)] && (_0x55022e['preRun'] = [_0x55022e[_0x4f36ec(0x7ce)]]); _0x55022e[_0x4f36ec(0x7ce)][_0x4f36ec(0x72b)];)
                                   _0x1546e9[_0x4f36ec(0x4ec)](_0x55022e[_0x4f36ec(0x7ce)][_0x4f36ec(0x90f)]());
                         }
                         _0x4fb506(_0x1546e9),
                              0x0 < _0x24c34c || (_0x55022e['setStatus'] ? (_0x55022e[_0x4f36ec(0xaf2)](_0x4f36ec(0x442)),
                                   setTimeout(function () {
                                        setTimeout(function () {
                                             const _0x373b60 = _0x5e91;
                                             _0x55022e[_0x373b60(0xaf2)]('');
                                        }, 0x1),
                                             _0x391855();
                                   }, 0x1)) : _0x391855());
                    }
               }
               function _0x15f0b0() { }
               function _0x114abc(_0x100d5d) {
                    const _0x29f20c = _0x34fcc3;
                    return (_0x100d5d || _0x15f0b0)[_0x29f20c(0xaf4)];
               }
               function _0x3c86b2(_0xa6a789, _0x1851b3) {
                    const _0x387665 = _0x34fcc3;
                    var _0x5ee34f = _0x114abc(_0x1851b3)
                         , _0x52c59d = _0x5ee34f[_0xa6a789];
                    return _0x52c59d || ((_0x52c59d = Object[_0x387665(0x7e5)]((_0x1851b3 || _0x15f0b0)['prototype']))[_0x387665(0x1c5)] = _0xa6a789,
                         _0x5ee34f[_0xa6a789] = _0x52c59d);
               }
               function _0x5c08f7(_0x1bc192) {
                    const _0x554f0b = _0x34fcc3;
                    if (_0x554f0b(0x379) == typeof _0x1bc192) {
                         for (var _0x2631de = 0x0, _0x1bd4c9 = 0x0; _0x1bd4c9 < _0x1bc192[_0x554f0b(0x72b)]; ++_0x1bd4c9) {
                              var _0x3388db = _0x1bc192[_0x554f0b(0x1ad)](_0x1bd4c9);
                              0xd800 <= _0x3388db && 0xdfff >= _0x3388db && (_0x3388db = 0x10000 + ((0x3ff & _0x3388db) << 0xa) | 0x3ff & _0x1bc192[_0x554f0b(0x1ad)](++_0x1bd4c9)),
                                   0x7f >= _0x3388db ? ++_0x2631de : _0x2631de = 0x7ff >= _0x3388db ? _0x2631de + 0x2 : 0xffff >= _0x3388db ? _0x2631de + 0x3 : _0x2631de + 0x4;
                         }
                         if (_0x1bd4c9 = 0x0,
                              0x0 < (_0x3388db = (_0x2631de = Array(_0x2631de + 0x1))[_0x554f0b(0x72b)])) {
                              _0x3388db = _0x1bd4c9 + _0x3388db - 0x1;
                              for (var _0x27de3d = 0x0; _0x27de3d < _0x1bc192[_0x554f0b(0x72b)]; ++_0x27de3d) {
                                   var _0x3fbe29 = _0x1bc192[_0x554f0b(0x1ad)](_0x27de3d);
                                   if (0xd800 <= _0x3fbe29 && 0xdfff >= _0x3fbe29)
                                        _0x3fbe29 = 0x10000 + ((0x3ff & _0x3fbe29) << 0xa) | 0x3ff & _0x1bc192[_0x554f0b(0x1ad)](++_0x27de3d);
                                   if (0x7f >= _0x3fbe29) {
                                        if (_0x1bd4c9 >= _0x3388db)
                                             break;
                                        _0x2631de[_0x1bd4c9++] = _0x3fbe29;
                                   } else {
                                        if (0x7ff >= _0x3fbe29) {
                                             if (_0x1bd4c9 + 0x1 >= _0x3388db)
                                                  break;
                                             _0x2631de[_0x1bd4c9++] = 0xc0 | _0x3fbe29 >> 0x6;
                                        } else {
                                             if (0xffff >= _0x3fbe29) {
                                                  if (_0x1bd4c9 + 0x2 >= _0x3388db)
                                                       break;
                                                  _0x2631de[_0x1bd4c9++] = 0xe0 | _0x3fbe29 >> 0xc;
                                             } else {
                                                  if (_0x1bd4c9 + 0x3 >= _0x3388db)
                                                       break;
                                                  _0x2631de[_0x1bd4c9++] = 0xf0 | _0x3fbe29 >> 0x12,
                                                       _0x2631de[_0x1bd4c9++] = 0x80 | _0x3fbe29 >> 0xc & 0x3f;
                                             }
                                             _0x2631de[_0x1bd4c9++] = 0x80 | _0x3fbe29 >> 0x6 & 0x3f;
                                        }
                                        _0x2631de[_0x1bd4c9++] = 0x80 | 0x3f & _0x3fbe29;
                                   }
                              }
                              _0x2631de[_0x1bd4c9] = 0x0;
                         }
                         _0x1bc192 = _0x17cc16[_0x554f0b(0xb50)](_0x2631de, _0x36fa23),
                              _0x17cc16['copy'](_0x2631de, _0x36fa23, _0x1bc192);
                    }
                    return _0x1bc192;
               }
               function _0x2747dd() {
                    const _0x37fd60 = _0x34fcc3;
                    throw _0x37fd60(0xda9);
               }
               function _0x357cfa() {
                    const _0x3ff6bc = _0x34fcc3;
                    this['ptr'] = _0x2b100c(),
                         _0x114abc(_0x357cfa)[this[_0x3ff6bc(0x1c5)]] = this;
               }
               function _0x3a9ef9() {
                    const _0x42c9b4 = _0x34fcc3;
                    this[_0x42c9b4(0x1c5)] = _0x5a2a25(),
                         _0x114abc(_0x3a9ef9)[this[_0x42c9b4(0x1c5)]] = this;
               }
               function _0x52a04a() {
                    const _0x1a1951 = _0x34fcc3;
                    this[_0x1a1951(0x1c5)] = _0x366eab(),
                         _0x114abc(_0x52a04a)[this[_0x1a1951(0x1c5)]] = this;
               }
               function _0x379020() {
                    const _0x35e63a = _0x34fcc3;
                    this[_0x35e63a(0x1c5)] = _0x1b5ead(),
                         _0x114abc(_0x379020)[this[_0x35e63a(0x1c5)]] = this;
               }
               function _0x1f6119() {
                    const _0x59f233 = _0x34fcc3;
                    this[_0x59f233(0x1c5)] = _0x3e846a(),
                         _0x114abc(_0x1f6119)[this[_0x59f233(0x1c5)]] = this;
               }
               function _0xcdb76() {
                    const _0x2913fc = _0x34fcc3;
                    this[_0x2913fc(0x1c5)] = _0x506c79(),
                         _0x114abc(_0xcdb76)[this[_0x2913fc(0x1c5)]] = this;
               }
               function _0x2883fc() {
                    const _0x188c52 = _0x34fcc3;
                    this[_0x188c52(0x1c5)] = _0x28d8a1(),
                         _0x114abc(_0x2883fc)[this[_0x188c52(0x1c5)]] = this;
               }
               function _0x1553f5() {
                    const _0x37aaf5 = _0x34fcc3;
                    this[_0x37aaf5(0x1c5)] = _0x5061a7(),
                         _0x114abc(_0x1553f5)[this[_0x37aaf5(0x1c5)]] = this;
               }
               function _0x1ee380() {
                    const _0x372728 = _0x34fcc3;
                    this[_0x372728(0x1c5)] = _0x14ab44(),
                         _0x114abc(_0x1ee380)[this[_0x372728(0x1c5)]] = this;
               }
               function _0x28ff8c() {
                    const _0x1b6387 = _0x34fcc3;
                    this['ptr'] = _0x2b8fc0(),
                         _0x114abc(_0x28ff8c)[this[_0x1b6387(0x1c5)]] = this;
               }
               function _0x22da81() {
                    const _0x5abf01 = _0x34fcc3;
                    this[_0x5abf01(0x1c5)] = _0x5efeff(),
                         _0x114abc(_0x22da81)[this[_0x5abf01(0x1c5)]] = this;
               }
               function _0x494479() {
                    const _0x253c99 = _0x34fcc3;
                    this[_0x253c99(0x1c5)] = _0x21c014(),
                         _0x114abc(_0x494479)[this[_0x253c99(0x1c5)]] = this;
               }
               function _0x4cdede() {
                    const _0x4d8f00 = _0x34fcc3;
                    this[_0x4d8f00(0x1c5)] = _0x302503(),
                         _0x114abc(_0x4cdede)[this[_0x4d8f00(0x1c5)]] = this;
               }
               function _0x406547() {
                    const _0x5942ea = _0x34fcc3;
                    this[_0x5942ea(0x1c5)] = _0x2e775b(),
                         _0x114abc(_0x406547)[this[_0x5942ea(0x1c5)]] = this;
               }
               function _0x40ff27() {
                    const _0x39887a = _0x34fcc3;
                    this['ptr'] = _0xda0dcf(),
                         _0x114abc(_0x40ff27)[this[_0x39887a(0x1c5)]] = this;
               }
               function _0x1df2d8() {
                    const _0x9f134d = _0x34fcc3;
                    this[_0x9f134d(0x1c5)] = _0x3cacc7(),
                         _0x114abc(_0x1df2d8)[this['ptr']] = this;
               }
               function _0x429f2d() {
                    const _0x4b2ffe = _0x34fcc3;
                    throw _0x4b2ffe(0x3f5);
               }
               function _0x361f5e() {
                    const _0x54a063 = _0x34fcc3;
                    this[_0x54a063(0x1c5)] = _0x3e2bb2(),
                         _0x114abc(_0x361f5e)[this[_0x54a063(0x1c5)]] = this;
               }
               function _0x251b73() {
                    const _0x22c03f = _0x34fcc3;
                    this[_0x22c03f(0x1c5)] = _0x512ab1(),
                         _0x114abc(_0x251b73)[this[_0x22c03f(0x1c5)]] = this;
               }
               _0x34fcc3(0x211) != typeof __filename && (_0x48552c = _0x48552c || __filename);
               var _0x55022e = void 0x0 !== (_0x143aba = _0x143aba || {}) ? _0x143aba : {}
                    , _0x3104e7 = !0x1
                    , _0x4e2398 = !0x1;
               _0x55022e[_0x34fcc3(0x8c5)] = function () {
                    const _0x344d2c = _0x34fcc3;
                    _0x3104e7 = !0x0,
                         _0x4e2398 && _0x344d2c(0x1a2) == typeof _0x55022e['onModuleLoaded'] && _0x55022e['onModuleLoaded'](_0x55022e);
               }
                    ,
                    _0x55022e[_0x34fcc3(0xa78)] = function () {
                         const _0x58d5bd = _0x34fcc3;
                         _0x4e2398 = !0x0,
                              _0x3104e7 && _0x58d5bd(0x1a2) == typeof _0x55022e[_0x58d5bd(0xa7b)] && _0x55022e[_0x58d5bd(0xa7b)](_0x55022e);
                    }
                    ,
                    _0x55022e['isVersionSupported'] = function (_0x5ea7a1) {
                         const _0x59428c = _0x34fcc3;
                         return _0x59428c(0x379) == typeof _0x5ea7a1 && (!(0x2 > (_0x5ea7a1 = _0x5ea7a1['split']('.'))[_0x59428c(0x72b)] || 0x3 < _0x5ea7a1[_0x59428c(0x72b)]) && (0x1 == _0x5ea7a1[0x0] && 0x0 <= _0x5ea7a1[0x1] && 0x3 >= _0x5ea7a1[0x1] || !(0x0 != _0x5ea7a1[0x0] || 0xa < _0x5ea7a1[0x1])));
                    }
                    ;
               var _0x410c55, _0x327218 = {};
               for (_0x410c55 in _0x55022e)
                    _0x55022e[_0x34fcc3(0x6e8)](_0x410c55) && (_0x327218[_0x410c55] = _0x55022e[_0x410c55]);
               var _0x54d633, _0x5a4f8f, _0x11856c = _0x34fcc3(0x2e3), _0xa5ae29 = !0x1, _0x502106 = !0x1;
               _0xa5ae29 = _0x34fcc3(0xb70) == typeof window,
                    _0x502106 = 'function' == typeof importScripts,
                    _0x54d633 = _0x34fcc3(0xb70) == typeof process && 'object' == typeof process[_0x34fcc3(0x65d)] && _0x34fcc3(0x379) == typeof process['versions'][_0x34fcc3(0xc1e)] && !_0xa5ae29 && !_0x502106,
                    _0x5a4f8f = !_0xa5ae29 && !_0x54d633 && !_0x502106;
               var _0x18e08c, _0x3e7228, _0x4559f6 = '';
               if (_0x54d633) {
                    _0x4559f6 = __dirname + '/';
                    var _0x3f9235 = function (_0x535756, _0x5e2042) {
                         const _0x3f84bf = _0x34fcc3;
                         return _0x18e08c || (_0x18e08c = require('fs')),
                              _0x3e7228 || (_0x3e7228 = require('path')),
                              _0x535756 = _0x3e7228[_0x3f84bf(0x579)](_0x535756),
                              _0x18e08c[_0x3f84bf(0x7f6)](_0x535756, _0x5e2042 ? null : _0x3f84bf(0x7af));
                    }
                         , _0x67fc98 = function (_0x3af1d0) {
                              const _0x1af47b = _0x34fcc3;
                              return (_0x3af1d0 = _0x3f9235(_0x3af1d0, !0x0))['buffer'] || (_0x3af1d0 = new Uint8Array(_0x3af1d0)),
                                   _0x1059cf(_0x3af1d0[_0x1af47b(0x25d)]),
                                   _0x3af1d0;
                         };
                    0x1 < process[_0x34fcc3(0x9df)][_0x34fcc3(0x72b)] && (_0x11856c = process[_0x34fcc3(0x9df)][0x1]['replace'](/\\/g, '/')),
                         process['argv'][_0x34fcc3(0x21c)](0x2),
                         process['on'](_0x34fcc3(0xb67), function (_0x339915) {
                              throw _0x339915;
                         }),
                         process['on'](_0x34fcc3(0x38e), _0x5d7999),
                         _0x55022e[_0x34fcc3(0xa69)] = function () {
                              return '[Emscripten\x20Module\x20object]';
                         }
                         ;
               } else
                    _0x5a4f8f ? ('undefined' != typeof read && (_0x3f9235 = function (_0x8e688d) {
                         return read(_0x8e688d);
                    }
                    ),
                         _0x67fc98 = function (_0x38b56e) {
                              const _0x5be4af = _0x34fcc3;
                              return _0x5be4af(0x1a2) == typeof readbuffer ? new Uint8Array(readbuffer(_0x38b56e)) : (_0x1059cf(_0x5be4af(0xb70) == typeof (_0x38b56e = read(_0x38b56e, _0x5be4af(0x1bb)))),
                                   _0x38b56e);
                         }
                         ,
                         _0x34fcc3(0x211) != typeof print && ('undefined' == typeof console && (console = {}),
                              console[_0x34fcc3(0x7bc)] = print,
                              console['warn'] = console['error'] = 'undefined' != typeof printErr ? printErr : print)) : (_0xa5ae29 || _0x502106) && (_0x502106 ? _0x4559f6 = self[_0x34fcc3(0xb1f)][_0x34fcc3(0x9fd)] : document['currentScript'] && (_0x4559f6 = document[_0x34fcc3(0x959)][_0x34fcc3(0xaa4)]),
                                   _0x48552c && (_0x4559f6 = _0x48552c),
                                   _0x4559f6 = 0x0 !== _0x4559f6[_0x34fcc3(0xcef)](_0x34fcc3(0x297)) ? _0x4559f6[_0x34fcc3(0x563)](0x0, _0x4559f6[_0x34fcc3(0x61c)]('/') + 0x1) : '',
                                   _0x3f9235 = function (_0x6a99cc) {
                                        const _0x3b5df5 = _0x34fcc3;
                                        var _0x33c333 = new XMLHttpRequest();
                                        return _0x33c333['open'](_0x3b5df5(0x296), _0x6a99cc, !0x1),
                                             _0x33c333[_0x3b5df5(0x8f7)](null),
                                             _0x33c333[_0x3b5df5(0xc0e)];
                                   }
                                   ,
                                   _0x502106 && (_0x67fc98 = function (_0x2d35fc) {
                                        const _0x2573a1 = _0x34fcc3;
                                        var _0x19c1da = new XMLHttpRequest();
                                        return _0x19c1da[_0x2573a1(0xb3f)]('GET', _0x2d35fc, !0x1),
                                             _0x19c1da[_0x2573a1(0xace)] = _0x2573a1(0x30b),
                                             _0x19c1da[_0x2573a1(0x8f7)](null),
                                             new Uint8Array(_0x19c1da[_0x2573a1(0xb5e)]);
                                   }
                                   ));
               var _0x3e8b04, _0x33f9ad = _0x55022e[_0x34fcc3(0x750)] || console[_0x34fcc3(0x7bc)]['bind'](console), _0x4ca326 = _0x55022e[_0x34fcc3(0xc05)] || console[_0x34fcc3(0x1eb)][_0x34fcc3(0x5c4)](console);
               for (_0x410c55 in _0x327218)
                    _0x327218[_0x34fcc3(0x6e8)](_0x410c55) && (_0x55022e[_0x410c55] = _0x327218[_0x410c55]);
               _0x327218 = null,
                    _0x55022e[_0x34fcc3(0x5f9)] && (_0x11856c = _0x55022e[_0x34fcc3(0x5f9)]),
                    _0x55022e['wasmBinary'] && (_0x3e8b04 = _0x55022e[_0x34fcc3(0x3d4)]),
                    _0x34fcc3(0xb70) != typeof WebAssembly && _0x4ca326(_0x34fcc3(0x35b));
               var _0x147447, _0x1298e4 = new WebAssembly['Table']({
                    'initial': 0x17d,
                    'maximum': 0x17d,
                    'element': _0x34fcc3(0x26e)
               }), _0x3cfcaf = !0x1, _0x389bd6 = 'undefined' != typeof TextDecoder ? new TextDecoder('utf8') : void 0x0;
               _0x34fcc3(0x211) != typeof TextDecoder && new TextDecoder(_0x34fcc3(0x73c));
               var _0x36fa23, _0x36d503, _0x287ca4, _0xce71ac = _0x55022e['TOTAL_MEMORY'] || 0x1000000;
               if (_0x147447 = _0x55022e[_0x34fcc3(0x7e1)] ? _0x55022e['wasmMemory'] : new WebAssembly[(_0x34fcc3(0x98f))]({
                    'initial': _0xce71ac / 0x10000
               }))
                    var _0x3f7767 = _0x147447[_0x34fcc3(0x25d)];
               _0xce71ac = _0x3f7767[_0x34fcc3(0x62b)],
                    _0x5a74f0(_0x3f7767),
                    _0x287ca4[0x11fc] = 0x504890;
               var _0x1546e9 = []
                    , _0x142601 = []
                    , _0x1a7b09 = []
                    , _0x3aff83 = []
                    , _0x48ebb3 = !0x1
                    , _0x24c34c = 0x0
                    , _0x289e91 = null;
               _0x55022e[_0x34fcc3(0x924)] = {},
                    _0x55022e[_0x34fcc3(0x510)] = {};
               var _0x559f90, _0x416276 = _0x34fcc3(0x38a);
               _0x2b2709(_0x416276) || (_0x559f90 = _0x416276,
                    _0x416276 = _0x55022e[_0x34fcc3(0xc6c)] ? _0x55022e[_0x34fcc3(0xc6c)](_0x559f90, _0x4559f6) : _0x4559f6 + _0x559f90),
                    _0x142601[_0x34fcc3(0x63e)]({
                         'func': function () {
                              _0x54b037();
                         }
                    });
               var _0x5b7c60 = {}
                    , _0x4117ca = {
                         'buffers': [null, [], []],
                         'printChar': function (_0x240b83, _0x1df5cb) {
                              const _0x11257d = _0x34fcc3;
                              var _0xb53688 = _0x4117ca['buffers'][_0x240b83];
                              0x0 === _0x1df5cb || 0xa === _0x1df5cb ? ((0x1 === _0x240b83 ? _0x33f9ad : _0x4ca326)(_0x2f18d7(_0xb53688, 0x0)),
                                   _0xb53688[_0x11257d(0x72b)] = 0x0) : _0xb53688[_0x11257d(0x63e)](_0x1df5cb);
                         },
                         'varargs': 0x0,
                         'get': function (_0x44f221) {
                              const _0x99867a = _0x34fcc3;
                              return _0x4117ca[_0x99867a(0x9fc)] += 0x4,
                                   _0x287ca4[_0x4117ca[_0x99867a(0x9fc)] - 0x4 >> 0x2];
                         },
                         'getStr': function () {
                              const _0x5a74f9 = _0x34fcc3;
                              return _0x5b5f5f(_0x4117ca[_0x5a74f9(0x420)]());
                         },
                         'get64': function () {
                              const _0x4e8aa6 = _0x34fcc3;
                              var _0x481eb4 = _0x4117ca[_0x4e8aa6(0x420)]();
                              return _0x4117ca[_0x4e8aa6(0x420)](),
                                   _0x481eb4;
                         },
                         'getZero': function () {
                              const _0x1782fd = _0x34fcc3;
                              _0x4117ca[_0x1782fd(0x420)]();
                         }
                    }
                    , _0x2bd471 = {
                         '__cxa_allocate_exception': function (_0x1dadee) {
                              return _0x2e6d9f(_0x1dadee);
                         },
                         '__cxa_throw': function (_0x166265, _0x7750c0, _0x291d46) {
                              throw _0x166265;
                         },
                         'abort': function () {
                              _0x5d7999();
                         },
                         'emscripten_get_sbrk_ptr': function () {
                              return 0x47f0;
                         },
                         'emscripten_memcpy_big': function (_0x1028cf, _0x3fef2e, _0x350315) {
                              const _0x2323cf = _0x34fcc3;
                              _0x36d503[_0x2323cf(0x320)](_0x36d503[_0x2323cf(0x4ca)](_0x3fef2e, _0x3fef2e + _0x350315), _0x1028cf);
                         },
                         'emscripten_resize_heap': function (_0x47a25e) {
                              const _0x2abf50 = _0x34fcc3;
                              if (0x7fff0000 < _0x47a25e)
                                   return !0x1;
                              for (var _0x58b333 = Math[_0x2abf50(0x590)](_0x36fa23['length'], 0x1000000); _0x58b333 < _0x47a25e;)
                                   _0x58b333 = 0x20000000 >= _0x58b333 ? _0x53a3a0(0x2 * _0x58b333, 0x10000) : Math[_0x2abf50(0x455)](_0x53a3a0((0x3 * _0x58b333 + 0x80000000) / 0x4, 0x10000), 0x7fff0000);
                              _0x4e60f2: {
                                   try {
                                        _0x147447['grow'](_0x58b333 - _0x3f7767[_0x2abf50(0x62b)] + 0xffff >> 0x10),
                                             _0x5a74f0(_0x147447[_0x2abf50(0x25d)]);
                                        var _0x3c03dd = 0x1;
                                        break _0x4e60f2;
                                   } catch (_0x47cead) { }
                                   _0x3c03dd = void 0x0;
                              }
                              return !!_0x3c03dd;
                         },
                         'environ_get': function (_0x29ac07, _0x5ed8c6) {
                              const _0x7a8fdc = _0x34fcc3;
                              var _0x1dc480 = 0x0;
                              return _0x1c5662()[_0x7a8fdc(0xd43)](function (_0x5bbbe1, _0x209892) {
                                   const _0x2cbd8f = _0x7a8fdc;
                                   var _0x70de70 = _0x5ed8c6 + _0x1dc480;
                                   for (_0x209892 = _0x287ca4[_0x29ac07 + 0x4 * _0x209892 >> 0x2] = _0x70de70,
                                        _0x70de70 = 0x0; _0x70de70 < _0x5bbbe1['length']; ++_0x70de70)
                                        _0x36fa23[_0x209892++ >> 0x0] = _0x5bbbe1[_0x2cbd8f(0x1ad)](_0x70de70);
                                   _0x36fa23[_0x209892 >> 0x0] = 0x0,
                                        _0x1dc480 += _0x5bbbe1[_0x2cbd8f(0x72b)] + 0x1;
                              }),
                                   0x0;
                         },
                         'environ_sizes_get': function (_0x392bfb, _0x12a4df) {
                              const _0x1e4c43 = _0x34fcc3;
                              var _0x206023 = _0x1c5662();
                              _0x287ca4[_0x392bfb >> 0x2] = _0x206023[_0x1e4c43(0x72b)];
                              var _0x3993d7 = 0x0;
                              return _0x206023[_0x1e4c43(0xd43)](function (_0x43e1a7) {
                                   const _0x81159b = _0x1e4c43;
                                   _0x3993d7 += _0x43e1a7[_0x81159b(0x72b)] + 0x1;
                              }),
                                   _0x287ca4[_0x12a4df >> 0x2] = _0x3993d7,
                                   0x0;
                         },
                         'fd_close': function (_0x51f8ae) {
                              return 0x0;
                         },
                         'fd_seek': function (_0x5f1e93, _0x459ae8, _0x336021, _0x50022f, _0x5d0f06) {
                              return 0x0;
                         },
                         'fd_write': function (_0x33b361, _0x913f43, _0xb7d62e, _0x37f7a8) {
                              const _0x620358 = _0x34fcc3;
                              try {
                                   for (var _0x2e9fea = 0x0, _0x20fea4 = 0x0; _0x20fea4 < _0xb7d62e; _0x20fea4++) {
                                        for (var _0x54c1c9 = _0x287ca4[_0x913f43 + 0x8 * _0x20fea4 >> 0x2], _0x1413a3 = _0x287ca4[_0x913f43 + (0x8 * _0x20fea4 + 0x4) >> 0x2], _0x226a33 = 0x0; _0x226a33 < _0x1413a3; _0x226a33++)
                                             _0x4117ca['printChar'](_0x33b361, _0x36d503[_0x54c1c9 + _0x226a33]);
                                        _0x2e9fea += _0x1413a3;
                                   }
                                   return _0x287ca4[_0x37f7a8 >> 0x2] = _0x2e9fea,
                                        0x0;
                              } catch (_0x16740a) {
                                   return 'undefined' != typeof FS && _0x16740a instanceof FS[_0x620358(0x840)] || _0x5d7999(_0x16740a),
                                        _0x16740a[_0x620358(0xd13)];
                              }
                         },
                         'memory': _0x147447,
                         'setTempRet0': function (_0x435bfd) { },
                         'table': _0x1298e4
                    }
                    , _0x34e5bf = function () {
                         const _0x47da0f = _0x34fcc3;
                         function _0x439b9a(_0x3df162, _0x508eeb) {
                              const _0x2eb498 = _0x5e91;
                              _0x55022e['asm'] = _0x3df162[_0x2eb498(0x705)],
                                   _0x24c34c--,
                                   _0x55022e[_0x2eb498(0x655)] && _0x55022e[_0x2eb498(0x655)](_0x24c34c),
                                   0x0 == _0x24c34c && _0x289e91 && (_0x3df162 = _0x289e91,
                                        _0x289e91 = null,
                                        _0x3df162());
                         }
                         function _0x27b3c8(_0x34d2c8) {
                              const _0xea75c1 = _0x5e91;
                              _0x439b9a(_0x34d2c8[_0xea75c1(0x861)]);
                         }
                         function _0x17009a(_0x1a751d) {
                              const _0x4b46e9 = _0x5e91;
                              return (_0x3e8b04 || !_0xa5ae29 && !_0x502106 || _0x4b46e9(0x1a2) != typeof fetch ? new Promise(function (_0x550723, _0x1c2242) {
                                   _0x550723(_0x324070());
                              }
                              ) : fetch(_0x416276, {
                                   'credentials': _0x4b46e9(0x2ac)
                              })[_0x4b46e9(0x7db)](function (_0x34bd63) {
                                   const _0x1a214f = _0x4b46e9;
                                   if (!_0x34bd63['ok'])
                                        throw 'failed\x20to\x20load\x20wasm\x20binary\x20file\x20at\x20\x27' + _0x416276 + '\x27';
                                   return _0x34bd63[_0x1a214f(0x5f7)]();
                              })[_0x4b46e9(0x719)](function () {
                                   return _0x324070();
                              }))[_0x4b46e9(0x7db)](function (_0x1b26a2) {
                                   return WebAssembly['instantiate'](_0x1b26a2, _0x48ebab);
                              })[_0x4b46e9(0x7db)](_0x1a751d, function (_0x28e350) {
                                   const _0x132af6 = _0x4b46e9;
                                   _0x4ca326(_0x132af6(0x531) + _0x28e350),
                                        _0x5d7999(_0x28e350);
                              });
                         }
                         var _0x48ebab = {
                              'env': _0x2bd471,
                              'wasi_unstable': _0x2bd471
                         };
                         if (_0x24c34c++,
                              _0x55022e['monitorRunDependencies'] && _0x55022e[_0x47da0f(0x655)](_0x24c34c),
                              _0x55022e[_0x47da0f(0x81a)])
                              try {
                                   return _0x55022e['instantiateWasm'](_0x48ebab, _0x439b9a);
                              } catch (_0x2719dd) {
                                   return _0x4ca326(_0x47da0f(0x5ac) + _0x2719dd),
                                        !0x1;
                              }
                         return function () {
                              const _0x5e2670 = _0x47da0f;
                              if (_0x3e8b04 || _0x5e2670(0x1a2) != typeof WebAssembly[_0x5e2670(0xb2a)] || _0x2b2709(_0x416276) || 'function' != typeof fetch)
                                   return _0x17009a(_0x27b3c8);
                              fetch(_0x416276, {
                                   'credentials': _0x5e2670(0x2ac)
                              })[_0x5e2670(0x7db)](function (_0x20b25f) {
                                   const _0x4671eb = _0x5e2670;
                                   return WebAssembly[_0x4671eb(0xb2a)](_0x20b25f, _0x48ebab)[_0x4671eb(0x7db)](_0x27b3c8, function (_0x2341b0) {
                                        const _0x373dd8 = _0x4671eb;
                                        _0x4ca326(_0x373dd8(0x1dc) + _0x2341b0),
                                             _0x4ca326('falling\x20back\x20to\x20ArrayBuffer\x20instantiation'),
                                             _0x17009a(_0x27b3c8);
                                   });
                              });
                         }(),
                              {};
                    }();
               _0x55022e[_0x34fcc3(0x435)] = _0x34e5bf;
               var _0x54b037 = _0x55022e[_0x34fcc3(0x919)] = function () {
                    const _0x37d87c = _0x34fcc3;
                    return _0x55022e[_0x37d87c(0x435)][_0x37d87c(0x57b)]['apply'](null, arguments);
               }
                    , _0x27197c = _0x55022e[_0x34fcc3(0x2da)] = function () {
                         const _0x23feb2 = _0x34fcc3;
                         return _0x55022e[_0x23feb2(0x435)][_0x23feb2(0x87d)]['apply'](null, arguments);
                    }
                    , _0x2bfd87 = _0x55022e[_0x34fcc3(0xdbe)] = function () {
                         const _0x4e0287 = _0x34fcc3;
                         return _0x55022e[_0x4e0287(0x435)][_0x4e0287(0x931)][_0x4e0287(0x83b)](null, arguments);
                    }
                    , _0x1f6d92 = _0x55022e['_emscripten_bind_Status_error_msg_0'] = function () {
                         const _0x595151 = _0x34fcc3;
                         return _0x55022e[_0x595151(0x435)][_0x595151(0x68a)][_0x595151(0x83b)](null, arguments);
                    }
                    , _0x3260eb = _0x55022e[_0x34fcc3(0xb9f)] = function () {
                         const _0x4181ba = _0x34fcc3;
                         return _0x55022e[_0x4181ba(0x435)][_0x4181ba(0xd2d)][_0x4181ba(0x83b)](null, arguments);
                    }
                    , _0x2b100c = _0x55022e[_0x34fcc3(0xba9)] = function () {
                         const _0x53b6e6 = _0x34fcc3;
                         return _0x55022e[_0x53b6e6(0x435)][_0x53b6e6(0x5e3)]['apply'](null, arguments);
                    }
                    , _0x32040f = _0x55022e['_emscripten_bind_DracoUInt16Array_GetValue_1'] = function () {
                         const _0x3b6b7f = _0x34fcc3;
                         return _0x55022e[_0x3b6b7f(0x435)][_0x3b6b7f(0xafc)][_0x3b6b7f(0x83b)](null, arguments);
                    }
                    , _0x506940 = _0x55022e[_0x34fcc3(0x9e3)] = function () {
                         const _0x383536 = _0x34fcc3;
                         return _0x55022e[_0x383536(0x435)]['emscripten_bind_DracoUInt16Array_size_0']['apply'](null, arguments);
                    }
                    , _0x43d931 = _0x55022e[_0x34fcc3(0x55c)] = function () {
                         const _0x18cf55 = _0x34fcc3;
                         return _0x55022e[_0x18cf55(0x435)][_0x18cf55(0x936)]['apply'](null, arguments);
                    }
                    , _0x5a2a25 = _0x55022e[_0x34fcc3(0xa05)] = function () {
                         const _0x5aff0a = _0x34fcc3;
                         return _0x55022e[_0x5aff0a(0x435)][_0x5aff0a(0x95a)]['apply'](null, arguments);
                    }
                    , _0x4ab296 = _0x55022e[_0x34fcc3(0xd91)] = function () {
                         const _0xaad20e = _0x34fcc3;
                         return _0x55022e[_0xaad20e(0x435)][_0xaad20e(0xd35)]['apply'](null, arguments);
                    }
                    , _0x32d85c = _0x55022e[_0x34fcc3(0x2ab)] = function () {
                         const _0x152b13 = _0x34fcc3;
                         return _0x55022e['asm'][_0x152b13(0x9e2)]['apply'](null, arguments);
                    }
                    , _0x5a4e52 = _0x55022e[_0x34fcc3(0x6a8)] = function () {
                         const _0x1a7748 = _0x34fcc3;
                         return _0x55022e['asm']['emscripten_bind_PointCloud___destroy___0'][_0x1a7748(0x83b)](null, arguments);
                    }
                    , _0x366eab = _0x55022e['_emscripten_bind_DracoUInt8Array_DracoUInt8Array_0'] = function () {
                         const _0x21df03 = _0x34fcc3;
                         return _0x55022e[_0x21df03(0x435)]['emscripten_bind_DracoUInt8Array_DracoUInt8Array_0']['apply'](null, arguments);
                    }
                    , _0x1fedd2 = _0x55022e[_0x34fcc3(0x1aa)] = function () {
                         const _0x17563b = _0x34fcc3;
                         return _0x55022e[_0x17563b(0x435)][_0x17563b(0x81d)][_0x17563b(0x83b)](null, arguments);
                    }
                    , _0x49166f = _0x55022e[_0x34fcc3(0x330)] = function () {
                         const _0xca856a = _0x34fcc3;
                         return _0x55022e[_0xca856a(0x435)]['emscripten_bind_DracoUInt8Array_size_0']['apply'](null, arguments);
                    }
                    , _0x10669e = _0x55022e[_0x34fcc3(0x7bf)] = function () {
                         const _0x57a22b = _0x34fcc3;
                         return _0x55022e[_0x57a22b(0x435)][_0x57a22b(0x571)][_0x57a22b(0x83b)](null, arguments);
                    }
                    , _0x1b5ead = _0x55022e[_0x34fcc3(0xa5b)] = function () {
                         const _0x8c8d0d = _0x34fcc3;
                         return _0x55022e[_0x8c8d0d(0x435)][_0x8c8d0d(0x9b8)][_0x8c8d0d(0x83b)](null, arguments);
                    }
                    , _0x377983 = _0x55022e['_emscripten_bind_DracoUInt32Array_GetValue_1'] = function () {
                         const _0x36c78b = _0x34fcc3;
                         return _0x55022e[_0x36c78b(0x435)][_0x36c78b(0xba5)][_0x36c78b(0x83b)](null, arguments);
                    }
                    , _0x4c8b71 = _0x55022e['_emscripten_bind_DracoUInt32Array_size_0'] = function () {
                         const _0x28c4f5 = _0x34fcc3;
                         return _0x55022e[_0x28c4f5(0x435)][_0x28c4f5(0x2af)][_0x28c4f5(0x83b)](null, arguments);
                    }
                    , _0x377511 = _0x55022e[_0x34fcc3(0xa9e)] = function () {
                         const _0x1da438 = _0x34fcc3;
                         return _0x55022e['asm'][_0x1da438(0xb9e)][_0x1da438(0x83b)](null, arguments);
                    }
                    , _0x3e846a = _0x55022e['_emscripten_bind_AttributeOctahedronTransform_AttributeOctahedronTransform_0'] = function () {
                         const _0x3a8585 = _0x34fcc3;
                         return _0x55022e[_0x3a8585(0x435)][_0x3a8585(0xa0a)][_0x3a8585(0x83b)](null, arguments);
                    }
                    , _0x1908d6 = _0x55022e[_0x34fcc3(0xb20)] = function () {
                         const _0x1ef337 = _0x34fcc3;
                         return _0x55022e['asm'][_0x1ef337(0x8de)][_0x1ef337(0x83b)](null, arguments);
                    }
                    , _0x32c214 = _0x55022e['_emscripten_bind_AttributeOctahedronTransform_quantization_bits_0'] = function () {
                         const _0x20bfb5 = _0x34fcc3;
                         return _0x55022e[_0x20bfb5(0x435)][_0x20bfb5(0xa3a)][_0x20bfb5(0x83b)](null, arguments);
                    }
                    , _0x1bbc98 = _0x55022e[_0x34fcc3(0x54d)] = function () {
                         const _0x12bcde = _0x34fcc3;
                         return _0x55022e[_0x12bcde(0x435)]['emscripten_bind_AttributeOctahedronTransform___destroy___0'][_0x12bcde(0x83b)](null, arguments);
                    }
                    , _0x506c79 = _0x55022e[_0x34fcc3(0x742)] = function () {
                         const _0x4cafcb = _0x34fcc3;
                         return _0x55022e['asm'][_0x4cafcb(0x90b)][_0x4cafcb(0x83b)](null, arguments);
                    }
                    , _0x30fd11 = _0x55022e[_0x34fcc3(0x812)] = function () {
                         const _0x74506b = _0x34fcc3;
                         return _0x55022e[_0x74506b(0x435)][_0x74506b(0xcc9)][_0x74506b(0x83b)](null, arguments);
                    }
                    , _0x463de1 = _0x55022e['_emscripten_bind_PointAttribute_GetAttributeTransformData_0'] = function () {
                         const _0x88d4df = _0x34fcc3;
                         return _0x55022e[_0x88d4df(0x435)][_0x88d4df(0xa6e)]['apply'](null, arguments);
                    }
                    , _0x5baa3d = _0x55022e[_0x34fcc3(0x596)] = function () {
                         const _0x35fbd2 = _0x34fcc3;
                         return _0x55022e[_0x35fbd2(0x435)][_0x35fbd2(0x555)][_0x35fbd2(0x83b)](null, arguments);
                    }
                    , _0x63ae3a = _0x55022e[_0x34fcc3(0x466)] = function () {
                         const _0x148e83 = _0x34fcc3;
                         return _0x55022e['asm']['emscripten_bind_PointAttribute_data_type_0'][_0x148e83(0x83b)](null, arguments);
                    }
                    , _0x184659 = _0x55022e['_emscripten_bind_PointAttribute_num_components_0'] = function () {
                         const _0x2bcce = _0x34fcc3;
                         return _0x55022e[_0x2bcce(0x435)]['emscripten_bind_PointAttribute_num_components_0'][_0x2bcce(0x83b)](null, arguments);
                    }
                    , _0x49b052 = _0x55022e[_0x34fcc3(0x845)] = function () {
                         const _0x3c4658 = _0x34fcc3;
                         return _0x55022e['asm'][_0x3c4658(0x182)][_0x3c4658(0x83b)](null, arguments);
                    }
                    , _0x490c8a = _0x55022e['_emscripten_bind_PointAttribute_byte_stride_0'] = function () {
                         const _0x5bf711 = _0x34fcc3;
                         return _0x55022e[_0x5bf711(0x435)]['emscripten_bind_PointAttribute_byte_stride_0'][_0x5bf711(0x83b)](null, arguments);
                    }
                    , _0x2539e0 = _0x55022e[_0x34fcc3(0x86b)] = function () {
                         const _0x883a6a = _0x34fcc3;
                         return _0x55022e[_0x883a6a(0x435)][_0x883a6a(0x8f4)][_0x883a6a(0x83b)](null, arguments);
                    }
                    , _0x42751c = _0x55022e[_0x34fcc3(0xa9b)] = function () {
                         const _0x1cc163 = _0x34fcc3;
                         return _0x55022e['asm'][_0x1cc163(0x669)]['apply'](null, arguments);
                    }
                    , _0x396fb4 = _0x55022e[_0x34fcc3(0x6f0)] = function () {
                         const _0xe73443 = _0x34fcc3;
                         return _0x55022e['asm'][_0xe73443(0xa7a)]['apply'](null, arguments);
                    }
                    , _0x28d8a1 = _0x55022e['_emscripten_bind_AttributeTransformData_AttributeTransformData_0'] = function () {
                         const _0x2ee632 = _0x34fcc3;
                         return _0x55022e['asm'][_0x2ee632(0xd9c)][_0x2ee632(0x83b)](null, arguments);
                    }
                    , _0x1bd970 = _0x55022e[_0x34fcc3(0x195)] = function () {
                         const _0x2a4e5d = _0x34fcc3;
                         return _0x55022e[_0x2a4e5d(0x435)]['emscripten_bind_AttributeTransformData_transform_type_0'][_0x2a4e5d(0x83b)](null, arguments);
                    }
                    , _0x2d79ac = _0x55022e[_0x34fcc3(0x287)] = function () {
                         const _0x3db8c1 = _0x34fcc3;
                         return _0x55022e['asm'][_0x3db8c1(0x8cd)][_0x3db8c1(0x83b)](null, arguments);
                    }
                    , _0x5061a7 = _0x55022e[_0x34fcc3(0xae9)] = function () {
                         const _0x53c4b1 = _0x34fcc3;
                         return _0x55022e[_0x53c4b1(0x435)]['emscripten_bind_AttributeQuantizationTransform_AttributeQuantizationTransform_0'][_0x53c4b1(0x83b)](null, arguments);
                    }
                    , _0x2f3511 = _0x55022e[_0x34fcc3(0x3c0)] = function () {
                         const _0x2765dd = _0x34fcc3;
                         return _0x55022e['asm']['emscripten_bind_AttributeQuantizationTransform_InitFromAttribute_1'][_0x2765dd(0x83b)](null, arguments);
                    }
                    , _0x47b60d = _0x55022e[_0x34fcc3(0x29b)] = function () {
                         const _0xbf3fd6 = _0x34fcc3;
                         return _0x55022e[_0xbf3fd6(0x435)]['emscripten_bind_AttributeQuantizationTransform_quantization_bits_0']['apply'](null, arguments);
                    }
                    , _0x46da54 = _0x55022e[_0x34fcc3(0x547)] = function () {
                         const _0x21d8ca = _0x34fcc3;
                         return _0x55022e['asm'][_0x21d8ca(0x2d2)][_0x21d8ca(0x83b)](null, arguments);
                    }
                    , _0x46525e = _0x55022e['_emscripten_bind_AttributeQuantizationTransform_range_0'] = function () {
                         const _0x16a139 = _0x34fcc3;
                         return _0x55022e[_0x16a139(0x435)][_0x16a139(0x257)]['apply'](null, arguments);
                    }
                    , _0x59f19a = _0x55022e[_0x34fcc3(0xd42)] = function () {
                         const _0x5bb812 = _0x34fcc3;
                         return _0x55022e[_0x5bb812(0x435)][_0x5bb812(0xb26)][_0x5bb812(0x83b)](null, arguments);
                    }
                    , _0x14ab44 = _0x55022e[_0x34fcc3(0x184)] = function () {
                         const _0x23cc09 = _0x34fcc3;
                         return _0x55022e[_0x23cc09(0x435)]['emscripten_bind_DracoInt8Array_DracoInt8Array_0'][_0x23cc09(0x83b)](null, arguments);
                    }
                    , _0x29e01c = _0x55022e[_0x34fcc3(0xb5d)] = function () {
                         const _0x10a38e = _0x34fcc3;
                         return _0x55022e['asm']['emscripten_bind_DracoInt8Array_GetValue_1'][_0x10a38e(0x83b)](null, arguments);
                    }
                    , _0x5deb58 = _0x55022e[_0x34fcc3(0xd9f)] = function () {
                         const _0x2b5120 = _0x34fcc3;
                         return _0x55022e['asm'][_0x2b5120(0x4d6)][_0x2b5120(0x83b)](null, arguments);
                    }
                    , _0x2e7ca1 = _0x55022e[_0x34fcc3(0x933)] = function () {
                         const _0x49676d = _0x34fcc3;
                         return _0x55022e[_0x49676d(0x435)][_0x49676d(0x31c)][_0x49676d(0x83b)](null, arguments);
                    }
                    , _0x2b8fc0 = _0x55022e[_0x34fcc3(0x6f1)] = function () {
                         const _0x41f23f = _0x34fcc3;
                         return _0x55022e[_0x41f23f(0x435)][_0x41f23f(0x751)][_0x41f23f(0x83b)](null, arguments);
                    }
                    , _0x42c39e = _0x55022e['_emscripten_bind_MetadataQuerier_HasEntry_2'] = function () {
                         const _0x2dff24 = _0x34fcc3;
                         return _0x55022e['asm'][_0x2dff24(0x3d5)]['apply'](null, arguments);
                    }
                    , _0x36a1ae = _0x55022e[_0x34fcc3(0x539)] = function () {
                         const _0x358007 = _0x34fcc3;
                         return _0x55022e['asm'][_0x358007(0x46e)][_0x358007(0x83b)](null, arguments);
                    }
                    , _0x39b013 = _0x55022e['_emscripten_bind_MetadataQuerier_GetIntEntryArray_3'] = function () {
                         const _0x3f3fc2 = _0x34fcc3;
                         return _0x55022e[_0x3f3fc2(0x435)]['emscripten_bind_MetadataQuerier_GetIntEntryArray_3'][_0x3f3fc2(0x83b)](null, arguments);
                    }
                    , _0x36df1d = _0x55022e[_0x34fcc3(0xcad)] = function () {
                         const _0x2b9004 = _0x34fcc3;
                         return _0x55022e[_0x2b9004(0x435)][_0x2b9004(0xd3f)][_0x2b9004(0x83b)](null, arguments);
                    }
                    , _0x3e2ef6 = _0x55022e[_0x34fcc3(0x53d)] = function () {
                         const _0x4963e2 = _0x34fcc3;
                         return _0x55022e[_0x4963e2(0x435)][_0x4963e2(0x489)][_0x4963e2(0x83b)](null, arguments);
                    }
                    , _0x57029f = _0x55022e[_0x34fcc3(0xbcf)] = function () {
                         const _0x19d2f2 = _0x34fcc3;
                         return _0x55022e[_0x19d2f2(0x435)][_0x19d2f2(0xa5a)][_0x19d2f2(0x83b)](null, arguments);
                    }
                    , _0x107d58 = _0x55022e['_emscripten_bind_MetadataQuerier_GetEntryName_2'] = function () {
                         const _0x277b9b = _0x34fcc3;
                         return _0x55022e[_0x277b9b(0x435)][_0x277b9b(0xc0d)][_0x277b9b(0x83b)](null, arguments);
                    }
                    , _0x73da55 = _0x55022e[_0x34fcc3(0x7f4)] = function () {
                         const _0x3520d7 = _0x34fcc3;
                         return _0x55022e[_0x3520d7(0x435)][_0x3520d7(0x83c)][_0x3520d7(0x83b)](null, arguments);
                    }
                    , _0x5efeff = _0x55022e[_0x34fcc3(0x979)] = function () {
                         const _0x38c05a = _0x34fcc3;
                         return _0x55022e[_0x38c05a(0x435)]['emscripten_bind_DracoInt16Array_DracoInt16Array_0']['apply'](null, arguments);
                    }
                    , _0x5efbe7 = _0x55022e[_0x34fcc3(0xb24)] = function () {
                         const _0x400d2b = _0x34fcc3;
                         return _0x55022e[_0x400d2b(0x435)][_0x400d2b(0xd45)][_0x400d2b(0x83b)](null, arguments);
                    }
                    , _0x5ba2bc = _0x55022e[_0x34fcc3(0xad5)] = function () {
                         const _0x3cf2c8 = _0x34fcc3;
                         return _0x55022e[_0x3cf2c8(0x435)][_0x3cf2c8(0x60b)][_0x3cf2c8(0x83b)](null, arguments);
                    }
                    , _0x533969 = _0x55022e[_0x34fcc3(0x261)] = function () {
                         const _0x21513b = _0x34fcc3;
                         return _0x55022e[_0x21513b(0x435)][_0x21513b(0x580)]['apply'](null, arguments);
                    }
                    , _0x21c014 = _0x55022e[_0x34fcc3(0x496)] = function () {
                         const _0x1181b0 = _0x34fcc3;
                         return _0x55022e[_0x1181b0(0x435)][_0x1181b0(0x359)]['apply'](null, arguments);
                    }
                    , _0x25c952 = _0x55022e[_0x34fcc3(0x52a)] = function () {
                         const _0x55dcc5 = _0x34fcc3;
                         return _0x55022e[_0x55dcc5(0x435)]['emscripten_bind_DracoFloat32Array_GetValue_1'][_0x55dcc5(0x83b)](null, arguments);
                    }
                    , _0x477aba = _0x55022e['_emscripten_bind_DracoFloat32Array_size_0'] = function () {
                         const _0x37e106 = _0x34fcc3;
                         return _0x55022e[_0x37e106(0x435)][_0x37e106(0x825)][_0x37e106(0x83b)](null, arguments);
                    }
                    , _0x3907fb = _0x55022e[_0x34fcc3(0x275)] = function () {
                         const _0xca48e6 = _0x34fcc3;
                         return _0x55022e['asm']['emscripten_bind_DracoFloat32Array___destroy___0'][_0xca48e6(0x83b)](null, arguments);
                    }
                    , _0x302503 = _0x55022e[_0x34fcc3(0x7f1)] = function () {
                         const _0x4a9469 = _0x34fcc3;
                         return _0x55022e[_0x4a9469(0x435)]['emscripten_bind_GeometryAttribute_GeometryAttribute_0'][_0x4a9469(0x83b)](null, arguments);
                    }
                    , _0x360ea7 = _0x55022e[_0x34fcc3(0xb65)] = function () {
                         const _0x19c7cd = _0x34fcc3;
                         return _0x55022e[_0x19c7cd(0x435)][_0x19c7cd(0xd6f)][_0x19c7cd(0x83b)](null, arguments);
                    }
                    , _0x2e775b = _0x55022e[_0x34fcc3(0x4f3)] = function () {
                         const _0x1f17b9 = _0x34fcc3;
                         return _0x55022e['asm'][_0x1f17b9(0xd3b)][_0x1f17b9(0x83b)](null, arguments);
                    }
                    , _0x29a855 = _0x55022e[_0x34fcc3(0x43b)] = function () {
                         const _0x1dc67e = _0x34fcc3;
                         return _0x55022e['asm'][_0x1dc67e(0x430)][_0x1dc67e(0x83b)](null, arguments);
                    }
                    , _0x3e3739 = _0x55022e[_0x34fcc3(0xc9f)] = function () {
                         const _0x519421 = _0x34fcc3;
                         return _0x55022e[_0x519421(0x435)][_0x519421(0x766)]['apply'](null, arguments);
                    }
                    , _0xda0dcf = _0x55022e['_emscripten_bind_Decoder_Decoder_0'] = function () {
                         const _0x4f6d3e = _0x34fcc3;
                         return _0x55022e[_0x4f6d3e(0x435)][_0x4f6d3e(0x3bb)]['apply'](null, arguments);
                    }
                    , _0x5d0684 = _0x55022e[_0x34fcc3(0xd9d)] = function () {
                         const _0x29354b = _0x34fcc3;
                         return _0x55022e[_0x29354b(0x435)][_0x29354b(0x4b0)][_0x29354b(0x83b)](null, arguments);
                    }
                    , _0x4b4168 = _0x55022e[_0x34fcc3(0x42b)] = function () {
                         const _0xaa7aaa = _0x34fcc3;
                         return _0x55022e[_0xaa7aaa(0x435)][_0xaa7aaa(0x652)][_0xaa7aaa(0x83b)](null, arguments);
                    }
                    , _0x3f9783 = _0x55022e[_0x34fcc3(0x670)] = function () {
                         const _0x399a1 = _0x34fcc3;
                         return _0x55022e[_0x399a1(0x435)]['emscripten_bind_Decoder_DecodeBufferToMesh_2']['apply'](null, arguments);
                    }
                    , _0x5e206d = _0x55022e[_0x34fcc3(0x78d)] = function () {
                         const _0x484787 = _0x34fcc3;
                         return _0x55022e[_0x484787(0x435)][_0x484787(0xb44)]['apply'](null, arguments);
                    }
                    , _0x49babe = _0x55022e[_0x34fcc3(0x1b5)] = function () {
                         const _0x529639 = _0x34fcc3;
                         return _0x55022e['asm'][_0x529639(0xa35)][_0x529639(0x83b)](null, arguments);
                    }
                    , _0x445e69 = _0x55022e['_emscripten_bind_Decoder_GetAttributeIdByMetadataEntry_3'] = function () {
                         const _0x592df7 = _0x34fcc3;
                         return _0x55022e[_0x592df7(0x435)][_0x592df7(0x6e5)][_0x592df7(0x83b)](null, arguments);
                    }
                    , _0x4a1f24 = _0x55022e[_0x34fcc3(0xc07)] = function () {
                         const _0x4c33c7 = _0x34fcc3;
                         return _0x55022e[_0x4c33c7(0x435)]['emscripten_bind_Decoder_GetAttribute_2'][_0x4c33c7(0x83b)](null, arguments);
                    }
                    , _0x3ebfd1 = _0x55022e['_emscripten_bind_Decoder_GetAttributeByUniqueId_2'] = function () {
                         const _0x5a450a = _0x34fcc3;
                         return _0x55022e[_0x5a450a(0x435)][_0x5a450a(0x61b)]['apply'](null, arguments);
                    }
                    , _0xf2b60c = _0x55022e[_0x34fcc3(0x304)] = function () {
                         const _0x28db7c = _0x34fcc3;
                         return _0x55022e[_0x28db7c(0x435)][_0x28db7c(0xa3d)][_0x28db7c(0x83b)](null, arguments);
                    }
                    , _0x43064e = _0x55022e['_emscripten_bind_Decoder_GetAttributeMetadata_2'] = function () {
                         const _0x55133b = _0x34fcc3;
                         return _0x55022e[_0x55133b(0x435)][_0x55133b(0x2c6)]['apply'](null, arguments);
                    }
                    , _0x3a526f = _0x55022e[_0x34fcc3(0xd93)] = function () {
                         const _0x2ce90b = _0x34fcc3;
                         return _0x55022e[_0x2ce90b(0x435)][_0x2ce90b(0x33a)][_0x2ce90b(0x83b)](null, arguments);
                    }
                    , _0x870888 = _0x55022e['_emscripten_bind_Decoder_GetTriangleStripsFromMesh_2'] = function () {
                         const _0x2bf879 = _0x34fcc3;
                         return _0x55022e[_0x2bf879(0x435)][_0x2bf879(0x575)][_0x2bf879(0x83b)](null, arguments);
                    }
                    , _0x2933a8 = _0x55022e['_emscripten_bind_Decoder_GetTrianglesUInt16Array_3'] = function () {
                         const _0x266467 = _0x34fcc3;
                         return _0x55022e['asm'][_0x266467(0x418)]['apply'](null, arguments);
                    }
                    , _0x23daf8 = _0x55022e[_0x34fcc3(0x355)] = function () {
                         const _0x3809ae = _0x34fcc3;
                         return _0x55022e[_0x3809ae(0x435)][_0x3809ae(0x280)][_0x3809ae(0x83b)](null, arguments);
                    }
                    , _0x2d7b8d = _0x55022e[_0x34fcc3(0x768)] = function () {
                         const _0x3ee22d = _0x34fcc3;
                         return _0x55022e[_0x3ee22d(0x435)][_0x3ee22d(0x402)][_0x3ee22d(0x83b)](null, arguments);
                    }
                    , _0x4fd9e8 = _0x55022e[_0x34fcc3(0x6bc)] = function () {
                         const _0x2921ed = _0x34fcc3;
                         return _0x55022e[_0x2921ed(0x435)][_0x2921ed(0xc54)]['apply'](null, arguments);
                    }
                    , _0x4d5553 = _0x55022e[_0x34fcc3(0xb14)] = function () {
                         const _0x2478a0 = _0x34fcc3;
                         return _0x55022e[_0x2478a0(0x435)][_0x2478a0(0x1a4)][_0x2478a0(0x83b)](null, arguments);
                    }
                    , _0x407013 = _0x55022e['_emscripten_bind_Decoder_GetAttributeInt8ForAllPoints_3'] = function () {
                         const _0x1b1f0d = _0x34fcc3;
                         return _0x55022e[_0x1b1f0d(0x435)]['emscripten_bind_Decoder_GetAttributeInt8ForAllPoints_3'][_0x1b1f0d(0x83b)](null, arguments);
                    }
                    , _0x4009e4 = _0x55022e[_0x34fcc3(0x5de)] = function () {
                         const _0x513517 = _0x34fcc3;
                         return _0x55022e[_0x513517(0x435)][_0x513517(0x22c)][_0x513517(0x83b)](null, arguments);
                    }
                    , _0x19d732 = _0x55022e[_0x34fcc3(0x440)] = function () {
                         const _0x222240 = _0x34fcc3;
                         return _0x55022e['asm'][_0x222240(0x6a5)][_0x222240(0x83b)](null, arguments);
                    }
                    , _0x337a0f = _0x55022e[_0x34fcc3(0x7c2)] = function () {
                         const _0x1be6a9 = _0x34fcc3;
                         return _0x55022e[_0x1be6a9(0x435)][_0x1be6a9(0x252)]['apply'](null, arguments);
                    }
                    , _0x585a8e = _0x55022e[_0x34fcc3(0xa23)] = function () {
                         const _0x484f19 = _0x34fcc3;
                         return _0x55022e[_0x484f19(0x435)]['emscripten_bind_Decoder_GetAttributeInt32ForAllPoints_3'][_0x484f19(0x83b)](null, arguments);
                    }
                    , _0x4b38d6 = _0x55022e[_0x34fcc3(0x3b9)] = function () {
                         const _0x4e6ca0 = _0x34fcc3;
                         return _0x55022e['asm'][_0x4e6ca0(0x96a)][_0x4e6ca0(0x83b)](null, arguments);
                    }
                    , _0x56443c = _0x55022e['_emscripten_bind_Decoder_GetAttributeDataArrayForAllPoints_5'] = function () {
                         const _0x1d2bde = _0x34fcc3;
                         return _0x55022e[_0x1d2bde(0x435)]['emscripten_bind_Decoder_GetAttributeDataArrayForAllPoints_5'][_0x1d2bde(0x83b)](null, arguments);
                    }
                    , _0x55958a = _0x55022e[_0x34fcc3(0x594)] = function () {
                         const _0x1784b4 = _0x34fcc3;
                         return _0x55022e[_0x1784b4(0x435)]['emscripten_bind_Decoder_SkipAttributeTransform_1'][_0x1784b4(0x83b)](null, arguments);
                    }
                    , _0x4d5ace = _0x55022e[_0x34fcc3(0x27d)] = function () {
                         const _0x55bb36 = _0x34fcc3;
                         return _0x55022e[_0x55bb36(0x435)][_0x55bb36(0x558)][_0x55bb36(0x83b)](null, arguments);
                    }
                    , _0x3cacc7 = _0x55022e[_0x34fcc3(0xc53)] = function () {
                         const _0x97f1a0 = _0x34fcc3;
                         return _0x55022e[_0x97f1a0(0x435)]['emscripten_bind_Mesh_Mesh_0'][_0x97f1a0(0x83b)](null, arguments);
                    }
                    , _0x45e6ff = _0x55022e['_emscripten_bind_Mesh_num_faces_0'] = function () {
                         const _0x5ad32a = _0x34fcc3;
                         return _0x55022e[_0x5ad32a(0x435)]['emscripten_bind_Mesh_num_faces_0'][_0x5ad32a(0x83b)](null, arguments);
                    }
                    , _0x56e23a = _0x55022e[_0x34fcc3(0x1fd)] = function () {
                         const _0x2ed489 = _0x34fcc3;
                         return _0x55022e[_0x2ed489(0x435)][_0x2ed489(0x73b)][_0x2ed489(0x83b)](null, arguments);
                    }
                    , _0x18bc9b = _0x55022e[_0x34fcc3(0x675)] = function () {
                         const _0x317a83 = _0x34fcc3;
                         return _0x55022e[_0x317a83(0x435)]['emscripten_bind_Mesh_num_points_0'][_0x317a83(0x83b)](null, arguments);
                    }
                    , _0x1a713e = _0x55022e[_0x34fcc3(0x613)] = function () {
                         const _0x3cf52a = _0x34fcc3;
                         return _0x55022e[_0x3cf52a(0x435)][_0x3cf52a(0x2fc)][_0x3cf52a(0x83b)](null, arguments);
                    }
                    , _0x5aa581 = _0x55022e['_emscripten_bind_VoidPtr___destroy___0'] = function () {
                         const _0x6c96f9 = _0x34fcc3;
                         return _0x55022e['asm'][_0x6c96f9(0x192)][_0x6c96f9(0x83b)](null, arguments);
                    }
                    , _0x3e2bb2 = _0x55022e['_emscripten_bind_DracoInt32Array_DracoInt32Array_0'] = function () {
                         const _0x4dcf9f = _0x34fcc3;
                         return _0x55022e[_0x4dcf9f(0x435)]['emscripten_bind_DracoInt32Array_DracoInt32Array_0'][_0x4dcf9f(0x83b)](null, arguments);
                    }
                    , _0x5421e1 = _0x55022e[_0x34fcc3(0xb9b)] = function () {
                         const _0x4104cd = _0x34fcc3;
                         return _0x55022e[_0x4104cd(0x435)][_0x4104cd(0x462)][_0x4104cd(0x83b)](null, arguments);
                    }
                    , _0x406b8b = _0x55022e['_emscripten_bind_DracoInt32Array_size_0'] = function () {
                         const _0x597da5 = _0x34fcc3;
                         return _0x55022e[_0x597da5(0x435)][_0x597da5(0x758)][_0x597da5(0x83b)](null, arguments);
                    }
                    , _0x2f1432 = _0x55022e[_0x34fcc3(0xa61)] = function () {
                         const _0x4bf306 = _0x34fcc3;
                         return _0x55022e['asm'][_0x4bf306(0x635)][_0x4bf306(0x83b)](null, arguments);
                    }
                    , _0x512ab1 = _0x55022e[_0x34fcc3(0xc46)] = function () {
                         const _0x5c7a46 = _0x34fcc3;
                         return _0x55022e[_0x5c7a46(0x435)]['emscripten_bind_Metadata_Metadata_0'][_0x5c7a46(0x83b)](null, arguments);
                    }
                    , _0x47e3cd = _0x55022e['_emscripten_bind_Metadata___destroy___0'] = function () {
                         const _0x3fbf0f = _0x34fcc3;
                         return _0x55022e[_0x3fbf0f(0x435)][_0x3fbf0f(0x6ac)][_0x3fbf0f(0x83b)](null, arguments);
                    }
                    , _0x1b5854 = _0x55022e[_0x34fcc3(0xd8d)] = function () {
                         const _0x4c9a12 = _0x34fcc3;
                         return _0x55022e['asm'][_0x4c9a12(0xa92)][_0x4c9a12(0x83b)](null, arguments);
                    }
                    , _0x4b1965 = _0x55022e[_0x34fcc3(0x7f5)] = function () {
                         const _0x1f0318 = _0x34fcc3;
                         return _0x55022e['asm'][_0x1f0318(0xcd4)][_0x1f0318(0x83b)](null, arguments);
                    }
                    , _0x19cc6b = _0x55022e[_0x34fcc3(0x1f7)] = function () {
                         const _0x19f3e3 = _0x34fcc3;
                         return _0x55022e[_0x19f3e3(0x435)][_0x19f3e3(0x6aa)][_0x19f3e3(0x83b)](null, arguments);
                    }
                    , _0x294947 = _0x55022e[_0x34fcc3(0xad0)] = function () {
                         const _0x293f91 = _0x34fcc3;
                         return _0x55022e[_0x293f91(0x435)][_0x293f91(0x83a)][_0x293f91(0x83b)](null, arguments);
                    }
                    , _0x2b41fc = _0x55022e['_emscripten_enum_draco_StatusCode_UNSUPPORTED_VERSION'] = function () {
                         const _0x18797b = _0x34fcc3;
                         return _0x55022e['asm'][_0x18797b(0x769)][_0x18797b(0x83b)](null, arguments);
                    }
                    , _0x483048 = _0x55022e[_0x34fcc3(0x9d7)] = function () {
                         const _0x3005dc = _0x34fcc3;
                         return _0x55022e[_0x3005dc(0x435)][_0x3005dc(0x7b4)][_0x3005dc(0x83b)](null, arguments);
                    }
                    , _0x25234e = _0x55022e['_emscripten_enum_draco_DataType_DT_INVALID'] = function () {
                         const _0x296f9c = _0x34fcc3;
                         return _0x55022e[_0x296f9c(0x435)][_0x296f9c(0x9f2)][_0x296f9c(0x83b)](null, arguments);
                    }
                    , _0x5c5220 = _0x55022e['_emscripten_enum_draco_DataType_DT_INT8'] = function () {
                         const _0x44d645 = _0x34fcc3;
                         return _0x55022e[_0x44d645(0x435)][_0x44d645(0x6cd)][_0x44d645(0x83b)](null, arguments);
                    }
                    , _0x35c677 = _0x55022e[_0x34fcc3(0xaa8)] = function () {
                         const _0x1f9fea = _0x34fcc3;
                         return _0x55022e[_0x1f9fea(0x435)][_0x1f9fea(0x7fb)]['apply'](null, arguments);
                    }
                    , _0x5972dd = _0x55022e[_0x34fcc3(0xade)] = function () {
                         const _0x2b9075 = _0x34fcc3;
                         return _0x55022e[_0x2b9075(0x435)][_0x2b9075(0x710)][_0x2b9075(0x83b)](null, arguments);
                    }
                    , _0x3192ed = _0x55022e[_0x34fcc3(0xabc)] = function () {
                         const _0x2c535a = _0x34fcc3;
                         return _0x55022e['asm'][_0x2c535a(0x83d)][_0x2c535a(0x83b)](null, arguments);
                    }
                    , _0x17bcb7 = _0x55022e[_0x34fcc3(0x644)] = function () {
                         const _0x5c4ff3 = _0x34fcc3;
                         return _0x55022e[_0x5c4ff3(0x435)][_0x5c4ff3(0xc73)][_0x5c4ff3(0x83b)](null, arguments);
                    }
                    , _0x428db0 = _0x55022e['_emscripten_enum_draco_DataType_DT_UINT32'] = function () {
                         const _0x387c77 = _0x34fcc3;
                         return _0x55022e[_0x387c77(0x435)][_0x387c77(0x85f)]['apply'](null, arguments);
                    }
                    , _0xc9093b = _0x55022e['_emscripten_enum_draco_DataType_DT_INT64'] = function () {
                         const _0x160b73 = _0x34fcc3;
                         return _0x55022e['asm'][_0x160b73(0x27f)][_0x160b73(0x83b)](null, arguments);
                    }
                    , _0x4fdfff = _0x55022e[_0x34fcc3(0x572)] = function () {
                         const _0x309755 = _0x34fcc3;
                         return _0x55022e['asm'][_0x309755(0xb8e)][_0x309755(0x83b)](null, arguments);
                    }
                    , _0x40861b = _0x55022e['_emscripten_enum_draco_DataType_DT_FLOAT32'] = function () {
                         const _0x4c54ae = _0x34fcc3;
                         return _0x55022e[_0x4c54ae(0x435)][_0x4c54ae(0x84b)]['apply'](null, arguments);
                    }
                    , _0x47b814 = _0x55022e[_0x34fcc3(0xbdc)] = function () {
                         const _0x31a63e = _0x34fcc3;
                         return _0x55022e[_0x31a63e(0x435)]['emscripten_enum_draco_DataType_DT_FLOAT64']['apply'](null, arguments);
                    }
                    , _0x4d0767 = _0x55022e[_0x34fcc3(0x8c4)] = function () {
                         const _0xf6afce = _0x34fcc3;
                         return _0x55022e[_0xf6afce(0x435)][_0xf6afce(0x36f)][_0xf6afce(0x83b)](null, arguments);
                    }
                    , _0x497165 = _0x55022e[_0x34fcc3(0x62d)] = function () {
                         const _0x441cee = _0x34fcc3;
                         return _0x55022e[_0x441cee(0x435)][_0x441cee(0xa9a)]['apply'](null, arguments);
                    }
                    , _0x309ed5 = _0x55022e[_0x34fcc3(0x728)] = function () {
                         const _0x169f60 = _0x34fcc3;
                         return _0x55022e['asm'][_0x169f60(0xbb7)][_0x169f60(0x83b)](null, arguments);
                    }
                    , _0x5e66fb = _0x55022e['_emscripten_enum_draco_EncodedGeometryType_POINT_CLOUD'] = function () {
                         const _0x22dd41 = _0x34fcc3;
                         return _0x55022e[_0x22dd41(0x435)][_0x22dd41(0x577)][_0x22dd41(0x83b)](null, arguments);
                    }
                    , _0x4b5379 = _0x55022e[_0x34fcc3(0x21d)] = function () {
                         const _0x1c9745 = _0x34fcc3;
                         return _0x55022e[_0x1c9745(0x435)][_0x1c9745(0x611)]['apply'](null, arguments);
                    }
                    , _0x3b7380 = _0x55022e[_0x34fcc3(0x739)] = function () {
                         const _0x254dad = _0x34fcc3;
                         return _0x55022e[_0x254dad(0x435)][_0x254dad(0xce3)][_0x254dad(0x83b)](null, arguments);
                    }
                    , _0x4cdc83 = _0x55022e[_0x34fcc3(0x271)] = function () {
                         const _0x459e0e = _0x34fcc3;
                         return _0x55022e[_0x459e0e(0x435)][_0x459e0e(0x2a1)][_0x459e0e(0x83b)](null, arguments);
                    }
                    , _0x502392 = _0x55022e[_0x34fcc3(0x332)] = function () {
                         const _0x539136 = _0x34fcc3;
                         return _0x55022e[_0x539136(0x435)][_0x539136(0x6f8)]['apply'](null, arguments);
                    }
                    , _0x37bbb8 = _0x55022e[_0x34fcc3(0xcbc)] = function () {
                         const _0x2e2914 = _0x34fcc3;
                         return _0x55022e[_0x2e2914(0x435)]['emscripten_enum_draco_AttributeTransformType_ATTRIBUTE_OCTAHEDRON_TRANSFORM'][_0x2e2914(0x83b)](null, arguments);
                    }
                    , _0x2b06cd = _0x55022e[_0x34fcc3(0x1d8)] = function () {
                         const _0x283173 = _0x34fcc3;
                         return _0x55022e['asm'][_0x283173(0x74b)][_0x283173(0x83b)](null, arguments);
                    }
                    , _0x49ea7a = _0x55022e[_0x34fcc3(0xa22)] = function () {
                         const _0x3e7e7a = _0x34fcc3;
                         return _0x55022e[_0x3e7e7a(0x435)][_0x3e7e7a(0x241)][_0x3e7e7a(0x83b)](null, arguments);
                    }
                    , _0x59ced4 = _0x55022e[_0x34fcc3(0x1fa)] = function () {
                         const _0x415e6b = _0x34fcc3;
                         return _0x55022e[_0x415e6b(0x435)][_0x415e6b(0x2e8)][_0x415e6b(0x83b)](null, arguments);
                    }
                    , _0x5bfd0b = _0x55022e['_emscripten_enum_draco_GeometryAttribute_Type_COLOR'] = function () {
                         const _0x6bdbd2 = _0x34fcc3;
                         return _0x55022e[_0x6bdbd2(0x435)][_0x6bdbd2(0xd6c)]['apply'](null, arguments);
                    }
                    , _0x4bdade = _0x55022e[_0x34fcc3(0x36a)] = function () {
                         const _0x130131 = _0x34fcc3;
                         return _0x55022e[_0x130131(0x435)][_0x130131(0x45a)][_0x130131(0x83b)](null, arguments);
                    }
                    , _0x5d8893 = _0x55022e[_0x34fcc3(0x503)] = function () {
                         const _0x280cfa = _0x34fcc3;
                         return _0x55022e[_0x280cfa(0x435)][_0x280cfa(0x1f6)][_0x280cfa(0x83b)](null, arguments);
                    }
                    ;
               _0x55022e[_0x34fcc3(0x3c3)] = function () {
                    const _0x535bdb = _0x34fcc3;
                    return _0x55022e['asm'][_0x535bdb(0x97b)]['apply'](null, arguments);
               }
                    ,
                    _0x55022e[_0x34fcc3(0x934)] = function () {
                         const _0x1f85e7 = _0x34fcc3;
                         return _0x55022e[_0x1f85e7(0x435)][_0x1f85e7(0xd33)][_0x1f85e7(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x4ae)] = function () {
                         const _0x331c71 = _0x34fcc3;
                         return _0x55022e[_0x331c71(0x435)][_0x331c71(0x441)][_0x331c71(0x83b)](null, arguments);
                    }
                    ;
               var _0x2eeed3, _0x2e6d9f = _0x55022e[_0x34fcc3(0x87f)] = function () {
                    const _0x2df2e0 = _0x34fcc3;
                    return _0x55022e['asm'][_0x2df2e0(0x687)][_0x2df2e0(0x83b)](null, arguments);
               }
                    ;
               if (_0x55022e['stackSave'] = function () {
                    const _0x23fc39 = _0x34fcc3;
                    return _0x55022e[_0x23fc39(0x435)][_0x23fc39(0x210)][_0x23fc39(0x83b)](null, arguments);
               }
                    ,
                    _0x55022e['stackAlloc'] = function () {
                         const _0x2cc685 = _0x34fcc3;
                         return _0x55022e[_0x2cc685(0x435)][_0x2cc685(0xcf0)][_0x2cc685(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x181)] = function () {
                         const _0x5e7dca = _0x34fcc3;
                         return _0x55022e[_0x5e7dca(0x435)][_0x5e7dca(0x181)]['apply'](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x626)] = function () {
                         const _0x2d1ddf = _0x34fcc3;
                         return _0x55022e[_0x2d1ddf(0x435)][_0x2d1ddf(0x626)][_0x2d1ddf(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x80f)] = function () {
                         const _0x4357bd = _0x34fcc3;
                         return _0x55022e[_0x4357bd(0x435)][_0x4357bd(0x80f)]['apply'](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_vi'] = function () {
                         const _0x1920dd = _0x34fcc3;
                         return _0x55022e[_0x1920dd(0x435)]['dynCall_vi']['apply'](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_iii'] = function () {
                         const _0xf10919 = _0x34fcc3;
                         return _0x55022e['asm'][_0xf10919(0xa2e)][_0xf10919(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x926)] = function () {
                         const _0x22e1f5 = _0x34fcc3;
                         return _0x55022e[_0x22e1f5(0x435)][_0x22e1f5(0x926)][_0x22e1f5(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x282)] = function () {
                         const _0x2f2a1e = _0x34fcc3;
                         return _0x55022e[_0x2f2a1e(0x435)]['dynCall_iiii'][_0x2f2a1e(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_v'] = function () {
                         const _0x20327d = _0x34fcc3;
                         return _0x55022e[_0x20327d(0x435)][_0x20327d(0xbb3)][_0x20327d(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_viii'] = function () {
                         const _0xe82a4c = _0x34fcc3;
                         return _0x55022e[_0xe82a4c(0x435)][_0xe82a4c(0x80a)][_0xe82a4c(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_viiii'] = function () {
                         const _0x59c3c5 = _0x34fcc3;
                         return _0x55022e[_0x59c3c5(0x435)]['dynCall_viiii'][_0x59c3c5(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_iiiiiii'] = function () {
                         const _0x1b5e32 = _0x34fcc3;
                         return _0x55022e[_0x1b5e32(0x435)][_0x1b5e32(0xa09)]['apply'](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_iidiiii'] = function () {
                         const _0x2f3b3e = _0x34fcc3;
                         return _0x55022e['asm']['dynCall_iidiiii'][_0x2f3b3e(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0xb45)] = function () {
                         const _0x23357f = _0x34fcc3;
                         return _0x55022e[_0x23357f(0x435)][_0x23357f(0xb45)][_0x23357f(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_viiiiii'] = function () {
                         const _0x50d801 = _0x34fcc3;
                         return _0x55022e['asm'][_0x50d801(0xbdf)]['apply'](null, arguments);
                    }
                    ,
                    _0x55022e['dynCall_viiiii'] = function () {
                         const _0x1c9144 = _0x34fcc3;
                         return _0x55022e[_0x1c9144(0x435)][_0x1c9144(0x859)][_0x1c9144(0x83b)](null, arguments);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x435)] = _0x34e5bf,
                    _0x55022e[_0x34fcc3(0x7db)] = function (_0x5490d8) {
                         const _0x2adebf = _0x34fcc3;
                         if (_0x2eeed3)
                              _0x5490d8(_0x55022e);
                         else {
                              var _0x171cfc = _0x55022e['onRuntimeInitialized'];
                              _0x55022e[_0x2adebf(0x8c5)] = function () {
                                   _0x171cfc && _0x171cfc(),
                                        _0x5490d8(_0x55022e);
                              }
                                   ;
                         }
                         return _0x55022e;
                    }
                    ,
                    _0x289e91 = function _0x13e5b3() {
                         _0x2eeed3 || _0x562a88(),
                              _0x2eeed3 || (_0x289e91 = _0x13e5b3);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x8f5)] = _0x562a88,
                    _0x55022e[_0x34fcc3(0x722)]) {
                    for ('function' == typeof _0x55022e['preInit'] && (_0x55022e[_0x34fcc3(0x722)] = [_0x55022e[_0x34fcc3(0x722)]]); 0x0 < _0x55022e['preInit'][_0x34fcc3(0x72b)];)
                         _0x55022e[_0x34fcc3(0x722)]['pop']()();
               }
               _0x562a88(),
                    _0x15f0b0[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0['prototype']),
                    _0x15f0b0[_0x34fcc3(0x2d4)]['constructor'] = _0x15f0b0,
                    _0x15f0b0[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x15f0b0,
                    _0x15f0b0[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x1a0)] = _0x15f0b0,
                    _0x55022e[_0x34fcc3(0x274)] = _0x114abc,
                    _0x55022e[_0x34fcc3(0x6ff)] = _0x3c86b2,
                    _0x55022e['castObject'] = function (_0x354864, _0x34169d) {
                         const _0x412e63 = _0x34fcc3;
                         return _0x3c86b2(_0x354864[_0x412e63(0x1c5)], _0x34169d);
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x2ec)] = _0x3c86b2(0x0),
                    _0x55022e[_0x34fcc3(0x9bb)] = function (_0x2263c6) {
                         const _0x351a16 = _0x34fcc3;
                         if (!_0x2263c6['__destroy__'])
                              throw _0x351a16(0x843);
                         _0x2263c6['__destroy__'](),
                              delete _0x114abc(_0x2263c6[_0x351a16(0xc81)])[_0x2263c6[_0x351a16(0x1c5)]];
                    }
                    ,
                    _0x55022e['compare'] = function (_0x2d7979, _0x714a3f) {
                         const _0x26052a = _0x34fcc3;
                         return _0x2d7979[_0x26052a(0x1c5)] === _0x714a3f[_0x26052a(0x1c5)];
                    }
                    ,
                    _0x55022e['getPointer'] = function (_0x23de12) {
                         const _0x5b47ec = _0x34fcc3;
                         return _0x23de12[_0x5b47ec(0x1c5)];
                    }
                    ,
                    _0x55022e[_0x34fcc3(0x930)] = function (_0x51cede) {
                         const _0x1f5cd3 = _0x34fcc3;
                         return _0x51cede[_0x1f5cd3(0xc81)];
                    }
                    ;
               var _0x17cc16 = {
                    'buffer': 0x0,
                    'size': 0x0,
                    'pos': 0x0,
                    'temps': [],
                    'needed': 0x0,
                    'prepare': function () {
                         const _0x194537 = _0x34fcc3;
                         if (_0x17cc16[_0x194537(0x740)]) {
                              for (var _0x329138 = 0x0; _0x329138 < _0x17cc16[_0x194537(0xcf1)][_0x194537(0x72b)]; _0x329138++)
                                   _0x55022e[_0x194537(0x4ae)](_0x17cc16[_0x194537(0xcf1)][_0x329138]);
                              _0x17cc16['temps']['length'] = 0x0,
                                   _0x55022e[_0x194537(0x4ae)](_0x17cc16[_0x194537(0x25d)]),
                                   _0x17cc16[_0x194537(0x25d)] = 0x0,
                                   _0x17cc16[_0x194537(0x18e)] += _0x17cc16['needed'],
                                   _0x17cc16[_0x194537(0x740)] = 0x0;
                         }
                         _0x17cc16[_0x194537(0x25d)] || (_0x17cc16['size'] += 0x80,
                              _0x17cc16[_0x194537(0x25d)] = _0x55022e[_0x194537(0x87f)](_0x17cc16[_0x194537(0x18e)]),
                              _0x1059cf(_0x17cc16[_0x194537(0x25d)])),
                              _0x17cc16[_0x194537(0x849)] = 0x0;
                    },
                    'alloc': function (_0x100408, _0x5b2c01) {
                         const _0x3658a5 = _0x34fcc3;
                         return _0x1059cf(_0x17cc16[_0x3658a5(0x25d)]),
                              _0x100408 = (_0x100408 = _0x100408[_0x3658a5(0x72b)] * _0x5b2c01['BYTES_PER_ELEMENT']) + 0x7 & -0x8,
                              _0x17cc16[_0x3658a5(0x849)] + _0x100408 >= _0x17cc16[_0x3658a5(0x18e)] ? (_0x1059cf(0x0 < _0x100408),
                                   _0x17cc16['needed'] += _0x100408,
                                   _0x5b2c01 = _0x55022e[_0x3658a5(0x87f)](_0x100408),
                                   _0x17cc16['temps']['push'](_0x5b2c01)) : (_0x5b2c01 = _0x17cc16['buffer'] + _0x17cc16[_0x3658a5(0x849)],
                                        _0x17cc16['pos'] += _0x100408),
                              _0x5b2c01;
                    },
                    'copy': function (_0x273b02, _0x5c190d, _0x272302) {
                         const _0x25afef = _0x34fcc3;
                         switch (_0x5c190d[_0x25afef(0x385)]) {
                              case 0x2:
                                   _0x272302 >>= 0x1;
                                   break;
                              case 0x4:
                                   _0x272302 >>= 0x2;
                                   break;
                              case 0x8:
                                   _0x272302 >>= 0x3;
                         }
                         for (var _0x5adf56 = 0x0; _0x5adf56 < _0x273b02['length']; _0x5adf56++)
                              _0x5c190d[_0x272302 + _0x5adf56] = _0x273b02[_0x5adf56];
                    }
               };
               return _0x2747dd[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0['prototype']),
                    _0x2747dd[_0x34fcc3(0x2d4)]['constructor'] = _0x2747dd,
                    _0x2747dd[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x2747dd,
                    _0x2747dd[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0xa19)] = _0x2747dd,
                    _0x2747dd[_0x34fcc3(0x2d4)][_0x34fcc3(0x75f)] = _0x2747dd['prototype'][_0x34fcc3(0x75f)] = function () {
                         const _0x390fca = _0x34fcc3;
                         return _0x27197c(this[_0x390fca(0x1c5)]);
                    }
                    ,
                    _0x2747dd[_0x34fcc3(0x2d4)]['ok'] = _0x2747dd[_0x34fcc3(0x2d4)]['ok'] = function () {
                         const _0x36f17a = _0x34fcc3;
                         return !!_0x2bfd87(this[_0x36f17a(0x1c5)]);
                    }
                    ,
                    _0x2747dd[_0x34fcc3(0x2d4)][_0x34fcc3(0xbed)] = _0x2747dd[_0x34fcc3(0x2d4)]['error_msg'] = function () {
                         const _0x4098c2 = _0x34fcc3;
                         return _0x5b5f5f(_0x1f6d92(this[_0x4098c2(0x1c5)]));
                    }
                    ,
                    _0x2747dd[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x2747dd[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x1e1b24 = _0x34fcc3;
                         _0x3260eb(this[_0x1e1b24(0x1c5)]);
                    }
                    ,
                    _0x357cfa[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x357cfa[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x357cfa,
                    _0x357cfa['prototype']['__class__'] = _0x357cfa,
                    _0x357cfa[_0x34fcc3(0xaf4)] = {},
                    _0x55022e['DracoUInt16Array'] = _0x357cfa,
                    _0x357cfa[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = _0x357cfa[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = function (_0x381831) {
                         const _0x17bad2 = _0x34fcc3;
                         var _0x2b9fe0 = this[_0x17bad2(0x1c5)];
                         return _0x381831 && 'object' == typeof _0x381831 && (_0x381831 = _0x381831[_0x17bad2(0x1c5)]),
                              _0x32040f(_0x2b9fe0, _0x381831);
                    }
                    ,
                    _0x357cfa['prototype'][_0x34fcc3(0x18e)] = _0x357cfa[_0x34fcc3(0x2d4)]['size'] = function () {
                         const _0x1ead13 = _0x34fcc3;
                         return _0x506940(this[_0x1ead13(0x1c5)]);
                    }
                    ,
                    _0x357cfa['prototype'][_0x34fcc3(0x5d8)] = _0x357cfa['prototype'][_0x34fcc3(0x5d8)] = function () {
                         const _0x2019ed = _0x34fcc3;
                         _0x43d931(this[_0x2019ed(0x1c5)]);
                    }
                    ,
                    _0x3a9ef9[_0x34fcc3(0x2d4)] = Object['create'](_0x15f0b0['prototype']),
                    _0x3a9ef9[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x3a9ef9,
                    _0x3a9ef9['prototype'][_0x34fcc3(0xc81)] = _0x3a9ef9,
                    _0x3a9ef9['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0x429)] = _0x3a9ef9,
                    _0x3a9ef9[_0x34fcc3(0x2d4)][_0x34fcc3(0xce0)] = _0x3a9ef9['prototype']['num_attributes'] = function () {
                         const _0x1b71d5 = _0x34fcc3;
                         return _0x4ab296(this[_0x1b71d5(0x1c5)]);
                    }
                    ,
                    _0x3a9ef9['prototype'][_0x34fcc3(0x5ba)] = _0x3a9ef9['prototype']['num_points'] = function () {
                         return _0x32d85c(this['ptr']);
                    }
                    ,
                    _0x3a9ef9['prototype']['__destroy__'] = _0x3a9ef9['prototype'][_0x34fcc3(0x5d8)] = function () {
                         _0x5a4e52(this['ptr']);
                    }
                    ,
                    _0x52a04a[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x52a04a[_0x34fcc3(0x2d4)]['constructor'] = _0x52a04a,
                    _0x52a04a['prototype']['__class__'] = _0x52a04a,
                    _0x52a04a[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x312)] = _0x52a04a,
                    _0x52a04a[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = _0x52a04a[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = function (_0x591140) {
                         const _0x360504 = _0x34fcc3;
                         var _0x1ed949 = this['ptr'];
                         return _0x591140 && _0x360504(0xb70) == typeof _0x591140 && (_0x591140 = _0x591140['ptr']),
                              _0x1fedd2(_0x1ed949, _0x591140);
                    }
                    ,
                    _0x52a04a['prototype'][_0x34fcc3(0x18e)] = _0x52a04a[_0x34fcc3(0x2d4)][_0x34fcc3(0x18e)] = function () {
                         const _0xa0680a = _0x34fcc3;
                         return _0x49166f(this[_0xa0680a(0x1c5)]);
                    }
                    ,
                    _0x52a04a[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x52a04a[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x2607d9 = _0x34fcc3;
                         _0x10669e(this[_0x2607d9(0x1c5)]);
                    }
                    ,
                    _0x379020['prototype'] = Object['create'](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x379020[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x379020,
                    _0x379020[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x379020,
                    _0x379020[_0x34fcc3(0xaf4)] = {},
                    _0x55022e['DracoUInt32Array'] = _0x379020,
                    _0x379020['prototype']['GetValue'] = _0x379020[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = function (_0x34b10c) {
                         const _0xb55c93 = _0x34fcc3;
                         var _0x5f2bff = this['ptr'];
                         return _0x34b10c && _0xb55c93(0xb70) == typeof _0x34b10c && (_0x34b10c = _0x34b10c[_0xb55c93(0x1c5)]),
                              _0x377983(_0x5f2bff, _0x34b10c);
                    }
                    ,
                    _0x379020['prototype'][_0x34fcc3(0x18e)] = _0x379020[_0x34fcc3(0x2d4)][_0x34fcc3(0x18e)] = function () {
                         return _0x4c8b71(this['ptr']);
                    }
                    ,
                    _0x379020[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x379020[_0x34fcc3(0x2d4)]['__destroy__'] = function () {
                         const _0xc92a66 = _0x34fcc3;
                         _0x377511(this[_0xc92a66(0x1c5)]);
                    }
                    ,
                    _0x1f6119[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x1f6119['prototype'][_0x34fcc3(0xcc8)] = _0x1f6119,
                    _0x1f6119[_0x34fcc3(0x2d4)]['__class__'] = _0x1f6119,
                    _0x1f6119['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0xd28)] = _0x1f6119,
                    _0x1f6119[_0x34fcc3(0x2d4)][_0x34fcc3(0xdaf)] = _0x1f6119[_0x34fcc3(0x2d4)][_0x34fcc3(0xdaf)] = function (_0x23323c) {
                         const _0x4223c7 = _0x34fcc3;
                         var _0x451a76 = this[_0x4223c7(0x1c5)];
                         return _0x23323c && _0x4223c7(0xb70) == typeof _0x23323c && (_0x23323c = _0x23323c[_0x4223c7(0x1c5)]),
                              !!_0x1908d6(_0x451a76, _0x23323c);
                    }
                    ,
                    _0x1f6119[_0x34fcc3(0x2d4)][_0x34fcc3(0x39d)] = _0x1f6119['prototype'][_0x34fcc3(0x39d)] = function () {
                         const _0xacc33b = _0x34fcc3;
                         return _0x32c214(this[_0xacc33b(0x1c5)]);
                    }
                    ,
                    _0x1f6119[_0x34fcc3(0x2d4)]['__destroy__'] = _0x1f6119[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x5cd047 = _0x34fcc3;
                         _0x1bbc98(this[_0x5cd047(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)] = Object['create'](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0xcdb76,
                    _0xcdb76[_0x34fcc3(0x2d4)]['__class__'] = _0xcdb76,
                    _0xcdb76[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x376)] = _0xcdb76,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x18e)] = _0xcdb76[_0x34fcc3(0x2d4)]['size'] = function () {
                         const _0x38e95e = _0x34fcc3;
                         return _0x30fd11(this[_0x38e95e(0x1c5)]);
                    }
                    ,
                    _0xcdb76['prototype'][_0x34fcc3(0x796)] = _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x796)] = function () {
                         return _0x3c86b2(_0x463de1(this['ptr']), _0x2883fc);
                    }
                    ,
                    _0xcdb76['prototype'][_0x34fcc3(0x706)] = _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x706)] = function () {
                         return _0x5baa3d(this['ptr']);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x428)] = _0xcdb76['prototype']['data_type'] = function () {
                         const _0x109473 = _0x34fcc3;
                         return _0x63ae3a(this[_0x109473(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x868)] = _0xcdb76['prototype']['num_components'] = function () {
                         const _0x28b105 = _0x34fcc3;
                         return _0x184659(this[_0x28b105(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x4d4)] = _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x4d4)] = function () {
                         const _0x521cb1 = _0x34fcc3;
                         return !!_0x49b052(this[_0x521cb1(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x67a)] = _0xcdb76[_0x34fcc3(0x2d4)]['byte_stride'] = function () {
                         const _0x3a65fa = _0x34fcc3;
                         return _0x490c8a(this[_0x3a65fa(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)]['byte_offset'] = _0xcdb76['prototype'][_0x34fcc3(0x1dd)] = function () {
                         const _0x5e9297 = _0x34fcc3;
                         return _0x2539e0(this[_0x5e9297(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x303)] = _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x303)] = function () {
                         const _0x211f75 = _0x34fcc3;
                         return _0x42751c(this[_0x211f75(0x1c5)]);
                    }
                    ,
                    _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0xcdb76[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         _0x396fb4(this['ptr']);
                    }
                    ,
                    _0x2883fc[_0x34fcc3(0x2d4)] = Object['create'](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x2883fc['prototype'][_0x34fcc3(0xcc8)] = _0x2883fc,
                    _0x2883fc['prototype'][_0x34fcc3(0xc81)] = _0x2883fc,
                    _0x2883fc['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0xbf1)] = _0x2883fc,
                    _0x2883fc[_0x34fcc3(0x2d4)][_0x34fcc3(0xbdd)] = _0x2883fc[_0x34fcc3(0x2d4)][_0x34fcc3(0xbdd)] = function () {
                         return _0x1bd970(this['ptr']);
                    }
                    ,
                    _0x2883fc[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x2883fc[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x471e67 = _0x34fcc3;
                         _0x2d79ac(this[_0x471e67(0x1c5)]);
                    }
                    ,
                    _0x1553f5[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x1553f5,
                    _0x1553f5[_0x34fcc3(0x2d4)]['__class__'] = _0x1553f5,
                    _0x1553f5['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0xae6)] = _0x1553f5,
                    _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0xdaf)] = _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0xdaf)] = function (_0x1e1e42) {
                         const _0x4c32b4 = _0x34fcc3;
                         var _0x2db2df = this['ptr'];
                         return _0x1e1e42 && _0x4c32b4(0xb70) == typeof _0x1e1e42 && (_0x1e1e42 = _0x1e1e42[_0x4c32b4(0x1c5)]),
                              !!_0x2f3511(_0x2db2df, _0x1e1e42);
                    }
                    ,
                    _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0x39d)] = _0x1553f5['prototype']['quantization_bits'] = function () {
                         return _0x47b60d(this['ptr']);
                    }
                    ,
                    _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0x9b2)] = _0x1553f5['prototype'][_0x34fcc3(0x9b2)] = function (_0x32e880) {
                         const _0x403959 = _0x34fcc3;
                         var _0x2fa506 = this[_0x403959(0x1c5)];
                         return _0x32e880 && _0x403959(0xb70) == typeof _0x32e880 && (_0x32e880 = _0x32e880[_0x403959(0x1c5)]),
                              _0x46da54(_0x2fa506, _0x32e880);
                    }
                    ,
                    _0x1553f5['prototype']['range'] = _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0xa03)] = function () {
                         return _0x46525e(this['ptr']);
                    }
                    ,
                    _0x1553f5[_0x34fcc3(0x2d4)]['__destroy__'] = _0x1553f5[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         _0x59f19a(this['ptr']);
                    }
                    ,
                    _0x1ee380[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x1ee380[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x1ee380,
                    _0x1ee380[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x1ee380,
                    _0x1ee380['__cache__'] = {},
                    _0x55022e['DracoInt8Array'] = _0x1ee380,
                    _0x1ee380[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = _0x1ee380['prototype'][_0x34fcc3(0x493)] = function (_0x3c2fca) {
                         const _0x3aa833 = _0x34fcc3;
                         var _0x4b9522 = this['ptr'];
                         return _0x3c2fca && _0x3aa833(0xb70) == typeof _0x3c2fca && (_0x3c2fca = _0x3c2fca[_0x3aa833(0x1c5)]),
                              _0x29e01c(_0x4b9522, _0x3c2fca);
                    }
                    ,
                    _0x1ee380['prototype']['size'] = _0x1ee380[_0x34fcc3(0x2d4)][_0x34fcc3(0x18e)] = function () {
                         return _0x5deb58(this['ptr']);
                    }
                    ,
                    _0x1ee380['prototype'][_0x34fcc3(0x5d8)] = _0x1ee380[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         _0x2e7ca1(this['ptr']);
                    }
                    ,
                    _0x28ff8c[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x28ff8c[_0x34fcc3(0x2d4)]['constructor'] = _0x28ff8c,
                    _0x28ff8c[_0x34fcc3(0x2d4)]['__class__'] = _0x28ff8c,
                    _0x28ff8c[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x328)] = _0x28ff8c,
                    _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x3ce)] = _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x3ce)] = function (_0x46c840, _0xc5bafe) {
                         const _0x2ba8f5 = _0x34fcc3;
                         var _0x3eee84 = this[_0x2ba8f5(0x1c5)];
                         return _0x17cc16[_0x2ba8f5(0x76d)](),
                              _0x46c840 && _0x2ba8f5(0xb70) == typeof _0x46c840 && (_0x46c840 = _0x46c840[_0x2ba8f5(0x1c5)]),
                              _0xc5bafe = _0xc5bafe && _0x2ba8f5(0xb70) == typeof _0xc5bafe ? _0xc5bafe['ptr'] : _0x5c08f7(_0xc5bafe),
                              !!_0x42c39e(_0x3eee84, _0x46c840, _0xc5bafe);
                    }
                    ,
                    _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x24e)] = _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x24e)] = function (_0x55aaa1, _0x489354) {
                         const _0x2783c4 = _0x34fcc3;
                         var _0x5ea084 = this[_0x2783c4(0x1c5)];
                         return _0x17cc16['prepare'](),
                              _0x55aaa1 && 'object' == typeof _0x55aaa1 && (_0x55aaa1 = _0x55aaa1['ptr']),
                              _0x489354 = _0x489354 && _0x2783c4(0xb70) == typeof _0x489354 ? _0x489354[_0x2783c4(0x1c5)] : _0x5c08f7(_0x489354),
                              _0x36a1ae(_0x5ea084, _0x55aaa1, _0x489354);
                    }
                    ,
                    _0x28ff8c['prototype'][_0x34fcc3(0xca2)] = _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0xca2)] = function (_0x4f61c7, _0xb7a495, _0x404435) {
                         const _0xd4dae0 = _0x34fcc3;
                         var _0x38a47a = this[_0xd4dae0(0x1c5)];
                         _0x17cc16[_0xd4dae0(0x76d)](),
                              _0x4f61c7 && _0xd4dae0(0xb70) == typeof _0x4f61c7 && (_0x4f61c7 = _0x4f61c7[_0xd4dae0(0x1c5)]),
                              _0xb7a495 = _0xb7a495 && _0xd4dae0(0xb70) == typeof _0xb7a495 ? _0xb7a495[_0xd4dae0(0x1c5)] : _0x5c08f7(_0xb7a495),
                              _0x404435 && _0xd4dae0(0xb70) == typeof _0x404435 && (_0x404435 = _0x404435[_0xd4dae0(0x1c5)]),
                              _0x39b013(_0x38a47a, _0x4f61c7, _0xb7a495, _0x404435);
                    }
                    ,
                    _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x183)] = _0x28ff8c['prototype'][_0x34fcc3(0x183)] = function (_0x30d47d, _0x46be68) {
                         const _0x11b757 = _0x34fcc3;
                         var _0x3c7e4b = this[_0x11b757(0x1c5)];
                         return _0x17cc16[_0x11b757(0x76d)](),
                              _0x30d47d && _0x11b757(0xb70) == typeof _0x30d47d && (_0x30d47d = _0x30d47d[_0x11b757(0x1c5)]),
                              _0x46be68 = _0x46be68 && 'object' == typeof _0x46be68 ? _0x46be68[_0x11b757(0x1c5)] : _0x5c08f7(_0x46be68),
                              _0x36df1d(_0x3c7e4b, _0x30d47d, _0x46be68);
                    }
                    ,
                    _0x28ff8c[_0x34fcc3(0x2d4)]['GetStringEntry'] = _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0xb1a)] = function (_0x33b38f, _0x2a2a8e) {
                         const _0x4a00e5 = _0x34fcc3;
                         var _0x5ab070 = this[_0x4a00e5(0x1c5)];
                         return _0x17cc16[_0x4a00e5(0x76d)](),
                              _0x33b38f && _0x4a00e5(0xb70) == typeof _0x33b38f && (_0x33b38f = _0x33b38f[_0x4a00e5(0x1c5)]),
                              _0x2a2a8e = _0x2a2a8e && _0x4a00e5(0xb70) == typeof _0x2a2a8e ? _0x2a2a8e[_0x4a00e5(0x1c5)] : _0x5c08f7(_0x2a2a8e),
                              _0x5b5f5f(_0x3e2ef6(_0x5ab070, _0x33b38f, _0x2a2a8e));
                    }
                    ,
                    _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0xd05)] = _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0xd05)] = function (_0x7dadc9) {
                         const _0x3a380e = _0x34fcc3;
                         var _0x96816f = this[_0x3a380e(0x1c5)];
                         return _0x7dadc9 && _0x3a380e(0xb70) == typeof _0x7dadc9 && (_0x7dadc9 = _0x7dadc9['ptr']),
                              _0x57029f(_0x96816f, _0x7dadc9);
                    }
                    ,
                    _0x28ff8c['prototype'][_0x34fcc3(0x9a7)] = _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x9a7)] = function (_0x1b97a4, _0x3ed385) {
                         const _0x452978 = _0x34fcc3;
                         var _0x1bd80b = this[_0x452978(0x1c5)];
                         return _0x1b97a4 && _0x452978(0xb70) == typeof _0x1b97a4 && (_0x1b97a4 = _0x1b97a4[_0x452978(0x1c5)]),
                              _0x3ed385 && _0x452978(0xb70) == typeof _0x3ed385 && (_0x3ed385 = _0x3ed385[_0x452978(0x1c5)]),
                              _0x5b5f5f(_0x107d58(_0x1bd80b, _0x1b97a4, _0x3ed385));
                    }
                    ,
                    _0x28ff8c[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x28ff8c[_0x34fcc3(0x2d4)]['__destroy__'] = function () {
                         _0x73da55(this['ptr']);
                    }
                    ,
                    _0x22da81[_0x34fcc3(0x2d4)] = Object['create'](_0x15f0b0['prototype']),
                    _0x22da81[_0x34fcc3(0x2d4)]['constructor'] = _0x22da81,
                    _0x22da81[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x22da81,
                    _0x22da81['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0xa3b)] = _0x22da81,
                    _0x22da81[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = _0x22da81['prototype'][_0x34fcc3(0x493)] = function (_0xfce654) {
                         var _0x1e4f7a = this['ptr'];
                         return _0xfce654 && 'object' == typeof _0xfce654 && (_0xfce654 = _0xfce654['ptr']),
                              _0x5efbe7(_0x1e4f7a, _0xfce654);
                    }
                    ,
                    _0x22da81['prototype'][_0x34fcc3(0x18e)] = _0x22da81['prototype'][_0x34fcc3(0x18e)] = function () {
                         return _0x5ba2bc(this['ptr']);
                    }
                    ,
                    _0x22da81[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x22da81['prototype'][_0x34fcc3(0x5d8)] = function () {
                         const _0x2610e3 = _0x34fcc3;
                         _0x533969(this[_0x2610e3(0x1c5)]);
                    }
                    ,
                    _0x494479[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x494479[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x494479,
                    _0x494479[_0x34fcc3(0x2d4)]['__class__'] = _0x494479,
                    _0x494479['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0x58a)] = _0x494479,
                    _0x494479[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = _0x494479[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = function (_0xf44dc9) {
                         const _0x32dee8 = _0x34fcc3;
                         var _0x463030 = this['ptr'];
                         return _0xf44dc9 && _0x32dee8(0xb70) == typeof _0xf44dc9 && (_0xf44dc9 = _0xf44dc9[_0x32dee8(0x1c5)]),
                              _0x25c952(_0x463030, _0xf44dc9);
                    }
                    ,
                    _0x494479[_0x34fcc3(0x2d4)][_0x34fcc3(0x18e)] = _0x494479['prototype'][_0x34fcc3(0x18e)] = function () {
                         const _0x4b90d5 = _0x34fcc3;
                         return _0x477aba(this[_0x4b90d5(0x1c5)]);
                    }
                    ,
                    _0x494479[_0x34fcc3(0x2d4)]['__destroy__'] = _0x494479[_0x34fcc3(0x2d4)]['__destroy__'] = function () {
                         const _0x4b917d = _0x34fcc3;
                         _0x3907fb(this[_0x4b917d(0x1c5)]);
                    }
                    ,
                    _0x4cdede[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0['prototype']),
                    _0x4cdede[_0x34fcc3(0x2d4)]['constructor'] = _0x4cdede,
                    _0x4cdede[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x4cdede,
                    _0x4cdede[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x82a)] = _0x4cdede,
                    _0x4cdede[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x4cdede[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x517501 = _0x34fcc3;
                         _0x360ea7(this[_0x517501(0x1c5)]);
                    }
                    ,
                    _0x406547[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0['prototype']),
                    _0x406547[_0x34fcc3(0x2d4)]['constructor'] = _0x406547,
                    _0x406547[_0x34fcc3(0x2d4)]['__class__'] = _0x406547,
                    _0x406547[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0xce5)] = _0x406547,
                    _0x406547[_0x34fcc3(0x2d4)][_0x34fcc3(0x89d)] = _0x406547[_0x34fcc3(0x2d4)][_0x34fcc3(0x89d)] = function (_0x5b04e0, _0x51b18e) {
                         const _0x32f086 = _0x34fcc3;
                         var _0x31e544 = this[_0x32f086(0x1c5)];
                         if (_0x17cc16['prepare'](),
                              _0x32f086(0xb70) == typeof _0x5b04e0 && _0x32f086(0xb70) == typeof _0x5b04e0) {
                              var _0x160c47 = _0x17cc16[_0x32f086(0xb50)](_0x5b04e0, _0x36fa23);
                              _0x17cc16[_0x32f086(0x69d)](_0x5b04e0, _0x36fa23, _0x160c47),
                                   _0x5b04e0 = _0x160c47;
                         }
                         _0x51b18e && _0x32f086(0xb70) == typeof _0x51b18e && (_0x51b18e = _0x51b18e[_0x32f086(0x1c5)]),
                              _0x29a855(_0x31e544, _0x5b04e0, _0x51b18e);
                    }
                    ,
                    _0x406547['prototype'][_0x34fcc3(0x5d8)] = _0x406547[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x157088 = _0x34fcc3;
                         _0x3e3739(this[_0x157088(0x1c5)]);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x40ff27,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x40ff27,
                    _0x40ff27['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0x671)] = _0x40ff27,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xae4)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xae4)] = function (_0x4503d1) {
                         const _0x3be3fe = _0x34fcc3;
                         var _0x117019 = this[_0x3be3fe(0x1c5)];
                         return _0x4503d1 && _0x3be3fe(0xb70) == typeof _0x4503d1 && (_0x4503d1 = _0x4503d1[_0x3be3fe(0x1c5)]),
                              _0x5d0684(_0x117019, _0x4503d1);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0x2d5)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x2d5)] = function (_0x5952d9, _0x34c8bf) {
                         const _0x45c46d = _0x34fcc3;
                         var _0xf0b7eb = this['ptr'];
                         return _0x5952d9 && _0x45c46d(0xb70) == typeof _0x5952d9 && (_0x5952d9 = _0x5952d9[_0x45c46d(0x1c5)]),
                              _0x34c8bf && _0x45c46d(0xb70) == typeof _0x34c8bf && (_0x34c8bf = _0x34c8bf['ptr']),
                              _0x3c86b2(_0x4b4168(_0xf0b7eb, _0x5952d9, _0x34c8bf), _0x2747dd);
                    }
                    ,
                    _0x40ff27['prototype']['DecodeBufferToMesh'] = _0x40ff27['prototype'][_0x34fcc3(0x227)] = function (_0x3562c0, _0x36b1ce) {
                         const _0x37f7a2 = _0x34fcc3;
                         var _0x2f9b75 = this[_0x37f7a2(0x1c5)];
                         return _0x3562c0 && 'object' == typeof _0x3562c0 && (_0x3562c0 = _0x3562c0[_0x37f7a2(0x1c5)]),
                              _0x36b1ce && _0x37f7a2(0xb70) == typeof _0x36b1ce && (_0x36b1ce = _0x36b1ce['ptr']),
                              _0x3c86b2(_0x3f9783(_0x2f9b75, _0x3562c0, _0x36b1ce), _0x2747dd);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x643)] = _0x40ff27['prototype'][_0x34fcc3(0x643)] = function (_0x317002, _0x59704b) {
                         const _0x28cfd5 = _0x34fcc3;
                         var _0x30aedf = this[_0x28cfd5(0x1c5)];
                         return _0x317002 && _0x28cfd5(0xb70) == typeof _0x317002 && (_0x317002 = _0x317002['ptr']),
                              _0x59704b && _0x28cfd5(0xb70) == typeof _0x59704b && (_0x59704b = _0x59704b[_0x28cfd5(0x1c5)]),
                              _0x5e206d(_0x30aedf, _0x317002, _0x59704b);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x329)] = _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeIdByName'] = function (_0x24c913, _0x2468b5) {
                         const _0x5de1a3 = _0x34fcc3;
                         var _0x47865d = this[_0x5de1a3(0x1c5)];
                         return _0x17cc16[_0x5de1a3(0x76d)](),
                              _0x24c913 && _0x5de1a3(0xb70) == typeof _0x24c913 && (_0x24c913 = _0x24c913[_0x5de1a3(0x1c5)]),
                              _0x2468b5 = _0x2468b5 && 'object' == typeof _0x2468b5 ? _0x2468b5[_0x5de1a3(0x1c5)] : _0x5c08f7(_0x2468b5),
                              _0x49babe(_0x47865d, _0x24c913, _0x2468b5);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0xb53)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xb53)] = function (_0x268b44, _0x47819c, _0x494852) {
                         const _0x319135 = _0x34fcc3;
                         var _0x457996 = this[_0x319135(0x1c5)];
                         return _0x17cc16[_0x319135(0x76d)](),
                              _0x268b44 && _0x319135(0xb70) == typeof _0x268b44 && (_0x268b44 = _0x268b44['ptr']),
                              _0x47819c = _0x47819c && _0x319135(0xb70) == typeof _0x47819c ? _0x47819c['ptr'] : _0x5c08f7(_0x47819c),
                              _0x494852 = _0x494852 && _0x319135(0xb70) == typeof _0x494852 ? _0x494852[_0x319135(0x1c5)] : _0x5c08f7(_0x494852),
                              _0x445e69(_0x457996, _0x268b44, _0x47819c, _0x494852);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xb6b)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xb6b)] = function (_0x5bd237, _0x347cb5) {
                         const _0x3e1a33 = _0x34fcc3;
                         var _0x2a50ef = this[_0x3e1a33(0x1c5)];
                         return _0x5bd237 && _0x3e1a33(0xb70) == typeof _0x5bd237 && (_0x5bd237 = _0x5bd237[_0x3e1a33(0x1c5)]),
                              _0x347cb5 && _0x3e1a33(0xb70) == typeof _0x347cb5 && (_0x347cb5 = _0x347cb5[_0x3e1a33(0x1c5)]),
                              _0x3c86b2(_0x4a1f24(_0x2a50ef, _0x5bd237, _0x347cb5), _0xcdb76);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeByUniqueId'] = _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeByUniqueId'] = function (_0x34a2ff, _0x103b31) {
                         const _0x28ec73 = _0x34fcc3;
                         var _0x4cd176 = this[_0x28ec73(0x1c5)];
                         return _0x34a2ff && _0x28ec73(0xb70) == typeof _0x34a2ff && (_0x34a2ff = _0x34a2ff['ptr']),
                              _0x103b31 && _0x28ec73(0xb70) == typeof _0x103b31 && (_0x103b31 = _0x103b31[_0x28ec73(0x1c5)]),
                              _0x3c86b2(_0x3ebfd1(_0x4cd176, _0x34a2ff, _0x103b31), _0xcdb76);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0xd12)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xd12)] = function (_0x43961f) {
                         const _0x3031e8 = _0x34fcc3;
                         var _0x3a3104 = this['ptr'];
                         return _0x43961f && _0x3031e8(0xb70) == typeof _0x43961f && (_0x43961f = _0x43961f[_0x3031e8(0x1c5)]),
                              _0x3c86b2(_0xf2b60c(_0x3a3104, _0x43961f), _0x251b73);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeMetadata'] = _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeMetadata'] = function (_0x4e6a51, _0x22de77) {
                         const _0x148373 = _0x34fcc3;
                         var _0x5d96d6 = this[_0x148373(0x1c5)];
                         return _0x4e6a51 && _0x148373(0xb70) == typeof _0x4e6a51 && (_0x4e6a51 = _0x4e6a51[_0x148373(0x1c5)]),
                              _0x22de77 && _0x148373(0xb70) == typeof _0x22de77 && (_0x22de77 = _0x22de77[_0x148373(0x1c5)]),
                              _0x3c86b2(_0x43064e(_0x5d96d6, _0x4e6a51, _0x22de77), _0x251b73);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0x9be)] = _0x40ff27['prototype']['GetFaceFromMesh'] = function (_0x186353, _0x29fb95, _0x60e700) {
                         const _0x225b39 = _0x34fcc3;
                         var _0x3eec9c = this[_0x225b39(0x1c5)];
                         return _0x186353 && _0x225b39(0xb70) == typeof _0x186353 && (_0x186353 = _0x186353['ptr']),
                              _0x29fb95 && _0x225b39(0xb70) == typeof _0x29fb95 && (_0x29fb95 = _0x29fb95['ptr']),
                              _0x60e700 && _0x225b39(0xb70) == typeof _0x60e700 && (_0x60e700 = _0x60e700['ptr']),
                              !!_0x3a526f(_0x3eec9c, _0x186353, _0x29fb95, _0x60e700);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x814)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x814)] = function (_0x1081f1, _0x46fea7) {
                         const _0x5810b8 = _0x34fcc3;
                         var _0x47533c = this[_0x5810b8(0x1c5)];
                         return _0x1081f1 && _0x5810b8(0xb70) == typeof _0x1081f1 && (_0x1081f1 = _0x1081f1[_0x5810b8(0x1c5)]),
                              _0x46fea7 && _0x5810b8(0xb70) == typeof _0x46fea7 && (_0x46fea7 = _0x46fea7['ptr']),
                              _0x870888(_0x47533c, _0x1081f1, _0x46fea7);
                    }
                    ,
                    _0x40ff27['prototype']['GetTrianglesUInt16Array'] = _0x40ff27['prototype']['GetTrianglesUInt16Array'] = function (_0x1ef7b2, _0x295775, _0x4e012e) {
                         const _0x2f3358 = _0x34fcc3;
                         var _0x591713 = this[_0x2f3358(0x1c5)];
                         return _0x1ef7b2 && _0x2f3358(0xb70) == typeof _0x1ef7b2 && (_0x1ef7b2 = _0x1ef7b2[_0x2f3358(0x1c5)]),
                              _0x295775 && _0x2f3358(0xb70) == typeof _0x295775 && (_0x295775 = _0x295775[_0x2f3358(0x1c5)]),
                              _0x4e012e && _0x2f3358(0xb70) == typeof _0x4e012e && (_0x4e012e = _0x4e012e['ptr']),
                              !!_0x2933a8(_0x591713, _0x1ef7b2, _0x295775, _0x4e012e);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xaea)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xaea)] = function (_0x204cb0, _0x631e0a, _0x4dc728) {
                         const _0x355df9 = _0x34fcc3;
                         var _0x118923 = this[_0x355df9(0x1c5)];
                         return _0x204cb0 && 'object' == typeof _0x204cb0 && (_0x204cb0 = _0x204cb0[_0x355df9(0x1c5)]),
                              _0x631e0a && 'object' == typeof _0x631e0a && (_0x631e0a = _0x631e0a[_0x355df9(0x1c5)]),
                              _0x4dc728 && _0x355df9(0xb70) == typeof _0x4dc728 && (_0x4dc728 = _0x4dc728[_0x355df9(0x1c5)]),
                              !!_0x23daf8(_0x118923, _0x204cb0, _0x631e0a, _0x4dc728);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x394)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x394)] = function (_0x350934, _0x56b51d, _0x2eeb74) {
                         const _0x3ea5ac = _0x34fcc3;
                         var _0x39792a = this['ptr'];
                         return _0x350934 && _0x3ea5ac(0xb70) == typeof _0x350934 && (_0x350934 = _0x350934[_0x3ea5ac(0x1c5)]),
                              _0x56b51d && 'object' == typeof _0x56b51d && (_0x56b51d = _0x56b51d[_0x3ea5ac(0x1c5)]),
                              _0x2eeb74 && _0x3ea5ac(0xb70) == typeof _0x2eeb74 && (_0x2eeb74 = _0x2eeb74[_0x3ea5ac(0x1c5)]),
                              !!_0x2d7b8d(_0x39792a, _0x350934, _0x56b51d, _0x2eeb74);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0xab5)] = _0x40ff27['prototype'][_0x34fcc3(0xab5)] = function (_0x44a87c, _0x363ad5, _0x1d2ab7) {
                         const _0x47a6e2 = _0x34fcc3;
                         var _0x592646 = this[_0x47a6e2(0x1c5)];
                         return _0x44a87c && _0x47a6e2(0xb70) == typeof _0x44a87c && (_0x44a87c = _0x44a87c[_0x47a6e2(0x1c5)]),
                              _0x363ad5 && 'object' == typeof _0x363ad5 && (_0x363ad5 = _0x363ad5['ptr']),
                              _0x1d2ab7 && _0x47a6e2(0xb70) == typeof _0x1d2ab7 && (_0x1d2ab7 = _0x1d2ab7['ptr']),
                              !!_0x4fd9e8(_0x592646, _0x44a87c, _0x363ad5, _0x1d2ab7);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x47b)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x47b)] = function (_0x10cc3e, _0x28b226, _0x543e41) {
                         const _0x1bd12d = _0x34fcc3;
                         var _0x1edbf2 = this[_0x1bd12d(0x1c5)];
                         return _0x10cc3e && _0x1bd12d(0xb70) == typeof _0x10cc3e && (_0x10cc3e = _0x10cc3e[_0x1bd12d(0x1c5)]),
                              _0x28b226 && _0x1bd12d(0xb70) == typeof _0x28b226 && (_0x28b226 = _0x28b226[_0x1bd12d(0x1c5)]),
                              _0x543e41 && _0x1bd12d(0xb70) == typeof _0x543e41 && (_0x543e41 = _0x543e41['ptr']),
                              !!_0x4d5553(_0x1edbf2, _0x10cc3e, _0x28b226, _0x543e41);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0x4c3)] = _0x40ff27['prototype']['GetAttributeInt8ForAllPoints'] = function (_0x4afaab, _0xf51df0, _0x46c425) {
                         const _0x37cb9a = _0x34fcc3;
                         var _0x1f28e7 = this['ptr'];
                         return _0x4afaab && _0x37cb9a(0xb70) == typeof _0x4afaab && (_0x4afaab = _0x4afaab['ptr']),
                              _0xf51df0 && 'object' == typeof _0xf51df0 && (_0xf51df0 = _0xf51df0['ptr']),
                              _0x46c425 && _0x37cb9a(0xb70) == typeof _0x46c425 && (_0x46c425 = _0x46c425[_0x37cb9a(0x1c5)]),
                              !!_0x407013(_0x1f28e7, _0x4afaab, _0xf51df0, _0x46c425);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeUInt8ForAllPoints'] = _0x40ff27['prototype'][_0x34fcc3(0x521)] = function (_0x539e42, _0x2867b7, _0x476c3c) {
                         const _0x205e6c = _0x34fcc3;
                         var _0x26bcbd = this[_0x205e6c(0x1c5)];
                         return _0x539e42 && _0x205e6c(0xb70) == typeof _0x539e42 && (_0x539e42 = _0x539e42[_0x205e6c(0x1c5)]),
                              _0x2867b7 && 'object' == typeof _0x2867b7 && (_0x2867b7 = _0x2867b7['ptr']),
                              _0x476c3c && 'object' == typeof _0x476c3c && (_0x476c3c = _0x476c3c[_0x205e6c(0x1c5)]),
                              !!_0x4009e4(_0x26bcbd, _0x539e42, _0x2867b7, _0x476c3c);
                    }
                    ,
                    _0x40ff27['prototype']['GetAttributeInt16ForAllPoints'] = _0x40ff27['prototype']['GetAttributeInt16ForAllPoints'] = function (_0x4b44d8, _0x29b5ad, _0x11d772) {
                         const _0x358821 = _0x34fcc3;
                         var _0x4f9771 = this['ptr'];
                         return _0x4b44d8 && _0x358821(0xb70) == typeof _0x4b44d8 && (_0x4b44d8 = _0x4b44d8[_0x358821(0x1c5)]),
                              _0x29b5ad && _0x358821(0xb70) == typeof _0x29b5ad && (_0x29b5ad = _0x29b5ad[_0x358821(0x1c5)]),
                              _0x11d772 && 'object' == typeof _0x11d772 && (_0x11d772 = _0x11d772[_0x358821(0x1c5)]),
                              !!_0x19d732(_0x4f9771, _0x4b44d8, _0x29b5ad, _0x11d772);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xd39)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xd39)] = function (_0x3b73c9, _0x33a956, _0x486549) {
                         const _0x156446 = _0x34fcc3;
                         var _0x19b0f0 = this[_0x156446(0x1c5)];
                         return _0x3b73c9 && _0x156446(0xb70) == typeof _0x3b73c9 && (_0x3b73c9 = _0x3b73c9[_0x156446(0x1c5)]),
                              _0x33a956 && _0x156446(0xb70) == typeof _0x33a956 && (_0x33a956 = _0x33a956['ptr']),
                              _0x486549 && _0x156446(0xb70) == typeof _0x486549 && (_0x486549 = _0x486549[_0x156446(0x1c5)]),
                              !!_0x337a0f(_0x19b0f0, _0x3b73c9, _0x33a956, _0x486549);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x897)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x897)] = function (_0x43f333, _0x3ffa8d, _0x4d91eb) {
                         const _0x377c8c = _0x34fcc3;
                         var _0x485409 = this[_0x377c8c(0x1c5)];
                         return _0x43f333 && _0x377c8c(0xb70) == typeof _0x43f333 && (_0x43f333 = _0x43f333['ptr']),
                              _0x3ffa8d && _0x377c8c(0xb70) == typeof _0x3ffa8d && (_0x3ffa8d = _0x3ffa8d[_0x377c8c(0x1c5)]),
                              _0x4d91eb && 'object' == typeof _0x4d91eb && (_0x4d91eb = _0x4d91eb['ptr']),
                              !!_0x585a8e(_0x485409, _0x43f333, _0x3ffa8d, _0x4d91eb);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)]['GetAttributeUInt32ForAllPoints'] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x7fa)] = function (_0x1833d4, _0x3284d8, _0x10ca4c) {
                         const _0x5c7b0b = _0x34fcc3;
                         var _0x5189d1 = this[_0x5c7b0b(0x1c5)];
                         return _0x1833d4 && 'object' == typeof _0x1833d4 && (_0x1833d4 = _0x1833d4[_0x5c7b0b(0x1c5)]),
                              _0x3284d8 && _0x5c7b0b(0xb70) == typeof _0x3284d8 && (_0x3284d8 = _0x3284d8[_0x5c7b0b(0x1c5)]),
                              _0x10ca4c && 'object' == typeof _0x10ca4c && (_0x10ca4c = _0x10ca4c['ptr']),
                              !!_0x4b38d6(_0x5189d1, _0x1833d4, _0x3284d8, _0x10ca4c);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x185)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x185)] = function (_0x4c5398, _0x1f039b, _0x44de32, _0xc51263, _0x223549) {
                         const _0x24e434 = _0x34fcc3;
                         var _0xe2677c = this[_0x24e434(0x1c5)];
                         return _0x4c5398 && _0x24e434(0xb70) == typeof _0x4c5398 && (_0x4c5398 = _0x4c5398[_0x24e434(0x1c5)]),
                              _0x1f039b && _0x24e434(0xb70) == typeof _0x1f039b && (_0x1f039b = _0x1f039b['ptr']),
                              _0x44de32 && 'object' == typeof _0x44de32 && (_0x44de32 = _0x44de32[_0x24e434(0x1c5)]),
                              _0xc51263 && _0x24e434(0xb70) == typeof _0xc51263 && (_0xc51263 = _0xc51263['ptr']),
                              _0x223549 && _0x24e434(0xb70) == typeof _0x223549 && (_0x223549 = _0x223549[_0x24e434(0x1c5)]),
                              !!_0x56443c(_0xe2677c, _0x4c5398, _0x1f039b, _0x44de32, _0xc51263, _0x223549);
                    }
                    ,
                    _0x40ff27['prototype'][_0x34fcc3(0xda4)] = _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0xda4)] = function (_0x5d4728) {
                         const _0xac6bf2 = _0x34fcc3;
                         var _0x184e96 = this[_0xac6bf2(0x1c5)];
                         _0x5d4728 && _0xac6bf2(0xb70) == typeof _0x5d4728 && (_0x5d4728 = _0x5d4728['ptr']),
                              _0x55958a(_0x184e96, _0x5d4728);
                    }
                    ,
                    _0x40ff27[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x40ff27['prototype']['__destroy__'] = function () {
                         _0x4d5ace(this['ptr']);
                    }
                    ,
                    _0x1df2d8['prototype'] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x1df2d8[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x1df2d8,
                    _0x1df2d8[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x1df2d8,
                    _0x1df2d8['__cache__'] = {},
                    _0x55022e[_0x34fcc3(0x544)] = _0x1df2d8,
                    _0x1df2d8['prototype']['num_faces'] = _0x1df2d8['prototype'][_0x34fcc3(0x389)] = function () {
                         return _0x45e6ff(this['ptr']);
                    }
                    ,
                    _0x1df2d8[_0x34fcc3(0x2d4)][_0x34fcc3(0xce0)] = _0x1df2d8[_0x34fcc3(0x2d4)]['num_attributes'] = function () {
                         return _0x56e23a(this['ptr']);
                    }
                    ,
                    _0x1df2d8[_0x34fcc3(0x2d4)][_0x34fcc3(0x5ba)] = _0x1df2d8[_0x34fcc3(0x2d4)][_0x34fcc3(0x5ba)] = function () {
                         const _0x187a36 = _0x34fcc3;
                         return _0x18bc9b(this[_0x187a36(0x1c5)]);
                    }
                    ,
                    _0x1df2d8[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x1df2d8['prototype'][_0x34fcc3(0x5d8)] = function () {
                         const _0x4275e5 = _0x34fcc3;
                         _0x1a713e(this[_0x4275e5(0x1c5)]);
                    }
                    ,
                    _0x429f2d[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x429f2d['prototype'][_0x34fcc3(0xcc8)] = _0x429f2d,
                    _0x429f2d[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x429f2d,
                    _0x429f2d[_0x34fcc3(0xaf4)] = {},
                    _0x55022e['VoidPtr'] = _0x429f2d,
                    _0x429f2d['prototype'][_0x34fcc3(0x5d8)] = _0x429f2d[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x71a68e = _0x34fcc3;
                         _0x5aa581(this[_0x71a68e(0x1c5)]);
                    }
                    ,
                    _0x361f5e[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x361f5e[_0x34fcc3(0x2d4)]['constructor'] = _0x361f5e,
                    _0x361f5e[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x361f5e,
                    _0x361f5e[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x82b)] = _0x361f5e,
                    _0x361f5e[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = _0x361f5e[_0x34fcc3(0x2d4)][_0x34fcc3(0x493)] = function (_0x47b691) {
                         const _0x1facee = _0x34fcc3;
                         var _0x3ef53d = this[_0x1facee(0x1c5)];
                         return _0x47b691 && _0x1facee(0xb70) == typeof _0x47b691 && (_0x47b691 = _0x47b691[_0x1facee(0x1c5)]),
                              _0x5421e1(_0x3ef53d, _0x47b691);
                    }
                    ,
                    _0x361f5e['prototype'][_0x34fcc3(0x18e)] = _0x361f5e[_0x34fcc3(0x2d4)][_0x34fcc3(0x18e)] = function () {
                         const _0x46fc54 = _0x34fcc3;
                         return _0x406b8b(this[_0x46fc54(0x1c5)]);
                    }
                    ,
                    _0x361f5e[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x361f5e[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = function () {
                         const _0x1d4ef8 = _0x34fcc3;
                         _0x2f1432(this[_0x1d4ef8(0x1c5)]);
                    }
                    ,
                    _0x251b73[_0x34fcc3(0x2d4)] = Object[_0x34fcc3(0x7e5)](_0x15f0b0[_0x34fcc3(0x2d4)]),
                    _0x251b73[_0x34fcc3(0x2d4)][_0x34fcc3(0xcc8)] = _0x251b73,
                    _0x251b73[_0x34fcc3(0x2d4)][_0x34fcc3(0xc81)] = _0x251b73,
                    _0x251b73[_0x34fcc3(0xaf4)] = {},
                    _0x55022e[_0x34fcc3(0x27a)] = _0x251b73,
                    _0x251b73[_0x34fcc3(0x2d4)][_0x34fcc3(0x5d8)] = _0x251b73[_0x34fcc3(0x2d4)]['__destroy__'] = function () {
                         _0x47e3cd(this['ptr']);
                    }
                    ,
                    function () {
                         const _0xee43be = _0x34fcc3;
                         function _0x282021() {
                              const _0xbbebb5 = _0x5e91;
                              _0x55022e['OK'] = _0x1b5854(),
                                   _0x55022e[_0xbbebb5(0xc16)] = _0x4b1965(),
                                   _0x55022e[_0xbbebb5(0x551)] = _0x19cc6b(),
                                   _0x55022e[_0xbbebb5(0x452)] = _0x294947(),
                                   _0x55022e[_0xbbebb5(0xac6)] = _0x2b41fc(),
                                   _0x55022e['UNKNOWN_VERSION'] = _0x483048(),
                                   _0x55022e['DT_INVALID'] = _0x25234e(),
                                   _0x55022e[_0xbbebb5(0x752)] = _0x5c5220(),
                                   _0x55022e[_0xbbebb5(0x8b5)] = _0x35c677(),
                                   _0x55022e[_0xbbebb5(0x53b)] = _0x5972dd(),
                                   _0x55022e[_0xbbebb5(0xd7b)] = _0x3192ed(),
                                   _0x55022e[_0xbbebb5(0x601)] = _0x17bcb7(),
                                   _0x55022e['DT_UINT32'] = _0x428db0(),
                                   _0x55022e[_0xbbebb5(0xd96)] = _0xc9093b(),
                                   _0x55022e[_0xbbebb5(0x32e)] = _0x4fdfff(),
                                   _0x55022e[_0xbbebb5(0x717)] = _0x40861b(),
                                   _0x55022e[_0xbbebb5(0x19a)] = _0x47b814(),
                                   _0x55022e[_0xbbebb5(0x9c2)] = _0x4d0767(),
                                   _0x55022e[_0xbbebb5(0xb2d)] = _0x497165(),
                                   _0x55022e['INVALID_GEOMETRY_TYPE'] = _0x309ed5(),
                                   _0x55022e[_0xbbebb5(0x45c)] = _0x5e66fb(),
                                   _0x55022e['TRIANGULAR_MESH'] = _0x4b5379(),
                                   _0x55022e['ATTRIBUTE_INVALID_TRANSFORM'] = _0x3b7380(),
                                   _0x55022e[_0xbbebb5(0x7d1)] = _0x4cdc83(),
                                   _0x55022e[_0xbbebb5(0xd26)] = _0x502392(),
                                   _0x55022e['ATTRIBUTE_OCTAHEDRON_TRANSFORM'] = _0x37bbb8(),
                                   _0x55022e['INVALID'] = _0x2b06cd(),
                                   _0x55022e[_0xbbebb5(0x28b)] = _0x49ea7a(),
                                   _0x55022e[_0xbbebb5(0xaa5)] = _0x59ced4(),
                                   _0x55022e[_0xbbebb5(0x7fc)] = _0x5bfd0b(),
                                   _0x55022e[_0xbbebb5(0x3a8)] = _0x4bdade(),
                                   _0x55022e['GENERIC'] = _0x5d8893();
                         }
                         _0x48ebb3 ? _0x282021() : _0x1a7b09[_0xee43be(0x4ec)](_0x282021);
                    }(),
                    _0x34fcc3(0x1a2) == typeof _0x55022e[_0x34fcc3(0xa78)] && _0x55022e['onModuleParsed'](),
                    _0x143aba;
          }
          _0x11b39f[_0xc3a123(0x46d)] = function (_0x325fa7, _0x3550bd, _0x27a2c4, _0x5b75f0, _0x3807ec) {
               const _0x1f53ed = _0xc3a123;
               for (var _0x1162e2 = new (_0x3cee7b = _0x325fa7)[(_0x1f53ed(0x671))](), _0x3ba922 = ['POSITION', _0x1f53ed(0xaa5), _0x1f53ed(0x7fc)], _0x4b8a84 = 0x0; _0x4b8a84 < _0x3ba922['length']; ++_0x4b8a84)
                    _0x1162e2['SkipAttributeTransform'](_0x3cee7b[_0x3ba922[_0x4b8a84]]);
               var _0x53b45a = new _0x3cee7b[(_0x1f53ed(0xce5))]();
               if (_0x53b45a['Init'](_0x3550bd, _0x27a2c4),
                    _0x1162e2[_0x1f53ed(0xae4)](_0x53b45a) !== _0x3cee7b[_0x1f53ed(0x45c)])
                    throw new _0x302db4('Draco\x20geometry\x20type\x20must\x20be\x20POINT_CLOUD.');
               var _0x4f0b8c = new _0x3cee7b[(_0x1f53ed(0x429))]()
                    , _0x414dad = _0x1162e2[_0x1f53ed(0x2d5)](_0x53b45a, _0x4f0b8c);
               if (!_0x414dad['ok']() || 0x0 === _0x4f0b8c[_0x1f53ed(0x1c5)])
                    throw new _0x302db4(_0x1f53ed(0xc28) + _0x414dad[_0x1f53ed(0xbed)]());
               _0x3cee7b[_0x1f53ed(0x9bb)](_0x53b45a),
                    _0x46f2a7(_0x4f0b8c, _0x1162e2, _0x5b75f0, _0x3807ec),
                    _0x3cee7b[_0x1f53ed(0x9bb)](_0x4f0b8c),
                    _0x3cee7b['destroy'](_0x1162e2);
          }
               ,
               _0x11b39f['dracoDecodeMesh'] = function (_0x524217, _0x2d3ed8, _0x2f54cc, _0x1a172a, _0x44d9fe, _0x169a07, _0x3da2ab, _0x4d71a8, _0x3791db, _0xd4a83f) {
                    const _0x1998b1 = _0xc3a123;
                    for (var _0x319d57 = new (_0x3cee7b = _0x524217)[(_0x1998b1(0x671))](), _0x1f2933 = [_0x1998b1(0x28b), _0x1998b1(0xaa5), _0x1998b1(0x7fc), _0x1998b1(0x3a8)], _0x52eb85 = 0x0; _0x52eb85 < _0x1f2933[_0x1998b1(0x72b)]; ++_0x52eb85)
                         _0x319d57[_0x1998b1(0xda4)](_0x3cee7b[_0x1f2933[_0x52eb85]]);
                    var _0x328f32 = new _0x3cee7b[(_0x1998b1(0xce5))]();
                    if (_0x328f32['Init'](_0x2d3ed8, _0x2f54cc),
                         _0x319d57[_0x1998b1(0xae4)](_0x328f32) !== _0x3cee7b[_0x1998b1(0x76a)])
                         throw new _0x302db4(_0x1998b1(0xc4c));
                    var _0x3a66ca = new _0x3cee7b[(_0x1998b1(0x544))]();
                    if (!_0x319d57[_0x1998b1(0x227)](_0x328f32, _0x3a66ca)['ok']() || 0x0 === _0x3a66ca['ptr'])
                         return !0x1;
                    _0x3cee7b[_0x1998b1(0x9bb)](_0x328f32),
                         _0x46f2a7(_0x3a66ca, _0x319d57, _0x1a172a, _0x169a07, _0x3da2ab, _0x4d71a8, _0x3791db, _0xd4a83f);
                    var _0x4be259 = _0x467e8c(_0x3a66ca, _0x319d57);
                    _0x44d9fe[_0x1998b1(0xa9c)] = _0x4be259[_0x1998b1(0xcfb)],
                         _0x44d9fe['indicesCount'] = _0x4be259[_0x1998b1(0x820)],
                         _0x44d9fe[_0x1998b1(0x9b7)] = _0x4be259[_0x1998b1(0xd6d)],
                         _0x44d9fe[_0x1998b1(0xba3)] = _0x4002df[_0x1998b1(0x415)],
                         _0x3cee7b[_0x1998b1(0x9bb)](_0x3a66ca),
                         _0x3cee7b[_0x1998b1(0x9bb)](_0x319d57);
               }
               ;
          const _0x2faa58 = {
               'AttributeType_Invalid': 0x0,
               'AttributeType_Position': 0x1,
               'AttributeType_PositionW': 0x2,
               'AttributeType_Normal': 0x4,
               'AttributeType_Tangent': 0x8,
               'AttributeType_FirstTexcoord': 0x10,
               'AttributeType_SecondTexcoord': 0x20,
               'AttributeType_Color': 0x40,
               'AttributeType_SecondColor': 0x80,
               'AttributeType_Custom0': 0x200,
               'AttributeType_Custom1': 0x400
          };
          var _0x130512 = Object[_0xc3a123(0xb56)](_0x2faa58)
               , _0x23b3ad = function () {
                    const _0x2fc686 = _0xc3a123;
                    var _0xb45953 = new Uint8Array([0x0, 0x61, 0x73, 0x6d, 0x1, 0x0, 0x0, 0x0, 0x1, 0x4, 0x1, 0x60, 0x0, 0x0, 0x3, 0x3, 0x2, 0x0, 0x0, 0x5, 0x3, 0x1, 0x0, 0x1, 0xc, 0x1, 0x0, 0xa, 0x16, 0x2, 0xc, 0x0, 0x41, 0x0, 0x41, 0x0, 0x41, 0x0, 0xfc, 0xa, 0x0, 0x0, 0xb, 0x7, 0x0, 0x41, 0x0, 0xfd, 0xf, 0x1a, 0xb])
                         , _0x3494cb = new Uint8Array([0x20, 0x0, 0x41, 0x2, 0x1, 0x6a, 0x22, 0x21, 0x3, 0x80, 0xb, 0x4, 0xd, 0x40, 0x6, 0xfd, 0xa, 0x7, 0xf, 0x74, 0x7f, 0x5, 0x8, 0xc, 0x28, 0x10, 0x13, 0x36, 0x14, 0x9, 0x1b, 0xff, 0x71, 0x11, 0x2a, 0x43, 0x18, 0x17, 0x92, 0x94, 0x12, 0xe, 0x16, 0x2d, 0x46, 0x45, 0x38, 0x72, 0x65, 0x15, 0x19, 0x3f, 0x4b, 0x88, 0x6c, 0x1c, 0x76, 0x1d, 0x49, 0x73]);
                    if (_0x2fc686(0xb70) != typeof WebAssembly)
                         return {
                              'supported': !0x1
                         };
                    var _0x3f8443, _0xe8595 = _0x2fc686(0x6b4);
                    WebAssembly[_0x2fc686(0x4c9)](_0xb45953) && (_0xe8595 = _0x2fc686(0x6d4));
                    var _0x5aed73 = WebAssembly[_0x2fc686(0x476)](function (_0x5456a0) {
                         const _0x253f05 = _0x2fc686;
                         for (var _0x5e526e = new Uint8Array(_0x5456a0['length']), _0x333b38 = 0x0; _0x333b38 < _0x5456a0[_0x253f05(0x72b)]; ++_0x333b38) {
                              var _0x655ef5 = _0x5456a0[_0x253f05(0x1ad)](_0x333b38);
                              _0x5e526e[_0x333b38] = _0x655ef5 > 0x60 ? _0x655ef5 - 0x47 : _0x655ef5 > 0x40 ? _0x655ef5 - 0x41 : _0x655ef5 > 0x2f ? _0x655ef5 + 0x4 : _0x655ef5 > 0x2e ? 0x3f : 0x3e;
                         }
                         var _0x1e335b = 0x0;
                         for (_0x333b38 = 0x0; _0x333b38 < _0x5456a0[_0x253f05(0x72b)]; ++_0x333b38)
                              _0x5e526e[_0x1e335b++] = _0x5e526e[_0x333b38] < 0x3c ? _0x3494cb[_0x5e526e[_0x333b38]] : 0x40 * (_0x5e526e[_0x333b38] - 0x3c) + _0x5e526e[++_0x333b38];
                         return _0x5e526e[_0x253f05(0x25d)][_0x253f05(0x21c)](0x0, _0x1e335b);
                    }(_0xe8595), {})[_0x2fc686(0x7db)](function (_0x43bb1c) {
                         const _0x30de42 = _0x2fc686;
                         (_0x3f8443 = _0x43bb1c[_0x30de42(0x861)])['exports'][_0x30de42(0x57b)]();
                    });
                    function _0x4d9735(_0x3731ea, _0x3bcaeb, _0x365da2, _0x464b65, _0x270979, _0x58c3c1) {
                         const _0x4cd706 = _0x2fc686;
                         var _0x26ac31 = _0x3f8443[_0x4cd706(0x705)][_0x4cd706(0x43a)]
                              , _0x5e17bb = _0x365da2 + 0x3 & -0x4
                              , _0x177024 = _0x26ac31(_0x5e17bb * _0x464b65)
                              , _0x120cca = _0x26ac31(_0x270979[_0x4cd706(0x72b)])
                              , _0xac45b5 = new Uint8Array(_0x3f8443[_0x4cd706(0x705)][_0x4cd706(0x99a)][_0x4cd706(0x25d)]);
                         _0xac45b5[_0x4cd706(0x320)](_0x270979, _0x120cca);
                         var _0x4051bb = _0x3731ea(_0x177024, _0x365da2, _0x464b65, _0x120cca, _0x270979[_0x4cd706(0x72b)]);
                         if (0x0 == _0x4051bb && _0x58c3c1 && _0x58c3c1(_0x177024, _0x5e17bb, _0x464b65),
                              _0x3bcaeb[_0x4cd706(0x320)](_0xac45b5['subarray'](_0x177024, _0x177024 + _0x365da2 * _0x464b65)),
                              _0x26ac31(_0x177024 - _0x26ac31(0x0)),
                              0x0 != _0x4051bb)
                              throw new Error(_0x4cd706(0x835) + _0x4051bb);
                    }
                    var _0x38852d = {
                         0x0: '',
                         0x1: _0x2fc686(0x2fe),
                         0x2: _0x2fc686(0xd76),
                         0x3: 'meshopt_decodeFilterExp',
                         'NONE': '',
                         'OCTAHEDRAL': 'meshopt_decodeFilterOct',
                         'QUATERNION': _0x2fc686(0xd76),
                         'EXPONENTIAL': 'meshopt_decodeFilterExp'
                    }
                         , _0x4e1832 = {
                              0x0: _0x2fc686(0x798),
                              0x1: _0x2fc686(0x286),
                              0x2: _0x2fc686(0x58f),
                              'ATTRIBUTES': _0x2fc686(0x798),
                              'TRIANGLES': _0x2fc686(0x286),
                              'INDICES': _0x2fc686(0x58f)
                         };
                    return {
                         'ready': _0x5aed73,
                         'supported': !0x0,
                         'decodeVertexBuffer': function (_0x5021f0, _0x2e00ed, _0x412ce4, _0x2a22d5, _0x581957) {
                              const _0x4a899d = _0x2fc686;
                              _0x4d9735(_0x3f8443[_0x4a899d(0x705)][_0x4a899d(0x798)], _0x5021f0, _0x2e00ed, _0x412ce4, _0x2a22d5, _0x3f8443[_0x4a899d(0x705)][_0x38852d[_0x581957]]);
                         },
                         'decodeIndexBuffer': function (_0x53c2ec, _0x2c0010, _0x2a192d, _0x3ec4e4) {
                              const _0x285925 = _0x2fc686;
                              _0x4d9735(_0x3f8443[_0x285925(0x705)]['meshopt_decodeIndexBuffer'], _0x53c2ec, _0x2c0010, _0x2a192d, _0x3ec4e4);
                         },
                         'decodeIndexSequence': function (_0x14f603, _0x2437d9, _0x334c01, _0xef1c92) {
                              const _0x188340 = _0x2fc686;
                              _0x4d9735(_0x3f8443[_0x188340(0x705)]['meshopt_decodeIndexSequence'], _0x14f603, _0x2437d9, _0x334c01, _0xef1c92);
                         },
                         'decodeGltfBuffer': function (_0x458c6e, _0x522b14, _0x101adf, _0x1c2f7b, _0x219081, _0x1ef8dc) {
                              const _0x2bdcab = _0x2fc686;
                              _0x4d9735(_0x3f8443[_0x2bdcab(0x705)][_0x4e1832[_0x219081]], _0x458c6e, _0x522b14, _0x101adf, _0x1c2f7b, _0x3f8443[_0x2bdcab(0x705)][_0x38852d[_0x1ef8dc]]);
                         }
                    };
               }();
          function _0x29fa64(_0x548544, _0x7e2632, _0xd55f10, _0x331696, _0x36c11d, _0x2c118e, _0x1f9d27, _0x781b48, _0x202b75, _0x4f6d7a) {
               const _0x6f6d67 = _0xc3a123;
               var _0xe860c4, _0x1c049d = 0x0, _0x13c723 = _0x36c11d[_0x6f6d67(0x761)], _0x1c1967 = _0x36c11d['attrLocation'];
               switch (_0x7e2632) {
                    case _0x130512['AttributeType_Normal']:
                    case _0x130512[_0x6f6d67(0x879)]:
                    case _0x130512[_0x6f6d67(0xd41)]:
                         _0x1c049d = 0x2 * Uint16Array[_0x6f6d67(0x385)],
                              0x0 != (0x10 & _0x2c118e) || _0x7e2632 !== _0x130512[_0x6f6d67(0x879)] && _0x7e2632 !== _0x130512[_0x6f6d67(0xd41)] || (_0x1c049d = 0x2 * Float32Array['BYTES_PER_ELEMENT']),
                              _0xe860c4 = Cesium[_0x6f6d67(0x5fa)]['createTypedArray'](Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0xb8c)], _0x548544 * _0x1c049d);
                         break;
                    case _0x130512[_0x6f6d67(0x7c5)]:
                    case _0x130512[_0x6f6d67(0x720)]:
                         _0x1c049d = 0x4 * Uint8Array[_0x6f6d67(0x385)],
                              _0xe860c4 = Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0x8bc)](Cesium['ComponentDatatype'][_0x6f6d67(0xb8c)], 0x4 * _0x548544);
                         break;
                    case _0x130512[_0x6f6d67(0x6e3)]:
                    case _0x130512[_0x6f6d67(0x434)]:
                         _0x1c049d = Float32Array['BYTES_PER_ELEMENT'] * _0xd55f10,
                              _0xe860c4 = Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0x8bc)](Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0xb8c)], _0x548544 * _0xd55f10 * 0x4);
                         break;
                    default:
                         _0x1c049d = 0x4 * Uint16Array[_0x6f6d67(0x385)],
                              _0xe860c4 = Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0x8bc)](Cesium['ComponentDatatype'][_0x6f6d67(0xb8c)], _0x548544 * _0x1c049d);
               }
               switch (_0x23b3ad[_0x6f6d67(0x206)](_0xe860c4, _0x548544, _0x1c049d, _0x331696, _0x331696[_0x6f6d67(0x72b)]),
               _0x7e2632) {
                    case _0x130512['AttributeType_Position']:
                         var _0x337141 = new Uint16Array(_0xe860c4['buffer'], 0x0, _0xe860c4['length'] / 0x2)
                              , _0x3e4386 = Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0x982)];
                         if (Cesium['defined'](_0x1f9d27)) {
                              var _0x1ff612 = Cartesian3[_0x6f6d67(0x4a3)](_0x337141);
                              for (let _0x2772c3 = 0x0, _0x585574 = _0x1ff612[_0x6f6d67(0x72b)]; _0x2772c3 < _0x585574; _0x2772c3++) {
                                   let _0x4efaea = _0x1ff612[_0x2772c3];
                                   Cartesian3[_0x6f6d67(0xc03)](_0x4efaea, _0x36c11d[_0x6f6d67(0x474)], _0x4efaea),
                                        Cartesian3['add'](_0x4efaea, _0x36c11d[_0x6f6d67(0x472)], _0x4efaea);
                              }
                              var _0xff25a4 = Matrix4[_0x6f6d67(0x59d)](_0x1f9d27['sphereMatrix'], _0x1f9d27['geoMatrix'], matModelScratch)
                                   , _0xb1ca7b = Matrix4['multiply'](_0x1f9d27[_0x6f6d67(0x5f0)], _0x1f9d27[_0x6f6d67(0x8e8)], invMatModelScratch);
                              Matrix4['inverse'](_0xb1ca7b, _0xb1ca7b);
                              var _0x2e6293 = new Ellipsoid(0x615299, 0x615299, 0x615299);
                              for (let _0x28e532 = 0x0, _0x4380ba = _0x1ff612[_0x6f6d67(0x72b)]; _0x28e532 < _0x4380ba; _0x28e532++) {
                                   let _0x919057 = _0x1ff612[_0x28e532];
                                   Matrix4['multiplyByPoint'](_0xff25a4, _0x919057, scratchCartesian3);
                                   let _0xf2e034 = _0x2e6293[_0x6f6d67(0x807)](scratchCartesian3, geoPosScratch)
                                        , _0x375ab4 = radiansToCartesian3ForWGS84(_0xf2e034['longitude'], _0xf2e034[_0x6f6d67(0x400)], _0xf2e034[_0x6f6d67(0x48e)], scratchCartesian3);
                                   Matrix4[_0x6f6d67(0xbde)](_0xb1ca7b, _0x375ab4, _0x919057);
                              }
                              var _0x33fa08 = new Array(0x3 * _0x1ff612[_0x6f6d67(0x72b)]);
                              Cartesian3['packArray'](_0x1ff612, _0x33fa08),
                                   _0x337141 = new Float32Array(_0x33fa08),
                                   _0x3e4386 = Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0xa80)];
                         }
                         if (void 0x0 !== (_0x1b0014 = _0x1c1967['aPosition']) ? (combineTypedArray(_0x13c723[_0x1b0014], _0x337141, Uint16Array),
                              _0x36c11d[_0x6f6d67(0xafe)] = _0x36c11d[_0x6f6d67(0x8d0)],
                              _0x36c11d[_0x6f6d67(0x8d0)] += _0x548544) : (_0x1c1967[_0x6f6d67(0x5e2)] = _0x13c723[_0x6f6d67(0x72b)],
                                   _0x13c723[_0x6f6d67(0x63e)]({
                                        'index': _0x1c1967[_0x6f6d67(0x5e2)],
                                        'typedArray': _0x337141,
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': _0x3e4386,
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': 0x0,
                                        'normalize': !0x1
                                   }),
                                   _0x36c11d[_0x6f6d67(0x8d0)] = _0x548544),
                              !Cesium[_0x6f6d67(0x336)](_0x1f9d27) && _0x781b48) {
                              var _0x1d0d04 = new Cesium[(_0x6f6d67(0x6ca))]()
                                   , _0x5a8d98 = new Cesium[(_0x6f6d67(0x6ca))]()
                                   , _0x1777e8 = new Float32Array(0x2 * _0x548544)
                                   , _0x40d67e = new Float64Array(0x2 * _0x548544)
                                   , _0x13023e = new Cesium[(_0x6f6d67(0x25b))]()
                                   , _0x668e89 = new Cesium['Cartesian3']()
                                   , _0x514c7d = new Cesium['Cartographic']();
                              _0x2e6293 = ellipsoid ? new Cesium['Ellipsoid'](0x615299, 0x615299, 6356752.314245179) : new Cesium[(_0x6f6d67(0x4b9))](0x615299, 0x615299, 0x615299);
                              for (var _0x1cfcdc = 0x0; _0x1cfcdc < _0x548544; _0x1cfcdc++)
                                   Matrix4['multiplyByPoint'](_0x4f6d7a, Cartesian3[_0x6f6d67(0xc5a)](_0x337141[0x4 * _0x1cfcdc] * _0x36c11d['vertCompressConstant'] + _0x36c11d['minVerticesValue']['x'], _0x337141[0x4 * _0x1cfcdc + 0x1] * _0x36c11d[_0x6f6d67(0x474)] + _0x36c11d[_0x6f6d67(0x472)]['y'], _0x337141[0x4 * _0x1cfcdc + 0x2] * _0x36c11d[_0x6f6d67(0x474)] + _0x36c11d[_0x6f6d67(0x472)]['z'], _0x13023e), _0x668e89),
                                        _0x514c7d = _0x2e6293[_0x6f6d67(0x807)](_0x668e89, geoPosScratch),
                                        _0x40d67e[0x2 * _0x1cfcdc] = _0x514c7d['longitude'],
                                        _0x40d67e[0x2 * _0x1cfcdc + 0x1] = _0x514c7d[_0x6f6d67(0x400)],
                                        0x0 === _0x1cfcdc ? (_0x1d0d04['longitude'] = _0x514c7d[_0x6f6d67(0xb4c)],
                                             _0x1d0d04[_0x6f6d67(0x400)] = _0x514c7d[_0x6f6d67(0x400)],
                                             _0x5a8d98[_0x6f6d67(0xb4c)] = _0x514c7d[_0x6f6d67(0xb4c)],
                                             _0x5a8d98['latitude'] = _0x514c7d[_0x6f6d67(0x400)]) : (_0x1d0d04['longitude'] = Math[_0x6f6d67(0x590)](_0x514c7d[_0x6f6d67(0xb4c)], _0x1d0d04['longitude']),
                                                  _0x1d0d04[_0x6f6d67(0x400)] = Math[_0x6f6d67(0x590)](_0x514c7d[_0x6f6d67(0x400)], _0x1d0d04[_0x6f6d67(0x400)]),
                                                  _0x5a8d98[_0x6f6d67(0xb4c)] = Math[_0x6f6d67(0x455)](_0x514c7d[_0x6f6d67(0xb4c)], _0x5a8d98['longitude']),
                                                  _0x5a8d98[_0x6f6d67(0x400)] = Math[_0x6f6d67(0x455)](_0x514c7d[_0x6f6d67(0x400)], _0x5a8d98[_0x6f6d67(0x400)]));
                              for (_0x1cfcdc = 0x0; _0x1cfcdc < _0x548544; _0x1cfcdc++)
                                   _0x1777e8[0x2 * _0x1cfcdc] = _0x40d67e[0x2 * _0x1cfcdc] - _0x5a8d98[_0x6f6d67(0xb4c)],
                                        _0x1777e8[0x2 * _0x1cfcdc + 0x1] = _0x40d67e[0x2 * _0x1cfcdc + 0x1] - _0x5a8d98['latitude'];
                              _0x1c1967[_0x6f6d67(0x310)] = _0x13c723['length'],
                                   _0x13c723['push']({
                                        'index': _0x1c1967[_0x6f6d67(0x310)],
                                        'typedArray': _0x1777e8,
                                        'componentsPerAttribute': 0x2,
                                        'componentDatatype': ComponentDatatype[_0x6f6d67(0xa80)],
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': 0x2 * Float32Array[_0x6f6d67(0x385)],
                                        'normalize': !0x1
                                   }),
                                   _0x202b75[_0x6f6d67(0x590)] = _0x1d0d04,
                                   _0x202b75[_0x6f6d67(0x455)] = _0x5a8d98;
                         }
                         break;
                    case _0x130512[_0x6f6d67(0xce4)]:
                         var _0x1b0014 = _0x1c1967[_0x6f6d67(0x637)]
                              , _0x45a027 = new Int16Array(_0xe860c4['buffer'], 0x0, _0xe860c4[_0x6f6d67(0x72b)] / 0x2);
                         void 0x0 !== _0x1b0014 ? combineTypedArray(_0x13c723[_0x1b0014], _0x45a027, Uint16Array) : (_0x1c1967[_0x6f6d67(0x637)] = _0x13c723[_0x6f6d67(0x72b)],
                              _0x13c723['push']({
                                   'index': _0x1c1967['aNormal'],
                                   'typedArray': _0x45a027,
                                   'componentsPerAttribute': 0x2,
                                   'componentDatatype': Cesium['ComponentDatatype'][_0x6f6d67(0x982)],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': 0x0,
                                   'normalize': !0x1
                              }));
                         break;
                    case _0x130512[_0x6f6d67(0x879)]:
                         var _0xf28e67 = new Uint16Array(_0xe860c4[_0x6f6d67(0x25d)], 0x0, _0xe860c4[_0x6f6d67(0x72b)] / 0x2)
                              , _0x1e1658 = (_0x1b0014 = _0x1c1967[_0x6f6d67(0xc8d)],
                                   _0x3e4386 = Cesium['ComponentDatatype'][_0x6f6d67(0x982)],
                                   Uint16Array);
                         0x0 == (0x10 & _0x2c118e) && (_0x3e4386 = Cesium[_0x6f6d67(0x5fa)]['FLOAT'],
                              _0x1e1658 = Float32Array,
                              _0xf28e67 = new Float32Array(_0xe860c4[_0x6f6d67(0x25d)], 0x0, _0xe860c4[_0x6f6d67(0x72b)] / 0x4)),
                              void 0x0 !== _0x1b0014 ? combineTypedArray(_0x13c723[_0x1b0014], _0xf28e67, _0x1e1658) : (_0x1c1967['aTexCoord0'] = _0x13c723[_0x6f6d67(0x72b)],
                                   _0x13c723[_0x6f6d67(0x63e)]({
                                        'index': _0x1c1967['aTexCoord0'],
                                        'typedArray': _0xf28e67,
                                        'componentsPerAttribute': 0x2,
                                        'componentDatatype': _0x3e4386,
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': 0x0,
                                        'normalize': !0x1
                                   }));
                         break;
                    case _0x130512[_0x6f6d67(0xd41)]:
                         _0xf28e67 = new Uint16Array(_0xe860c4[_0x6f6d67(0x25d)], 0x0, _0xe860c4[_0x6f6d67(0x72b)] / 0x2),
                              _0x1b0014 = _0x1c1967[_0x6f6d67(0x27c)],
                              _0x3e4386 = Cesium['ComponentDatatype']['SHORT'],
                              _0x1e1658 = Uint16Array,
                              (0x0 == (0x10 & _0x2c118e) && (_0x3e4386 = Cesium['ComponentDatatype'][_0x6f6d67(0xa80)],
                                   _0x1e1658 = Float32Array,
                                   _0xf28e67 = new Float32Array(_0xe860c4[_0x6f6d67(0x25d)], 0x0, _0xe860c4['length'] / 0x4)),
                                   void 0x0 !== _0x1b0014 ? combineTypedArray(_0x13c723[_0x1b0014], _0xf28e67, _0x1e1658) : (_0x1c1967[_0x6f6d67(0x27c)] = _0x13c723[_0x6f6d67(0x72b)],
                                        _0x13c723[_0x6f6d67(0x63e)]({
                                             'index': _0x1c1967[_0x6f6d67(0x27c)],
                                             'typedArray': _0xf28e67,
                                             'componentsPerAttribute': 0x2,
                                             'componentDatatype': _0x3e4386,
                                             'offsetInBytes': 0x0,
                                             'strideInBytes': 0x0,
                                             'normalize': !0x1
                                        })));
                         break;
                    case _0x130512[_0x6f6d67(0x7c5)]:
                         void 0x0 !== (_0x1b0014 = _0x1c1967[_0x6f6d67(0x7a0)]) ? combineTypedArray(_0x13c723[_0x1b0014], _0xe860c4, Uint8Array) : (_0x1c1967[_0x6f6d67(0x7a0)] = _0x13c723[_0x6f6d67(0x72b)],
                              _0x13c723['push']({
                                   'index': _0x1c1967[_0x6f6d67(0x7a0)],
                                   'typedArray': _0xe860c4,
                                   'componentsPerAttribute': 0x4,
                                   'componentDatatype': Cesium['ComponentDatatype'][_0x6f6d67(0xb8c)],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': 0x0,
                                   'normalize': !0x0
                              }));
                         break;
                    case _0x130512[_0x6f6d67(0x720)]:
                         void 0x0 !== (_0x1b0014 = _0x1c1967[_0x6f6d67(0xda2)]) ? combineTypedArray(_0x13c723[_0x1b0014], _0xe860c4, Uint8Array) : (_0x1c1967['aSecondColor'] = _0x13c723[_0x6f6d67(0x72b)],
                              _0x13c723[_0x6f6d67(0x63e)]({
                                   'index': _0x1c1967['aSecondColor'],
                                   'typedArray': _0xe860c4,
                                   'componentsPerAttribute': 0x4,
                                   'componentDatatype': Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0x775)],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': 0x0,
                                   'normalize': !0x1
                              }));
                         break;
                    case _0x130512[_0x6f6d67(0x6e3)]:
                         _0xf28e67 = new Float32Array(_0xe860c4[_0x6f6d67(0x25d)], 0x0, _0xe860c4['length'] / 0x4),
                              void 0x0 !== (_0x1b0014 = _0x1c1967['aCustom0'] || _0x1c1967[_0x6f6d67(0x5eb)]) ? combineTypedArray(_0x13c723[_0x1b0014], _0xf28e67, Float32Array) : (_0x1c1967['aCustom0'] = _0x13c723[_0x6f6d67(0x72b)],
                                   _0x13c723['push']({
                                        'index': _0x1c1967[_0x6f6d67(0x987)],
                                        'typedArray': _0xf28e67,
                                        'componentsPerAttribute': _0xd55f10,
                                        'componentDatatype': Cesium[_0x6f6d67(0x5fa)][_0x6f6d67(0xa80)],
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': 0x0,
                                        'normalize': !0x1
                                   }));
                         break;
                    case _0x130512[_0x6f6d67(0x434)]:
                         var _0x49ccd2 = new Float32Array(_0xe860c4[_0x6f6d67(0x25d)], 0x0, _0xe860c4[_0x6f6d67(0x72b)] / 0x4);
                         void 0x0 !== (_0x1b0014 = _0x1c1967[_0x6f6d67(0x887)] || _0x1c1967[_0x6f6d67(0x629)]) ? combineTypedArray(_0x13c723[_0x1b0014], _0x49ccd2, Float32Array) : (_0x1c1967[_0x6f6d67(0x887)] = _0x13c723[_0x6f6d67(0x72b)],
                              _0x13c723[_0x6f6d67(0x63e)]({
                                   'index': _0x1c1967[_0x6f6d67(0x887)],
                                   'typedArray': _0x49ccd2,
                                   'componentsPerAttribute': _0xd55f10,
                                   'componentDatatype': Cesium[_0x6f6d67(0x5fa)]['FLOAT'],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': 0x0,
                                   'normalize': !0x1
                              }));
               }
          }
          function _0x1f50b1() { }
          const _0x226d3d = {
               'SV_Unkown': 0x0,
               'SV_Standard': 0x1,
               'SV_Compressed': 0x2,
               'SV_DracoCompressed': 0x3
          }
               , _0x6dadaa = {
                    'Standard': 0x0,
                    'Draco': 0x1,
                    'MeshOpt': 0x2
               };
          var _0x2da08b = {
               'SVO_HasInstSelInfo': 0x1
          };
          function _0x3edb3c(_0x5b2437, _0x1787ee) {
               const _0x580212 = _0xc3a123;
               let _0x483cfc = new Uint8Array(_0x5b2437, _0x1787ee);
               return _0xce368[_0x580212(0xcb6)](_0x483cfc)[_0x580212(0x25d)];
          }
          function _0x24d131(_0xb6fd6f, _0x4a9bc5, _0x2e374e) {
               const _0x551da7 = _0xc3a123;
               var _0x26cd10 = _0x2e374e
                    , _0x2777d6 = _0xb6fd6f[_0x551da7(0x494)](_0x26cd10, !0x0)
                    , _0x32bb16 = _0x26cd10 += Uint32Array['BYTES_PER_ELEMENT']
                    , _0x43ed95 = new Uint8Array(_0x4a9bc5, _0x26cd10, _0x2777d6);
               return {
                    'dataViewByteOffset': _0x32bb16,
                    'byteOffset': _0x26cd10 += _0x2777d6 * Uint8Array['BYTES_PER_ELEMENT'],
                    'buffer': _0x43ed95
               };
          }
          function _0x360cac(_0x148a48, _0x43f97b, _0x11b279, _0x409927) {
               const _0x75c03 = _0xc3a123;
               var _0x3c10e5 = _0x148a48[_0x75c03(0x494)](_0x409927 + _0x43f97b, !0x0);
               _0x409927 += Uint32Array[_0x75c03(0x385)];
               var _0x364d41 = _0x11b279[_0x75c03(0x4ca)](_0x409927, _0x409927 + _0x3c10e5);
               return {
                    'string': Cesium[_0x75c03(0x236)](_0x364d41),
                    'bytesOffset': _0x409927 += _0x3c10e5
               };
          }
          function _0x42cd4b(_0x5b4960, _0x266b7b, _0x1c0d1d) {
               const _0x5061a6 = _0xc3a123;
               if (Cesium[_0x5061a6(0x6d5)][_0x5061a6(0x336)](_0x5061a6(0xcb1), _0x5b4960),
                    Cesium[_0x5061a6(0x336)](_0x266b7b) && Cesium['Check']['typeOf']['number'](_0x5061a6(0x5ca), _0x266b7b),
                    Cesium['defined'](_0x1c0d1d) && Cesium[_0x5061a6(0x6d5)][_0x5061a6(0x6f5)]['number']('end', _0x1c0d1d),
                    _0x5061a6(0x1a2) == typeof _0x5b4960[_0x5061a6(0x21c)])
                    return _0x5b4960[_0x5061a6(0x21c)](_0x266b7b, _0x1c0d1d);
               for (var _0x3bb780 = Array[_0x5061a6(0x2d4)]['slice'][_0x5061a6(0x3fa)](_0x5b4960, _0x266b7b, _0x1c0d1d), _0x4553fc = Cesium['FeatureDetection']['typedArrayTypes'], _0x2213ed = _0x4553fc[_0x5061a6(0x72b)], _0x543d2c = 0x0; _0x543d2c < _0x2213ed; ++_0x543d2c)
                    if (_0x5b4960 instanceof _0x4553fc[_0x543d2c]) {
                         _0x3bb780 = new _0x4553fc[_0x543d2c](_0x3bb780);
                         break;
                    }
               return _0x3bb780;
          }
          function _0x544b4f(_0x176c22, _0x3fc51b, _0x4f3000, _0x110fec, _0x359cca) {
               const _0x4122a7 = _0xc3a123;
               let _0x44d025 = {}
                    , _0x4cfd39 = []
                    , _0x393151 = new Array(0x10);
               for (let _0x20552a = 0x0; _0x20552a < 0x10; _0x20552a++)
                    _0x393151[_0x20552a] = _0x3fc51b[_0x4122a7(0x994)](_0x4f3000 + _0x110fec, !0x0),
                         _0x4f3000 += Float64Array[_0x4122a7(0x385)];
               let _0x46b311 = _0x176c22;
               _0x44d025[_0x4122a7(0x89c)] = _0x393151,
                    _0x44d025[_0x4122a7(0x5db)] = _0x4cfd39;
               let _0x4d4949 = _0x3fc51b[_0x4122a7(0x494)](_0x4f3000 + _0x110fec, !0x0);
               _0x4f3000 += Uint32Array[_0x4122a7(0x385)];
               for (let _0x1a9e87 = 0x0; _0x1a9e87 < _0x4d4949; _0x1a9e87++) {
                    let _0x52fbf5 = _0x360cac(_0x3fc51b, _0x110fec, _0x46b311, _0x4f3000);
                    _0x4cfd39[_0x4122a7(0x63e)](_0x52fbf5[_0x4122a7(0x379)]),
                         _0x4f3000 = _0x52fbf5[_0x4122a7(0xad6)];
               }
               return _0x359cca[_0x4122a7(0x63e)](_0x44d025),
                    _0x4f3000;
          }
          function _0x222cc4(_0x4fee44, _0x187dae, _0x5eebb3, _0x2ef71b, _0x5f3bea, _0x1f094b) {
               const _0x1053c5 = _0xc3a123;
               let _0x46490c = {};
               _0x46490c['rangeList'] = _0x187dae[_0x1053c5(0x283)](_0x5eebb3 + _0x2ef71b, !0x0),
                    _0x5eebb3 += Float32Array['BYTES_PER_ELEMENT'],
                    _0x46490c['rangeMode'] = _0x187dae[_0x1053c5(0x876)](_0x5eebb3 + _0x2ef71b, !0x0),
                    _0x5eebb3 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0xc0d2fa = {};
               _0xc0d2fa['x'] = _0x187dae['getFloat64'](_0x5eebb3 + _0x2ef71b, !0x0),
                    _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                    _0xc0d2fa['y'] = _0x187dae['getFloat64'](_0x5eebb3 + _0x2ef71b, !0x0),
                    _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                    _0xc0d2fa['z'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                    _0x5eebb3 += Float64Array['BYTES_PER_ELEMENT'];
               let _0x1829e5 = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0);
               if (_0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                    _0x46490c[_0x1053c5(0xa01)] = {
                         'center': _0xc0d2fa,
                         'radius': _0x1829e5
                    },
                    0x3 === _0x1f094b[_0x1053c5(0xd2f)]) {
                    let _0x4654c9 = new Cesium[(_0x1053c5(0x25b))]();
                    _0x4654c9['x'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                         _0x4654c9['y'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array['BYTES_PER_ELEMENT'],
                         _0x4654c9['z'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)];
                    let _0x26fff4 = new Cesium['Cartesian3']();
                    _0x26fff4['x'] = _0x187dae['getFloat64'](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                         _0x26fff4['y'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array['BYTES_PER_ELEMENT'],
                         _0x26fff4['z'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array['BYTES_PER_ELEMENT'];
                    let _0x2e6152 = new Cesium[(_0x1053c5(0x25b))]();
                    _0x2e6152['x'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                         _0x2e6152['y'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                         _0x2e6152['z'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)];
                    let _0x4ab729 = new Cesium[(_0x1053c5(0x25b))]();
                    _0x4ab729['x'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array['BYTES_PER_ELEMENT'],
                         _0x4ab729['y'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array['BYTES_PER_ELEMENT'],
                         _0x4ab729['z'] = _0x187dae[_0x1053c5(0x994)](_0x5eebb3 + _0x2ef71b, !0x0),
                         _0x5eebb3 += Float64Array[_0x1053c5(0x385)],
                         _0x46490c[_0x1053c5(0x564)] = {
                              'xExtent': _0x26fff4,
                              'yExtent': _0x2e6152,
                              'zExtent': _0x4ab729,
                              'obbCenter': _0x4654c9
                         };
               }
               let _0x279377 = _0x4fee44
                    , _0x222af7 = _0x360cac(_0x187dae, _0x2ef71b, _0x279377, _0x5eebb3)
                    , _0xeb5d3f = _0x222af7[_0x1053c5(0x379)];
               _0x5eebb3 = _0x222af7[_0x1053c5(0xad6)];
               let _0x599f6d = _0xeb5d3f[_0x1053c5(0xcef)](_0x1053c5(0x281));
               if (-0x1 !== _0x599f6d) {
                    let _0x3df187 = _0xeb5d3f['substring'](_0x599f6d);
                    _0xeb5d3f = _0xeb5d3f['replace'](_0x3df187, '');
               }
               _0x46490c[_0x1053c5(0x9bf)] = _0xeb5d3f,
                    _0x46490c[_0x1053c5(0x660)] = [];
               let _0x1c8a27 = _0x187dae['getUint32'](_0x5eebb3 + _0x2ef71b, !0x0);
               _0x5eebb3 += Uint32Array['BYTES_PER_ELEMENT'];
               for (let _0x5e9c56 = 0x0; _0x5e9c56 < _0x1c8a27; _0x5e9c56++)
                    _0x5eebb3 = _0x544b4f(_0x4fee44, _0x187dae, _0x5eebb3, _0x2ef71b, _0x46490c[_0x1053c5(0x660)]);
               return _0x5f3bea['push'](_0x46490c),
                    0x3 === _0x1f094b[_0x1053c5(0xd2f)] && (_0x222af7 = _0x360cac(_0x187dae, _0x2ef71b, _0x279377, _0x5eebb3),
                         _0x5eebb3 = _0x222af7[_0x1053c5(0xad6)]),
                    _0x5eebb3;
          }
          function _0x436cba(_0xbbbdca, _0x5305bc, _0x49b236, _0x499844) {
               const _0x5f4741 = _0xc3a123;
               let _0x359ef4 = {}
                    , _0x4bfaa4 = []
                    , _0x4e5c09 = 0x0
                    , _0x4af186 = _0x24d131(_0x5305bc, _0xbbbdca, _0x49b236)
                    , _0xd3e654 = _0x4af186[_0x5f4741(0x25d)]
                    , _0x4b2a1b = _0x4af186[_0x5f4741(0x490)];
               _0x49b236 = _0x4af186[_0x5f4741(0xbc1)];
               let _0x289913 = _0x5305bc[_0x5f4741(0x494)](_0x4e5c09 + _0x49b236, !0x0);
               _0x4e5c09 += Uint32Array[_0x5f4741(0x385)];
               for (let _0x26030b = 0x0; _0x26030b < _0x289913; _0x26030b++)
                    _0x4e5c09 = _0x222cc4(_0xd3e654, _0x5305bc, _0x4e5c09, _0x49b236, _0x4bfaa4, _0x499844);
               _0x359ef4[_0x5f4741(0xb12)] = _0x4bfaa4;
               let _0x52c0a4 = _0x4b2a1b % 0x4;
               return 0x0 !== _0x52c0a4 && (_0x4b2a1b += 0x4 - _0x52c0a4),
                    _0x499844[_0x5f4741(0xb91)] = _0x359ef4,
                    _0x4b2a1b;
          }
          function _0x3efdf4(_0x564cfd, _0x36445f, _0x118705, _0x14831d, _0x7b4e34) {
               // const _0x48e171 = _0xc3a123;
               // let _0x5e6952 = _0x36445f['getUint32'](_0x118705 + _0x14831d, !0x0);
               // if (_0x7b4e34[_0x48e171(0x8d0)] = _0x5e6952,
               //      _0x14831d += Uint32Array['BYTES_PER_ELEMENT'],
               //      _0x5e6952 <= 0x0)
               //      return _0x14831d;
               // let _0x3e4597 = _0x36445f[_0x48e171(0x876)](_0x118705 + _0x14831d, !0x0);
               // _0x14831d += Uint16Array['BYTES_PER_ELEMENT'];
               // let _0x14fb9b = _0x36445f['getUint16'](_0x118705 + _0x14831d, !0x0);
               // _0x14fb9b = _0x3e4597 * Float32Array['BYTES_PER_ELEMENT'],
               //      _0x14831d += Uint16Array[_0x48e171(0x385)];
               // let _0x3952e2 = _0x5e6952 * _0x3e4597 * Float32Array[_0x48e171(0x385)]
               //      , _0x3517d9 = _0x564cfd[_0x48e171(0x4ca)](_0x14831d, _0x14831d + _0x3952e2);
               // _0x14831d += _0x3952e2;
               // let _0x35729c = _0x7b4e34[_0x48e171(0x761)]
               //      , _0x3bbbde = _0x7b4e34[_0x48e171(0x360)];
               // return _0x3bbbde[_0x48e171(0x5e2)] = _0x35729c['length'],
               //      _0x35729c[_0x48e171(0x63e)]({
               //           'index': _0x3bbbde[_0x48e171(0x5e2)],
               //           'typedArray': _0x3517d9,
               //           'componentsPerAttribute': _0x3e4597,
               //           'componentDatatype': Cesium[_0x48e171(0x5fa)][_0x48e171(0xa80)],
               //           'offsetInBytes': 0x0,
               //           'strideInBytes': _0x14fb9b,
               //           'normalize': !0x1
               //      }),
               //      _0x14831d;

               const _0x48e171 = _0xc3a123;
               let _0x5e6952 = _0x36445f['getUint32'](_0x118705 + _0x14831d, !0x0);

               if (_0x5e6952 <= 0x0 || !_0x7b4e34) {
                    // _0x14831d += Uint32Array['BYTES_PER_ELEMENT'];
                    return _0x14831d;
               }


               _0x7b4e34[_0x48e171(0x8d0)] = _0x5e6952;




               let _0x3e4597 = _0x36445f[_0x48e171(0x876)](_0x118705 + _0x14831d, !0x0);
               _0x14831d += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x14fb9b = _0x36445f['getUint16'](_0x118705 + _0x14831d, !0x0);
               _0x14fb9b = _0x3e4597 * Float32Array['BYTES_PER_ELEMENT'],
                    _0x14831d += Uint16Array[_0x48e171(0x385)];
               let _0x3952e2 = _0x5e6952 * _0x3e4597 * Float32Array[_0x48e171(0x385)]
                    , _0x3517d9 = _0x564cfd[_0x48e171(0x4ca)](_0x14831d, _0x14831d + _0x3952e2);
               _0x14831d += _0x3952e2;
               let _0x35729c = _0x7b4e34[_0x48e171(0x761)]
                    , _0x3bbbde = _0x7b4e34[_0x48e171(0x360)];
               return _0x3bbbde[_0x48e171(0x5e2)] = _0x35729c['length'],
                    _0x35729c[_0x48e171(0x63e)]({
                         'index': _0x3bbbde[_0x48e171(0x5e2)],
                         'typedArray': _0x3517d9,
                         'componentsPerAttribute': _0x3e4597,
                         'componentDatatype': Cesium[_0x48e171(0x5fa)][_0x48e171(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x14fb9b,
                         'normalize': !0x1
                    }),
                    _0x14831d;
          }
          function _0x524041(_0xec01a2, _0x49ec63, _0x580707, _0x58d582, _0x3a9887) {
               const _0x3fca3b = _0xc3a123;
               let _0x2baeaa = _0x49ec63[_0x3fca3b(0x494)](_0x580707 + _0x58d582, !0x0);
               if (_0x58d582 += Uint32Array['BYTES_PER_ELEMENT'],
                    _0x2baeaa <= 0x0)
                    return _0x58d582;
               let _0x556fe = _0x49ec63[_0x3fca3b(0x876)](_0x580707 + _0x58d582, !0x0);
               _0x58d582 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x33c39b = _0x49ec63[_0x3fca3b(0x876)](_0x580707 + _0x58d582, !0x0);
               _0x58d582 += Uint16Array[_0x3fca3b(0x385)];
               let _0x4dd61b = _0x2baeaa * _0x556fe * Float32Array[_0x3fca3b(0x385)];
               let _0x564316 = _0xec01a2.subarray ? _0xec01a2['subarray'](_0x58d582, _0x58d582 + _0x4dd61b) : _0xec01a2['slice'](_0x58d582, _0x58d582 + _0x4dd61b)

               // _0x564316 = _0xec01a2['subarray'](_0x58d582, _0x58d582 + _0x4dd61b);
               _0x58d582 += _0x4dd61b;

               if (!_0x3a9887)
                    return

               let _0x224b3d = _0x3a9887[_0x3fca3b(0x761)]
                    , _0x57f80e = _0x3a9887[_0x3fca3b(0x360)];
               return _0x57f80e['aNormal'] = _0x224b3d[_0x3fca3b(0x72b)],
                    _0x224b3d[_0x3fca3b(0x63e)]({
                         'index': _0x57f80e[_0x3fca3b(0x637)],
                         'typedArray': _0x564316,
                         'componentsPerAttribute': _0x556fe,
                         'componentDatatype': Cesium[_0x3fca3b(0x5fa)][_0x3fca3b(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x33c39b,
                         'normalize': !0x1
                    }),
                    _0x58d582;
          }
          function _0x83a0d8(_0x54b6ce, _0x297686, _0x26feb6, _0x54bc6b, _0x67c584) {
               const _0x18c2eb = _0xc3a123;
               let _0x5b76a4 = _0x297686[_0x18c2eb(0x494)](_0x26feb6 + _0x54bc6b, !0x0);
               _0x54bc6b += Uint32Array[_0x18c2eb(0x385)];
               let _0x4bfca0, _0x18c0c7 = _0x67c584['verticesCount'];
               if (_0x5b76a4 > 0x0) {
                    _0x297686[_0x18c2eb(0x876)](_0x26feb6 + _0x54bc6b, !0x0),
                         _0x54bc6b += Uint16Array[_0x18c2eb(0x385)],
                         _0x54bc6b += 0x2 * Uint8Array[_0x18c2eb(0x385)];
                    let _0x5ebfeb = _0x5b76a4 * Uint8Array[_0x18c2eb(0x385)] * 0x4;
                    _0x4bfca0 = _0x42cd4b(_0x54b6ce, _0x54bc6b, _0x54bc6b + _0x5ebfeb),
                         _0x54bc6b += _0x5ebfeb;
               } else {
                    _0x4bfca0 = new Uint8Array(0x4 * _0x18c0c7);
                    for (let _0x4b997c = 0x0; _0x4b997c < _0x18c0c7; _0x4b997c++)
                         _0x4bfca0[0x4 * _0x4b997c] = 0xff,
                              _0x4bfca0[0x4 * _0x4b997c + 0x1] = 0xff,
                              _0x4bfca0[0x4 * _0x4b997c + 0x2] = 0xff,
                              _0x4bfca0[0x4 * _0x4b997c + 0x3] = 0xff;
               }
               let _0x3c4ec9 = _0x67c584[_0x18c2eb(0x761)]
                    , _0x5bbcab = _0x67c584[_0x18c2eb(0x360)];
               return _0x5bbcab[_0x18c2eb(0x7a0)] = _0x3c4ec9[_0x18c2eb(0x72b)],
                    _0x3c4ec9['push']({
                         'index': _0x5bbcab['aColor'],
                         'typedArray': _0x4bfca0,
                         'componentsPerAttribute': 0x4,
                         'componentDatatype': Cesium[_0x18c2eb(0x5fa)][_0x18c2eb(0xb8c)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x4,
                         'normalize': !0x0
                    }),
                    _0x67c584[_0x18c2eb(0x2ee)] = _0x4bfca0,
                    _0x54bc6b;
          }
          function _0x2ec706(_0x4d27e5, _0x517af0, _0x4046de, _0x31ba43, _0x35c996) {
               const _0x29b5dc = _0xc3a123;
               let _0x4631ee = _0x517af0['getUint32'](_0x4046de + _0x31ba43, !0x0);
               if (_0x31ba43 += Uint32Array[_0x29b5dc(0x385)],
                    _0x4631ee <= 0x0)
                    return _0x31ba43;
               _0x517af0[_0x29b5dc(0x876)](_0x4046de + _0x31ba43, !0x0),
                    _0x31ba43 += Uint16Array[_0x29b5dc(0x385)],
                    _0x31ba43 += 0x2 * Uint8Array[_0x29b5dc(0x385)];
               let _0x10e1f0 = _0x4631ee * Uint8Array[_0x29b5dc(0x385)] * 0x4
                    , _0x36f964 = _0x4d27e5['subarray'](_0x31ba43, _0x31ba43 + _0x10e1f0);
               _0x31ba43 += _0x10e1f0;
               let _0xbb928e = _0x35c996[_0x29b5dc(0x761)]
                    , _0x36b267 = _0x35c996['attrLocation'];
               return _0x36b267[_0x29b5dc(0xda2)] = _0xbb928e['length'],
                    _0xbb928e[_0x29b5dc(0x63e)]({
                         'index': _0x36b267[_0x29b5dc(0xda2)],
                         'typedArray': _0x36f964,
                         'componentsPerAttribute': 0x4,
                         'componentDatatype': Cesium[_0x29b5dc(0x5fa)][_0x29b5dc(0xb8c)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x4,
                         'normalize': !0x0
                    }),
                    _0x31ba43;
          }
          function _0x511476(_0x4c3931, _0x15afed, _0x438a5f, _0x4da844, _0x4bf44d) {
               const _0x4cc808 = _0xc3a123;
               let _0x5d6d4 = _0x15afed[_0x4cc808(0x876)](_0x438a5f + _0x4da844, !0x0);
               _0x4da844 += Uint16Array[_0x4cc808(0x385)],
                    _0x4da844 += Uint16Array[_0x4cc808(0x385)];
               for (let _0x1c3af9 = 0x0; _0x1c3af9 < _0x5d6d4; _0x1c3af9++) {
                    let _0x5a0d5f = _0x15afed['getUint32'](_0x438a5f + _0x4da844, !0x0);
                    _0x4da844 += Uint32Array[_0x4cc808(0x385)];
                    let _0x1aceba = _0x15afed['getUint16'](_0x438a5f + _0x4da844, !0x0);
                    _0x4da844 += Uint16Array[_0x4cc808(0x385)],
                         _0x15afed[_0x4cc808(0x876)](_0x438a5f + _0x4da844, !0x0),
                         _0x4da844 += Uint16Array[_0x4cc808(0x385)];
                    let _0x4ccdbc = _0x5a0d5f * _0x1aceba * Float32Array[_0x4cc808(0x385)]
                         , _0x4f2228 = _0x4c3931[_0x4cc808(0x4ca)](_0x4da844, _0x4da844 + _0x4ccdbc);
                    _0x4da844 += _0x4ccdbc;
                    let _0xa4467a = 'aTexCoord' + _0x1c3af9
                         , _0x4d909d = _0x4bf44d[_0x4cc808(0x761)]
                         , _0x399b22 = _0x4bf44d[_0x4cc808(0x360)];
                    _0x399b22[_0xa4467a] = _0x4d909d['length'],
                         _0x4d909d[_0x4cc808(0x63e)]({
                              'index': _0x399b22[_0xa4467a],
                              'typedArray': _0x4f2228,
                              'componentsPerAttribute': _0x1aceba,
                              'componentDatatype': Cesium[_0x4cc808(0x5fa)][_0x4cc808(0xa80)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': _0x1aceba * Float32Array[_0x4cc808(0x385)],
                              'normalize': !0x1
                         });
               }
               return _0x4da844;
          }
          function _0x5556d9(_0x47a8f7, _0xd689b6, _0x299d4c, _0xb9ed26, _0x3736ef) {
               const _0x16d4c6 = _0xc3a123;
               let _0xe5d18b = _0xd689b6[_0x16d4c6(0x876)](_0x299d4c + _0xb9ed26, !0x0);
               _0xb9ed26 += Uint16Array[_0x16d4c6(0x385)],
                    _0xb9ed26 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x35823b = _0x3736ef[_0x16d4c6(0x761)]
                    , _0x3a67ff = _0x3736ef['attrLocation'];
               for (let _0x444b4d = 0x0; _0x444b4d < _0xe5d18b; _0x444b4d++) {
                    let _0x10ee62 = _0xd689b6[_0x16d4c6(0x494)](_0x299d4c + _0xb9ed26, !0x0);
                    _0xb9ed26 += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x557860 = _0xd689b6[_0x16d4c6(0x876)](_0x299d4c + _0xb9ed26, !0x0);
                    _0xb9ed26 += Uint16Array['BYTES_PER_ELEMENT'],
                         _0xd689b6['getUint16'](_0x299d4c + _0xb9ed26, !0x0),
                         _0xb9ed26 += Uint16Array[_0x16d4c6(0x385)];
                    let _0x293f86 = _0x10ee62 * _0x557860 * Float32Array[_0x16d4c6(0x385)];
                    if (0x11 === _0x557860 || 0x1d === _0x557860) {
                         let _0x95c4e0 = _0x47a8f7[_0x16d4c6(0x4ca)](_0xb9ed26, _0xb9ed26 + _0x293f86);
                         _0x3736ef[_0x16d4c6(0x4a9)] = _0x10ee62,
                              _0x3736ef[_0x16d4c6(0xd4e)] = _0x557860,
                              _0x3736ef[_0x16d4c6(0xbd8)] = _0x95c4e0,
                              _0x3736ef[_0x16d4c6(0x956)] = 0x1;
                         let _0x31a9da, _0x4f704e = _0x557860 * _0x10ee62 * 0x4, _0x1b4836 = _0x95c4e0[_0x16d4c6(0x21c)](0x0, _0x4f704e);
                         _0x3736ef['vertexColorInstance'] = _0x1b4836,
                              0x11 === _0x557860 ? (_0x31a9da = 0x11 * Float32Array['BYTES_PER_ELEMENT'],
                                   _0x3a67ff['uv2'] = _0x35823b[_0x16d4c6(0x72b)],
                                   _0x35823b[_0x16d4c6(0x63e)]({
                                        'index': _0x3a67ff[_0x16d4c6(0x77c)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium['ComponentDatatype'][_0x16d4c6(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': _0x31a9da,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x3a67ff[_0x16d4c6(0x5e5)] = _0x35823b['length'],
                                   _0x35823b[_0x16d4c6(0x63e)]({
                                        'index': _0x3a67ff[_0x16d4c6(0x5e5)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x4 * Float32Array[_0x16d4c6(0x385)],
                                        'strideInBytes': _0x31a9da,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x3a67ff[_0x16d4c6(0x343)] = _0x35823b[_0x16d4c6(0x72b)],
                                   _0x35823b[_0x16d4c6(0x63e)]({
                                        'index': _0x3a67ff[_0x16d4c6(0x343)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x8 * Float32Array[_0x16d4c6(0x385)],
                                        'strideInBytes': _0x31a9da,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x3a67ff[_0x16d4c6(0x74f)] = _0x35823b[_0x16d4c6(0x72b)],
                                   _0x35823b['push']({
                                        'index': _0x3a67ff['secondary_colour'],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0xc * Float32Array[_0x16d4c6(0x385)],
                                        'strideInBytes': _0x31a9da,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x3a67ff['uv6'] = _0x35823b[_0x16d4c6(0x72b)],
                                   _0x35823b['push']({
                                        'index': _0x3a67ff[_0x16d4c6(0x718)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x16d4c6(0x5fa)]['UNSIGNED_BYTE'],
                                        'normalize': !0x0,
                                        'offsetInBytes': 0x10 * Float32Array[_0x16d4c6(0x385)],
                                        'strideInBytes': _0x31a9da,
                                        'instanceDivisor': 0x1
                                   })) : 0x1d === _0x557860 && (_0x31a9da = 0x1d * Float32Array[_0x16d4c6(0x385)],
                                        _0x3a67ff['uv1'] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b[_0x16d4c6(0x63e)]({
                                             'index': _0x3a67ff[_0x16d4c6(0x61a)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium['ComponentDatatype'][_0x16d4c6(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x0,
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1,
                                             'byteLength': _0x293f86
                                        }),
                                        _0x3a67ff[_0x16d4c6(0x77c)] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b['push']({
                                             'index': _0x3a67ff[_0x16d4c6(0x77c)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x4 * Float32Array['BYTES_PER_ELEMENT'],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff['uv3'] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b[_0x16d4c6(0x63e)]({
                                             'index': _0x3a67ff['uv3'],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x16d4c6(0x5fa)]['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x8 * Float32Array[_0x16d4c6(0x385)],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff['uv4'] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b[_0x16d4c6(0x63e)]({
                                             'index': _0x3a67ff['uv4'],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0xc * Float32Array[_0x16d4c6(0x385)],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff[_0x16d4c6(0x7ad)] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b[_0x16d4c6(0x63e)]({
                                             'index': _0x3a67ff[_0x16d4c6(0x7ad)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x10 * Float32Array[_0x16d4c6(0x385)],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff[_0x16d4c6(0x718)] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b['push']({
                                             'index': _0x3a67ff[_0x16d4c6(0x718)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x14 * Float32Array[_0x16d4c6(0x385)],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff[_0x16d4c6(0x94d)] = _0x35823b['length'],
                                        _0x35823b[_0x16d4c6(0x63e)]({
                                             'index': _0x3a67ff['uv7'],
                                             'componentsPerAttribute': 0x3,
                                             'componentDatatype': Cesium[_0x16d4c6(0x5fa)][_0x16d4c6(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x18 * Float32Array['BYTES_PER_ELEMENT'],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff[_0x16d4c6(0x74f)] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b['push']({
                                             'index': _0x3a67ff[_0x16d4c6(0x74f)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium['ComponentDatatype'][_0x16d4c6(0xb8c)],
                                             'normalize': !0x0,
                                             'offsetInBytes': 0x1b * Float32Array[_0x16d4c6(0x385)],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x3a67ff['uv9'] = _0x35823b[_0x16d4c6(0x72b)],
                                        _0x35823b[_0x16d4c6(0x63e)]({
                                             'index': _0x3a67ff[_0x16d4c6(0xc50)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x16d4c6(0x5fa)]['UNSIGNED_BYTE'],
                                             'normalize': !0x0,
                                             'offsetInBytes': 0x1c * Float32Array[_0x16d4c6(0x385)],
                                             'strideInBytes': _0x31a9da,
                                             'instanceDivisor': 0x1
                                        }));
                    } else {
                         let _0x1b861f = _0x10ee62 * _0x557860;
                         _0x3736ef[_0x16d4c6(0x1a6)] = new Float32Array(_0x1b861f);
                         for (let _0x109ca9 = 0x0; _0x109ca9 < _0x1b861f; _0x109ca9++)
                              _0x3736ef[_0x16d4c6(0x1a6)][_0x109ca9] = _0xd689b6[_0x16d4c6(0x283)](_0xb9ed26 + _0x109ca9 * Float32Array[_0x16d4c6(0x385)], !0x0);
                    }
                    _0xb9ed26 += _0x293f86;
               }
               return _0xb9ed26;
          }
          function _0x1eebb9(_0x2546c3, _0x3e8cc1, _0x74e476, _0x1b993d) {
               const _0x585837 = _0xc3a123;
               let _0x246e8c = _0x3e8cc1[_0x585837(0x494)](_0x74e476, !0x0);
               if (_0x1b993d[_0x585837(0x8d0)] = _0x246e8c,
                    (_0x74e476 += Uint32Array['BYTES_PER_ELEMENT']) <= 0x0)
                    return _0x74e476;
               let _0x2776ec = _0x3e8cc1[_0x585837(0x876)](_0x74e476, !0x0);
               _0x74e476 += Uint16Array[_0x585837(0x385)];
               let _0x1e3204 = _0x3e8cc1[_0x585837(0x876)](_0x74e476, !0x0);
               _0x1e3204 = _0x2776ec * Int16Array[_0x585837(0x385)],
                    _0x74e476 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x19738b = _0x3e8cc1[_0x585837(0x283)](_0x74e476, !0x0);
               _0x74e476 += Float32Array[_0x585837(0x385)];
               let _0x38c773 = {};
               _0x38c773['x'] = _0x3e8cc1[_0x585837(0x283)](_0x74e476, !0x0),
                    _0x74e476 += Float32Array['BYTES_PER_ELEMENT'],
                    _0x38c773['y'] = _0x3e8cc1[_0x585837(0x283)](_0x74e476, !0x0),
                    _0x74e476 += Float32Array[_0x585837(0x385)],
                    _0x38c773['z'] = _0x3e8cc1[_0x585837(0x283)](_0x74e476, !0x0),
                    _0x74e476 += Float32Array[_0x585837(0x385)],
                    _0x38c773['w'] = _0x3e8cc1['getFloat32'](_0x74e476, !0x0),
                    _0x74e476 += Float32Array[_0x585837(0x385)],
                    _0x1b993d['vertCompressConstant'] = _0x19738b,
                    _0x1b993d[_0x585837(0x472)] = _0x38c773;
               let _0x382e90 = _0x246e8c * _0x2776ec * Int16Array[_0x585837(0x385)]
                    , _0x4b07c4 = new Uint8Array(_0x2546c3, _0x74e476, _0x382e90);
               _0x74e476 += _0x382e90;
               let _0x11911d = _0x1b993d[_0x585837(0x761)]
                    , _0x2c6cac = _0x1b993d[_0x585837(0x360)];
               return _0x2c6cac[_0x585837(0x5e2)] = _0x11911d[_0x585837(0x72b)],
                    _0x11911d[_0x585837(0x63e)]({
                         'index': _0x2c6cac['aPosition'],
                         'typedArray': _0x4b07c4,
                         'componentsPerAttribute': _0x2776ec,
                         'componentDatatype': Cesium[_0x585837(0x5fa)][_0x585837(0x982)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x1e3204,
                         'normalize': !0x1
                    }),
                    _0x74e476;
          }
          function _0x49a82c(_0x4e65f6, _0x5514c2, _0x4f8add, _0x1b2046) {
               const _0x1e9d9a = _0xc3a123;
               let _0x402a7e = _0x5514c2[_0x1e9d9a(0x494)](_0x4f8add, !0x0);
               if (_0x4f8add += Uint32Array['BYTES_PER_ELEMENT'],
                    _0x402a7e <= 0x0)
                    return _0x4f8add;
               _0x5514c2['getUint16'](_0x4f8add, !0x0),
                    _0x4f8add += Uint16Array[_0x1e9d9a(0x385)];
               let _0x4aa573 = _0x5514c2[_0x1e9d9a(0x876)](_0x4f8add, !0x0);
               _0x4f8add += Uint16Array[_0x1e9d9a(0x385)];
               let _0x22e661 = 0x2 * _0x402a7e * Int16Array['BYTES_PER_ELEMENT']
                    , _0x3352c6 = new Uint8Array(_0x4e65f6, _0x4f8add, _0x22e661);
               _0x4f8add += _0x22e661;
               let _0x19d731 = _0x1b2046[_0x1e9d9a(0x761)]
                    , _0x1ead3a = _0x1b2046['attrLocation'];
               return _0x1ead3a['aNormal'] = _0x19d731[_0x1e9d9a(0x72b)],
                    _0x19d731[_0x1e9d9a(0x63e)]({
                         'index': _0x1ead3a[_0x1e9d9a(0x637)],
                         'typedArray': _0x3352c6,
                         'componentsPerAttribute': 0x2,
                         'componentDatatype': Cesium[_0x1e9d9a(0x5fa)][_0x1e9d9a(0x982)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x4aa573,
                         'normalize': !0x1
                    }),
                    _0x4f8add;
          }
          function _0x2db53b(_0x10fd74, _0x1d2bc2, _0x2d4ccf, _0x566901) {
               const _0x31f973 = _0xc3a123;
               _0x566901['texCoordCompressConstant'] = [],
                    _0x566901[_0x31f973(0x302)] = [];
               let _0xb142fc = _0x1d2bc2[_0x31f973(0x876)](_0x2d4ccf, !0x0);
               _0x2d4ccf += Uint16Array[_0x31f973(0x385)],
                    _0x2d4ccf += Uint16Array[_0x31f973(0x385)];
               for (let _0x52b900 = 0x0; _0x52b900 < _0xb142fc; _0x52b900++) {
                    let _0x11bc16 = _0x1d2bc2[_0x31f973(0xb7b)](_0x2d4ccf, !0x0);
                    _0x2d4ccf += Uint8Array[_0x31f973(0x385)],
                         _0x2d4ccf += 0x3 * Uint8Array[_0x31f973(0x385)];
                    let _0x1c9e27 = _0x1d2bc2[_0x31f973(0x494)](_0x2d4ccf, !0x0);
                    _0x2d4ccf += Uint32Array[_0x31f973(0x385)];
                    let _0x5e2c3e = _0x1d2bc2[_0x31f973(0x876)](_0x2d4ccf, !0x0);
                    _0x2d4ccf += Uint16Array[_0x31f973(0x385)],
                         _0x1d2bc2[_0x31f973(0x876)](_0x2d4ccf, !0x0),
                         _0x2d4ccf += Uint16Array[_0x31f973(0x385)];
                    let _0x17ba10 = _0x1d2bc2['getFloat32'](_0x2d4ccf, !0x0);
                    _0x2d4ccf += Float32Array[_0x31f973(0x385)],
                         _0x566901[_0x31f973(0x541)][_0x31f973(0x63e)](_0x17ba10);
                    let _0x3b9a50 = {};
                    _0x3b9a50['x'] = _0x1d2bc2['getFloat32'](_0x2d4ccf, !0x0),
                         _0x2d4ccf += Float32Array[_0x31f973(0x385)],
                         _0x3b9a50['y'] = _0x1d2bc2[_0x31f973(0x283)](_0x2d4ccf, !0x0),
                         _0x2d4ccf += Float32Array[_0x31f973(0x385)],
                         _0x3b9a50['z'] = _0x1d2bc2[_0x31f973(0x283)](_0x2d4ccf, !0x0),
                         _0x2d4ccf += Float32Array[_0x31f973(0x385)],
                         _0x3b9a50['w'] = _0x1d2bc2['getFloat32'](_0x2d4ccf, !0x0),
                         _0x2d4ccf += Float32Array[_0x31f973(0x385)],
                         _0x566901[_0x31f973(0x302)][_0x31f973(0x63e)](_0x3b9a50);
                    let _0x5688da = _0x1c9e27 * _0x5e2c3e * Int16Array[_0x31f973(0x385)]
                         , _0x146110 = new Uint8Array(_0x10fd74, _0x2d4ccf, _0x5688da)
                         , _0x305eb9 = (_0x2d4ccf += _0x5688da) % 0x4;
                    0x0 !== _0x305eb9 && (_0x2d4ccf += 0x4 - _0x305eb9);
                    let _0x3cdf45 = _0x31f973(0x3f4) + _0x52b900
                         , _0x4f37b7 = _0x566901[_0x31f973(0x761)]
                         , _0x500408 = _0x566901[_0x31f973(0x360)];
                    if (_0x500408[_0x3cdf45] = _0x4f37b7[_0x31f973(0x72b)],
                         _0x4f37b7[_0x31f973(0x63e)]({
                              'index': _0x500408[_0x3cdf45],
                              'typedArray': _0x146110,
                              'componentsPerAttribute': _0x5e2c3e,
                              'componentDatatype': Cesium[_0x31f973(0x5fa)][_0x31f973(0x982)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': _0x5e2c3e * Int16Array['BYTES_PER_ELEMENT'],
                              'normalize': !0x1
                         }),
                         _0x11bc16) {
                         _0x5688da = _0x1c9e27 * Float32Array[_0x31f973(0x385)];
                         let _0x391ac5 = new Uint8Array(_0x10fd74, _0x2d4ccf, _0x5688da);
                         _0x2d4ccf += _0x5688da,
                              _0x566901[_0x31f973(0x6ad)] = !0x0,
                              _0x3cdf45 = _0x31f973(0xa5d) + _0x52b900,
                              _0x500408[_0x3cdf45] = _0x4f37b7[_0x31f973(0x72b)],
                              _0x4f37b7[_0x31f973(0x63e)]({
                                   'index': _0x500408[_0x3cdf45],
                                   'typedArray': _0x391ac5,
                                   'componentsPerAttribute': 0x1,
                                   'componentDatatype': Cesium[_0x31f973(0x5fa)][_0x31f973(0xa80)],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': Float32Array['BYTES_PER_ELEMENT'],
                                   'normalize': !0x1
                              });
                    }
               }
               return _0x2d4ccf;
          }
          function _0x4e2b60(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3, _0x59112e, _0x58a6a8) {
               const _0x518f9e = _0xc3a123;
               (0x3 === _0x58a6a8[_0x518f9e(0xd2f)] && (_0x3cd799[_0x518f9e(0x494)](_0x19f0d3, !0x0),
                    _0x19f0d3 += Uint32Array[_0x518f9e(0x385)]),
                    _0x19f0d3 = _0x83a0d8(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3 = _0x524041(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3 = _0x3efdf4(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3, _0x59112e), _0x59112e), _0x59112e),
                    0x3 !== _0x58a6a8[_0x518f9e(0xd2f)] && (_0x19f0d3 = _0x2ec706(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3, _0x59112e)),
                    _0x19f0d3 = _0x5556d9(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3 = _0x511476(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3, _0x59112e), _0x59112e),
                    0x3 === _0x58a6a8[_0x518f9e(0xd2f)]) && (_0x19f0d3 = _0x1cfd2d(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3, _0x59112e)[_0x518f9e(0x1df)]);
               if (0x3 == _0x58a6a8[_0x518f9e(0xd2f)]) {
                    let _0x5336ac = _0x360cac(_0x3cd799, _0x426661, _0x3ded6e, _0x19f0d3);
                    _0x19f0d3 = _0x5336ac['bytesOffset'],
                         _0x59112e[_0x518f9e(0x783)] = JSON[_0x518f9e(0x9bc)](_0x5336ac[_0x518f9e(0x379)]);
                    let _0x2d44de = _0x518f9e(0xa2d) + _0x59112e[_0x518f9e(0x783)][_0x518f9e(0xc7f)]
                         , _0x53bf59 = _0x518f9e(0xa2d) + _0x59112e['customVertexAttribute'][_0x518f9e(0xa31)]
                         , _0x4ae986 = _0x518f9e(0xa2d) + _0x59112e[_0x518f9e(0x783)][_0x518f9e(0x41b)];
                    Cesium[_0x518f9e(0x336)](_0x59112e['attrLocation'][_0x2d44de]) && (_0x59112e['attrLocation'][_0x518f9e(0x629)] = _0x59112e[_0x518f9e(0x360)][_0x2d44de],
                         delete _0x59112e[_0x518f9e(0x360)][_0x2d44de]),
                         Cesium[_0x518f9e(0x336)](_0x59112e[_0x518f9e(0x360)][_0x53bf59]) && (_0x59112e[_0x518f9e(0x360)][_0x518f9e(0x5eb)] = _0x59112e[_0x518f9e(0x360)][_0x53bf59],
                              delete _0x59112e[_0x518f9e(0x360)][_0x53bf59]),
                         Cesium[_0x518f9e(0x336)](_0x59112e[_0x518f9e(0x360)][_0x4ae986]) && (_0x59112e['attrLocation'][_0x518f9e(0xd0b)] = _0x59112e[_0x518f9e(0x360)][_0x4ae986],
                              delete _0x59112e[_0x518f9e(0x360)][_0x4ae986]);
                    let _0x32ade4 = Object[_0x518f9e(0x60f)](_0x59112e[_0x518f9e(0x360)])
                         , _0x842f9a = _0x32ade4[_0x518f9e(0x72b)];
                    for (let _0x441100 = 0x0; _0x441100 < _0x842f9a; ++_0x441100) {
                         let _0x39b707 = _0x32ade4[_0x441100];
                         -0x1 !== _0x39b707[_0x518f9e(0xcef)](_0x518f9e(0xa2d)) && delete _0x59112e[_0x518f9e(0x360)][_0x39b707];
                    }
                    let _0x29d61b = (_0x426661 + _0x19f0d3) % 0x4;
                    _0x29d61b && (_0x29d61b = 0x4 - _0x29d61b),
                         _0x19f0d3 += _0x29d61b;
               }
               return 0x3 === _0x58a6a8[_0x518f9e(0xd2f)] && (_0x19f0d3 = (_0x58a6a8 = _0x53e421(_0x3ded6e, _0x3cd799, _0x426661, _0x19f0d3))[_0x518f9e(0xad6)]),
                    _0x19f0d3;
          }
          function _0x53e421(_0x164dff, _0x1658c1, _0x55cd88, _0x8f6cca, _0x4a3b93) {
               const _0x239f54 = _0xc3a123;
               let _0x13a757 = _0x1658c1['getUint32'](_0x55cd88 + _0x8f6cca, !0x0);
               if (_0x8f6cca += Uint32Array[_0x239f54(0x385)],
                    _0x13a757 <= 0x0)
                    return {
                         'bytesOffset': _0x8f6cca
                    };
               let _0x4ec136 = _0x1658c1[_0x239f54(0x876)](_0x55cd88 + _0x8f6cca, !0x0);
               return _0x8f6cca += Uint16Array[_0x239f54(0x385)],
                    _0x1658c1[_0x239f54(0x876)](_0x55cd88 + _0x8f6cca, !0x0),
                    _0x8f6cca += Uint16Array[_0x239f54(0x385)],
               {
                    'bytesOffset': _0x8f6cca += _0x13a757 * _0x4ec136 * Float32Array['BYTES_PER_ELEMENT']
               };
          }
          const _0xed4094 = {
               0x0: Uint32Array['BYTES_PER_ELEMENT'],
               0x1: Float32Array[_0xc3a123(0x385)],
               0x2: Float64Array[_0xc3a123(0x385)]
          };
          function _0x1cfd2d(_0x2f04e4, _0x5cee77, _0x347c3f, _0x3a2cbf, _0x21a7fc) {
               const _0x683b69 = _0xc3a123;
               let _0x4ff2b3 = _0x5cee77[_0x683b69(0x494)](_0x347c3f + _0x3a2cbf, !0x0);
               _0x3a2cbf += Uint32Array[_0x683b69(0x385)];
               for (let _0x4c3126 = 0x0; _0x4c3126 < _0x4ff2b3; _0x4c3126++) {
                    let _0x5cebe0 = _0x5cee77[_0x683b69(0x494)](_0x347c3f + _0x3a2cbf, !0x0);
                    _0x3a2cbf += Uint32Array[_0x683b69(0x385)];
                    let _0x380f45 = _0x5cee77[_0x683b69(0x876)](_0x347c3f + _0x3a2cbf, !0x0);
                    _0x3a2cbf += Uint16Array[_0x683b69(0x385)];
                    let _0x254376 = _0x5cee77['getUint16'](_0x347c3f + _0x3a2cbf, !0x0);
                    _0x3a2cbf += Uint16Array[_0x683b69(0x385)];
                    let _0x10e09e = _0x5cebe0 * _0x380f45 * _0xed4094[_0x254376]
                         , _0xb35c92 = _0x2f04e4[_0x683b69(0x4ca)](_0x3a2cbf, _0x3a2cbf + _0x10e09e);
                    _0x3a2cbf += _0x10e09e;
                    let _0x545713 = _0x21a7fc[_0x683b69(0x761)]
                         , _0x36a17c = _0x21a7fc[_0x683b69(0x360)]
                         , _0x192740 = _0x683b69(0xa2d) + _0x4c3126;
                    _0x36a17c[_0x192740] = _0x545713[_0x683b69(0x72b)],
                         _0x545713[_0x683b69(0x63e)]({
                              'index': _0x36a17c[_0x192740],
                              'typedArray': _0xb35c92,
                              'componentsPerAttribute': _0x380f45,
                              'componentDatatype': Cesium[_0x683b69(0x5fa)][_0x683b69(0xa80)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': 0x0,
                              'normalize': !0x1
                         });
               }
               return {
                    'bufferByteOffset': _0x3a2cbf
               };
          }
          function _0x387d86(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4) {
               const _0x22198f = _0xc3a123;
               let _0x59588c = _0x407117[_0x22198f(0x494)](_0x23ad7a, !0x0);
               return _0x3c6ed4[_0x22198f(0x408)] = _0x59588c,
                    _0x23ad7a += Uint32Array[_0x22198f(0x385)],
                    _0x23ad7a = (_0x59588c & _0x38a067[_0x22198f(0x741)]) === _0x38a067[_0x22198f(0x741)] ? _0x1eebb9(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4) : _0x3efdf4(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4),
                    _0x23ad7a = _0x2ec706(_0x33d4e7, _0x407117, _0x23ad7a = _0x83a0d8(_0x33d4e7, _0x407117, _0x23ad7a = (_0x59588c & _0x38a067[_0x22198f(0xa26)]) === _0x38a067[_0x22198f(0xa26)] ? _0x49a82c(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4) : _0x524041(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4), _0x3c6ed4), _0x3c6ed4),
                    _0x23ad7a = (_0x59588c & _0x38a067[_0x22198f(0x7d9)]) === _0x38a067[_0x22198f(0x7d9)] ? _0x2db53b(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4) : _0x511476(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4),
                    (_0x59588c & _0x38a067[_0x22198f(0x8df)]) === _0x38a067[_0x22198f(0x8df)] && (_0x3c6ed4[_0x22198f(0xb7d)] = !0x0),
                    _0x23ad7a = _0x5556d9(_0x33d4e7, _0x407117, _0x23ad7a, _0x3c6ed4);
          }
          function _0x1ef51c(_0x55ce83, _0x46bb56, _0xfba99d, _0x488305, _0x5e28a3, _0x9d96f9, _0x162b96) {
               const _0x45dc5a = _0xc3a123;
               let _0x42122a = _0x9d96f9[_0x45dc5a(0x9b0)];
               0x3 === _0x9d96f9[_0x45dc5a(0xd2f)] && (_0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0),
                    _0x488305 += Int32Array['BYTES_PER_ELEMENT']),
                    _0x9d96f9[_0x45dc5a(0xd2f)] >= 0x2 && (_0x46bb56['getInt32'](_0xfba99d + _0x488305),
                         _0x488305 += Int32Array[_0x45dc5a(0x385)]);
               let _0x4b45fc, _0x1ed730 = {};
               _0x1ed730[_0x45dc5a(0x288)] = _0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0),
                    _0x488305 += Int32Array[_0x45dc5a(0x385)],
                    _0x1ed730[_0x45dc5a(0x976)] = _0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0),
                    _0x488305 += Int32Array['BYTES_PER_ELEMENT'],
                    _0x1ed730[_0x45dc5a(0x3af)] = _0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0),
                    _0x488305 += Int32Array[_0x45dc5a(0x385)],
                    _0x1ed730[_0x45dc5a(0x4e7)] = _0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0),
                    _0x488305 += Int32Array[_0x45dc5a(0x385)],
                    0x3 === _0x9d96f9[_0x45dc5a(0xd2f)] ? (_0x4b45fc = _0x46bb56[_0x45dc5a(0x494)](_0xfba99d + _0x488305, !0x0),
                         _0x488305 += Int32Array[_0x45dc5a(0x385)]) : (_0x4b45fc = _0x46bb56[_0x45dc5a(0x876)](_0xfba99d + _0x488305, !0x0),
                              _0x488305 += Int16Array[_0x45dc5a(0x385)]);
               let _0x18a830 = [];
               for (let _0x53e1ee = 0x0; _0x53e1ee < _0x4b45fc; _0x53e1ee++) {
                    const _0x44e76a = _0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0);
                    _0x18a830[_0x45dc5a(0x63e)](_0x44e76a),
                         _0x488305 += Int32Array[_0x45dc5a(0x385)];
               }
               _0x1ed730[_0x45dc5a(0x226)] = _0x18a830;
               let _0x5040a7 = [];
               if (0x3 === _0x9d96f9[_0x45dc5a(0xd2f)]) {
                    let _0x28ece9 = _0x46bb56[_0x45dc5a(0x494)](_0xfba99d + _0x488305, !0x0);
                    _0x488305 += Int32Array['BYTES_PER_ELEMENT'];
                    for (let _0x16ca9d = 0x0; _0x16ca9d < _0x28ece9; _0x16ca9d++) {
                         const _0x42b980 = _0x46bb56[_0x45dc5a(0x566)](_0xfba99d + _0x488305, !0x0);
                         _0x488305 += Int32Array[_0x45dc5a(0x385)],
                              _0x5040a7[_0x45dc5a(0x63e)](_0x42b980);
                    }
               }
               _0x1ed730[_0x45dc5a(0x603)] = _0x5040a7;
               const _0x17ab6f = _0x46bb56['getInt32'](_0xfba99d + _0x488305, !0x0);
               _0x488305 += Int32Array[_0x45dc5a(0x385)];
               let _0x114f34 = []
                    , _0x57999d = {};
               if (_0x17ab6f > 0x0) {
                    const _0x4d0971 = (_0x2770d0 = _0x360cac(_0x46bb56, _0xfba99d, _0x55ce83, _0x488305))[_0x45dc5a(0x379)];
                    _0x488305 = _0x2770d0['bytesOffset'],
                         _0x57999d['materialCode'] = _0x4d0971,
                         _0x114f34[_0x45dc5a(0x63e)](_0x57999d);
               }
               var _0x5ec6c1;
               0x3 === _0x9d96f9[_0x45dc5a(0xd2f)] && ((_0x5ec6c1 = (_0xfba99d + _0x488305) % 0x4) && (_0x5ec6c1 = 0x4 - _0x5ec6c1),
                    _0x488305 += _0x5ec6c1);
               let _0x4850e5 = new Object();
               const _0xb31690 = _0x46bb56[_0x45dc5a(0x494)](_0xfba99d + _0x488305, !0x0);
               let _0x2064e8 = _0x42cd4b(_0x55ce83, _0x488305 += Int32Array['BYTES_PER_ELEMENT'], _0x488305 + _0xb31690);
               var _0x2770d0;
               return (_0x17ab6f > 0x0 ? _0x11b39f[_0x45dc5a(0x453)](window[_0x45dc5a(0x4a0)], _0x2064e8, _0xb31690, _0x5e28a3, _0x57999d, _0x1ed730, undefined, !0x1, _0x4850e5, undefined) : _0x11b39f['dracoDecodePointCloud'](window[_0x45dc5a(0x4a0)], _0x2064e8, _0xb31690, _0x5e28a3, _0x1ed730),
                    Cesium[_0x45dc5a(0x336)](_0x4850e5[_0x45dc5a(0x455)]) && Cesium[_0x45dc5a(0x336)](_0x4850e5[_0x45dc5a(0x590)]) || (_0x4850e5 = void 0x0),
                    _0x488305 += _0xb31690,
                    0x3 === _0x9d96f9[_0x45dc5a(0xd2f)]) && ((_0x5ec6c1 = (_0xfba99d + _0x488305) % 0x4) && (_0x5ec6c1 = 0x4 - _0x5ec6c1),
                         (_0x5ec6c1 = (_0xfba99d + (_0x488305 = (_0x2770d0 = _0x360cac(_0x46bb56, _0xfba99d, _0x55ce83, _0x488305 += _0x5ec6c1))[_0x45dc5a(0xad6)])) % 0x4) && (_0x5ec6c1 = 0x4 - _0x5ec6c1),
                         _0x488305 += _0x5ec6c1),
                    (_0x42122a[_0x162b96] = {
                         'vertexPackage': _0x5e28a3,
                         'arrIndexPackage': _0x114f34,
                         'cartographicBounds': _0x4850e5
                    },
                         _0x488305);
          }
          function _0x8ba5da(_0x5a77fd, _0xd36307, _0x2db56e, _0xd4f4d5, _0x5350bf, _0x5dd7f8, _0x4d6bc0, _0x5b9147, _0x2c9ed8) {
               const _0xdd3a0b = _0xc3a123;
               let _0x49067e = _0x24d131(_0x2db56e, _0xd36307, _0x5350bf)['dataViewByteOffset']
                    , _0x34058e = _0x2db56e['getUint32'](_0xd4f4d5 + _0x49067e, !0x0);
               _0xd4f4d5 += Uint32Array[_0xdd3a0b(0x385)];
               let _0x31eeea = _0x2db56e[_0xdd3a0b(0x494)](_0xd4f4d5 + _0x49067e, !0x0);
               _0xd4f4d5 += Uint32Array[_0xdd3a0b(0x385)],
                    _0x5dd7f8[_0xdd3a0b(0x472)] = new Cesium['Cartesian4'](),
                    _0x5dd7f8[_0xdd3a0b(0x302)] = [new Cesium[(_0xdd3a0b(0x1b7))](), new Cesium[(_0xdd3a0b(0x1b7))]()],
                    _0x5dd7f8[_0xdd3a0b(0x541)] = [new Cesium[(_0xdd3a0b(0x25b))](), new Cesium[(_0xdd3a0b(0x25b))]()];
               let _0x25f323 = [];
               for (let _0x33489 = 0x0; _0x33489 < _0x31eeea; _0x33489++) {
                    let _0x5f2d51 = _0x2db56e['getUint32'](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Uint32Array[_0xdd3a0b(0x385)],
                         _0x5dd7f8[_0xdd3a0b(0x474)] = _0x2db56e['getFloat32'](_0xd4f4d5 + _0x49067e, !0x0),
                         _0xd4f4d5 += Float32Array[_0xdd3a0b(0x385)],
                         _0x5dd7f8[_0xdd3a0b(0x472)]['x'] = _0x2db56e['getFloat64'](_0xd4f4d5 + _0x49067e, !0x0),
                         _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)],
                         _0x5dd7f8['minVerticesValue']['y'] = _0x2db56e['getFloat64'](_0xd4f4d5 + _0x49067e, !0x0),
                         _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)],
                         _0x5dd7f8['minVerticesValue']['z'] = _0x2db56e[_0xdd3a0b(0x994)](_0xd4f4d5 + _0x49067e, !0x0),
                         _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x38f15a = _0x2db56e[_0xdd3a0b(0x994)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x39f949 = _0x2db56e['getFloat64'](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x138359 = _0x2db56e['getFloat64'](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x5316d3 = _0x2db56e[_0xdd3a0b(0x994)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x13464d = _0x2db56e[_0xdd3a0b(0x994)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array['BYTES_PER_ELEMENT'];
                    let _0xf40ce4 = _0x2db56e[_0xdd3a0b(0x994)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x367668 = _0x2db56e[_0xdd3a0b(0x994)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)];
                    let _0x5662d3 = _0x2db56e['getFloat64'](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Float64Array[_0xdd3a0b(0x385)],
                         _0x5dd7f8[_0xdd3a0b(0x302)][0x0]['x'] = _0x138359,
                         _0x5dd7f8[_0xdd3a0b(0x302)][0x0]['y'] = _0x5316d3,
                         _0x5dd7f8[_0xdd3a0b(0x302)][0x1]['x'] = _0x367668,
                         _0x5dd7f8[_0xdd3a0b(0x302)][0x1]['y'] = _0x5662d3,
                         _0x5dd7f8[_0xdd3a0b(0x541)][0x0]['x'] = _0x38f15a,
                         _0x5dd7f8[_0xdd3a0b(0x541)][0x0]['y'] = _0x39f949,
                         _0x5dd7f8['texCoordCompressConstant'][0x1]['x'] = _0x13464d,
                         _0x5dd7f8[_0xdd3a0b(0x541)][0x1]['y'] = _0xf40ce4;
                    let _0x5a646b = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Int32Array[_0xdd3a0b(0x385)];
                    let _0x18d090 = new Object();
                    for (let _0x47b9d6 = 0x0; _0x47b9d6 < _0x5a646b; _0x47b9d6++) {
                         let _0x42e985 = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                         _0xd4f4d5 += Int32Array['BYTES_PER_ELEMENT'];
                         let _0x336136 = _0x42e985
                              , _0x4d121a = 0x0;
                         _0x336136 != _0x130512[_0xdd3a0b(0x6e3)] && _0x336136 != _0x130512[_0xdd3a0b(0x434)] || (_0x4d121a = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0),
                              _0xd4f4d5 += Int32Array[_0xdd3a0b(0x385)]);
                         let _0xf4fae3 = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                         _0xd4f4d5 += Int32Array[_0xdd3a0b(0x385)];
                         let _0x2c2d97 = new Uint8Array(_0x2db56e[_0xdd3a0b(0x25d)], _0xd4f4d5 + _0x49067e, _0xf4fae3)
                              , _0x5f56c9 = ((_0xd4f4d5 += Uint8Array['BYTES_PER_ELEMENT'] * _0xf4fae3) + _0x49067e) % 0x4;
                         _0x5f56c9 && (_0x5f56c9 = 0x4 - _0x5f56c9),
                              _0xd4f4d5 += _0x5f56c9,
                              _0x29fa64(_0x5f2d51, _0x336136, _0x4d121a, _0x2c2d97, _0x5dd7f8, _0x34058e, undefined, ![], _0x18d090, undefined);
                    }
                    let _0x2c8439 = _0x360cac(_0x2db56e, _0x49067e, _0x5a77fd, _0xd4f4d5);
                    _0xd4f4d5 = _0x2c8439[_0xdd3a0b(0xad6)],
                         _0x5dd7f8[_0xdd3a0b(0x783)] = JSON[_0xdd3a0b(0x9bc)](_0x2c8439[_0xdd3a0b(0x379)]);
                    let _0x43474b = _0xdd3a0b(0xa2d) + _0x5dd7f8[_0xdd3a0b(0x783)][_0xdd3a0b(0xc7f)]
                         , _0x76606d = _0xdd3a0b(0xa2d) + _0x5dd7f8[_0xdd3a0b(0x783)][_0xdd3a0b(0xa31)]
                         , _0x37c01e = _0xdd3a0b(0xa2d) + _0x5dd7f8[_0xdd3a0b(0x783)]['VertexWeight_1'];
                    Cesium['defined'](_0x5dd7f8[_0xdd3a0b(0x360)][_0x43474b]) && (_0x5dd7f8[_0xdd3a0b(0x360)][_0xdd3a0b(0x629)] = _0x5dd7f8[_0xdd3a0b(0x360)][_0x43474b],
                         _0x33489 === _0x31eeea - 0x1 && delete _0x5dd7f8[_0xdd3a0b(0x360)][_0x43474b]),
                         Cesium[_0xdd3a0b(0x336)](_0x5dd7f8[_0xdd3a0b(0x360)][_0x76606d]) && (_0x5dd7f8[_0xdd3a0b(0x360)][_0xdd3a0b(0x5eb)] = _0x5dd7f8[_0xdd3a0b(0x360)][_0x76606d],
                              _0x33489 === _0x31eeea - 0x1 && delete _0x5dd7f8['attrLocation'][_0x76606d]),
                         Cesium[_0xdd3a0b(0x336)](_0x5dd7f8[_0xdd3a0b(0x360)][_0x37c01e]) && (_0x5dd7f8[_0xdd3a0b(0x360)][_0xdd3a0b(0xd0b)] = _0x5dd7f8[_0xdd3a0b(0x360)][_0x37c01e],
                              _0x33489 === _0x31eeea - 0x1 && delete _0x5dd7f8[_0xdd3a0b(0x360)][_0x37c01e]);
                    let _0x5ee243 = Object[_0xdd3a0b(0x60f)](_0x5dd7f8[_0xdd3a0b(0x360)])
                         , _0x14ef91 = _0x5ee243[_0xdd3a0b(0x72b)];
                    for (let _0x2493d2 = 0x0; _0x2493d2 < _0x14ef91; ++_0x2493d2) {
                         let _0x5d4bb6 = _0x5ee243[_0x2493d2];
                         -0x1 !== _0x5d4bb6['indexOf'](_0xdd3a0b(0xa2d)) && delete _0x5dd7f8[_0xdd3a0b(0x360)][_0x5d4bb6];
                    }
                    let _0x121ba4 = (_0xd4f4d5 + _0x49067e) % 0x4;
                    _0x121ba4 && (_0x121ba4 = 0x4 - _0x121ba4),
                         _0xd4f4d5 += _0x121ba4;
                    let _0x42d3f9 = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                    _0xd4f4d5 += Int32Array[_0xdd3a0b(0x385)];
                    for (let _0x5d1736 = 0x0; _0x5d1736 < _0x42d3f9; _0x5d1736++) {
                         let _0x3eb8bc = {}
                              , _0x3a6d56 = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                         if (_0xd4f4d5 += Int32Array['BYTES_PER_ELEMENT'],
                              _0x3a6d56 > 0x0) {
                              let _0x434a9f = _0x2db56e['getInt8'](_0xd4f4d5 + _0x49067e, !0x0);
                              _0xd4f4d5 += Int8Array[_0xdd3a0b(0x385)],
                                   _0x2db56e[_0xdd3a0b(0xa1f)](_0xd4f4d5 + _0x49067e, !0x0),
                                   _0xd4f4d5 += Int8Array[_0xdd3a0b(0x385)];
                              let _0x16798a = _0x2db56e[_0xdd3a0b(0xa1f)](_0xd4f4d5 + _0x49067e, !0x0);
                              _0xd4f4d5 += Int8Array[_0xdd3a0b(0x385)],
                                   _0x2db56e[_0xdd3a0b(0xa1f)](_0xd4f4d5 + _0x49067e, !0x0),
                                   _0xd4f4d5 += Int8Array[_0xdd3a0b(0x385)];
                              let _0x395f42, _0x22f80f = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                              _0xd4f4d5 += Int32Array[_0xdd3a0b(0x385)],
                                   0xd !== _0x16798a ? (_0x395f42 = new Uint8Array(_0x2db56e[_0xdd3a0b(0x25d)], _0xd4f4d5 + _0x49067e, _0x22f80f),
                                        _0xd4f4d5 += Uint8Array[_0xdd3a0b(0x385)] * _0x22f80f) : (_0x395f42 = new Uint32Array(_0x2db56e[_0xdd3a0b(0x25d)], _0xd4f4d5 + _0x49067e, _0x22f80f),
                                             _0xd4f4d5 += Uint32Array[_0xdd3a0b(0x385)] * _0x22f80f);
                              let _0x324334, _0x4a3ac7 = (_0xd4f4d5 + _0x49067e) % 0x4;
                              _0x4a3ac7 && (_0x4a3ac7 = 0x4 - _0x4a3ac7),
                                   _0xd4f4d5 += _0x4a3ac7,
                                   0xd !== _0x16798a ? (_0x324334 = Cesium['ComponentDatatype'][_0xdd3a0b(0x8bc)](Cesium['ComponentDatatype'][_0xdd3a0b(0xb8c)], _0x3a6d56 * Uint32Array[_0xdd3a0b(0x385)]),
                                        _0x23b3ad[_0xdd3a0b(0xb10)](_0x324334, _0x3a6d56, Uint32Array[_0xdd3a0b(0x385)], _0x395f42)) : _0x324334 = _0x395f42;
                              let _0x419467, _0x4257c5 = _0x2db56e[_0xdd3a0b(0x566)](_0xd4f4d5 + _0x49067e, !0x0);
                              _0xd4f4d5 += Int32Array[_0xdd3a0b(0x385)],
                                   _0x3eb8bc['indexType'] = _0x434a9f,
                                   0x0 === _0x434a9f ? _0x419467 = new Uint16Array(_0x3a6d56) : 0x1 === _0x434a9f && (_0x419467 = new Uint32Array(_0x3a6d56)),
                                   _0x3eb8bc[_0xdd3a0b(0x645)] = _0x3a6d56;
                              let _0x4b318d = new Uint32Array(_0x324334[_0xdd3a0b(0x25d)], _0x324334[_0xdd3a0b(0x490)], _0x324334['byteLength'] / 0x4);
                              _0x419467[_0xdd3a0b(0x320)](_0x4b318d, 0x0),
                                   _0x3eb8bc[_0xdd3a0b(0xa9c)] = _0x419467,
                                   _0x3eb8bc[_0xdd3a0b(0xba3)] = _0x16798a;
                              for (let _0x1d3eff = 0x0; _0x1d3eff < _0x4257c5; _0x1d3eff++) {
                                   let _0x34fc71 = _0x360cac(_0x2db56e, _0x49067e, _0x5a77fd, _0xd4f4d5)
                                        , _0x51e3e8 = _0x34fc71[_0xdd3a0b(0x379)];
                                   _0xd4f4d5 = _0x34fc71[_0xdd3a0b(0xad6)],
                                        _0x3eb8bc['materialCode'] = _0x51e3e8;
                              }
                              if (_0x25f323[_0xdd3a0b(0x72b)] > 0x0 && 0xd !== _0x16798a) {
                                   let _0x19efc5 = _0x5dd7f8[_0xdd3a0b(0xafe)];
                                   _0x3eb8bc[_0xdd3a0b(0xa9c)] = _0x4b318d['map'](function (_0x5a02ce) {
                                        return _0x5a02ce + _0x19efc5;
                                   }),
                                        _0x3eb8bc[_0xdd3a0b(0x9b7)] = 0x1;
                              }
                              _0x25f323[_0xdd3a0b(0x63e)](_0x3eb8bc);
                              let _0x1cb2eb = (_0xd4f4d5 + _0x49067e) % 0x4;
                              _0x1cb2eb && (_0x1cb2eb = 0x4 - _0x1cb2eb),
                                   _0xd4f4d5 += _0x1cb2eb;
                         }
                    }
               }
               return _0x5dd7f8[_0xdd3a0b(0x408)] = _0x34058e,
                    _0x5b9147[_0x2c9ed8] = {
                         'vertexPackage': _0x5dd7f8,
                         'arrIndexPackage': _0x25f323,
                         'edgeGeometry': undefined,
                         'cartographicBounds': void 0x0
                    },
                    _0xd4f4d5;
          }
          function _0x447e62(_0x25c4e3, _0x2d4531, _0xeddc22, _0x4739de, _0x1afe11, _0x546e74) {
               const _0x57acf1 = _0xc3a123;
               let _0x5b4a9f = _0x2d4531[_0x57acf1(0x494)](_0x4739de + _0xeddc22, !0x0);
               _0x4739de += Uint32Array['BYTES_PER_ELEMENT'];
               for (let _0x4243c5 = 0x0; _0x4243c5 < _0x5b4a9f; _0x4243c5++) {
                    let _0x37221b = {};
                    0x3 === _0x546e74['version'] && (_0x2d4531['getUint32'](_0x4739de + _0xeddc22, !0x0),
                         _0x4739de += Uint32Array['BYTES_PER_ELEMENT']);
                    let _0x3b7f83 = _0x2d4531['getUint32'](_0x4739de + _0xeddc22, !0x0);
                    _0x4739de += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x200264 = _0x2d4531[_0x57acf1(0xb7b)](_0x4739de + _0xeddc22, !0x0);
                    _0x4739de += Uint8Array['BYTES_PER_ELEMENT'],
                         _0x2d4531[_0x57acf1(0xb7b)](_0x4739de + _0xeddc22, !0x0),
                         _0x4739de += Uint8Array[_0x57acf1(0x385)];
                    let _0x7cf5e = _0x2d4531[_0x57acf1(0xb7b)](_0x4739de + _0xeddc22, !0x0);
                    if (_0x4739de += Uint8Array[_0x57acf1(0x385)],
                         _0x4739de += Uint8Array[_0x57acf1(0x385)],
                         _0x3b7f83 > 0x0) {
                         let _0x2ec6bf, _0x3d75c0 = null;
                         0x1 === _0x200264 || 0x3 === _0x200264 ? (_0x2ec6bf = _0x3b7f83 * Uint32Array['BYTES_PER_ELEMENT'],
                              _0x3d75c0 = _0x25c4e3['subarray'](_0x4739de, _0x4739de + _0x2ec6bf)) : (_0x2ec6bf = _0x3b7f83 * Uint16Array[_0x57acf1(0x385)],
                                   _0x3d75c0 = _0x25c4e3[_0x57acf1(0x4ca)](_0x4739de, _0x4739de + _0x2ec6bf),
                                   _0x3b7f83 % 0x2 != 0x0 && (_0x2ec6bf += 0x2)),
                              _0x37221b[_0x57acf1(0xa9c)] = _0x3d75c0,
                              _0x4739de += _0x2ec6bf;
                    }
                    _0x37221b['indicesCount'] = _0x3b7f83,
                         _0x37221b[_0x57acf1(0x9b7)] = _0x200264,
                         _0x37221b[_0x57acf1(0xba3)] = _0x7cf5e;
                    let _0x1b6afa = _0x2d4531[_0x57acf1(0x494)](_0x4739de + _0xeddc22, !0x0);
                    _0x4739de += Uint32Array['BYTES_PER_ELEMENT'];
                    for (let _0x424e28 = 0x0; _0x424e28 < _0x1b6afa; _0x424e28++) {
                         let _0x29ac02 = _0x360cac(_0x2d4531, _0xeddc22, _0x25c4e3, _0x4739de)
                              , _0xdf68f9 = _0x29ac02[_0x57acf1(0x379)];
                         _0x4739de = _0x29ac02[_0x57acf1(0xad6)],
                              _0x37221b['materialCode'] = _0xdf68f9;
                    }
                    0x0 !== _0x4739de % 0x4 && (_0x4739de += 0x4 - _0x4739de % 0x4),
                         _0x1afe11[_0x57acf1(0x63e)](_0x37221b);
               }
               return _0x4739de;
          }
          function _0x40c4bf(_0x13a38a, _0x5ea34d, _0x3df6c6, _0x4254cc) {
               const _0xf8255b = _0xc3a123;
               let _0x388b08 = _0x24d131(_0x5ea34d, _0x13a38a, _0x3df6c6)
                    , _0x25cf29 = _0x388b08[_0xf8255b(0x25d)]
                    , _0x4d09fa = _0x388b08['dataViewByteOffset']
                    , _0x2f3e37 = 0x0
                    , _0x5aa650 = _0x5ea34d[_0xf8255b(0x494)](_0x2f3e37 + _0x4d09fa, !0x0);
               _0x2f3e37 += Uint32Array[_0xf8255b(0x385)];
               let _0x89608c = _0x4254cc[_0xf8255b(0x9b0)];
               for (let _0x4e0fc5 = 0x0; _0x4e0fc5 < _0x5aa650; _0x4e0fc5++) {
                    0x3 === _0x4254cc[_0xf8255b(0xd2f)] && (_0x5ea34d['getUint32'](_0x2f3e37 + _0x4d09fa, !0x0),
                         _0x2f3e37 += Uint32Array[_0xf8255b(0x385)]);
                    let _0x3fa7e8 = _0x360cac(_0x5ea34d, _0x4d09fa, _0x25cf29, _0x2f3e37)
                         , _0x3f9bc0 = _0x3fa7e8[_0xf8255b(0x379)];
                    _0x2f3e37 = _0x3fa7e8['bytesOffset'];
                    let _0x23d48a = _0x2f3e37 % 0x4;
                    0x0 !== _0x23d48a && (_0x2f3e37 += 0x4 - _0x23d48a);
                    let _0x53d968 = _0x5ea34d[_0xf8255b(0x494)](_0x2f3e37 + _0x4d09fa, !0x0);
                    _0x2f3e37 += Int32Array['BYTES_PER_ELEMENT'];
                    let _0x1b5fb1 = {
                         'vertexAttributes': [],
                         'attrLocation': {},
                         'instanceCount': 0x0,
                         'instanceMode': 0x0,
                         'instanceIndex': -0x1
                    };
                    if (0x3 === _0x4254cc['version'])
                         switch (_0x53d968) {
                              case _0x6dadaa['Standard']:
                                   _0x53d968 = _0x226d3d[_0xf8255b(0x4ac)];
                                   break;
                              case _0x6dadaa['Draco']:
                                   _0x53d968 = _0x226d3d[_0xf8255b(0x98e)];
                                   break;
                              case _0x6dadaa[_0xf8255b(0xc4b)]:
                                   _0x53d968 = _0x226d3d[_0xf8255b(0x4cb)];
                         }
                    if (_0x53d968 === _0x226d3d[_0xf8255b(0x4ac)] ? _0x2f3e37 = _0x4e2b60(_0x25cf29, _0x5ea34d, _0x4d09fa, _0x2f3e37, _0x1b5fb1, _0x4254cc) : _0x53d968 === _0x226d3d[_0xf8255b(0x4cb)] && 0x3 !== _0x4254cc[_0xf8255b(0xd2f)] ? _0x2f3e37 = _0x387d86(_0x13a38a, _0x5ea34d, _0x3df6c6, _0x1b5fb1) : _0x53d968 === _0x226d3d['SV_DracoCompressed'] ? _0x2f3e37 = _0x1ef51c(_0x25cf29, _0x5ea34d, _0x4d09fa, _0x2f3e37, _0x1b5fb1, _0x4254cc, _0x3f9bc0) : _0x53d968 === _0x226d3d[_0xf8255b(0x4cb)] && 0x3 === _0x4254cc[_0xf8255b(0xd2f)] && (window[_0xf8255b(0x937)] = 'MESHOPT',
                         _0x2f3e37 = _0x8ba5da(_0x25cf29, _0x13a38a, _0x5ea34d, _0x2f3e37, _0x3df6c6, _0x1b5fb1, 0x0, _0x89608c, _0x3f9bc0)),
                         _0x53d968 === _0x226d3d['SV_Standard']) {
                         let _0x11d20c, _0x5bd257 = [];
                         _0x2f3e37 = _0x447e62(_0x25cf29, _0x5ea34d, _0x4d09fa, _0x2f3e37, _0x5bd257, _0x4254cc),
                              0x2 === _0x5bd257[_0xf8255b(0x72b)] && 0xd === _0x5bd257[0x1][_0xf8255b(0xba3)] && _0x5bd257[0x1][_0xf8255b(0x645)] >= 0x3 && (_0x11d20c = _0x1d0b86[_0xf8255b(0x9c1)](_0x1b5fb1, _0x5bd257[0x1])),
                              _0x89608c[_0x3f9bc0] = {
                                   'vertexPackage': _0x1b5fb1,
                                   'arrIndexPackage': _0x5bd257,
                                   'edgeGeometry': _0x11d20c
                              };
                    }
                    if (0x3 === _0x4254cc['version']) {
                         let _0x557532 = new Cesium['Cartesian3']();
                         _0x557532['x'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array['BYTES_PER_ELEMENT'],
                              _0x557532['y'] = _0x5ea34d['getFloat64'](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x557532['z'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)];
                         let _0x34d0a9 = new Cesium[(_0xf8255b(0x25b))]();
                         _0x34d0a9['x'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x34d0a9['y'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x34d0a9['z'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)];
                         let _0x4eb708 = new Cesium[(_0xf8255b(0x25b))]();
                         _0x4eb708['x'] = _0x5ea34d['getFloat64'](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x4eb708['y'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x4eb708['z'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)];
                         let _0x4eebe1 = new Cesium[(_0xf8255b(0x25b))]();
                         _0x4eebe1['x'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x4eebe1['y'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)],
                              _0x4eebe1['z'] = _0x5ea34d[_0xf8255b(0x994)](_0x2f3e37 + _0x4d09fa, !0x0),
                              _0x2f3e37 += Float64Array[_0xf8255b(0x385)];
                    }
               }
               return 0x3 !== _0x4254cc[_0xf8255b(0xd2f)] && (_0x388b08 = _0x24d131(_0x5ea34d, _0x13a38a, _0x2f3e37 + _0x4d09fa)),
                    _0x388b08[_0xf8255b(0x490)];
          }
          function _0x36108b(_0x102865, _0xc52f45, _0x59398e, _0xf56033) {
               const _0x28eca2 = _0xc3a123;
               let _0x3286a9 = _0x24d131(_0xc52f45, _0x102865, _0x59398e)
                    , _0x4fa7c6 = _0x3286a9['buffer'];
               _0x59398e = _0x3286a9[_0x28eca2(0xbc1)];
               var _0x5e9291 = 0x0;
               let _0x5751e8 = _0xc52f45[_0x28eca2(0x494)](_0x5e9291 + _0x59398e, !0x0);
               _0x5e9291 += Uint32Array[_0x28eca2(0x385)];
               for (let _0x2aa01f = 0x0; _0x2aa01f < _0x5751e8; _0x2aa01f++) {
                    let _0x3ccb36 = _0x360cac(_0xc52f45, _0x59398e, _0x4fa7c6, _0x5e9291)
                         , _0x4f74a1 = _0x3ccb36[_0x28eca2(0x379)]
                         , _0x52b3d6 = (_0x5e9291 = _0x3ccb36[_0x28eca2(0xad6)]) % 0x4;
                    0x0 !== _0x52b3d6 && (_0x5e9291 += 0x4 - _0x52b3d6),
                         _0xc52f45[_0x28eca2(0x494)](_0x5e9291 + _0x59398e, !0x0),
                         _0x5e9291 += Uint32Array[_0x28eca2(0x385)];
                    let _0x25243d = _0xc52f45[_0x28eca2(0x494)](_0x5e9291 + _0x59398e, !0x0);
                    _0x5e9291 += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x35dd17 = _0xc52f45[_0x28eca2(0x494)](_0x5e9291 + _0x59398e, !0x0);
                    _0x5e9291 += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x441daf = _0xc52f45['getUint32'](_0x5e9291 + _0x59398e, !0x0);
                    _0x5e9291 += Uint32Array[_0x28eca2(0x385)];
                    let _0x1d2e67 = _0xc52f45['getUint32'](_0x5e9291 + _0x59398e, !0x0);
                    _0x5e9291 += Uint32Array[_0x28eca2(0x385)];
                    let _0x11568e = _0xc52f45[_0x28eca2(0x494)](_0x5e9291 + _0x59398e, !0x0);
                    _0x5e9291 += Uint32Array[_0x28eca2(0x385)];
                    let _0x46bc9b = _0x4fa7c6[_0x28eca2(0x4ca)](_0x5e9291, _0x5e9291 + _0x1d2e67);
                    _0x5e9291 += _0x1d2e67;
                    let _0x12b3d9 = _0x11568e === _0x582a9d['RGB'] || _0x11568e === _0x582a9d['BGR'] ? Cesium[_0x28eca2(0x4e1)][_0x28eca2(0x788)] : Cesium[_0x28eca2(0x4e1)][_0x28eca2(0x215)];
                    _0xf56033[_0x4f74a1] = {
                         'id': _0x4f74a1,
                         'width': _0x25243d,
                         'height': _0x35dd17,
                         'compressType': _0x441daf,
                         'nFormat': _0x11568e,
                         'internalFormat': _0x12b3d9,
                         'arrayBufferView': _0x46bc9b
                    };
               }
               return _0x3286a9[_0x28eca2(0x490)];
          }
          function _0x3fcb5b(_0x3f4c66, _0xa74ed5, _0x3b7c0e, _0x42a7c2) {
               const _0x4c3ed3 = _0xc3a123;
               let _0x76517 = _0xa74ed5[_0x4c3ed3(0x494)](_0x3b7c0e, !0x0);
               _0x3b7c0e += Uint32Array[_0x4c3ed3(0x385)];
               let _0x172c7c = new Uint8Array(_0x3f4c66, _0x3b7c0e, _0x76517)
                    , _0x176a1d = Cesium[_0x4c3ed3(0x236)](_0x172c7c);
               return _0x3b7c0e += _0x76517,
                    _0x42a7c2[_0x4c3ed3(0x214)] = JSON[_0x4c3ed3(0x9bc)](_0x176a1d),
                    _0x3b7c0e;
          }
          function _0x19dcd3(_0x2743b7, _0x3a01a1, _0x75453b, _0x41b056, _0x2c8637, _0x4d9c7d) {
               const _0x513d86 = _0xc3a123;
               let _0x3c4571 = _0x24d131(_0x3a01a1, _0x2743b7, _0x75453b)
                    , _0x4c21ce = _0x3c4571[_0x513d86(0x25d)]
                    , _0xd8e908 = 0x0;
               if (_0x75453b = _0x3c4571[_0x513d86(0xbc1)],
                    0x1 == (0x1 & _0x41b056)) {
                    let _0x37f93f = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0);
                    _0xd8e908 += Uint32Array[_0x513d86(0x385)];
                    for (let _0x4e4bdb = 0x0; _0x4e4bdb < _0x37f93f; _0x4e4bdb++) {
                         let _0x319020 = _0x360cac(_0x3a01a1, _0x75453b, _0x4c21ce, _0xd8e908)
                              , _0x5ebee9 = _0x319020[_0x513d86(0x379)];
                         _0xd8e908 = _0x319020[_0x513d86(0xad6)];
                         let _0x383ae3 = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0);
                         _0xd8e908 += Uint32Array['BYTES_PER_ELEMENT'];
                         let _0x595da2 = {};
                         if (_0x2c8637[_0x5ebee9][_0x513d86(0x239)] = _0x595da2,
                              -0x1 == _0x2c8637[_0x5ebee9]['vertexPackage']['instanceIndex']) {
                              let _0x4ccef7 = new Float32Array(_0x2c8637[_0x5ebee9][_0x513d86(0xd49)][_0x513d86(0x8d0)]);
                              for (let _0x803aac = 0x0; _0x803aac < _0x383ae3; _0x803aac++) {
                                   let _0x263dc9 = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0);
                                   _0xd8e908 += Uint32Array[_0x513d86(0x385)];
                                   let _0x8c8a9b = _0x3a01a1['getUint32'](_0xd8e908 + _0x75453b, !0x0);
                                   _0xd8e908 += Uint32Array[_0x513d86(0x385)];
                                   let _0x3da384 = 0x0
                                        , _0xa7691c = 0x0;
                                   _0x595da2[_0x263dc9] = {
                                        'batchId': _0x803aac
                                   };
                                   for (let _0x5f1745 = 0x0; _0x5f1745 < _0x8c8a9b; _0x5f1745++)
                                        _0xa7691c = _0x3a01a1['getUint32'](_0xd8e908 + _0x75453b, !0x0),
                                             _0xd8e908 += Uint32Array[_0x513d86(0x385)],
                                             _0x3da384 = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0),
                                             _0xd8e908 += Uint32Array[_0x513d86(0x385)],
                                             _0x4ccef7[_0x513d86(0xd1b)](_0x803aac, _0xa7691c, _0xa7691c + _0x3da384);
                                   _0x595da2[_0x263dc9]['vertexColorOffset'] = _0xa7691c,
                                        _0x595da2[_0x263dc9][_0x513d86(0x2cc)] = _0x3da384;
                              }
                              _0x2bd14f(_0x2c8637[_0x5ebee9][_0x513d86(0xd49)], _0x4ccef7, void 0x0);
                         } else {
                              let _0x2bf75d = _0x2c8637[_0x5ebee9][_0x513d86(0xd49)]['instanceCount'];
                              _0x2c8637[_0x5ebee9][_0x513d86(0xd49)][_0x513d86(0xbd8)],
                                   _0x2c8637[_0x5ebee9][_0x513d86(0xd49)]['instanceMode'];
                              let _0x2a622e = new Float32Array(_0x2bf75d)
                                   , _0x21f9cf = 0x0;
                              for (let _0x402ea4 = 0x0; _0x402ea4 < _0x383ae3; _0x402ea4++) {
                                   let _0x2e1344 = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0);
                                   _0xd8e908 += Uint32Array['BYTES_PER_ELEMENT'];
                                   let _0x5a4d3a = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0);
                                   _0xd8e908 += Uint32Array[_0x513d86(0x385)];
                                   for (let _0x1b08d3 = 0x0; _0x1b08d3 < _0x5a4d3a; _0x1b08d3++) {
                                        let _0xddb29c = _0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0);
                                        _0xd8e908 += Uint32Array[_0x513d86(0x385)],
                                             _0x2a622e[_0x21f9cf] = _0x21f9cf,
                                             void 0x0 === _0x595da2[_0x2e1344] && (_0x595da2[_0x2e1344] = {
                                                  'vertexColorCount': 0x1,
                                                  'instanceIds': [],
                                                  'vertexColorOffset': _0x21f9cf
                                             }),
                                             _0x595da2[_0x2e1344][_0x513d86(0x7d6)][_0x513d86(0x63e)](_0xddb29c),
                                             _0x21f9cf++,
                                             0x3 === _0x4d9c7d && (_0x3a01a1[_0x513d86(0x494)](_0xd8e908 + _0x75453b, !0x0),
                                                  _0xd8e908 += Uint32Array[_0x513d86(0x385)]);
                                   }
                              }
                              _0x2bd14f(_0x2c8637[_0x5ebee9][_0x513d86(0xd49)], _0x2a622e, 0x1);
                         }
                    }
               }
          }
          function _0x2bd14f(_0x5caf02, _0x1fed30, _0x176442) {
               const _0x379a18 = _0xc3a123;
               let _0x463b4a = _0x5caf02['vertexAttributes']
                    , _0x57bac5 = _0x5caf02[_0x379a18(0x360)]
                    , _0x188be6 = _0x463b4a[_0x379a18(0x72b)];
               _0x57bac5[0x1 === _0x176442 ? _0x379a18(0x1cc) : _0x379a18(0xd53)] = _0x188be6,
                    _0x463b4a['push']({
                         'index': _0x188be6,
                         'typedArray': _0x1fed30,
                         'componentsPerAttribute': 0x1,
                         'componentDatatype': Cesium[_0x379a18(0x5fa)][_0x379a18(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x0,
                         'instanceDivisor': _0x176442
                    });
          }
          new Cesium[(_0xc3a123(0x821))](),
               _0x1f50b1['parseBuffer'] = function (_0x3a8209) {
                    const _0x1c021e = _0xc3a123;
                    let _0x3661c2 = 0x0
                         , _0xd265e4 = {
                              'version': void 0x0,
                              'groupNode': void 0x0,
                              'geoPackage': {},
                              'materials': void 0x0,
                              'texturePackage': {}
                         }
                         , _0x41d11e = new DataView(_0x3a8209);
                    _0xd265e4[_0x1c021e(0xd2f)] = _0x41d11e[_0x1c021e(0x283)](_0x3661c2, !0x0),
                         _0x3661c2 += Float32Array[_0x1c021e(0x385)],
                         _0xd265e4[_0x1c021e(0xd2f)] >= 0x3 && (_0x41d11e['getUint32'](_0x3661c2, !0x0),
                              _0x3661c2 += Uint32Array[_0x1c021e(0x385)]),
                         _0xd265e4['version'] >= 0x2 && (_0x41d11e[_0x1c021e(0x494)](_0x3661c2, !0x0),
                              _0x3661c2 += Uint32Array[_0x1c021e(0x385)]),
                         _0x41d11e['getUint32'](_0x3661c2, !0x0),
                         _0x3661c2 += Uint32Array[_0x1c021e(0x385)];
                    let _0x572679 = _0x3edb3c(_0x3a8209, _0x3661c2);
                    _0x41d11e = new DataView(_0x572679),
                         _0x3661c2 = 0x0;
                    let _0x2502ad = _0x41d11e[_0x1c021e(0x494)](_0x3661c2, !0x0);
                    return _0x3661c2 += Uint32Array[_0x1c021e(0x385)],
                         _0x3661c2 = _0x436cba(_0x572679, _0x41d11e, _0x3661c2, _0xd265e4),
                         _0x3661c2 = _0x40c4bf(_0x572679, _0x41d11e, _0x3661c2, _0xd265e4),
                         _0x3661c2 = _0x36108b(_0x572679, _0x41d11e, _0x3661c2, _0xd265e4[_0x1c021e(0x245)]),
                         _0x3661c2 = _0x3fcb5b(_0x572679, _0x41d11e, _0x3661c2, _0xd265e4),
                         0x3 === _0xd265e4['version'] && (_0x2502ad = _0x41d11e[_0x1c021e(0x494)](_0x3661c2, !0x0),
                              _0x3661c2 += Uint32Array[_0x1c021e(0x385)]),
                         ((_0x2502ad & _0x2da08b[_0x1c021e(0xb1b)]) == _0x2da08b[_0x1c021e(0xb1b)] && _0x19dcd3(_0x572679, _0x41d11e, _0x3661c2, _0x2502ad, _0xd265e4[_0x1c021e(0x9b0)], _0xd265e4[_0x1c021e(0xd2f)]),
                              _0xd265e4);
               }
               ;
          const _0x43c2df = {
               'Distance': 0x0,
               'Pixel': 0x1
          };
          var _0x1a0a6e = Object['freeze'](_0x43c2df);
          function _0x361d07(_0x381e9f, _0x424654, _0x4c2929, _0x43ca5e) {
               const _0x48133f = _0xc3a123;
               let _0x56da89 = _0x4c2929['getUint32'](_0x43ca5e, !0x0);
               _0x43ca5e += Uint32Array[_0x48133f(0x385)];
               let _0xa0d728 = 0x0
                    , _0x5bef80 = {}
                    , _0x3c20d5 = _0x5bef80[_0x48133f(0x761)] = []
                    , _0x1d16b4 = _0x5bef80[_0x48133f(0x360)] = {};
               _0x5bef80[_0x48133f(0x4a9)] = 0x0,
                    _0x5bef80[_0x48133f(0xd4e)] = 0x0;
               let _0x1422de = 0x0;
               _0x4c2929['getUint32'](_0x43ca5e, !0x0),
                    _0x43ca5e += Uint32Array[_0x48133f(0x385)];
               let _0x13281a = _0x4c2929[_0x48133f(0x876)](_0x43ca5e, !0x0);
               _0x43ca5e += Uint32Array[_0x48133f(0x385)];
               let _0x3ffa60 = _0x13281a;
               _0x13281a > 0x4 && (_0x3ffa60 = _0x13281a >> 0x8,
                    _0x13281a &= 0xf);
               let _0x40533d = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
               if (_0x43ca5e += Uint32Array['BYTES_PER_ELEMENT'],
                    _0x40533d > 0x0) {
                    let _0x5eed86 = _0x4c2929[_0x48133f(0x876)](_0x43ca5e, !0x0);
                    _0x5eed86 = _0x13281a * Float32Array[_0x48133f(0x385)],
                         _0x43ca5e += Uint32Array['BYTES_PER_ELEMENT'],
                         _0xa0d728 = _0x40533d * _0x5eed86,
                         _0x1d16b4[_0x48133f(0x5e2)] = _0x1422de,
                         _0x3c20d5[_0x48133f(0x63e)]({
                              'index': _0x1d16b4[_0x48133f(0x5e2)],
                              'typedArray': _0x424654['subarray'](_0x43ca5e, _0x43ca5e + _0xa0d728),
                              'componentsPerAttribute': _0x13281a,
                              'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': _0x5eed86,
                              'normalize': !0x1
                         }),
                         _0x1422de++,
                         _0x43ca5e += _0xa0d728;
               }
               let _0x2fb41b = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
               if (_0x43ca5e += Uint32Array[_0x48133f(0x385)],
                    _0x2fb41b > 0x0) {
                    let _0x2aa00a = _0x4c2929[_0x48133f(0x876)](_0x43ca5e, !0x0);
                    _0x2aa00a = _0x3ffa60 * Float32Array[_0x48133f(0x385)],
                         _0x43ca5e += Uint32Array[_0x48133f(0x385)],
                         _0xa0d728 = _0x2fb41b * _0x2aa00a,
                         _0x1d16b4[_0x48133f(0x637)] = _0x1422de,
                         _0x3c20d5[_0x48133f(0x63e)]({
                              'index': _0x1d16b4['aNormal'],
                              'typedArray': _0x424654[_0x48133f(0x4ca)](_0x43ca5e, _0x43ca5e + _0xa0d728),
                              'componentsPerAttribute': _0x3ffa60,
                              'componentDatatype': Cesium['ComponentDatatype'][_0x48133f(0xa80)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': _0x2aa00a,
                              'normalize': !0x1
                         }),
                         _0x1422de++,
                         _0x43ca5e += _0xa0d728;
               }
               let _0x54b906 = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
               if (_0x43ca5e += Uint32Array[_0x48133f(0x385)],
                    _0x54b906 > 0x0) {
                    let _0x2954d4 = new Uint8Array(0x4 * _0x54b906)
                         , _0xe8fc3a = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
                    _0xe8fc3a = 0x4 * Float32Array['BYTES_PER_ELEMENT'],
                         _0x43ca5e += Uint32Array['BYTES_PER_ELEMENT'],
                         _0xa0d728 = _0x54b906 * _0xe8fc3a;
                    let _0x5b4316 = new Float32Array(_0x424654['buffer'], _0x43ca5e, 0x4 * _0x40533d);
                    for (let _0x420a94 = 0x0; _0x420a94 < _0x40533d; _0x420a94++)
                         _0x2954d4[0x4 * _0x420a94] = 0xff * _0x5b4316[0x4 * _0x420a94],
                              _0x2954d4[0x4 * _0x420a94 + 0x1] = 0xff * _0x5b4316[0x4 * _0x420a94 + 0x1],
                              _0x2954d4[0x4 * _0x420a94 + 0x2] = 0xff * _0x5b4316[0x4 * _0x420a94 + 0x2],
                              _0x2954d4[0x4 * _0x420a94 + 0x3] = 0xff * _0x5b4316[0x4 * _0x420a94 + 0x3];
                    _0x43ca5e += _0xa0d728,
                         _0x1d16b4[_0x48133f(0x7a0)] = _0x1422de,
                         _0x3c20d5[_0x48133f(0x63e)]({
                              'index': _0x1d16b4[_0x48133f(0x7a0)],
                              'typedArray': _0x2954d4,
                              'componentsPerAttribute': 0x4,
                              'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xb8c)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': 0x4,
                              'normalize': !0x0
                         }),
                         _0x1422de++;
               }
               let _0x4f0a53 = _0x4c2929['getUint32'](_0x43ca5e, !0x0);
               _0x43ca5e += Uint32Array[_0x48133f(0x385)],
                    _0x4f0a53 > 0x0 && (_0xa0d728 = 0x10 * _0x4f0a53,
                         _0x43ca5e += _0xa0d728);
               let _0x48a0fa = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
               _0x43ca5e += Uint32Array[_0x48133f(0x385)];
               let _0x3d0eaf, _0x47addc, _0x49f06b = -0x1;
               for (let _0x27fc99 = 0x0; _0x27fc99 < _0x48a0fa; _0x27fc99++) {
                    _0x3d0eaf = _0x4c2929['getUint32'](_0x43ca5e, !0x0),
                         _0x43ca5e += Uint32Array[_0x48133f(0x385)],
                         _0x47addc = _0x4c2929[_0x48133f(0x876)](_0x43ca5e, !0x0),
                         _0x43ca5e += Uint16Array['BYTES_PER_ELEMENT'],
                         _0x4c2929[_0x48133f(0x876)](_0x43ca5e, !0x0),
                         _0x43ca5e += Uint16Array[_0x48133f(0x385)],
                         _0xa0d728 = _0x3d0eaf * _0x47addc * Float32Array[_0x48133f(0x385)];
                    let _0x2c7833 = _0x424654[_0x48133f(0x4ca)](_0x43ca5e, _0x43ca5e + _0xa0d728);
                    if (-0x1 !== _0x49f06b || 0x14 !== _0x47addc && 0x23 !== _0x47addc) {
                         if (-0x1 !== _0x49f06b)
                              _0x5bef80['instanceBounds'] = new Float32Array(_0x424654['buffer'], _0x43ca5e, _0x3d0eaf * _0x47addc);
                         else {
                              let _0x5dc617 = 'aTexCoord' + _0x27fc99;
                              _0x1d16b4[_0x5dc617] = _0x1422de++,
                                   _0x3c20d5[_0x48133f(0x63e)]({
                                        'index': _0x1d16b4[_0x5dc617],
                                        'typedArray': _0x2c7833,
                                        'componentsPerAttribute': _0x47addc,
                                        'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': _0x47addc * Float32Array[_0x48133f(0x385)],
                                        'normalize': !0x1
                                   });
                         }
                    } else {
                         let _0x2cb8a2;
                         _0x49f06b = _0x27fc99,
                              _0x5bef80[_0x48133f(0x4a9)] = _0x3d0eaf,
                              _0x5bef80['instanceMode'] = _0x47addc,
                              _0x5bef80[_0x48133f(0xbd8)] = _0x2c7833,
                              0x14 === _0x47addc ? (_0x2cb8a2 = 0x14 * Float32Array[_0x48133f(0x385)],
                                   _0x1d16b4['uv2'] = _0x1422de++,
                                   _0x3c20d5[_0x48133f(0x63e)]({
                                        'index': _0x1d16b4[_0x48133f(0x77c)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': _0x2cb8a2,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x1d16b4[_0x48133f(0x5e5)] = _0x1422de++,
                                   _0x3c20d5[_0x48133f(0x63e)]({
                                        'index': _0x1d16b4[_0x48133f(0x5e5)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x4 * Float32Array[_0x48133f(0x385)],
                                        'strideInBytes': _0x2cb8a2,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x1d16b4[_0x48133f(0x343)] = _0x1422de++,
                                   _0x3c20d5[_0x48133f(0x63e)]({
                                        'index': _0x1d16b4[_0x48133f(0x343)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x8 * Float32Array[_0x48133f(0x385)],
                                        'strideInBytes': _0x2cb8a2,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x1d16b4['secondary_colour'] = _0x1422de++,
                                   _0x3c20d5[_0x48133f(0x63e)]({
                                        'index': _0x1d16b4[_0x48133f(0x74f)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0xc * Float32Array['BYTES_PER_ELEMENT'],
                                        'strideInBytes': _0x2cb8a2,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x1d16b4['uv6'] = _0x1422de++,
                                   _0x3c20d5[_0x48133f(0x63e)]({
                                        'index': _0x1d16b4['uv6'],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x10 * Float32Array[_0x48133f(0x385)],
                                        'strideInBytes': _0x2cb8a2,
                                        'instanceDivisor': 0x1
                                   })) : 0x23 === _0x47addc && (_0x2cb8a2 = 0x23 * Float32Array['BYTES_PER_ELEMENT'],
                                        _0x1d16b4[_0x48133f(0x61a)] = _0x1422de++,
                                        _0x3c20d5[_0x48133f(0x63e)]({
                                             'index': _0x1d16b4[_0x48133f(0x61a)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x0,
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1,
                                             'byteLength': _0xa0d728
                                        }),
                                        _0x1d16b4[_0x48133f(0x77c)] = _0x1422de++,
                                        _0x3c20d5[_0x48133f(0x63e)]({
                                             'index': _0x1d16b4[_0x48133f(0x77c)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x4 * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0x5e5)] = _0x1422de++,
                                        _0x3c20d5[_0x48133f(0x63e)]({
                                             'index': _0x1d16b4[_0x48133f(0x5e5)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x8 * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0x343)] = _0x1422de++,
                                        _0x3c20d5[_0x48133f(0x63e)]({
                                             'index': _0x1d16b4[_0x48133f(0x343)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium['ComponentDatatype'][_0x48133f(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0xc * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0x7ad)] = _0x1422de++,
                                        _0x3c20d5['push']({
                                             'index': _0x1d16b4[_0x48133f(0x7ad)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x10 * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0x718)] = _0x1422de++,
                                        _0x3c20d5['push']({
                                             'index': _0x1d16b4[_0x48133f(0x718)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x48133f(0x5fa)]['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x14 * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0x94d)] = _0x1422de++,
                                        _0x3c20d5['push']({
                                             'index': _0x1d16b4[_0x48133f(0x94d)],
                                             'componentsPerAttribute': 0x3,
                                             'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x18 * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0x74f)] = _0x1422de++,
                                        _0x3c20d5[_0x48133f(0x63e)]({
                                             'index': _0x1d16b4[_0x48133f(0x74f)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x48133f(0x5fa)][_0x48133f(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x1b * Float32Array[_0x48133f(0x385)],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x1d16b4[_0x48133f(0xc50)] = _0x1422de++,
                                        _0x3c20d5[_0x48133f(0x63e)]({
                                             'index': _0x1d16b4[_0x48133f(0xc50)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x48133f(0x5fa)]['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x1f * Float32Array['BYTES_PER_ELEMENT'],
                                             'strideInBytes': _0x2cb8a2,
                                             'instanceDivisor': 0x1
                                        }));
                    }
                    _0x43ca5e += _0xa0d728;
               }
               _0x5bef80[_0x48133f(0x8d0)] = _0x40533d,
                    _0x5bef80['instanceIndex'] = _0x49f06b;
               let _0x1ae582 = _0x4c2929['getUint32'](_0x43ca5e, !0x0);
               _0x43ca5e += Uint32Array[_0x48133f(0x385)];
               let _0x5b9590 = [];
               for (let _0x4f3890 = 0x0; _0x4f3890 < _0x1ae582; _0x4f3890++) {
                    let _0x302eef = {}
                         , _0x34bf38 = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
                    _0x43ca5e += Uint32Array[_0x48133f(0x385)];
                    let _0x15c9c2 = _0x4c2929['getUint8'](_0x43ca5e, !0x0);
                    _0x43ca5e += Uint8Array[_0x48133f(0x385)],
                         _0x4c2929['getUint8'](_0x43ca5e, !0x0),
                         _0x43ca5e += Uint8Array['BYTES_PER_ELEMENT'];
                    let _0xa42d44 = _0x4c2929[_0x48133f(0xb7b)](_0x43ca5e, !0x0);
                    _0x43ca5e += Uint8Array['BYTES_PER_ELEMENT'],
                         _0x43ca5e += 0x1,
                         _0x302eef[_0x48133f(0x645)] = _0x34bf38,
                         _0x302eef[_0x48133f(0x9b7)] = _0x15c9c2,
                         _0x302eef[_0x48133f(0xba3)] = _0xa42d44;
                    let _0xc16f05 = _0x43ca5e;
                    _0x34bf38 > 0x0 && (0x0 === _0x15c9c2 ? (_0xa0d728 = _0x34bf38 * Uint16Array['BYTES_PER_ELEMENT'],
                         _0x43ca5e += _0xa0d728,
                         _0x34bf38 % 0x2 == 0x1 && (_0x43ca5e += 0x2)) : (_0xa0d728 = 0x4 * _0x34bf38,
                              _0x43ca5e += _0xa0d728)),
                         _0x302eef[_0x48133f(0xa9c)] = _0x424654['subarray'](_0xc16f05, _0xc16f05 + _0xa0d728);
                    let _0x1363a6 = _0x4c2929['getUint32'](_0x43ca5e, !0x0);
                    _0x43ca5e += Uint32Array[_0x48133f(0x385)];
                    let _0x247bb4 = _0x4c2929[_0x48133f(0x494)](_0x43ca5e, !0x0);
                    _0x43ca5e += Uint32Array['BYTES_PER_ELEMENT'] * _0x1363a6,
                         _0x302eef[_0x48133f(0x586)] = _0x247bb4,
                         _0x5b9590['push'](_0x302eef);
               }
               return _0x381e9f[_0x56da89] = {
                    'vertexPackage': _0x5bef80,
                    'arrIndexPackage': _0x5b9590
               },
                    _0x43ca5e;
          }
          function _0x1b906d(_0x575b8c, _0x1b0eab, _0x1078b3) {
               const _0x44bc07 = _0xc3a123;
               let _0x1b9051 = _0x575b8c['vertexAttributes']
                    , _0x208779 = _0x575b8c[_0x44bc07(0x360)]
                    , _0x5b2f60 = _0x1b9051[_0x44bc07(0x72b)];
               _0x208779[0x1 === _0x1078b3 ? _0x44bc07(0x1cc) : 'batchId'] = _0x5b2f60,
                    _0x1b9051[_0x44bc07(0x63e)]({
                         'index': _0x5b2f60,
                         'typedArray': _0x1b0eab,
                         'componentsPerAttribute': 0x1,
                         'componentDatatype': Cesium[_0x44bc07(0x5fa)]['FLOAT'],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x0,
                         'instanceDivisor': _0x1078b3
                    });
          }
          function _0xe4ded1(_0x5baa6b, _0x418180, _0xdb3150) {
               const _0x399752 = _0xc3a123;
               let _0x31cf9b = _0x9879e5[_0x399752(0xb51)](_0x5baa6b)[_0x399752(0xc09)]
                    , _0x180a17 = _0x31cf9b[_0x399752(0xabd)];
               _0xdb3150[_0x399752(0x1c0)] = [];
               let _0x3b8545 = _0x9879e5[_0x399752(0xd4c)](_0x31cf9b, _0x399752(0x34f), _0x180a17)
                    , _0x2520ca = _0x9879e5['queryChildNodes'](_0x3b8545, _0x399752(0x1c0), _0x180a17);
               for (let _0x51b9a6 = 0x0, _0x48a3c9 = _0x2520ca[_0x399752(0x72b)]; _0x51b9a6 < _0x48a3c9; _0x51b9a6++) {
                    let _0x291b98 = {}
                         , _0x1495b2 = _0x2520ca[_0x51b9a6];
                    _0x291b98['id'] = _0x9879e5['queryStringValue'](_0x1495b2, _0x399752(0xca3), _0x180a17);
                    let _0x266f20 = _0x9879e5[_0x399752(0xd4c)](_0x1495b2, 'Ambient', _0x180a17)
                         , _0x5c655e = Cesium[_0x399752(0x4d9)](_0x9879e5['queryNumericValue'](_0x266f20, 'AmbientR', _0x180a17), 0x1)
                         , _0x5f25cc = Cesium[_0x399752(0x4d9)](_0x9879e5[_0x399752(0x2cd)](_0x266f20, 'AmbientG', _0x180a17), 0x1)
                         , _0x32d168 = Cesium[_0x399752(0x4d9)](_0x9879e5[_0x399752(0x2cd)](_0x266f20, 'AmbientB', _0x180a17), 0x1)
                         , _0x587538 = Cesium[_0x399752(0x4d9)](_0x9879e5['queryNumericValue'](_0x266f20, _0x399752(0x35f), _0x180a17), 0x1);
                    _0x291b98['ambient'] = {
                         'r': _0x5c655e,
                         'g': _0x5f25cc,
                         'b': _0x32d168,
                         'a': _0x587538
                    };
                    let _0x511fa7 = _0x9879e5[_0x399752(0xd4c)](_0x1495b2, _0x399752(0x237), _0x180a17);
                    _0x5c655e = Cesium[_0x399752(0x4d9)](_0x9879e5['queryNumericValue'](_0x511fa7, 'DiffuseR', _0x180a17), 0x1),
                         _0x5f25cc = Cesium['defaultValue'](_0x9879e5[_0x399752(0x2cd)](_0x511fa7, 'DiffuseG', _0x180a17), 0x1),
                         _0x32d168 = Cesium['defaultValue'](_0x9879e5[_0x399752(0x2cd)](_0x511fa7, 'DiffuseB', _0x180a17), 0x1),
                         _0x587538 = Cesium[_0x399752(0x4d9)](_0x9879e5[_0x399752(0x2cd)](_0x511fa7, _0x399752(0xb33), _0x180a17), 0x1),
                         _0x291b98['diffuse'] = {
                              'r': _0x5c655e,
                              'g': _0x5f25cc,
                              'b': _0x32d168,
                              'a': _0x587538
                         };
                    let _0x33e5fc = _0x9879e5[_0x399752(0xd4c)](_0x1495b2, 'Specular', _0x180a17);
                    _0x5c655e = Cesium[_0x399752(0x4d9)](_0x9879e5[_0x399752(0x2cd)](_0x33e5fc, 'SpecularR', _0x180a17), 0x0),
                         _0x5f25cc = Cesium['defaultValue'](_0x9879e5[_0x399752(0x2cd)](_0x33e5fc, _0x399752(0x75e), _0x180a17), 0x0),
                         _0x32d168 = Cesium['defaultValue'](_0x9879e5[_0x399752(0x2cd)](_0x33e5fc, _0x399752(0x42e), _0x180a17), 0x0),
                         _0x587538 = Cesium[_0x399752(0x4d9)](_0x9879e5[_0x399752(0x2cd)](_0x33e5fc, _0x399752(0x431), _0x180a17), 0x0),
                         _0x291b98[_0x399752(0x981)] = {
                              'r': _0x5c655e,
                              'g': _0x5f25cc,
                              'b': _0x32d168,
                              'a': _0x587538
                         },
                         _0x291b98['shininess'] = _0x9879e5[_0x399752(0x2cd)](_0x1495b2, _0x399752(0xc65), _0x180a17),
                         _0x291b98[_0x399752(0x5c6)] = _0x9879e5[_0x399752(0xbf8)](_0x1495b2, _0x399752(0x461), _0x180a17),
                         _0x291b98['textureunitstates'] = [];
                    let _0x2756d6 = _0x9879e5[_0x399752(0x6c3)](_0x1495b2, _0x399752(0x350), _0x180a17);
                    for (let _0x546731 = 0x0; _0x546731 < _0x2756d6[_0x399752(0x72b)]; _0x546731++) {
                         let _0x951916 = {}
                              , _0x5dda13 = _0x2756d6[_0x546731]
                              , _0x4d9da0 = _0x9879e5[_0x399752(0x7b3)](_0x5dda13, _0x399752(0xca3), _0x180a17);
                         _0x9879e5[_0x399752(0x7b3)](_0x5dda13, 'TextureName', _0x180a17);
                         let _0x176ec9 = _0x9879e5['queryFirstNode'](_0x5dda13, _0x399752(0x542), _0x180a17)
                              , _0x4a0e1a = _0x399752(0x4b2) === _0x9879e5[_0x399752(0x7b3)](_0x176ec9, 'u', _0x180a17) ? 0x0 : 0x1
                              , _0x4b924a = 'TAM_WRAP' === _0x9879e5['queryStringValue'](_0x176ec9, 'v', _0x180a17) ? 0x0 : 0x1
                              , _0xe6a6ba = _0x9879e5['queryStringValue'](_0x5dda13, _0x399752(0x3a3), _0x180a17)[_0x399752(0x39b)](',')
                              , _0x302f5d = 0x10;
                         for (; _0x302f5d--;)
                              _0xe6a6ba[_0x302f5d] = parseFloat(_0xe6a6ba[_0x302f5d]);
                         _0x951916[_0x399752(0x2c0)] = {
                              'u': _0x4a0e1a,
                              'v': _0x4b924a,
                              'w': 0x0
                         },
                              _0x951916['filteringoption'] = 0x20202020,
                              _0x951916['filtermax'] = 0x2,
                              _0x951916[_0x399752(0x3e6)] = 0x2,
                              _0x951916['id'] = _0x4d9da0,
                              _0x951916[_0x399752(0x363)] = _0xe6a6ba,
                              _0x951916['url'] = '',
                              _0x291b98[_0x399752(0x85c)]['push']({
                                   'textureunitstate': _0x951916
                              });
                    }
                    _0xdb3150[_0x399752(0x1c0)][_0x399752(0x63e)]({
                         'material': _0x291b98
                    });
               }
               let _0x493112 = _0x9879e5['queryFirstNode'](_0x31cf9b, _0x399752(0x9ce), _0x180a17)
                    , _0x447d26 = _0x9879e5[_0x399752(0x6c3)](_0x493112, _0x399752(0x584), _0x180a17);
               if (_0x418180[_0x399752(0xb12)] = [],
                    _0x447d26[_0x399752(0x72b)] > 0x0)
                    for (let _0x1fe8d7 = 0x0, _0x141754 = _0x447d26['length']; _0x1fe8d7 < _0x141754; _0x1fe8d7++) {
                         let _0x3c557f = _0x447d26[_0x1fe8d7]
                              , _0x3c641a = _0x9879e5[_0x399752(0x7b3)](_0x3c557f, _0x399752(0x86d), _0x180a17);
                         _0x3c641a = _0x3c641a ? _0x3c641a['replace'](/.osgb$/, '.s3m') : '';
                         let _0xe88d23 = _0x9879e5['queryStringValue'](_0x3c557f, _0x399752(0x9dc), _0x180a17)
                              , _0x5b0329 = _0x9879e5['queryNumericValue'](_0x3c557f, 'RangeList', _0x180a17)
                              , _0x2bdab6 = _0x9879e5[_0x399752(0xd4c)](_0x3c557f, 'BoundingSphere', _0x180a17)
                              , _0xa53d41 = {
                                   'boundingSphere': {
                                        'center': {
                                             'x': _0x9879e5['queryNumericValue'](_0x2bdab6, 'x', _0x180a17),
                                             'y': _0x9879e5['queryNumericValue'](_0x2bdab6, 'y', _0x180a17),
                                             'z': _0x9879e5[_0x399752(0x2cd)](_0x2bdab6, 'z', _0x180a17)
                                        },
                                        'radius': _0x9879e5[_0x399752(0x2cd)](_0x2bdab6, _0x399752(0x38b), _0x180a17)
                                   },
                                   'childTile': _0x3c641a,
                                   'geodes': [],
                                   'rangeList': _0x5b0329,
                                   'rangeMode': _0x399752(0x55b) === _0xe88d23 ? _0x1a0a6e[_0x399752(0xa42)] : _0x1a0a6e[_0x399752(0xa9f)]
                              };
                         _0xa53d41[_0x399752(0x660)] = [];
                         let _0x3a7e0f = _0x9879e5['queryChildNodes'](_0x3c557f, _0x399752(0xa13), _0x180a17);
                         for (let _0xeaca8b = 0x0; _0xeaca8b < _0x3a7e0f['length']; _0xeaca8b++) {
                              let _0x4e835b = {}
                                   , _0xed7c28 = _0x3a7e0f[_0xeaca8b]
                                   , _0xf45fa9 = _0x9879e5[_0x399752(0x7b3)](_0xed7c28, _0x399752(0xc0c), _0x180a17)[_0x399752(0x39b)](',');
                              for (let _0xf1f8e8 = 0x0; _0xf1f8e8 < 0x10; _0xf1f8e8++)
                                   _0xf45fa9[_0xf1f8e8] = parseFloat(_0xf45fa9[_0xf1f8e8]);
                              _0x4e835b[_0x399752(0x89c)] = _0xf45fa9;
                              let _0x196619 = _0x9879e5[_0x399752(0x6c3)](_0xed7c28, 'GeoName');
                              _0x4e835b[_0x399752(0x5db)] = [];
                              for (let _0x2c0289 = 0x0; _0x2c0289 < _0x196619[_0x399752(0x72b)]; _0x2c0289++) {
                                   let _0x276551 = _0x196619[_0x2c0289][_0x399752(0x615)]['trim']();
                                   _0x4e835b[_0x399752(0x5db)][_0x399752(0x63e)](_0x276551);
                              }
                              _0xa53d41[_0x399752(0x660)][_0x399752(0x63e)](_0x4e835b);
                         }
                         _0x418180[_0x399752(0xb12)]['push'](_0xa53d41);
                    }
               else {
                    let _0x19781a = _0x9879e5[_0x399752(0x6c3)](_0x493112, _0x399752(0xa13), _0x180a17);
                    if (_0x19781a['length'] > 0x0) {
                         let _0x4d3660 = {
                              'boundingSphere': {
                                   'center': {
                                        'x': 0x0,
                                        'y': 0x0,
                                        'z': 0x0
                                   },
                                   'radius': 0x615299
                              },
                              'childTile': '',
                              'geodes': [],
                              'rangeList': 0x0,
                              'rangeMode': _0x1a0a6e['Pixel']
                         };
                         for (let _0x87661e = 0x0, _0x429c84 = _0x19781a[_0x399752(0x72b)]; _0x87661e < _0x429c84; _0x87661e++) {
                              let _0x2de47f = {}
                                   , _0x5389f8 = _0x19781a[_0x87661e]
                                   , _0xb8c40 = _0x9879e5['queryStringValue'](_0x5389f8, 'GeoDeModMatrix', _0x180a17)[_0x399752(0x39b)](',');
                              for (let _0xc236a6 = 0x0; _0xc236a6 < 0x10; _0xc236a6++)
                                   _0xb8c40[_0xc236a6] = parseFloat(_0xb8c40[_0xc236a6]);
                              _0x2de47f[_0x399752(0x89c)] = _0xb8c40;
                              let _0x21bac1 = _0x9879e5[_0x399752(0x6c3)](_0x5389f8, _0x399752(0x787), _0x180a17);
                              _0x2de47f[_0x399752(0x5db)] = [];
                              for (let _0x2962d0 = 0x0; _0x2962d0 < _0x21bac1[_0x399752(0x72b)]; _0x2962d0++) {
                                   let _0x343b81 = _0x21bac1[_0x2962d0][_0x399752(0x615)]['trim']();
                                   _0x2de47f['skeletonNames']['push'](_0x343b81);
                              }
                              _0x4d3660[_0x399752(0x660)][_0x399752(0x63e)](_0x2de47f);
                         }
                         _0x418180[_0x399752(0xb12)][_0x399752(0x63e)](_0x4d3660);
                    }
               }
               return _0x418180;
          }
          function _0x4d1f9d(_0x4ee0e5, _0x5b0cfb) {
               const _0x198652 = _0xc3a123;
               let _0x576ac9 = new Uint8Array(_0x4ee0e5, _0x5b0cfb);
               return _0xce368['inflate'](_0x576ac9)[_0x198652(0x25d)];
          }
          function _0x4dac31() { }
          function _0x3e9f08() { }
          _0x4dac31['parseBuffer'] = function (_0x280c41) {
               const _0x208ca2 = _0xc3a123;
               let _0x57674e = 0x0
                    , _0x1a273b = {
                         'groupNode': {},
                         'geoPackage': {},
                         'materials': {},
                         'texturePackage': {}
                    }
                    , _0x2ed270 = new Uint8Array(_0x280c41, 0x0, 0x4);
               if (0x73 !== _0x2ed270[0x0] || 0x33 !== _0x2ed270[0x1] || 0x6d !== _0x2ed270[0x2])
                    return {
                         'result': !0x1
                    };
               _0x2ed270[0x3],
                    _0x57674e += 0x4;
               let _0x1e60e7 = _0x4d1f9d(_0x280c41, _0x57674e)
                    , _0x18839e = new Uint8Array(_0x1e60e7)
                    , _0x3388d3 = new DataView(_0x1e60e7);
               _0x57674e = 0x0;
               let _0x278fd6 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
               _0x57674e += Uint32Array[_0x208ca2(0x385)];
               let _0xb1458f = new Uint8Array(_0x1e60e7, _0x57674e, _0x278fd6)
                    , _0x53d900 = _0x278fd6 % 0x4;
               _0x53d900 && (_0x53d900 = 0x4 - _0x53d900),
                    _0x57674e += _0x278fd6 + _0x53d900,
                    _0xe4ded1(Cesium['getStringFromTypedArray'](_0xb1458f, void 0x0, void 0x0, 'gbk'), _0x1a273b[_0x208ca2(0xb91)], _0x1a273b['materials']),
                    _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0),
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
               let _0x365f30 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
               _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
               let _0x44c2a1 = _0x1a273b[_0x208ca2(0x9b0)];
               for (let _0x4da969 = 0x0; _0x4da969 < _0x365f30; _0x4da969++)
                    _0x57674e = _0x361d07(_0x44c2a1, _0x18839e, _0x3388d3, _0x57674e);
               _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0),
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
               let _0x20dd6e = _0x3388d3['getUint32'](_0x57674e, !0x0);
               _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
               for (let _0x2c5695 = 0x0; _0x2c5695 < _0x20dd6e; _0x2c5695++) {
                    let _0x4e3b3e = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x24f101 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
                    let _0x11762c = {};
                    if (-0x1 === _0x44c2a1[_0x4e3b3e][_0x208ca2(0xd49)][_0x208ca2(0x956)]) {
                         let _0x1cdfdc = new Float32Array(_0x44c2a1[_0x4e3b3e]['vertexPackage'][_0x208ca2(0x8d0)]);
                         for (let _0x1a0ee6 = 0x0; _0x1a0ee6 < _0x24f101; _0x1a0ee6++) {
                              let _0x138deb = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                              _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
                              let _0x1b2846 = _0x3388d3['getUint32'](_0x57674e, !0x0);
                              _0x57674e += Uint32Array[_0x208ca2(0x385)];
                              let _0x12be9a = 0x0
                                   , _0xd06375 = 0x0;
                              _0x11762c[_0x138deb] = [];
                              for (let _0xf8804a = 0x0; _0xf8804a < _0x1b2846; _0xf8804a++) {
                                   if (_0xd06375 = _0x3388d3['getUint32'](_0x57674e, !0x0),
                                        _0x57674e += Uint32Array[_0x208ca2(0x385)],
                                        _0x12be9a = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0),
                                        _0x57674e += Uint32Array[_0x208ca2(0x385)],
                                        _0x1cdfdc['fill'])
                                        _0x1cdfdc['fill'](_0x1a0ee6, _0xd06375, _0xd06375 + _0x12be9a);
                                   else {
                                        let _0x4ccd47 = _0xd06375 + _0xd06375;
                                        for (let _0x1ffb08 = _0xd06375; _0x1ffb08 < _0x4ccd47; _0x1ffb08++)
                                             _0x1cdfdc[_0x1ffb08] = _0x1a0ee6;
                                   }
                                   _0x11762c[_0x138deb][_0x208ca2(0x63e)]({
                                        'vertexColorOffset': _0xd06375,
                                        'vertexColorCount': _0x12be9a,
                                        'batchId': _0x1a0ee6
                                   });
                              }
                         }
                         _0x1b906d(_0x44c2a1[_0x4e3b3e][_0x208ca2(0xd49)], _0x1cdfdc, void 0x0);
                    } else {
                         let _0x24f123 = _0x44c2a1[_0x4e3b3e][_0x208ca2(0xd49)][_0x208ca2(0x4a9)];
                         _0x44c2a1[_0x4e3b3e][_0x208ca2(0xd49)][_0x208ca2(0xbd8)],
                              _0x44c2a1[_0x4e3b3e][_0x208ca2(0xd49)]['instanceMode'];
                         let _0x6f5d1f = new Float32Array(_0x24f123)
                              , _0x268627 = 0x0;
                         for (let _0x30137e = 0x0; _0x30137e < _0x24f101; _0x30137e++) {
                              let _0x13783f = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                              _0x57674e += Uint32Array[_0x208ca2(0x385)];
                              let _0x2a2948 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                              _0x57674e += Uint32Array[_0x208ca2(0x385)],
                                   _0x11762c[_0x13783f] = [];
                              for (let _0x34b387 = 0x0; _0x34b387 < _0x2a2948; _0x34b387++) {
                                   let _0x225237 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                                   _0x57674e += Uint32Array['BYTES_PER_ELEMENT'],
                                        _0x6f5d1f[_0x268627] = _0x268627,
                                        void 0x0 === _0x11762c[_0x13783f] && (_0x11762c[_0x13783f] = [{
                                             'vertexColorCount': 0x1,
                                             'instanceIds': [],
                                             'vertexColorOffset': _0x268627
                                        }]),
                                        _0x11762c[_0x13783f][_0x208ca2(0x7d6)][_0x208ca2(0x63e)](_0x225237),
                                        _0x268627++;
                              }
                         }
                         _0x1b906d(_0x44c2a1[_0x4e3b3e][_0x208ca2(0xd49)], _0x6f5d1f, 0x1);
                    }
                    _0x44c2a1[_0x4e3b3e][_0x208ca2(0x239)] = _0x11762c;
               }
               _0x3388d3['getUint32'](_0x57674e, !0x0),
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
               let _0x3d6ce5 = _0x3388d3['getUint32'](_0x57674e, !0x0);
               _0x57674e += Uint32Array[_0x208ca2(0x385)];
               let _0xcf8600 = {};
               for (let _0x18eb32 = 0x0; _0x18eb32 < _0x3d6ce5; _0x18eb32++) {
                    let _0x42aa96 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x29aa05 = _0x3388d3['getUint32'](_0x57674e, !0x0);
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
                    let _0x2044b0 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x1323e2 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
                    let _0x5e6915 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array[_0x208ca2(0x385)];
                    let _0x554543 = _0x3388d3[_0x208ca2(0x494)](_0x57674e, !0x0);
                    _0x57674e += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x4f03f6 = _0x554543 === _0x582a9d['RGB'] || _0x554543 === _0x582a9d[_0x208ca2(0xafb)] ? Cesium[_0x208ca2(0x4e1)][_0x208ca2(0x788)] : Cesium['PixelFormat'][_0x208ca2(0x215)]
                         , _0x367ac8 = new Uint8Array(_0x1e60e7, _0x57674e, _0x5e6915);
                    _0xcf8600[_0x42aa96] = {
                         'id': _0x42aa96,
                         'width': _0x29aa05,
                         'height': _0x2044b0,
                         'compressType': _0x1323e2,
                         'nFormat': _0x554543,
                         'arrayBufferView': _0x367ac8,
                         'internalFormat': _0x4f03f6
                    },
                         _0x57674e += _0x5e6915;
               }
               return _0x1a273b[_0x208ca2(0x245)] = _0xcf8600,
                    _0x1a273b;
          }
               ;
          let _0x2f2dd8 = {
               'SV_Unkown': 0x0,
               'SV_Standard': 0x1,
               'SV_Compressed': 0x2
          };
          function _0x59d99e(_0x1931d5, _0x26d7c9, _0x18c843) {
               const _0x1dcd1d = _0xc3a123;
               let _0x1f01b0 = _0x26d7c9[_0x1dcd1d(0x494)](_0x18c843, !0x0);
               _0x18c843 += Uint32Array[_0x1dcd1d(0x385)];
               let _0x4d566e = new Uint8Array(_0x1931d5, _0x18c843, _0x1f01b0);
               return {
                    'string': Cesium[_0x1dcd1d(0x236)](_0x4d566e),
                    'bytesOffset': _0x18c843 += _0x1f01b0
               };
          }
          function _0xbc6bfb(_0x5d3dcc, _0x55f577, _0x3c3dc9, _0x15bd90) {
               const _0x5f37be = _0xc3a123;
               let _0x338abe = {}
                    , _0xa466e3 = []
                    , _0xac65e0 = new Array(0x10);
               for (let _0x599b9d = 0x0; _0x599b9d < 0x10; _0x599b9d++)
                    _0xac65e0[_0x599b9d] = _0x55f577[_0x5f37be(0x994)](_0x3c3dc9, !0x0),
                         _0x3c3dc9 += Float64Array[_0x5f37be(0x385)];
               _0x338abe['matrix'] = _0xac65e0,
                    _0x338abe['skeletonNames'] = _0xa466e3;
               let _0x4f0f89 = _0x55f577['getUint32'](_0x3c3dc9, !0x0);
               _0x3c3dc9 += Uint32Array[_0x5f37be(0x385)];
               for (let _0x522c84 = 0x0; _0x522c84 < _0x4f0f89; _0x522c84++) {
                    let _0x2855ee = _0x59d99e(_0x5d3dcc, _0x55f577, _0x3c3dc9);
                    _0xa466e3[_0x5f37be(0x63e)](_0x2855ee[_0x5f37be(0x379)]),
                         _0x3c3dc9 = _0x2855ee['bytesOffset'];
               }
               return _0x15bd90['push'](_0x338abe),
                    _0x3c3dc9;
          }
          function _0x573dbc(_0x375cbf, _0x2c0c5e, _0x3dabf7, _0x5c8fec) {
               const _0x2d2207 = _0xc3a123;
               let _0x20bc64 = {};
               _0x20bc64['rangeList'] = _0x2c0c5e['getFloat32'](_0x3dabf7, !0x0),
                    _0x3dabf7 += Float32Array[_0x2d2207(0x385)],
                    _0x20bc64[_0x2d2207(0xaf9)] = _0x2c0c5e[_0x2d2207(0x876)](_0x3dabf7, !0x0),
                    _0x3dabf7 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x95c26a = {};
               _0x95c26a['x'] = _0x2c0c5e[_0x2d2207(0x994)](_0x3dabf7, !0x0),
                    _0x3dabf7 += Float64Array[_0x2d2207(0x385)],
                    _0x95c26a['y'] = _0x2c0c5e[_0x2d2207(0x994)](_0x3dabf7, !0x0),
                    _0x3dabf7 += Float64Array[_0x2d2207(0x385)],
                    _0x95c26a['z'] = _0x2c0c5e[_0x2d2207(0x994)](_0x3dabf7, !0x0),
                    _0x3dabf7 += Float64Array['BYTES_PER_ELEMENT'];
               let _0x354b52 = _0x2c0c5e[_0x2d2207(0x994)](_0x3dabf7, !0x0);
               _0x3dabf7 += Float64Array[_0x2d2207(0x385)],
                    _0x20bc64[_0x2d2207(0xa01)] = {
                         'center': _0x95c26a,
                         'radius': _0x354b52
                    };
               let _0xb099fb = _0x59d99e(_0x375cbf, _0x2c0c5e, _0x3dabf7)
                    , _0xd0492c = _0xb099fb[_0x2d2207(0x379)];
               _0x3dabf7 = _0xb099fb[_0x2d2207(0xad6)];
               let _0x40937e = _0xd0492c[_0x2d2207(0xcef)](_0x2d2207(0x281));
               if (-0x1 !== _0x40937e) {
                    let _0x1dcdca = _0xd0492c[_0x2d2207(0x617)](_0x40937e);
                    _0xd0492c = _0xd0492c[_0x2d2207(0x6c0)](_0x1dcdca, '');
               }
               _0x20bc64[_0x2d2207(0x9bf)] = _0xd0492c,
                    _0x20bc64[_0x2d2207(0x660)] = [];
               let _0x1aa2ab = _0x2c0c5e[_0x2d2207(0x494)](_0x3dabf7, !0x0);
               _0x3dabf7 += Uint32Array[_0x2d2207(0x385)];
               for (let _0x5e2391 = 0x0; _0x5e2391 < _0x1aa2ab; _0x5e2391++)
                    _0x3dabf7 = _0xbc6bfb(_0x375cbf, _0x2c0c5e, _0x3dabf7, _0x20bc64[_0x2d2207(0x660)]);
               return _0x5c8fec['push'](_0x20bc64),
                    _0x3dabf7;
          }
          function _0x419507(_0x2b5db6, _0x518d61, _0x53513e, _0x3749f9) {
               const _0x420ff5 = _0xc3a123;
               let _0x405a8f = {}
                    , _0x1b6241 = [];
               _0x518d61[_0x420ff5(0x494)](_0x53513e, !0x0),
                    _0x53513e += Uint32Array['BYTES_PER_ELEMENT'];
               let _0x2aca2a = _0x518d61[_0x420ff5(0x494)](_0x53513e, !0x0);
               _0x53513e += Uint32Array[_0x420ff5(0x385)];
               for (let _0x1aeec1 = 0x0; _0x1aeec1 < _0x2aca2a; _0x1aeec1++)
                    _0x53513e = _0x573dbc(_0x2b5db6, _0x518d61, _0x53513e, _0x1b6241);
               _0x405a8f['pageLods'] = _0x1b6241;
               let _0x3cd297 = _0x53513e % 0x4;
               return 0x0 !== _0x3cd297 && (_0x53513e += 0x4 - _0x3cd297),
                    _0x3749f9[_0x420ff5(0xb91)] = _0x405a8f,
                    _0x53513e;
          }
          function _0x435675(_0x353190, _0x25781b, _0x4d6bca, _0x46f495) {
               const _0xcd0a65 = _0xc3a123;
               let _0x37c716 = _0x25781b['getUint32'](_0x4d6bca, !0x0);
               if (_0x46f495[_0xcd0a65(0x8d0)] = _0x37c716,
                    (_0x4d6bca += Uint32Array[_0xcd0a65(0x385)]) <= 0x0)
                    return _0x4d6bca;
               let _0x5763aa = _0x25781b[_0xcd0a65(0x876)](_0x4d6bca, !0x0);
               _0x4d6bca += Uint16Array[_0xcd0a65(0x385)];
               let _0x1e7fd4 = _0x25781b['getUint16'](_0x4d6bca, !0x0);
               _0x1e7fd4 = _0x5763aa * Float32Array[_0xcd0a65(0x385)],
                    _0x4d6bca += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x2e6cf4 = _0x37c716 * _0x5763aa * Float32Array[_0xcd0a65(0x385)]
                    , _0x102d1c = new Uint8Array(_0x353190, _0x4d6bca, _0x2e6cf4);
               _0x4d6bca += _0x2e6cf4;
               let _0x43a373 = _0x46f495[_0xcd0a65(0x761)]
                    , _0x3e4d1b = _0x46f495['attrLocation'];
               return _0x3e4d1b[_0xcd0a65(0x5e2)] = _0x43a373[_0xcd0a65(0x72b)],
                    _0x43a373['push']({
                         'index': _0x3e4d1b[_0xcd0a65(0x5e2)],
                         'typedArray': _0x102d1c,
                         'componentsPerAttribute': _0x5763aa,
                         'componentDatatype': Cesium[_0xcd0a65(0x5fa)][_0xcd0a65(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x1e7fd4,
                         'normalize': !0x1
                    }),
                    _0x4d6bca;
          }
          function _0x4fc1ac(_0x48f000, _0x485180, _0x46a429, _0x89f03d) {
               const _0x1f5c06 = _0xc3a123;
               let _0x5cdf73 = _0x485180['getUint32'](_0x46a429, !0x0);
               if (_0x46a429 += Uint32Array['BYTES_PER_ELEMENT'],
                    _0x5cdf73 <= 0x0)
                    return _0x46a429;
               let _0x4ee744 = _0x485180[_0x1f5c06(0x876)](_0x46a429, !0x0);
               _0x46a429 += Uint16Array[_0x1f5c06(0x385)];
               let _0x65a37e = _0x485180[_0x1f5c06(0x876)](_0x46a429, !0x0);
               _0x46a429 += Uint16Array[_0x1f5c06(0x385)];
               let _0x5b6b07 = _0x5cdf73 * _0x4ee744 * Float32Array[_0x1f5c06(0x385)]
                    , _0xd9889e = new Uint8Array(_0x48f000, _0x46a429, _0x5b6b07);
               _0x46a429 += _0x5b6b07;
               let _0x244b72 = _0x89f03d[_0x1f5c06(0x761)]
                    , _0x3d8cb7 = _0x89f03d[_0x1f5c06(0x360)];
               return _0x3d8cb7[_0x1f5c06(0x637)] = _0x244b72[_0x1f5c06(0x72b)],
                    _0x244b72[_0x1f5c06(0x63e)]({
                         'index': _0x3d8cb7[_0x1f5c06(0x637)],
                         'typedArray': _0xd9889e,
                         'componentsPerAttribute': _0x4ee744,
                         'componentDatatype': Cesium[_0x1f5c06(0x5fa)][_0x1f5c06(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x65a37e,
                         'normalize': !0x1
                    }),
                    _0x46a429;
          }
          function _0x55077a(_0x4d3533, _0x4d24b3, _0xbf497f, _0x22f7f6) {
               const _0x590079 = _0xc3a123;
               let _0x4304fb = _0x4d24b3[_0x590079(0x494)](_0xbf497f, !0x0);
               _0xbf497f += Uint32Array['BYTES_PER_ELEMENT'];
               let _0x4060b7, _0x4da43b = _0x22f7f6[_0x590079(0x8d0)];
               if (_0x4304fb > 0x0) {
                    _0x4d24b3[_0x590079(0x876)](_0xbf497f, !0x0),
                         _0xbf497f += Uint16Array[_0x590079(0x385)],
                         _0xbf497f += 0x2 * Uint8Array[_0x590079(0x385)];
                    let _0x1d225b = _0x4304fb * Uint8Array[_0x590079(0x385)] * 0x4;
                    _0x4060b7 = new Uint8Array(_0x4d3533, _0xbf497f, _0x1d225b)[_0x590079(0x21c)](0x0, _0x1d225b),
                         _0xbf497f += _0x1d225b;
               } else {
                    _0x4060b7 = new Uint8Array(0x4 * _0x4da43b);
                    for (let _0x2997cf = 0x0; _0x2997cf < _0x4da43b; _0x2997cf++)
                         _0x4060b7[0x4 * _0x2997cf] = 0xff,
                              _0x4060b7[0x4 * _0x2997cf + 0x1] = 0xff,
                              _0x4060b7[0x4 * _0x2997cf + 0x2] = 0xff,
                              _0x4060b7[0x4 * _0x2997cf + 0x3] = 0xff;
               }
               let _0x136ead = _0x22f7f6[_0x590079(0x761)]
                    , _0x4489be = _0x22f7f6[_0x590079(0x360)];
               return _0x4489be[_0x590079(0x7a0)] = _0x136ead[_0x590079(0x72b)],
                    _0x136ead[_0x590079(0x63e)]({
                         'index': _0x4489be['aColor'],
                         'typedArray': _0x4060b7,
                         'componentsPerAttribute': 0x4,
                         'componentDatatype': Cesium[_0x590079(0x5fa)][_0x590079(0xb8c)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x4,
                         'normalize': !0x0
                    }),
                    _0x22f7f6[_0x590079(0x2ee)] = _0x4060b7,
                    _0xbf497f;
          }
          function _0x74d269(_0x31a037, _0x2139de, _0x3a818b, _0xf12291) {
               const _0x38f944 = _0xc3a123;
               let _0x5dd41d = _0x2139de['getUint32'](_0x3a818b, !0x0);
               if (_0x3a818b += Uint32Array[_0x38f944(0x385)],
                    _0x5dd41d <= 0x0)
                    return _0x3a818b;
               _0x2139de[_0x38f944(0x876)](_0x3a818b, !0x0),
                    _0x3a818b += Uint16Array[_0x38f944(0x385)],
                    _0x3a818b += 0x2 * Uint8Array[_0x38f944(0x385)];
               let _0xdf1871 = _0x5dd41d * Uint8Array[_0x38f944(0x385)] * 0x4
                    , _0x2fa8e0 = new Uint8Array(_0x31a037, _0x3a818b, _0xdf1871);
               _0x3a818b += _0xdf1871;
               let _0x491214 = _0xf12291[_0x38f944(0x761)]
                    , _0x54b7f7 = _0xf12291['attrLocation'];
               return _0x54b7f7['aSecondColor'] = _0x491214[_0x38f944(0x72b)],
                    _0x491214[_0x38f944(0x63e)]({
                         'index': _0x54b7f7['aSecondColor'],
                         'typedArray': _0x2fa8e0,
                         'componentsPerAttribute': 0x4,
                         'componentDatatype': Cesium['ComponentDatatype'][_0x38f944(0xb8c)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x4,
                         'normalize': !0x0
                    }),
                    _0x3a818b;
          }
          function _0x4487f4(_0x121f2a, _0x1a6efe, _0x4fdac0, _0x3e38ca) {
               const _0x424e2b = _0xc3a123;
               let _0x1655d7 = _0x1a6efe[_0x424e2b(0x876)](_0x4fdac0, !0x0);
               _0x4fdac0 += Uint16Array['BYTES_PER_ELEMENT'],
                    _0x4fdac0 += Uint16Array[_0x424e2b(0x385)];
               for (let _0x13efc2 = 0x0; _0x13efc2 < _0x1655d7; _0x13efc2++) {
                    let _0x226580 = _0x1a6efe[_0x424e2b(0x494)](_0x4fdac0, !0x0);
                    _0x4fdac0 += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x47d93a = _0x1a6efe[_0x424e2b(0x876)](_0x4fdac0, !0x0);
                    _0x4fdac0 += Uint16Array[_0x424e2b(0x385)],
                         _0x1a6efe['getUint16'](_0x4fdac0, !0x0),
                         _0x4fdac0 += Uint16Array[_0x424e2b(0x385)];
                    let _0x27f922 = _0x226580 * _0x47d93a * Float32Array[_0x424e2b(0x385)]
                         , _0x1e2785 = new Uint8Array(_0x121f2a, _0x4fdac0, _0x27f922);
                    _0x4fdac0 += _0x27f922;
                    let _0x3ade37 = _0x424e2b(0x3f4) + _0x13efc2
                         , _0x41c01d = _0x3e38ca['vertexAttributes']
                         , _0x141883 = _0x3e38ca[_0x424e2b(0x360)];
                    _0x141883[_0x3ade37] = _0x41c01d['length'],
                         _0x41c01d[_0x424e2b(0x63e)]({
                              'index': _0x141883[_0x3ade37],
                              'typedArray': _0x1e2785,
                              'componentsPerAttribute': _0x47d93a,
                              'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                              'offsetInBytes': 0x0,
                              'strideInBytes': _0x47d93a * Float32Array[_0x424e2b(0x385)],
                              'normalize': !0x1
                         });
               }
               return _0x4fdac0;
          }
          function _0x23ce4a(_0x21c706, _0x24bbd4, _0x47ed4e, _0x39ebe5) {
               const _0x34398c = _0xc3a123;
               let _0x8a972a = _0x24bbd4[_0x34398c(0x876)](_0x47ed4e, !0x0);
               _0x47ed4e += Uint16Array[_0x34398c(0x385)],
                    _0x47ed4e += Uint16Array[_0x34398c(0x385)];
               let _0x4c151d = _0x39ebe5[_0x34398c(0x761)]
                    , _0x33462c = _0x39ebe5[_0x34398c(0x360)];
               for (let _0x51247c = 0x0; _0x51247c < _0x8a972a; _0x51247c++) {
                    let _0x21a6b4 = _0x24bbd4[_0x34398c(0x494)](_0x47ed4e, !0x0);
                    _0x47ed4e += Uint32Array[_0x34398c(0x385)];
                    let _0x9858a0 = _0x24bbd4['getUint16'](_0x47ed4e, !0x0);
                    _0x47ed4e += Uint16Array['BYTES_PER_ELEMENT'],
                         _0x24bbd4[_0x34398c(0x876)](_0x47ed4e, !0x0),
                         _0x47ed4e += Uint16Array[_0x34398c(0x385)];
                    let _0x4ef2a5 = _0x21a6b4 * _0x9858a0 * Float32Array[_0x34398c(0x385)];
                    if (0x11 === _0x9858a0 || 0x1d === _0x9858a0) {
                         let _0xc5f21f = new Uint8Array(_0x21c706, _0x47ed4e, _0x4ef2a5);
                         _0x39ebe5[_0x34398c(0x4a9)] = _0x21a6b4,
                              _0x39ebe5[_0x34398c(0xd4e)] = _0x9858a0,
                              _0x39ebe5[_0x34398c(0xbd8)] = _0xc5f21f,
                              _0x39ebe5[_0x34398c(0x956)] = 0x1;
                         let _0x56fcaa, _0x1caa58 = _0x9858a0 * _0x21a6b4 * 0x4, _0x5d74a6 = _0xc5f21f[_0x34398c(0x21c)](0x0, _0x1caa58);
                         _0x39ebe5[_0x34398c(0x196)] = _0x5d74a6,
                              0x11 === _0x9858a0 ? (_0x56fcaa = 0x11 * Float32Array[_0x34398c(0x385)],
                                   _0x33462c['uv2'] = _0x4c151d['length'],
                                   _0x4c151d['push']({
                                        'index': _0x33462c[_0x34398c(0x77c)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x34398c(0x5fa)]['FLOAT'],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x0,
                                        'strideInBytes': _0x56fcaa,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x33462c['uv3'] = _0x4c151d[_0x34398c(0x72b)],
                                   _0x4c151d[_0x34398c(0x63e)]({
                                        'index': _0x33462c['uv3'],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium['ComponentDatatype'][_0x34398c(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x4 * Float32Array[_0x34398c(0x385)],
                                        'strideInBytes': _0x56fcaa,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x33462c[_0x34398c(0x343)] = _0x4c151d[_0x34398c(0x72b)],
                                   _0x4c151d[_0x34398c(0x63e)]({
                                        'index': _0x33462c['uv4'],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xa80)],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0x8 * Float32Array['BYTES_PER_ELEMENT'],
                                        'strideInBytes': _0x56fcaa,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x33462c[_0x34398c(0x74f)] = _0x4c151d[_0x34398c(0x72b)],
                                   _0x4c151d[_0x34398c(0x63e)]({
                                        'index': _0x33462c[_0x34398c(0x74f)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium[_0x34398c(0x5fa)]['FLOAT'],
                                        'normalize': !0x1,
                                        'offsetInBytes': 0xc * Float32Array[_0x34398c(0x385)],
                                        'strideInBytes': _0x56fcaa,
                                        'instanceDivisor': 0x1
                                   }),
                                   _0x33462c[_0x34398c(0x718)] = _0x4c151d[_0x34398c(0x72b)],
                                   _0x4c151d[_0x34398c(0x63e)]({
                                        'index': _0x33462c[_0x34398c(0x718)],
                                        'componentsPerAttribute': 0x4,
                                        'componentDatatype': Cesium['ComponentDatatype'][_0x34398c(0xb8c)],
                                        'normalize': !0x0,
                                        'offsetInBytes': 0x10 * Float32Array[_0x34398c(0x385)],
                                        'strideInBytes': _0x56fcaa,
                                        'instanceDivisor': 0x1
                                   })) : 0x1d === _0x9858a0 && (_0x56fcaa = 0x1d * Float32Array[_0x34398c(0x385)],
                                        _0x33462c['uv1'] = _0x4c151d['length'],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c['uv1'],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x0,
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1,
                                             'byteLength': _0x4ef2a5
                                        }),
                                        _0x33462c[_0x34398c(0x77c)] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c[_0x34398c(0x77c)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)]['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x4 * Float32Array[_0x34398c(0x385)],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c['uv3'] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c['uv3'],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x8 * Float32Array['BYTES_PER_ELEMENT'],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c['uv4'] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d['push']({
                                             'index': _0x33462c['uv4'],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0xc * Float32Array[_0x34398c(0x385)],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c[_0x34398c(0x7ad)] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d['push']({
                                             'index': _0x33462c[_0x34398c(0x7ad)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)]['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x10 * Float32Array[_0x34398c(0x385)],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c[_0x34398c(0x718)] = _0x4c151d['length'],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c[_0x34398c(0x718)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xa80)],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x14 * Float32Array[_0x34398c(0x385)],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c[_0x34398c(0x94d)] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c[_0x34398c(0x94d)],
                                             'componentsPerAttribute': 0x3,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)]['FLOAT'],
                                             'normalize': !0x1,
                                             'offsetInBytes': 0x18 * Float32Array['BYTES_PER_ELEMENT'],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c['secondary_colour'] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c[_0x34398c(0x74f)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xb8c)],
                                             'normalize': !0x0,
                                             'offsetInBytes': 0x1b * Float32Array[_0x34398c(0x385)],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }),
                                        _0x33462c[_0x34398c(0xc50)] = _0x4c151d[_0x34398c(0x72b)],
                                        _0x4c151d[_0x34398c(0x63e)]({
                                             'index': _0x33462c[_0x34398c(0xc50)],
                                             'componentsPerAttribute': 0x4,
                                             'componentDatatype': Cesium[_0x34398c(0x5fa)][_0x34398c(0xb8c)],
                                             'normalize': !0x0,
                                             'offsetInBytes': 0x1c * Float32Array[_0x34398c(0x385)],
                                             'strideInBytes': _0x56fcaa,
                                             'instanceDivisor': 0x1
                                        }));
                    } else {
                         let _0x306531 = _0x21a6b4 * _0x9858a0;
                         _0x39ebe5[_0x34398c(0x1a6)] = new Float32Array(_0x306531);
                         for (let _0x3ee223 = 0x0; _0x3ee223 < _0x306531; _0x3ee223++)
                              _0x39ebe5['instanceBounds'][_0x3ee223] = _0x24bbd4[_0x34398c(0x283)](_0x47ed4e + _0x3ee223 * Float32Array['BYTES_PER_ELEMENT'], !0x0);
                    }
                    _0x47ed4e += _0x4ef2a5;
               }
               return _0x47ed4e;
          }
          function _0x5509d2(_0x55488e, _0x6e9941, _0x517cb3, _0x2c108c) {
               const _0x4e77c8 = _0xc3a123;
               let _0x38df95 = _0x6e9941['getUint32'](_0x517cb3, !0x0);
               if (_0x2c108c[_0x4e77c8(0x8d0)] = _0x38df95,
                    (_0x517cb3 += Uint32Array[_0x4e77c8(0x385)]) <= 0x0)
                    return _0x517cb3;
               let _0x1e362c = _0x6e9941[_0x4e77c8(0x876)](_0x517cb3, !0x0);
               _0x517cb3 += Uint16Array[_0x4e77c8(0x385)];
               let _0x3a94a2 = _0x6e9941[_0x4e77c8(0x876)](_0x517cb3, !0x0);
               _0x3a94a2 = _0x1e362c * Int16Array['BYTES_PER_ELEMENT'],
                    _0x517cb3 += Uint16Array[_0x4e77c8(0x385)];
               let _0x22337e = _0x6e9941[_0x4e77c8(0x283)](_0x517cb3, !0x0);
               _0x517cb3 += Float32Array[_0x4e77c8(0x385)];
               let _0x135e1d = {};
               _0x135e1d['x'] = _0x6e9941['getFloat32'](_0x517cb3, !0x0),
                    _0x517cb3 += Float32Array[_0x4e77c8(0x385)],
                    _0x135e1d['y'] = _0x6e9941[_0x4e77c8(0x283)](_0x517cb3, !0x0),
                    _0x517cb3 += Float32Array[_0x4e77c8(0x385)],
                    _0x135e1d['z'] = _0x6e9941[_0x4e77c8(0x283)](_0x517cb3, !0x0),
                    _0x517cb3 += Float32Array['BYTES_PER_ELEMENT'],
                    _0x135e1d['w'] = _0x6e9941[_0x4e77c8(0x283)](_0x517cb3, !0x0),
                    _0x517cb3 += Float32Array[_0x4e77c8(0x385)],
                    _0x2c108c['vertCompressConstant'] = _0x22337e,
                    _0x2c108c[_0x4e77c8(0x472)] = _0x135e1d;
               let _0x121875 = _0x38df95 * _0x1e362c * Int16Array[_0x4e77c8(0x385)]
                    , _0x820f4b = new Uint8Array(_0x55488e, _0x517cb3, _0x121875);
               _0x517cb3 += _0x121875;
               let _0x4c82c4 = _0x2c108c[_0x4e77c8(0x761)]
                    , _0x3b32d1 = _0x2c108c['attrLocation'];
               return _0x3b32d1['aPosition'] = _0x4c82c4[_0x4e77c8(0x72b)],
                    _0x4c82c4[_0x4e77c8(0x63e)]({
                         'index': _0x3b32d1[_0x4e77c8(0x5e2)],
                         'typedArray': _0x820f4b,
                         'componentsPerAttribute': _0x1e362c,
                         'componentDatatype': Cesium[_0x4e77c8(0x5fa)][_0x4e77c8(0x982)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x3a94a2,
                         'normalize': !0x1
                    }),
                    _0x517cb3;
          }
          function _0x4df0e5(_0x2684e1, _0x246f7c, _0x3acc22, _0x37a0c) {
               const _0x56e089 = _0xc3a123;
               let _0x56c144 = _0x246f7c[_0x56e089(0x494)](_0x3acc22, !0x0);
               if (_0x3acc22 += Uint32Array[_0x56e089(0x385)],
                    _0x56c144 <= 0x0)
                    return _0x3acc22;
               _0x246f7c[_0x56e089(0x876)](_0x3acc22, !0x0),
                    _0x3acc22 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x1749f1 = _0x246f7c[_0x56e089(0x876)](_0x3acc22, !0x0);
               _0x3acc22 += Uint16Array['BYTES_PER_ELEMENT'];
               let _0x3777d8 = 0x2 * _0x56c144 * Int16Array[_0x56e089(0x385)]
                    , _0x461272 = new Uint8Array(_0x2684e1, _0x3acc22, _0x3777d8);
               _0x3acc22 += _0x3777d8;
               let _0x3d8581 = _0x37a0c['vertexAttributes']
                    , _0x1dca58 = _0x37a0c[_0x56e089(0x360)];
               return _0x1dca58['aNormal'] = _0x3d8581['length'],
                    _0x3d8581[_0x56e089(0x63e)]({
                         'index': _0x1dca58[_0x56e089(0x637)],
                         'typedArray': _0x461272,
                         'componentsPerAttribute': 0x2,
                         'componentDatatype': Cesium[_0x56e089(0x5fa)][_0x56e089(0x982)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': _0x1749f1,
                         'normalize': !0x1
                    }),
                    _0x3acc22;
          }
          function _0x3a8c10(_0x537a7b, _0x165d7f, _0x1b5072, _0x39f48f) {
               const _0x11572f = _0xc3a123;
               _0x39f48f['texCoordCompressConstant'] = [],
                    _0x39f48f['minTexCoordValue'] = [];
               let _0x1a263c = _0x165d7f[_0x11572f(0x876)](_0x1b5072, !0x0);
               _0x1b5072 += Uint16Array[_0x11572f(0x385)],
                    _0x1b5072 += Uint16Array[_0x11572f(0x385)];
               for (let _0x24f125 = 0x0; _0x24f125 < _0x1a263c; _0x24f125++) {
                    let _0x275eaf = _0x165d7f[_0x11572f(0xb7b)](_0x1b5072, !0x0);
                    _0x1b5072 += Uint8Array[_0x11572f(0x385)],
                         _0x1b5072 += 0x3 * Uint8Array[_0x11572f(0x385)];
                    let _0x1d8cef = _0x165d7f['getUint32'](_0x1b5072, !0x0);
                    _0x1b5072 += Uint32Array[_0x11572f(0x385)];
                    let _0x130379 = _0x165d7f['getUint16'](_0x1b5072, !0x0);
                    _0x1b5072 += Uint16Array[_0x11572f(0x385)],
                         _0x165d7f[_0x11572f(0x876)](_0x1b5072, !0x0),
                         _0x1b5072 += Uint16Array[_0x11572f(0x385)];
                    let _0x73dc48 = _0x165d7f['getFloat32'](_0x1b5072, !0x0);
                    _0x1b5072 += Float32Array['BYTES_PER_ELEMENT'],
                         _0x39f48f['texCoordCompressConstant'][_0x11572f(0x63e)](_0x73dc48);
                    let _0x77b1f3 = {};
                    _0x77b1f3['x'] = _0x165d7f[_0x11572f(0x283)](_0x1b5072, !0x0),
                         _0x1b5072 += Float32Array[_0x11572f(0x385)],
                         _0x77b1f3['y'] = _0x165d7f[_0x11572f(0x283)](_0x1b5072, !0x0),
                         _0x1b5072 += Float32Array[_0x11572f(0x385)],
                         _0x77b1f3['z'] = _0x165d7f[_0x11572f(0x283)](_0x1b5072, !0x0),
                         _0x1b5072 += Float32Array[_0x11572f(0x385)],
                         _0x77b1f3['w'] = _0x165d7f['getFloat32'](_0x1b5072, !0x0),
                         _0x1b5072 += Float32Array[_0x11572f(0x385)],
                         _0x39f48f['minTexCoordValue'][_0x11572f(0x63e)](_0x77b1f3);
                    let _0x3a38e2 = _0x1d8cef * _0x130379 * Int16Array[_0x11572f(0x385)]
                         , _0x6128c5 = new Uint8Array(_0x537a7b, _0x1b5072, _0x3a38e2)
                         , _0x2d4965 = (_0x1b5072 += _0x3a38e2) % 0x4;
                    0x0 !== _0x2d4965 && (_0x1b5072 += 0x4 - _0x2d4965);
                    let _0x7f77d2 = _0x11572f(0x3f4) + _0x24f125
                         , _0x3b9010 = _0x39f48f[_0x11572f(0x761)]
                         , _0x1639f0 = _0x39f48f[_0x11572f(0x360)];
                    if (_0x1639f0[_0x7f77d2] = _0x3b9010['length'],
                         _0x3b9010['push']({
                              'index': _0x1639f0[_0x7f77d2],
                              'typedArray': _0x6128c5,
                              'componentsPerAttribute': _0x130379,
                              'componentDatatype': Cesium[_0x11572f(0x5fa)][_0x11572f(0x982)],
                              'offsetInBytes': 0x0,
                              'strideInBytes': _0x130379 * Int16Array[_0x11572f(0x385)],
                              'normalize': !0x1
                         }),
                         _0x275eaf) {
                         _0x3a38e2 = _0x1d8cef * Float32Array[_0x11572f(0x385)];
                         let _0x17764f = new Uint8Array(_0x537a7b, _0x1b5072, _0x3a38e2);
                         _0x1b5072 += _0x3a38e2,
                              _0x39f48f[_0x11572f(0x6ad)] = !0x0,
                              _0x7f77d2 = _0x11572f(0xa5d) + _0x24f125,
                              _0x1639f0[_0x7f77d2] = _0x3b9010[_0x11572f(0x72b)],
                              _0x3b9010[_0x11572f(0x63e)]({
                                   'index': _0x1639f0[_0x7f77d2],
                                   'typedArray': _0x17764f,
                                   'componentsPerAttribute': 0x1,
                                   'componentDatatype': Cesium[_0x11572f(0x5fa)]['FLOAT'],
                                   'offsetInBytes': 0x0,
                                   'strideInBytes': Float32Array[_0x11572f(0x385)],
                                   'normalize': !0x1
                              });
                    }
               }
               return _0x1b5072;
          }
          function _0x58da12(_0x16fae1, _0x450cf7, _0xea6ba2, _0x391188) {
               return _0xea6ba2 = _0x23ce4a(_0x16fae1, _0x450cf7, _0xea6ba2 = _0x4487f4(_0x16fae1, _0x450cf7, _0xea6ba2 = _0x74d269(_0x16fae1, _0x450cf7, _0xea6ba2 = _0x55077a(_0x16fae1, _0x450cf7, _0xea6ba2 = _0x4fc1ac(_0x16fae1, _0x450cf7, _0xea6ba2 = _0x435675(_0x16fae1, _0x450cf7, _0xea6ba2, _0x391188), _0x391188), _0x391188), _0x391188), _0x391188), _0x391188);
          }
          function _0x41f3e2(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7) {
               const _0xecb108 = _0xc3a123;
               let _0x370af4 = _0x36df5c['getUint32'](_0x5bbf74, !0x0);
               return _0x5edce7[_0xecb108(0x408)] = _0x370af4,
                    _0x5bbf74 += Uint32Array[_0xecb108(0x385)],
                    _0x5bbf74 = (_0x370af4 & _0x38a067['SVC_Vertex']) === _0x38a067[_0xecb108(0x741)] ? _0x5509d2(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7) : _0x435675(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7),
                    _0x5bbf74 = _0x74d269(_0x1f5154, _0x36df5c, _0x5bbf74 = _0x55077a(_0x1f5154, _0x36df5c, _0x5bbf74 = (_0x370af4 & _0x38a067['SVC_Normal']) === _0x38a067[_0xecb108(0xa26)] ? _0x4df0e5(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7) : _0x4fc1ac(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7), _0x5edce7), _0x5edce7),
                    _0x5bbf74 = (_0x370af4 & _0x38a067[_0xecb108(0x7d9)]) === _0x38a067[_0xecb108(0x7d9)] ? _0x3a8c10(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7) : _0x4487f4(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7),
                    (_0x370af4 & _0x38a067[_0xecb108(0x8df)]) === _0x38a067[_0xecb108(0x8df)] && (_0x5edce7[_0xecb108(0xb7d)] = !0x0),
                    _0x5bbf74 = _0x23ce4a(_0x1f5154, _0x36df5c, _0x5bbf74, _0x5edce7);
          }
          function _0x30d781(_0x394688, _0x4321c2, _0x539984, _0x2f2d87) {
               const _0x1e4ea4 = _0xc3a123;
               let _0x1163f5 = _0x4321c2[_0x1e4ea4(0x494)](_0x539984, !0x0);
               _0x539984 += Uint32Array[_0x1e4ea4(0x385)];
               for (let _0x5e6217 = 0x0; _0x5e6217 < _0x1163f5; _0x5e6217++) {
                    let _0x1298ed = {}
                         , _0x50fe14 = _0x4321c2[_0x1e4ea4(0x494)](_0x539984, !0x0);
                    _0x539984 += Uint32Array[_0x1e4ea4(0x385)];
                    let _0x22ea7e = _0x4321c2[_0x1e4ea4(0xb7b)](_0x539984, !0x0);
                    _0x539984 += Uint8Array['BYTES_PER_ELEMENT'],
                         _0x4321c2[_0x1e4ea4(0xb7b)](_0x539984, !0x0),
                         _0x539984 += Uint8Array[_0x1e4ea4(0x385)];
                    let _0x596f01 = _0x4321c2[_0x1e4ea4(0xb7b)](_0x539984, !0x0);
                    if (_0x539984 += Uint8Array['BYTES_PER_ELEMENT'],
                         _0x539984 += Uint8Array['BYTES_PER_ELEMENT'],
                         _0x50fe14 > 0x0) {
                         let _0x76617, _0x3905a9 = null;
                         0x1 === _0x22ea7e || 0x3 === _0x22ea7e ? (_0x76617 = _0x50fe14 * Uint32Array[_0x1e4ea4(0x385)],
                              _0x3905a9 = new Uint8Array(_0x394688, _0x539984, _0x76617)) : (_0x76617 = _0x50fe14 * Uint16Array[_0x1e4ea4(0x385)],
                                   _0x3905a9 = new Uint8Array(_0x394688, _0x539984, _0x76617),
                                   _0x50fe14 % 0x2 != 0x0 && (_0x76617 += 0x2)),
                              _0x1298ed['indicesTypedArray'] = _0x3905a9,
                              _0x539984 += _0x76617;
                    }
                    _0x1298ed[_0x1e4ea4(0x645)] = _0x50fe14,
                         _0x1298ed[_0x1e4ea4(0x9b7)] = _0x22ea7e,
                         _0x1298ed[_0x1e4ea4(0xba3)] = _0x596f01;
                    let _0x4e4070 = _0x4321c2[_0x1e4ea4(0x494)](_0x539984, !0x0);
                    _0x539984 += Uint32Array['BYTES_PER_ELEMENT'];
                    for (let _0x2c2457 = 0x0; _0x2c2457 < _0x4e4070; _0x2c2457++) {
                         let _0x286b5b = _0x59d99e(_0x394688, _0x4321c2, _0x539984)
                              , _0x183b4a = _0x286b5b[_0x1e4ea4(0x379)];
                         _0x539984 = _0x286b5b[_0x1e4ea4(0xad6)],
                              _0x1298ed[_0x1e4ea4(0x586)] = _0x183b4a;
                    }
                    0x0 !== _0x539984 % 0x4 && (_0x539984 += 0x4 - _0x539984 % 0x4),
                         _0x2f2d87[_0x1e4ea4(0x63e)](_0x1298ed);
               }
               return _0x539984;
          }
          function _0x29c26f(_0x443007, _0x68b102, _0x5e77a3, _0x46298b) {
               const _0x51240a = _0xc3a123;
               _0x68b102[_0x51240a(0x494)](_0x5e77a3, !0x0),
                    _0x5e77a3 += Uint32Array[_0x51240a(0x385)];
               let _0x391d6 = _0x68b102[_0x51240a(0x494)](_0x5e77a3, !0x0);
               _0x5e77a3 += Uint32Array['BYTES_PER_ELEMENT'];
               for (let _0xa49919 = 0x0; _0xa49919 < _0x391d6; _0xa49919++) {
                    let _0x11e8bf = _0x59d99e(_0x443007, _0x68b102, _0x5e77a3)
                         , _0x4db00f = _0x11e8bf[_0x51240a(0x379)]
                         , _0x5ec997 = (_0x5e77a3 = _0x11e8bf[_0x51240a(0xad6)]) % 0x4;
                    0x0 !== _0x5ec997 && (_0x5e77a3 += 0x4 - _0x5ec997);
                    let _0x507f54 = _0x68b102[_0x51240a(0x494)](_0x5e77a3, !0x0);
                    _0x5e77a3 += Int32Array[_0x51240a(0x385)];
                    let _0x4ba382 = {
                         'vertexAttributes': [],
                         'attrLocation': {},
                         'instanceCount': 0x0,
                         'instanceMode': 0x0,
                         'instanceIndex': -0x1
                    };
                    _0x507f54 === _0x2f2dd8['SV_Standard'] ? _0x5e77a3 = _0x58da12(_0x443007, _0x68b102, _0x5e77a3, _0x4ba382) : _0x507f54 === _0x2f2dd8['SV_Compressed'] && (_0x5e77a3 = _0x41f3e2(_0x443007, _0x68b102, _0x5e77a3, _0x4ba382));
                    let _0x5919c4, _0x3da2ef = [];
                    _0x5e77a3 = _0x30d781(_0x443007, _0x68b102, _0x5e77a3, _0x3da2ef),
                         0x2 === _0x3da2ef[_0x51240a(0x72b)] && 0xd === _0x3da2ef[0x1]['primitiveType'] && _0x3da2ef[0x1][_0x51240a(0x645)] >= 0x3 && (_0x5919c4 = _0x1d0b86[_0x51240a(0x9c1)](_0x4ba382, _0x3da2ef[0x1])),
                         _0x46298b[_0x4db00f] = {
                              'vertexPackage': _0x4ba382,
                              'arrIndexPackage': _0x3da2ef,
                              'edgeGeometry': _0x5919c4
                         };
               }
               return _0x5e77a3 += _0x68b102[_0x51240a(0x494)](_0x5e77a3, !0x0),
                    _0x5e77a3 += Uint32Array[_0x51240a(0x385)];
          }
          function _0x56a787(_0x459db5, _0x38407, _0x286ce5, _0x27fc38) {
               const _0x5f42bd = _0xc3a123;
               let _0x2a5d42 = _0x286ce5[_0x5f42bd(0x72b)];
               for (let _0x2ffb71 = 0x0; _0x2ffb71 < _0x2a5d42; _0x2ffb71++) {
                    let _0x301b01 = _0x286ce5[_0x2ffb71]
                         , _0x10e1c6 = _0x301b01[_0x5f42bd(0xb29)][_0x5f42bd(0x39b)]('_')[0x0]
                         , _0x448ff5 = _0x301b01[_0x5f42bd(0x7e7)];
                    for (let _0x21f8cb = 0x0; _0x21f8cb < _0x448ff5['length']; _0x21f8cb++) {
                         let _0x1734fc = _0x448ff5[_0x21f8cb]
                              , _0x26f7e2 = _0x1734fc[_0x5f42bd(0xb01)]
                              , _0x4af67f = _0x1734fc[_0x5f42bd(0x4e8)]
                              , _0x2f98bf = _0x1734fc[_0x5f42bd(0xcce)]
                              , _0x299e49 = _0x1734fc[_0x5f42bd(0x9ea)]
                              , _0x2b00e9 = _0x38407[_0x26f7e2][_0x5f42bd(0xd49)][_0x5f42bd(0x8d0)]
                              , _0x4fd619 = _0x27fc38[_0x26f7e2];
                         _0x4fd619 || (_0x4fd619 = _0x27fc38[_0x26f7e2] = {});
                         let _0x8146aa = _0x4fd619[_0x299e49];
                         _0x8146aa || (_0x8146aa = _0x4fd619[_0x299e49] = new Float32Array(_0x2b00e9),
                              _0x8146aa[_0x5f42bd(0xd1b)](_0x8146aa, -0x1));
                         let _0x217a5f = _0x459db5 ? _0x459db5[_0x10e1c6] : _0x2ffb71;
                         _0x8146aa[_0x5f42bd(0xd1b)](_0x217a5f, _0x4af67f, _0x4af67f + _0x2f98bf);
                    }
               }
          }
          function _0x1c342e(_0x38d372, _0x139399, _0x395a2d) {
               const _0x598353 = _0xc3a123;
               var _0x2fb344 = _0x38d372[_0x598353(0x761)]
                    , _0x3de6f9 = _0x38d372[_0x598353(0x360)]
                    , _0x34dc67 = _0x2fb344[_0x598353(0x72b)];
               _0x3de6f9[_0x598353(0xb58) + _0x395a2d] = _0x34dc67,
                    _0x2fb344[_0x598353(0x63e)]({
                         'index': _0x34dc67,
                         'typedArray': _0x139399,
                         'componentsPerAttribute': 0x1,
                         'componentDatatype': Cesium[_0x598353(0x5fa)][_0x598353(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x0
                    });
          }
          function _0x38a8a1(_0x4ac845, _0x4fbf1b, _0x35ab14, _0x2d5134, _0x405e4d, _0x175641, _0x308ed5, _0x2c797c) {
               const _0x4f90ed = _0xc3a123;
               let _0x4d699c = _0x35ab14;
               _0x4fbf1b['getUint32'](_0x4d699c, !0x0),
                    _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
               let _0x20395e = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
               _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
               let _0xf406cb = {};
               for (let _0x31ddcb = 0x0; _0x31ddcb < _0x20395e; _0x31ddcb++) {
                    let _0x457498 = _0x59d99e(_0x4ac845, _0x4fbf1b, _0x4d699c)
                         , _0x4e9945 = _0x457498[_0x4f90ed(0x379)];
                    _0x4d699c = _0x457498[_0x4f90ed(0xad6)];
                    let _0x38f802 = _0x4d699c % 0x4;
                    0x0 !== _0x38f802 && (_0x4d699c += 0x4 - _0x38f802),
                         _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0),
                         _0x4d699c += Uint32Array[_0x4f90ed(0x385)],
                         _0x4fbf1b[_0x4f90ed(0xb7b)](_0x4d699c, !0x0),
                         _0x4d699c += Uint8Array[_0x4f90ed(0x385)];
                    let _0x1737bd = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                    let _0x278f5e = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0xa3268f = _0x4fbf1b['getUint32'](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                    let _0x2ff0cc = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                    let _0x4871b4, _0x468be5 = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array[_0x4f90ed(0x385)],
                         _0x2c797c && (_0x4871b4 = new Uint8Array(_0x4ac845, _0x4d699c, _0x2ff0cc),
                              _0x4d699c += _0x2ff0cc);
                    let _0x58b905 = _0x4fbf1b['getUint32'](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                    for (let _0x58ce1b = 0x0; _0x58ce1b < _0x58b905; _0x58ce1b++) {
                         let _0x26795d = _0x59d99e(_0x4ac845, _0x4fbf1b, _0x4d699c)
                              , _0x3e0295 = _0x26795d[_0x4f90ed(0x379)];
                         _0x4d699c = _0x26795d['bytesOffset'],
                              _0x308ed5[_0x3e0295] = _0x4e9945;
                    }
                    let _0x232752 = _0x4fbf1b['getUint32'](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                    let _0x45f852 = [];
                    for (let _0x361078 = 0x0; _0x361078 < _0x232752; _0x361078++) {
                         let _0x236d80 = _0x59d99e(_0x4ac845, _0x4fbf1b, _0x4d699c);
                         _0x4d699c = _0x236d80['bytesOffset'],
                              _0x45f852[_0x4f90ed(0x63e)](_0x236d80[_0x4f90ed(0x379)]);
                    }
                    let _0xf4622f = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                    _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                    let _0x1c7212, _0x39f386 = [], _0x380eed = _0x4e9945;
                    if (_0x2c797c)
                         _0x1c7212 = _0x175641[_0x4e9945] = {};
                    else {
                         let _0x3c8572 = _0x308ed5[_0x4e9945];
                         for (_0x380eed = _0x3c8572; _0x3c8572;)
                              _0x380eed = _0x3c8572,
                                   _0x3c8572 = _0x308ed5[_0x3c8572];
                         _0x380eed && (_0x1c7212 = _0x175641[_0x380eed]);
                    }
                    let _0x449cdb = 0x0;
                    for (let _0x456fb7 = 0x0; _0x456fb7 < _0xf4622f; _0x456fb7++) {
                         let _0x59d709 = _0x59d99e(_0x4ac845, _0x4fbf1b, _0x4d699c)
                              , _0x29fe93 = _0x59d709[_0x4f90ed(0x379)];
                         if (_0x4d699c = _0x59d709[_0x4f90ed(0xad6)],
                              _0x2c797c) {
                              let _0xb64272 = _0x29fe93[_0x4f90ed(0x39b)]('_')[0x0];
                              _0x1c7212[_0xb64272] ? _0x449cdb++ : _0x1c7212[_0xb64272] = _0x456fb7 - _0x449cdb;
                         }
                         let _0x523254 = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                         _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                         let _0x1a67ae = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                         _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                         let _0x3e7d78 = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                         _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                         let _0x183fe9 = _0x4fbf1b['getUint32'](_0x4d699c, !0x0);
                         _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                         let _0x27c3f8 = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                         _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                         let _0x37e56f = [];
                         for (let _0x346c26 = 0x0; _0x346c26 < _0x27c3f8; _0x346c26++) {
                              let _0x1feac6 = _0x59d99e(_0x4ac845, _0x4fbf1b, _0x4d699c)
                                   , _0x5551e5 = _0x1feac6['string'];
                              _0x4d699c = _0x1feac6['bytesOffset'];
                              let _0x5bc780 = _0x4fbf1b['getUint32'](_0x4d699c, !0x0);
                              _0x4d699c += Uint32Array['BYTES_PER_ELEMENT'];
                              let _0x511991 = _0x4fbf1b[_0x4f90ed(0x494)](_0x4d699c, !0x0);
                              _0x4d699c += Uint32Array[_0x4f90ed(0x385)];
                              let _0x50a978 = _0x4fbf1b['getUint32'](_0x4d699c, !0x0);
                              _0x4d699c += Uint32Array[_0x4f90ed(0x385)],
                                   _0x37e56f['push']({
                                        'geoName': _0x5551e5,
                                        'offset': _0x5bc780,
                                        'count': _0x511991,
                                        'texUnitIndex': _0x50a978
                                   });
                         }
                         _0x39f386[_0x4f90ed(0x63e)]({
                              'subName': _0x29fe93,
                              'offsetX': _0x523254,
                              'offsetY': _0x1a67ae,
                              'width': _0x3e7d78,
                              'height': _0x183fe9,
                              'subVertexOffsetArr': _0x37e56f
                         });
                    }
                    _0x56a787(_0x1c7212, _0x405e4d, _0x39f386, _0xf406cb),
                         _0x2d5134[_0x4e9945] = {
                              'id': _0x4e9945,
                              'rootTextureName': _0x380eed,
                              'width': _0x1737bd,
                              'height': _0x278f5e,
                              'compressType': _0xa3268f,
                              'size': _0x2ff0cc,
                              'format': _0x468be5,
                              'textureData': _0x4871b4,
                              'subTexInfos': _0x39f386,
                              'requestNames': _0x45f852
                         };
               }
               for (let _0x3619a8 in _0xf406cb)
                    if (_0xf406cb['hasOwnProperty'](_0x3619a8)) {
                         let _0x29b2e0 = _0x405e4d[_0x3619a8]['vertexPackage']
                              , _0x522592 = _0xf406cb[_0x3619a8];
                         for (let _0x5544ec in _0x522592)
                              _0x522592['hasOwnProperty'](_0x5544ec) && _0x1c342e(_0x29b2e0, _0x522592[_0x5544ec], _0x5544ec);
                    }
               return _0x4d699c;
          }
          function _0x41a6fc(_0x4c7c3b, _0x1df2fa, _0x520e06, _0x14d2e1) {
               const _0x56f727 = _0xc3a123;
               let _0x36089b = _0x1df2fa['getUint32'](_0x520e06, !0x0);
               _0x520e06 += Uint32Array[_0x56f727(0x385)];
               let _0x427478 = new Uint8Array(_0x4c7c3b, _0x520e06, _0x36089b)
                    , _0xdbf3e3 = Cesium['getStringFromTypedArray'](_0x427478);
               return _0x520e06 += _0x36089b,
                    _0x14d2e1[_0x56f727(0x214)] = JSON[_0x56f727(0x9bc)](_0xdbf3e3),
                    _0x520e06;
          }
          let _0x2b6c08 = new Cesium['Color']()
               , _0xa58f5c = 0x10000;
          function _0x7ee313(_0x6f2efc, _0x3aec39, _0x4e45d3, _0x26ed9d, _0x2c45be, _0x17320f) {
               const _0x4ccc83 = _0xc3a123;
               if (0x1 == (0x1 & _0x26ed9d)) {
                    _0x3aec39[_0x4ccc83(0x494)](_0x4e45d3, !0x0),
                         _0x4e45d3 += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x3b9478 = _0x3aec39[_0x4ccc83(0x494)](_0x4e45d3, !0x0);
                    _0x4e45d3 += Uint32Array[_0x4ccc83(0x385)];
                    for (let _0x6bfc9c = 0x0; _0x6bfc9c < _0x3b9478; _0x6bfc9c++) {
                         let _0x4564ef = _0x59d99e(_0x6f2efc, _0x3aec39, _0x4e45d3)
                              , _0x583814 = _0x4564ef['string'];
                         _0x4e45d3 = _0x4564ef['bytesOffset'];
                         let _0xdda568 = _0x3aec39['getUint32'](_0x4e45d3, !0x0);
                         _0x4e45d3 += Uint32Array[_0x4ccc83(0x385)];
                         let _0x394d99 = {};
                         if (_0x2c45be[_0x583814][_0x4ccc83(0x239)] = _0x394d99,
                              -0x1 == _0x2c45be[_0x583814][_0x4ccc83(0xd49)][_0x4ccc83(0x956)]) {
                              let _0x1e74e4 = new Float32Array(_0x2c45be[_0x583814][_0x4ccc83(0xd49)]['verticesCount']);
                              for (let _0x13b2e3 = 0x0; _0x13b2e3 < _0xdda568; _0x13b2e3++) {
                                   let _0x1cefa7 = _0x3aec39['getUint32'](_0x4e45d3, !0x0);
                                   _0x4e45d3 += Uint32Array['BYTES_PER_ELEMENT'];
                                   let _0x5baf6c = _0x3aec39['getUint32'](_0x4e45d3, !0x0);
                                   _0x4e45d3 += Uint32Array['BYTES_PER_ELEMENT'];
                                   let _0x412a6c = [];
                                   for (let _0x429b99 = 0x0; _0x429b99 < _0x5baf6c; _0x429b99++) {
                                        let _0x2354d3 = _0x3aec39['getUint32'](_0x4e45d3, !0x0);
                                        _0x4e45d3 += Uint32Array['BYTES_PER_ELEMENT'];
                                        let _0x3c4c82 = _0x3aec39['getUint32'](_0x4e45d3, !0x0);
                                        _0x4e45d3 += Uint32Array['BYTES_PER_ELEMENT'],
                                             _0x1e74e4[_0x4ccc83(0xd1b)](_0x13b2e3, _0x2354d3, _0x2354d3 + _0x3c4c82),
                                             _0x412a6c[_0x4ccc83(0x63e)]({
                                                  'vertexColorOffset': _0x2354d3,
                                                  'vertexColorCount': _0x3c4c82,
                                                  'batchId': _0x13b2e3
                                             });
                                   }
                                   _0x394d99[_0x1cefa7] = _0x412a6c;
                              }
                              _0xde99a2(_0x2c45be[_0x583814][_0x4ccc83(0xd49)], _0x1e74e4, void 0x0);
                         } else {
                              let _0x39f782 = _0x2c45be[_0x583814][_0x4ccc83(0xd49)]['instanceCount']
                                   , _0x441c13 = _0x2c45be[_0x583814][_0x4ccc83(0xd49)]['instanceBuffer']
                                   , _0x34c273 = _0x2c45be[_0x583814][_0x4ccc83(0xd49)][_0x4ccc83(0xd4e)]
                                   , _0x5338c2 = new Float32Array(_0x39f782)
                                   , _0x390fc6 = [];
                              for (let _0x4dcfe8 = 0x0; _0x4dcfe8 < _0xdda568; _0x4dcfe8++) {
                                   let _0x280b84 = _0x3aec39[_0x4ccc83(0x494)](_0x4e45d3, !0x0);
                                   _0x390fc6[_0x4ccc83(0x63e)](_0x280b84),
                                        _0x4e45d3 += Uint32Array[_0x4ccc83(0x385)];
                                   let _0x471bab = _0x3aec39[_0x4ccc83(0x494)](_0x4e45d3, !0x0);
                                   _0x4e45d3 += Uint32Array[_0x4ccc83(0x385)];
                                   for (let _0x4e7d57 = 0x0; _0x4e7d57 < _0x471bab; _0x4e7d57++)
                                        _0x3aec39[_0x4ccc83(0x494)](_0x4e45d3, !0x0),
                                             _0x4e45d3 += Uint32Array['BYTES_PER_ELEMENT'],
                                             0x2 == _0x17320f && (_0x3aec39[_0x4ccc83(0x494)](_0x4e45d3, !0x0),
                                                  _0x4e45d3 += Uint32Array[_0x4ccc83(0x385)]);
                              }
                              let _0x2b655b = 0x11 === _0x34c273 ? 0x10 : 0x1c;
                              _0x2b655b *= Float32Array[_0x4ccc83(0x385)];
                              for (let _0x57e40b = 0x0; _0x57e40b < _0x39f782; _0x57e40b++) {
                                   _0x5338c2[_0x57e40b] = _0x57e40b;
                                   let _0x482d5c = _0x57e40b * _0x34c273 * Float32Array[_0x4ccc83(0x385)] + _0x2b655b;
                                   Cesium['Color']['unpack'](_0x441c13, _0x482d5c, _0x2b6c08);
                                   let _0x3e2e64 = 0x2 === _0x17320f ? _0x390fc6[_0x57e40b] : _0x2b6c08[_0x4ccc83(0x351)] + 0x100 * _0x2b6c08[_0x4ccc83(0x9a1)] + _0x2b6c08[_0x4ccc83(0x72a)] * _0xa58f5c;
                                   void 0x0 === _0x394d99[_0x3e2e64] && (_0x394d99[_0x3e2e64] = {
                                        'vertexColorCount': 0x1,
                                        'instanceIds': [],
                                        'vertexColorOffset': _0x57e40b
                                   }),
                                        _0x394d99[_0x3e2e64][_0x4ccc83(0x7d6)][_0x4ccc83(0x63e)](_0x57e40b);
                              }
                              _0xde99a2(_0x2c45be[_0x583814][_0x4ccc83(0xd49)], _0x5338c2, 0x1);
                         }
                    }
               }
               return _0x4e45d3;
          }
          function _0xde99a2(_0xd6fd92, _0xb77e52, _0x436988) {
               const _0xd42a5f = _0xc3a123;
               let _0x10f9fe = _0xd6fd92[_0xd42a5f(0x761)]
                    , _0x4a39eb = _0xd6fd92[_0xd42a5f(0x360)]
                    , _0x31e9e3 = _0x10f9fe['length'];
               _0x4a39eb[0x1 === _0x436988 ? _0xd42a5f(0x1cc) : _0xd42a5f(0xd53)] = _0x31e9e3,
                    _0x10f9fe[_0xd42a5f(0x63e)]({
                         'index': _0x31e9e3,
                         'typedArray': _0xb77e52,
                         'componentsPerAttribute': 0x1,
                         'componentDatatype': Cesium['ComponentDatatype'][_0xd42a5f(0xa80)],
                         'offsetInBytes': 0x0,
                         'strideInBytes': 0x0,
                         'instanceDivisor': _0x436988
                    });
          }
          function _0x31374d(_0x495351) {
               const _0xdb8e24 = _0xc3a123;
               let _0x856d7f = _0x495351['indexOf'](_0xdb8e24(0x281));
               if (-0x1 === _0x856d7f)
                    return _0x495351;
               let _0x3403fb = _0x495351[_0xdb8e24(0x617)](_0x856d7f, _0x495351[_0xdb8e24(0x72b)]);
               return _0x495351[_0xdb8e24(0x6c0)](_0x3403fb, '');
          }
          _0x3e9f08[_0xc3a123(0xbc4)] = function (_0x802509, _0x59d5de) {
               const _0xaa2df4 = _0xc3a123;
               let _0x3c8463 = _0x59d5de[_0xaa2df4(0x66c)]
                    , _0x11eb71 = _0x59d5de[_0xaa2df4(0x36c)]
                    , _0x49b384 = 0x0
                    , _0x38b410 = new DataView(_0x802509);
               _0x38b410[_0xaa2df4(0x283)](_0x49b384, !0x0),
                    _0x49b384 += Float32Array[_0xaa2df4(0x385)];
               let _0x20912d = _0x38b410[_0xaa2df4(0x494)](_0x49b384, !0x0);
               _0x49b384 += Uint32Array['BYTES_PER_ELEMENT'];
               let _0x5adb44 = {};
               for (; _0x20912d--;) {
                    _0x38b410 = new DataView(_0x802509);
                    let _0x371564 = _0x59d99e(_0x802509, _0x38b410, _0x49b384)
                         , _0x253fb7 = _0x5adb44[_0x371564[_0xaa2df4(0x379)]] = {
                              'groupNode': void 0x0,
                              'geoPackage': {},
                              'texturePackage': {},
                              'materials': {},
                              'rootBatchIdMap': _0x3c8463,
                              'ancestorMap': _0x11eb71
                         };
                    _0x49b384 = _0x371564[_0xaa2df4(0xad6)];
                    let _0x4f0bbc = _0x38b410['getUint32'](_0x49b384, !0x0);
                    _0x49b384 += Uint32Array[_0xaa2df4(0x385)];
                    for (let _0x2b86db = 0x0; _0x2b86db < _0x4f0bbc; _0x2b86db++) {
                         let _0x247af9 = {}
                              , _0x2984cd = _0x38b410[_0xaa2df4(0x283)](_0x49b384, !0x0);
                         _0x49b384 += Float32Array[_0xaa2df4(0x385)];
                         let _0x2ef853 = _0x38b410[_0xaa2df4(0x876)](_0x49b384, !0x0);
                         _0x49b384 += Uint16Array['BYTES_PER_ELEMENT'],
                              _0x247af9[_0xaa2df4(0xaf9)] = _0x2ef853,
                              _0x247af9[_0xaa2df4(0x894)] = _0x2984cd;
                         let _0x18d6b3 = {};
                         _0x18d6b3['x'] = _0x38b410[_0xaa2df4(0x994)](_0x49b384, !0x0),
                              _0x49b384 += Float64Array['BYTES_PER_ELEMENT'],
                              _0x18d6b3['y'] = _0x38b410[_0xaa2df4(0x994)](_0x49b384, !0x0),
                              _0x49b384 += Float64Array[_0xaa2df4(0x385)],
                              _0x18d6b3['z'] = _0x38b410[_0xaa2df4(0x994)](_0x49b384, !0x0),
                              _0x49b384 += Float64Array['BYTES_PER_ELEMENT'];
                         let _0x4da3c4 = _0x38b410[_0xaa2df4(0x994)](_0x49b384, !0x0);
                         _0x49b384 += Float64Array['BYTES_PER_ELEMENT'],
                              _0x247af9['boundingSphere'] = {
                                   'center': _0x18d6b3,
                                   'radius': _0x4da3c4
                              };
                         let _0x2c6397 = _0x59d99e(_0x802509, _0x38b410, _0x49b384)
                              , _0x1e9295 = _0x2c6397[_0xaa2df4(0x379)];
                         _0x49b384 = _0x2c6397['bytesOffset'],
                              _0x1e9295 = _0x1e9295[_0xaa2df4(0x6c0)](/(\.s3mblock)|(\.s3mbz)|(\.s3mb)/gi, ''),
                              _0x1e9295 = _0x31374d(_0x1e9295),
                              _0x247af9[_0xaa2df4(0x9bf)] = _0x1e9295;
                    }
                    let _0x5ed5c1 = _0x38b410['getFloat32'](_0x49b384, !0x0);
                    _0x49b384 += Float32Array[_0xaa2df4(0x385)],
                         _0x38b410[_0xaa2df4(0x494)](_0x49b384, !0x0),
                         _0x49b384 += Uint32Array[_0xaa2df4(0x385)];
                    let _0x3daf2a = _0x38b410['getUint32'](_0x49b384, !0x0);
                    _0x49b384 += Uint32Array[_0xaa2df4(0x385)];
                    let _0x4bc288 = new Uint8Array(_0x802509, _0x49b384, _0x3daf2a)
                         , _0x1389af = _0x49b384 + _0x3daf2a
                         , _0x4d82e3 = _0xce368[_0xaa2df4(0xcb6)](_0x4bc288)['buffer'];
                    _0x38b410 = new DataView(_0x4d82e3),
                         _0x49b384 = 0x0;
                    let _0x4fce8a = _0x38b410[_0xaa2df4(0x494)](_0x49b384, !0x0);
                    _0x49b384 += Uint32Array[_0xaa2df4(0x385)],
                         _0x49b384 = _0x419507(_0x4d82e3, _0x38b410, _0x49b384, _0x253fb7),
                         _0x49b384 = _0x29c26f(_0x4d82e3, _0x38b410, _0x49b384, _0x253fb7[_0xaa2df4(0x9b0)]),
                         _0x49b384 = _0x38a8a1(_0x4d82e3, _0x38b410, _0x49b384, _0x253fb7[_0xaa2df4(0x245)], _0x253fb7[_0xaa2df4(0x9b0)], _0x3c8463, _0x11eb71, _0x59d5de['isRootTile']),
                         _0x49b384 = _0x41a6fc(_0x4d82e3, _0x38b410, _0x49b384, _0x253fb7),
                         _0x49b384 = _0x7ee313(_0x4d82e3, _0x38b410, _0x49b384, _0x4fce8a, _0x253fb7[_0xaa2df4(0x9b0)], _0x5ed5c1),
                         _0x49b384 = _0x1389af;
               }
               return _0x5adb44;
          }
               ;
          const _0x40f5a0 = 0x1111
               , _0x537519 = 0x190a;
          function _0x3d3090(_0x596c5e, _0x423807, _0xdcf849) {
               const _0x314d9a = _0xc3a123;
               let _0xbfc062 = _0x596c5e[_0x314d9a(0x2b8)];
               this['contextId'] = _0x596c5e['id'],
                    this[_0x314d9a(0xda0)] = _0x423807,
                    this[_0x314d9a(0x5ea)] = _0xdcf849['layerId'],
                    this[_0x314d9a(0x2b6)] = _0xdcf849['rootName'],
                    this['context'] = _0x596c5e,
                    this[_0x314d9a(0x65e)] = _0xdcf849[_0x314d9a(0x65e)],
                    this[_0x314d9a(0x48e)] = _0xdcf849[_0x314d9a(0x48e)],
                    this['compressType'] = _0xdcf849[_0x314d9a(0x56f)],
                    this[_0x314d9a(0x760)] = _0xdcf849[_0x314d9a(0x760)],
                    this[_0x314d9a(0x201)] = _0xdcf849[_0x314d9a(0x201)],
                    this[_0x314d9a(0x3e0)] = _0xdcf849[_0x314d9a(0x3e0)],
                    this[_0x314d9a(0x28e)] = Cesium[_0x314d9a(0x4d9)](_0xdcf849[_0x314d9a(0x28e)], Cesium[_0x314d9a(0x7a5)][_0x314d9a(0x53e)]),
                    this[_0x314d9a(0x7a2)] = Cesium[_0x314d9a(0x4d9)](_0xdcf849[_0x314d9a(0x7a2)], Cesium[_0x314d9a(0x7a5)][_0x314d9a(0x53e)]),
                    this[_0x314d9a(0xb42)] = _0xbfc062[_0x314d9a(0x1ba)],
                    this['_texture'] = void 0x0,
                    this['refCount'] = 0x1,
                    this[_0x314d9a(0x3b8)] = !_0xdcf849['isTexBlock'],
                    this[_0x314d9a(0xb78)] = !_0xdcf849[_0x314d9a(0xb6c)],
                    this['isTexBlock'] = _0xdcf849[_0x314d9a(0xb6c)],
                    this['arrayBufferView'] && this['init']();
          }
          function _0x3c621d(_0x2dfcc1, _0xf2c8e5, _0x19ff7f, _0x332b50) {
               const _0x48216d = _0xc3a123;
               let _0x5d074a = _0x2dfcc1['length']
                    , _0x211a24 = _0x19ff7f
                    , _0x4d845a = _0x332b50
                    , _0xfe747 = 0x0;
               for (; ;) {
                    if (_0xfe747 += Cesium[_0x48216d(0x4e1)][_0x48216d(0x5c5)](_0xf2c8e5, _0x211a24, _0x4d845a),
                         _0x211a24 >>= 0x1,
                         _0x4d845a >>= 0x1,
                         0x0 === _0x211a24 && 0x0 === _0x4d845a)
                         break;
                    _0x211a24 = Math['max'](_0x211a24, 0x1),
                         _0x4d845a = Math[_0x48216d(0x590)](_0x4d845a, 0x1);
               }
               return _0xfe747 === _0x5d074a;
          }
          function _0x3b324f() {
               const _0x2b47ba = _0xc3a123;
               this[_0x2b47ba(0x7a7)] = new Cesium[(_0x2b47ba(0x821))](),
                    this['diffuseColor'] = new Cesium['Color'](),
                    this[_0x2b47ba(0x471)] = new Cesium[(_0x2b47ba(0x821))](0x0, 0x0, 0x0, 0x0),
                    this[_0x2b47ba(0x847)] = 0x32,
                    this[_0x2b47ba(0x9c6)] = !0x1,
                    this[_0x2b47ba(0x40d)] = void 0x0,
                    this[_0x2b47ba(0xd21)] = Cesium[_0x2b47ba(0xcdf)][_0x2b47ba(0x432)](Cesium[_0x2b47ba(0xcdf)][_0x2b47ba(0x38c)], new Cesium['Matrix4']()),
                    this[_0x2b47ba(0xa0d)] = [];
          }
          _0x3d3090['prototype'][_0xc3a123(0x366)] = function () {
               const _0x3e3c15 = _0xc3a123;
               let _0x496cc0 = this[_0x3e3c15(0x878)][_0x3e3c15(0x2b8)];
               this[_0x3e3c15(0x213)] || (this[_0x3e3c15(0x213)] = _0x496cc0[_0x3e3c15(0x64e)]()),
                    _0x496cc0[_0x3e3c15(0x582)](_0x496cc0[_0x3e3c15(0x1ba)], this['_texture']);
               let _0x5922bf = this[_0x3e3c15(0x760)];
               _0x5922bf !== _0x537519 && _0x5922bf !== _0x40f5a0 || _0x496cc0[_0x3e3c15(0x3f2)](_0x496cc0['UNPACK_FLIP_Y_WEBGL'], !0x0);
               let _0xa9191e = 0x0;
               if (this['arrayBufferView']) {
                    let _0x5b2819 = 0x0
                         , _0x45d38c = this[_0x3e3c15(0x65e)]
                         , _0xff3a71 = this[_0x3e3c15(0x48e)]
                         , _0x56f9a3 = _0x3c621d(this['arrayBufferView'], _0x5922bf, _0x45d38c, _0xff3a71);
                    do {
                         let _0x26b872 = Cesium[_0x3e3c15(0x4e1)][_0x3e3c15(0x5c5)](_0x5922bf, _0x45d38c, _0xff3a71)
                              , _0x17bb8c = new Uint8Array(this['arrayBufferView'][_0x3e3c15(0x25d)], this['arrayBufferView']['byteOffset'] + _0x5b2819, _0x26b872);
                         _0x5922bf === _0x40f5a0 ? _0x496cc0[_0x3e3c15(0x8fb)](_0x496cc0[_0x3e3c15(0x1ba)], _0xa9191e++, _0x496cc0[_0x3e3c15(0x8a5)], _0x45d38c, _0xff3a71, 0x0, _0x496cc0[_0x3e3c15(0x8a5)], _0x496cc0[_0x3e3c15(0xb8c)], _0x17bb8c) : _0x496cc0[_0x3e3c15(0xd02)](_0x496cc0[_0x3e3c15(0x1ba)], _0xa9191e++, _0x5922bf, _0x45d38c, _0xff3a71, 0x0, _0x17bb8c),
                              _0x45d38c = Math[_0x3e3c15(0x590)](_0x45d38c >> 0x1, 0x1),
                              _0xff3a71 = Math['max'](_0xff3a71 >> 0x1, 0x1),
                              _0x5b2819 += _0x26b872;
                    } while (_0x5b2819 < this[_0x3e3c15(0x3e0)][_0x3e3c15(0x62b)] && _0x56f9a3);
               } else {
                    let _0x2e98bf = Cesium[_0x3e3c15(0x4e1)][_0x3e3c15(0x5c5)](_0x5922bf, this[_0x3e3c15(0x65e)], this[_0x3e3c15(0x48e)]);
                    _0x5922bf === _0x40f5a0 ? _0x496cc0[_0x3e3c15(0x8fb)](_0x496cc0[_0x3e3c15(0x1ba)], 0x0, _0x496cc0[_0x3e3c15(0x8a5)], this['_width'], this['height'], 0x0, _0x496cc0['RGBA'], _0x496cc0[_0x3e3c15(0xb8c)], new Uint8Array(this[_0x3e3c15(0x65e)] * this[_0x3e3c15(0x48e)] * 0x4)) : _0x496cc0[_0x3e3c15(0xd02)](_0x496cc0['TEXTURE_2D'], 0x0, _0x5922bf, this[_0x3e3c15(0x65e)], this[_0x3e3c15(0x48e)], 0x0, new Uint8Array(_0x2e98bf));
               }
               _0xa9191e > 0x1 ? (_0x496cc0[_0x3e3c15(0x95e)](_0x496cc0[_0x3e3c15(0x1ba)], _0x496cc0['TEXTURE_MAG_FILTER'], _0x496cc0[_0x3e3c15(0x9a3)]),
                    _0x496cc0[_0x3e3c15(0x95e)](_0x496cc0[_0x3e3c15(0x1ba)], _0x496cc0[_0x3e3c15(0x3da)], _0x496cc0[_0x3e3c15(0x650)])) : (_0x496cc0[_0x3e3c15(0x95e)](_0x496cc0['TEXTURE_2D'], _0x496cc0[_0x3e3c15(0x205)], _0x496cc0[_0x3e3c15(0x9a3)]),
                         _0x496cc0[_0x3e3c15(0x95e)](_0x496cc0[_0x3e3c15(0x1ba)], _0x496cc0['TEXTURE_MIN_FILTER'], _0x496cc0['LINEAR'])),
                    _0x496cc0[_0x3e3c15(0x95e)](_0x496cc0[_0x3e3c15(0x1ba)], _0x496cc0[_0x3e3c15(0x234)], this[_0x3e3c15(0x28e)]),
                    _0x496cc0[_0x3e3c15(0x95e)](_0x496cc0[_0x3e3c15(0x1ba)], _0x496cc0[_0x3e3c15(0x870)], this[_0x3e3c15(0x7a2)]),
                    _0x496cc0[_0x3e3c15(0x95e)](this['_target'], this[_0x3e3c15(0x878)][_0x3e3c15(0x21f)]['TEXTURE_MAX_ANISOTROPY_EXT'], 0x1),
                    _0x496cc0[_0x3e3c15(0x582)](_0x496cc0[_0x3e3c15(0x1ba)], null),
                    this[_0x3e3c15(0x3e0)] = void 0x0,
                    this['ready'] = !0x0;
          }
               ,
               _0x3d3090['prototype'][_0xc3a123(0xb2b)] = function (_0x40d593) {
                    const _0x43b462 = _0xc3a123;
                    let _0x581ad5 = this['context'][_0x43b462(0x2b8)]
                         , _0x29dbd4 = this[_0x43b462(0xb42)];
                    _0x581ad5['activeTexture'](_0x581ad5[_0x43b462(0x3b4)]),
                         _0x581ad5[_0x43b462(0x582)](_0x29dbd4, this[_0x43b462(0x213)]);
                    let _0x227033 = _0x40d593['xOffset']
                         , _0x51486e = _0x40d593[_0x43b462(0x918)]
                         , _0x56594e = _0x40d593['width']
                         , _0x3f7d5f = _0x40d593[_0x43b462(0x48e)]
                         , _0x184565 = _0x40d593[_0x43b462(0x3e0)]
                         , _0x2674d9 = this[_0x43b462(0x760)];
                    _0x581ad5[_0x43b462(0xb8c)],
                         _0x581ad5[_0x43b462(0x3f2)](_0x581ad5[_0x43b462(0xa1e)], !0x1),
                         _0x581ad5[_0x43b462(0x3f2)](_0x581ad5[_0x43b462(0x4f6)], !0x1),
                         _0x581ad5[_0x43b462(0xcf6)](_0x29dbd4, 0x0, _0x227033, _0x51486e, _0x56594e, _0x3f7d5f, _0x2674d9, _0x184565),
                         _0x581ad5[_0x43b462(0x582)](_0x29dbd4, null);
               }
               ,
               _0x3d3090[_0xc3a123(0x2d4)]['update'] = function (_0x2ae922) {
                    const _0xc125a2 = _0xc3a123;
                    this[_0xc125a2(0x878)] = _0x2ae922['context'],
                         this['contextId'] = _0x2ae922[_0xc125a2(0x878)]['id'],
                         this['layerId'] = _0x2ae922[_0xc125a2(0x5ea)],
                         this[_0xc125a2(0x2b6)] = _0x2ae922[_0xc125a2(0x2b6)],
                         this[_0xc125a2(0xda0)] = _0x2ae922[_0xc125a2(0xda0)],
                         this[_0xc125a2(0x65e)] = _0x2ae922[_0xc125a2(0x65e)],
                         this['height'] = _0x2ae922[_0xc125a2(0x48e)],
                         this[_0xc125a2(0x760)] = _0x2ae922[_0xc125a2(0x760)],
                         this[_0xc125a2(0x3e0)] = _0x2ae922[_0xc125a2(0x3e0)],
                         this[_0xc125a2(0xb9d)] = 0x1,
                         this[_0xc125a2(0x3b8)] = !0x1,
                         this[_0xc125a2(0xb78)] = !0x1,
                         defined(this[_0xc125a2(0x3e0)]) && this[_0xc125a2(0x366)]();
               }
               ,
               _0x3d3090[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x3d3090[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x2385c5 = _0xc3a123;
                    this['context'][_0x2385c5(0x2b8)][_0x2385c5(0x666)](this[_0x2385c5(0x213)]),
                         this[_0x2385c5(0x213)] = null,
                         this['id'] = 0x0,
                         Cesium[_0x2385c5(0x8e1)](this);
               }
               ,
               _0x3b324f[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x3b324f[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x5e0a5d = _0xc3a123;
                    let _0x2125df = this[_0x5e0a5d(0xa0d)][_0x5e0a5d(0x72b)];
                    for (let _0x56f98e = 0x0; _0x56f98e < _0x2125df; _0x56f98e++) {
                         this[_0x5e0a5d(0xa0d)][_0x56f98e][_0x5e0a5d(0x9bb)]();
                    }
                    return this[_0x5e0a5d(0xa0d)][_0x5e0a5d(0x72b)] = 0x0,
                         this[_0x5e0a5d(0x7a7)] = void 0x0,
                         this[_0x5e0a5d(0xaa2)] = void 0x0,
                         this[_0x5e0a5d(0x471)] = void 0x0,
                         Cesium[_0x5e0a5d(0x8e1)](this);
               }
               ,
               _0x3b324f[_0xc3a123(0x2d4)][_0xc3a123(0x2b5)] = function (_0x464f1e, _0x29d261, _0x58384a, _0x337ab9, _0x30f401, _0x426838, _0x14e717, _0xb8efd6, _0x403af6, _0x2a7a8c) {
                    const _0x8bf012 = _0xc3a123;
                    var _0x4205ea;
                    if (_0x403af6 = defaultValue(_0x403af6, !0x0),
                         _0xb8efd6 ? _0x4205ea = loadCRN(_0x30f401['imageBuffer'], !0x0, !0x0) : S3MTaskManager[_0x8bf012(0x21a)] && (_0x4205ea = loadCRNForS3M(S3MTaskManager[_0x8bf012(0x26f)], _0x30f401[_0x8bf012(0x49a)], !0x0)),
                         defined(_0x4205ea)) {
                         var _0x1720da = this;
                         return _0x4205ea[_0x8bf012(0x7db)](function (_0x259ee8) {
                              const _0x1e22a6 = _0x8bf012;
                              if (!_0x1720da[_0x1e22a6(0x567)]()) {
                                   _0x2a7a8c = defaultValue(_0x2a7a8c, {});
                                   var _0xe6f228 = DDSTextureManager[_0x1e22a6(0xb4e)](_0x464f1e, _0x58384a, _0x30f401[_0x1e22a6(0x65e)], _0x30f401['height'], _0x30f401[_0x1e22a6(0x6a9)], S3MCompressType[_0x1e22a6(0x79c)], _0x259ee8['bufferView'], !0x1, _0x426838, _0x14e717, _0x403af6);
                                   _0x2a7a8c['isEmissiveTex'] ? _0x1720da[_0x1e22a6(0xda3)] = _0xe6f228 : _0x2a7a8c[_0x1e22a6(0xd7d)] ? _0x1720da['normalTexture'] = _0xe6f228 : 0x0 === _0x337ab9 && _0x1720da[_0x1e22a6(0x6eb)]['length'] > 0x0 ? _0x1720da[_0x1e22a6(0x6eb)][_0x1e22a6(0x3d3)](0x0, 0x0, _0xe6f228) : _0x1720da[_0x1e22a6(0x6eb)][_0x1e22a6(0x63e)](_0xe6f228);
                              }
                         }),
                              _0x4205ea;
                    }
               }
               ;
          var _0x5b10f8 = _0xc3a123(0x5be)
               , _0x968c41 = _0xc3a123(0x446);
          function _0x379017() {
               const _0x2ba3dc = _0xc3a123;
               this['context'] = void 0x0,
                    this[_0x2ba3dc(0x5b3)] = void 0x0,
                    this[_0x2ba3dc(0xbb5)] = void 0x0;
          }
          function _0x48ba47() {
               const _0x28a262 = _0xc3a123;
               this[_0x28a262(0x5b3)] = void 0x0,
                    this[_0x28a262(0x878)] = void 0x0,
                    this['index'] = 0x0;
          }
          _0x379017[_0xc3a123(0x2d4)][_0xc3a123(0x320)] = function (_0x5e48a1, _0x368be9, _0x2ea5ea) {
               const _0x22dc6c = _0xc3a123;
               this[_0x22dc6c(0x878)] = _0x5e48a1,
                    this['model'] = _0x368be9,
                    this[_0x22dc6c(0xbb5)] = _0x2ea5ea;
          }
               ,
               _0x379017[_0xc3a123(0x2d4)][_0xc3a123(0x32c)] = function () {
                    const _0x4ed9da = _0xc3a123;
                    let _0x2498ea = this[_0x4ed9da(0x878)]
                         , _0x22ef3a = this[_0x4ed9da(0xbb5)]
                         , _0xbfcd60 = this['model'][_0x4ed9da(0xd49)]
                         , _0x480e3b = _0xbfcd60[_0x4ed9da(0x761)][_0x22ef3a];
                    if (!Cesium[_0x4ed9da(0x336)](_0x480e3b))
                         throw new Cesium[(_0x4ed9da(0x610))]('attribute\x20is\x20null');
                    if (-0x1 !== _0xbfcd60['instanceIndex'] && !Cesium[_0x4ed9da(0x336)](this['model'][_0x4ed9da(0xbd8)])) {
                         if (!Cesium['defined'](_0xbfcd60[_0x4ed9da(0xbd8)]))
                              throw new Cesium['DeveloperError'](_0x4ed9da(0xb54));
                         this['model'][_0x4ed9da(0xbd8)] = Cesium[_0x4ed9da(0xd3c)][_0x4ed9da(0x856)]({
                              'context': _0x2498ea,
                              'typedArray': _0xbfcd60[_0x4ed9da(0xbd8)],
                              'usage': Cesium[_0x4ed9da(0xbd0)]['STATIC_DRAW']
                         });
                    }
                    0x1 !== _0x480e3b[_0x4ed9da(0xc06)] || Cesium[_0x4ed9da(0x336)](_0x480e3b[_0x4ed9da(0xcfb)]) ? Cesium[_0x4ed9da(0x336)](_0x480e3b[_0x4ed9da(0xb71)]) || (_0x480e3b[_0x4ed9da(0xb71)] = Cesium['Buffer'][_0x4ed9da(0x856)]({
                         'context': _0x2498ea,
                         'typedArray': _0x480e3b[_0x4ed9da(0xcfb)],
                         'usage': Cesium[_0x4ed9da(0xbd0)]['STATIC_DRAW']
                    }),
                         _0x480e3b[_0x4ed9da(0xcfb)] = null,
                         delete _0x480e3b[_0x4ed9da(0xcfb)]) : _0x480e3b['vertexBuffer'] = this['model'][_0x4ed9da(0xbd8)];
               }
               ,
               _0x48ba47[_0xc3a123(0x2d4)][_0xc3a123(0x320)] = function (_0x2da76b, _0x59e6b8, _0x16f7cc) {
                    const _0x188dce = _0xc3a123;
                    this[_0x188dce(0x5b3)] = _0x59e6b8,
                         this['context'] = _0x2da76b,
                         this['index'] = _0x16f7cc;
               }
               ,
               _0x48ba47[_0xc3a123(0x2d4)]['execute'] = function () {
                    const _0x3e5d48 = _0xc3a123;
                    let _0x366022 = this['context']
                         , _0x587678 = this[_0x3e5d48(0x5b3)][_0x3e5d48(0x47d)][this[_0x3e5d48(0xbb5)]]
                         , _0x39de16 = this[_0x3e5d48(0x5b3)][_0x3e5d48(0xd49)][_0x3e5d48(0x8d0)];
                    if (!Cesium[_0x3e5d48(0x336)](_0x587678))
                         throw new Cesium['DeveloperError'](_0x3e5d48(0x7e0));
                    if (Cesium[_0x3e5d48(0x336)](_0x587678[_0x3e5d48(0xcf3)]))
                         return;
                    if (!Cesium[_0x3e5d48(0x336)](_0x587678[_0x3e5d48(0xa9c)]))
                         throw new Cesium['DeveloperError'](_0x3e5d48(0x4b5));
                    let _0x260a8c = Cesium[_0x3e5d48(0x36b)][_0x3e5d48(0x744)];
                    (0x1 === _0x587678[_0x3e5d48(0x9b7)] || _0x39de16 >= Cesium[_0x3e5d48(0x417)][_0x3e5d48(0x8ba)]) && _0x366022[_0x3e5d48(0xc52)] && (_0x260a8c = Cesium[_0x3e5d48(0x36b)][_0x3e5d48(0xc7a)]),
                         Cesium['defined'](_0x587678[_0x3e5d48(0xcf3)]) || (_0x587678[_0x3e5d48(0xcf3)] = Cesium[_0x3e5d48(0xd3c)][_0x3e5d48(0x8c0)]({
                              'context': _0x366022,
                              'typedArray': _0x587678[_0x3e5d48(0xa9c)],
                              'usage': Cesium[_0x3e5d48(0xbd0)][_0x3e5d48(0x78f)],
                              'indexDatatype': _0x260a8c
                         })),
                         _0x587678[_0x3e5d48(0xa9c)] = null,
                         delete _0x587678[_0x3e5d48(0xa9c)];
               }
               ;
          const _0x12dc95 = {
               'EXCAVATION': 'EXCAVATION',
               'FALTTEN': _0xc3a123(0x3b3),
               'OVERLAY': _0xc3a123(0xc2e),
               'HYPSOMETRIC': 'HYPSOMETRIC',
               'ADJUST_COLOR': _0xc3a123(0xd0e),
               'TRANSPARENT_BACK_COLOR': _0xc3a123(0x249),
               'HORIZONTAL_LINE': _0xc3a123(0xa8c),
               'COMPUTE_W_VALUE': _0xc3a123(0x7cc),
               'COMPUTE_TEXCOORD': _0xc3a123(0x4f8),
               'HAS_LIGHT': 'HAS_LIGHT',
               'HAS_NORMAL': 'HAS_NORMAL',
               'REPLACE_SELECT_TYPE': _0xc3a123(0x3a5),
               'SILHOUETTE_SELECT_TYPE': _0xc3a123(0xa2a),
               'MULTI_TEX': 'MULTI_TEX',
               'APPLY_SPLIT': _0xc3a123(0x3c8),
               'APPLY_SWIPE': 'APPLY_SWIPE',
               'TEXCOORD': _0xc3a123(0xae7),
               'TEXCOORD2': _0xc3a123(0xd7c),
               'COMPRESS_VERTEX': _0xc3a123(0x6f7),
               'COMPRESS_NORMAL': 'COMPRESS_NORMAL',
               'COMPRESS_COLOR': _0xc3a123(0xb38),
               'COMPRESS_TEXCOORD': _0xc3a123(0x50a),
               'SKETCH_MODE': _0xc3a123(0x5f8),
               'NORMAL_AND_DEPTH': _0xc3a123(0xc96),
               'POST_EFFECT': _0xc3a123(0xbbc),
               'CLIP_FILT_BY_ID': _0xc3a123(0x633),
               'CLIP': _0xc3a123(0x339),
               'CLIPPLANE': _0xc3a123(0x9a5),
               'PBR': _0xc3a123(0xa47),
               'PT_CLOUD': _0xc3a123(0xd37),
               'DIR_LIGHTS': _0xc3a123(0x7a9),
               'POINT_LIGHTS': 'POINT_LIGHTS\x20',
               'SPOT_LIGHTS': _0xc3a123(0xa53),
               'W_VISIBLE': _0xc3a123(0xb69),
               'EMISSION_TEXTURE': _0xc3a123(0x6a1),
               'EMISSION_TEXTURE_COUNT': _0xc3a123(0xd7a),
               'TEXTURE_MOVE': _0xc3a123(0x22e),
               'VOLUME': _0xc3a123(0xad9),
               'VOLUME2': _0xc3a123(0x37e),
               'TEXTURE_COORD_ONE_IS_W': _0xc3a123(0x2a4),
               'TRIANGLE_FILTRATE': _0xc3a123(0xa8b),
               'UseInstanceSkeletonMatrix': _0xc3a123(0x251),
               'WEBP': _0xc3a123(0x3e5),
               'HAS_SKELETONSELECTED': _0xc3a123(0x80e),
               'SKELETONSELECT_ENABLE': 'SKELETONSELECT_ENABLE',
               'REPLACE_COLOR_TYPE': _0xc3a123(0x697),
               'INVALID_OBLIQUE': 'INVALID_OBLIQUE',
               'IGNORE_NORMAL': _0xc3a123(0x545),
               'TextureAtlas': _0xc3a123(0x3ea),
               'TextureAtlasSec': _0xc3a123(0xa57),
               'Translation': _0xc3a123(0x8e7),
               'VOL_AND_HYP': _0xc3a123(0x50b),
               'VERTEX_CAPTURE': 'VERTEX_CAPTURE',
               'SEC_TEX_EMISSION': _0xc3a123(0x56e),
               'BRDF': _0xc3a123(0xcd9),
               'PBR_THEME': _0xc3a123(0xb0d),
               'IBL': 'IBL',
               'FLATTEN': 'FLATTEN',
               'UseLineColor': _0xc3a123(0xcff),
               'Instance': _0xc3a123(0x47a),
               'InstanceBim': _0xc3a123(0xd57),
               'InstancePipe': _0xc3a123(0x685),
               'COMPUTE_TEXCOORD': _0xc3a123(0x4f8),
               'VertexColor': _0xc3a123(0x79a),
               'VertexNormal': 'VertexNormal',
               'HAS_BASE_TEXTURE': _0xc3a123(0x42d),
               'HAS_NORMAL_TEXTURE': _0xc3a123(0x233),
               'HAS_OCCLUSION_TEXTURE': 'HAS_OCCLUSION_TEXTURE',
               'HAS_EMISSIVE_TEXTURE': _0xc3a123(0xa25),
               'REFRACTION': _0xc3a123(0x653),
               'HAS_ANISOTROPY': _0xc3a123(0xb57),
               'HAS_CLEARCOAT': _0xc3a123(0xb00),
               'HAS_VOLUME': _0xc3a123(0x679),
               'HAS_TRANSMISSION': _0xc3a123(0x81b),
               'USE_BatchPBR': _0xc3a123(0x18f),
               'HAS_DIR_LIGHTS': 'HAS_DIR_LIGHTS',
               'HAS_POINT_LIGHTS': _0xc3a123(0x84c),
               'HAS_SPOT_LIGHTS': _0xc3a123(0x9d9),
               'HAS_HEMISPHERE_LIGHTS': 'HAS_HEMISPHERE_LIGHTS',
               'NO_TEXCOORD': _0xc3a123(0x9ad),
               'FLOOD_ANALYSIS': 'FLOOD_ANALYSIS',
               'HAS_RAIN': _0xc3a123(0xb8d),
               'HAS_WETNESS': _0xc3a123(0xa95),
               'HAS_SNOW': 'HAS_SNOW',
               'HAS_MetallicRoughness_TEXTURE': _0xc3a123(0x49f)
          };
          var _0x266f35 = Object['freeze'](_0x12dc95);
          const _0x211511 = {
               'BIM': 0x11,
               'PIPELINE': 0x1d
          };
          var _0x435eac = Object[_0xc3a123(0xb56)](_0x211511)
               , _0x4b63f3 = '\x0a#ifdef\x20HAS_RAIN\x0auniform\x20float\x20uAnimationSpeed;\x0auniform\x20sampler2D\x20uRippleTexture;\x0auniform\x20float\x20uRippleScale;\x0auniform\x20float\x20uWindIntensity;\x0auniform\x20float\x20uRain;\x0auniform\x20float\x20uCameraDepth;\x0a\x20\x20\x20\x20\x0avoid\x20getTimeInfo(float\x20animationSpeed,\x20out\x20vec2\x20timeVec)\x0a{\x0a\x09float\x20time\x20=\x20czm_frameNumber\x20*\x20animationSpeed;\x0a\x09time\x20=\x20floor(30.0\x20*\x20time);\x0a\x09float\x20time_diff\x20=\x20floor(time*0.25);\x0a\x09time\x20=\x20mod(time,\x204.0);\x0a\x09time_diff\x20=\x20mod(time_diff,\x204.0);\x0a\x09timeVec\x20=\x20vec2(time,\x20time_diff);\x0a}\x0a\x0avoid\x20getPosInfo(vec4\x20posMC,\x20out\x20vec2\x20posMC_frac1,\x20out\x20vec2\x20posMC_frac2)\x0a{\x0a\x09float\x20ripple_scale\x20=\x201.0\x20/\x20uRippleScale;\x0a\x09vec2\x20posXY\x20=\x20posMC.xy\x20*\x20ripple_scale;\x0a\x09posMC_frac1\x20=\x20fract(posXY);\x0a\x09vec2\x20posStep\x20=\x20vec2(0.5);\x0a\x09posMC_frac2\x20=\x20fract(posXY\x20+\x20posStep);\x0a}\x0a\x0afloat\x20getAlpha(vec2\x20posMC_frac1)\x0a{\x0a\x09vec2\x20dist\x20=\x20(posMC_frac1\x20-\x20vec2(0.5))\x20*\x202.0;\x0a\x09dist\x20=\x20vec2(abs(dist.x),\x20abs(dist.y));\x0a\x09vec2\x20result\x20=\x20pow(dist,\x20vec2(5.0));\x0a\x09return\x20result.x\x20+\x20result.y;\x0a}\x0a\x0avec4\x20getRippleValue(sampler2D\x20uRippleTexture,\x20vec2\x20timeVec,\x20vec2\x20posMC_frac1,\x20vec2\x20posMC_frac2,\x20float\x20alpha)\x0a{\x0a\x09vec2\x20rippleUV_1\x20=\x20(timeVec\x20+\x20posMC_frac1)*0.25;\x0a\x09vec2\x20rippleUV_2\x20=\x20(timeVec\x20+\x20posMC_frac2)*0.25;\x0a\x09vec4\x20rippleValue_1\x20=\x20texture2D(uRippleTexture,\x20rippleUV_1.xy);\x0a\x09vec4\x20rippleValue_2\x20=\x20texture2D(uRippleTexture,\x20rippleUV_2.xy);\x0a\x09return\x20mix(rippleValue_1,\x20rippleValue_2,\x20alpha);\x0a}\x0a\x0avec3\x20getRippleNormal(vec4\x20rippleValue,\x20float\x20wind_intensity,\x20float\x20rain,\x20float\x20depthFade)\x0a{\x0a\x09vec2\x20rippleValueXY\x20=\x20rippleValue.xy;\x0a\x09vec2\x20rippleValueZW\x20=\x20rippleValue.zw;\x0a\x09const\x20vec2\x20_value\x20=\x20vec2(0.5);\x0a\x09vec2\x20part_1\x20=\x20(rippleValueZW\x20-\x20_value)\x20*\x20wind_intensity\x20*\x200.13;\x0a\x09vec2\x20part_2\x20=\x20(rippleValueXY\x20-\x20_value)\x20*\x200.6;\x0a\x09vec2\x20mergedValue\x20=\x20mix(part_1,\x20part_2,\x20rain)\x20*\x20depthFade;\x0a\x09return\x20vec3(mergedValue,\x201.0);\x0a}\x0a\x0afloat\x20getNormalAlpha(vec3\x20normalWS,float\x20wetness)\x0a{\x0a\x09float\x20valueZ\x20=\x20normalWS.z\x20-\x200.5;\x0a\x09float\x20wet_correction\x20=\x20wetness\x20*\x20clamp(valueZ\x20*\x202.5,\x200.0,\x201.0);\x0a\x09return\x20pow(wet_correction,\x2015.0);\x0a}\x0a\x0avec3\x20rippleNormalCorrection(vec3\x20rippleNormal,float\x20normalAlpha)\x0a{\x0a\x09const\x20vec3\x20blueNormal\x20=\x20vec3(0.0,\x200.0,\x201.0);\x0a\x09return\x20mix(blueNormal,\x20rippleNormal,\x20normalAlpha);\x0a}\x0a\x0avec3\x20rippleGenerator(sampler2D\x20uRippleTexture,\x20float\x20animationSpeed,vec3\x20normalWS,float\x20wetness)\x0a{\x0a\x09vec2\x20timeVec\x20=\x20vec2(1.0);\x0a\x09getTimeInfo(animationSpeed,\x20timeVec);\x0a\x09vec2\x20posMC_frac1\x20=\x20vec2(1.0);\x0a\x09vec2\x20posMC_frac2\x20=\x20vec2(1.0);\x0a\x09getPosInfo(vPositionMC,\x20posMC_frac1,\x20posMC_frac2);\x0a\x09float\x20alpha\x20=\x20getAlpha(posMC_frac1);\x0a\x09vec4\x20rippleValue\x20=\x20getRippleValue(uRippleTexture,\x20timeVec,\x20posMC_frac1,\x20posMC_frac2,\x20alpha);\x0a\x09vec3\x20rippleNormal\x20=\x20getRippleNormal(rippleValue,\x20uWindIntensity,\x20uRain,\x20uCameraDepth);\x0a\x09float\x20normalAlpha\x20=\x20getNormalAlpha(normalWS,\x20wetness);\x0a\x09return\x20normalize(rippleNormalCorrection(rippleNormal,\x20normalAlpha));\x0a}\x0a#endif\x0a'
               , _0x54dfde = '\x0a#ifdef\x20HAS_SNOW\x0auniform\x20float\x20uSnowCoverageFactor;\x0auniform\x20sampler2D\x20uSnowMaskTexture;\x0auniform\x20sampler2D\x20uSnowNormalTexture;\x0a\x0avec3\x20getSnowMaskValue(sampler2D\x20uSnowMaskTexture,\x20vec2\x20snowUV)\x0a{\x0a\x09return\x20texture2D(uSnowMaskTexture,\x20snowUV).rgb;\x0a}\x0a\x0afloat\x20getSnowCoverage(float\x20snow_coverage,\x20float\x20max_snow_coverage,\x20vec3\x20normalWS,\x20float\x20z_mask)\x0a{\x0a\x09float\x20normal_z\x20=\x20normalWS.z;\x0a\x09normal_z\x20+=\x201.1\x20+\x20z_mask;\x0a\x09normal_z\x20=\x20clamp(normal_z\x20*\x200.5,\x200.0,\x201.0);\x0a\x09float\x20final_snow_coverage\x20=\x20clamp(snow_coverage,\x200.0,\x20max_snow_coverage);\x0a\x09final_snow_coverage\x20=\x20clamp(final_snow_coverage*normal_z,\x200.0,\x201.0);\x0a\x09return\x20final_snow_coverage;\x0a}\x0a\x0afloat\x20getSnowCoverageWithMaskTexture(float\x20finalSnowCoverage,\x20float\x20heightValue,\x20float\x20snow_scatter_value,\x20float\x20snow_scatter_alpha,\x20float\x20tighten_value)\x0a{\x0a\x09float\x20scatter_value\x20=\x20mix(heightValue,\x20snow_scatter_value,\x20snow_scatter_alpha);\x0a\x09return\x20clamp((tighten_value\x20+\x201.0)\x20*\x20finalSnowCoverage\x20-\x20tighten_value\x20*\x20scatter_value,\x200.0,\x201.0);\x0a}\x0a\x0afloat\x20getSnowAlpha(vec3\x20normalWS,\x20float\x20snow_coverage,\x20float\x20z_mask)\x0a{\x0a\x09return\x20clamp((normalWS.z\x20+\x20z_mask)\x20*\x205.0,\x200.0,\x201.0)\x20*\x20snow_coverage;\x0a}\x0a\x0avec3\x20getFinalBaseColor(vec3\x20baseColor,\x20vec3\x20snow_baseColor,\x20float\x20snowAlpha)\x0a{\x0a\x09return\x20mix(baseColor,\x20snow_baseColor,\x20snowAlpha);\x0a}\x0a\x0afloat\x20getFinalRoughness(float\x20roughness,\x20float\x20snow_roughness,\x20float\x20snowAlpha)\x0a{\x0a\x09return\x20mix(roughness,\x20snow_roughness,\x20snowAlpha);\x0a}\x0a\x0avec3\x20getFinalNormal(vec3\x20normalWS,\x20vec3\x20snowNormal,\x20float\x20blendNormalValue,\x20float\x20snow_coverage)\x0a{\x0a\x09vec3\x20snowNormal_part2\x20=\x20vec3(snowNormal.xy\x20-\x20vec2(0.5),\x201.0);\x0a\x09float\x20normal_alpha\x20=\x20(1.0\x20-\x20blendNormalValue)*\x20snow_coverage;\x0a\x09return\x20mix(normalWS,\x20snowNormal_part2,\x20normal_alpha);\x0a}\x0a\x0avoid\x20snowGenerator(sampler2D\x20uSnowMaskTexture,\x20sampler2D\x20uSnowNormalTexture,\x20vec2\x20snowUV,\x20float\x20snow_coverage,\x20inout\x20vec3\x20normalWS,\x20inout\x20vec3\x20baseColor,\x20inout\x20float\x20roughness)\x0a{\x0a\x09vec3\x20snowMaskValue\x20=\x20texture2D(uSnowMaskTexture,\x20snowUV).rgb;\x0a\x09const\x20float\x20max_snow_coverage\x20=\x201.0;\x0a\x09const\x20float\x20z_mask\x20=\x200.0;\x0a\x09float\x20snowCoverage\x20=\x20getSnowCoverage(snow_coverage,\x20max_snow_coverage,\x20normalWS,\x20z_mask);\x0a\x09const\x20float\x20heightValue\x20=\x200.5;\x0a\x09float\x20snow_scatter_value\x20=\x20snowMaskValue.g;\x0a\x09const\x20float\x20snow_scatter_alpha\x20=\x200.5;\x0a\x09const\x20float\x20tighten_value\x20=\x204.0;\x0a\x20\x20\x20\x20snowCoverage\x20=\x20getSnowCoverageWithMaskTexture(snowCoverage,\x20heightValue,\x20snow_scatter_value,\x20snow_scatter_alpha,\x20tighten_value);\x0a\x09float\x20snow_alpha\x20=\x20getSnowAlpha(normalWS,\x20snowCoverage,\x20z_mask);\x0a\x09baseColor\x20=\x20getFinalBaseColor(baseColor,\x20vec3(snowMaskValue.r),\x20snow_alpha);\x0a\x09roughness\x20=\x20getFinalRoughness(roughness,\x20snowMaskValue.b,\x20snow_alpha);\x0a\x09vec3\x20snowNormalValue\x20=\x20texture2D(uSnowNormalTexture,\x20snowUV).rgb;\x0a\x09const\x20float\x20blendNormalValue\x20=\x200.3;\x0a\x09normalWS\x20=\x20getFinalNormal(normalWS,\x20snowNormalValue,\x20blendNormalValue,\x20snowCoverage);\x0a}\x0a\x0a#endif\x0a'
               , _0xb74cb4 = _0xc3a123(0xc5f)
               , _0x3013af = _0xc3a123(0xa15)
               , _0x5ca475 = '\x0a#ifdef\x20HAS_SPOT_LIGHTS\x0a\x0auniform\x20vec3\x20uSpotLightColor[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec3\x20uSpotLightPositionEC[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec3\x20uSpotLightDirectionEC[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec4\x20uSpotLightDistanceDecayCosPenumbra[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec3\x20uSpotLightExponent[\x20SPOT_LIGHTS\x20];\x0a\x20\x20\x20\x20\x0astruct\x20SpotLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a\x20\x20\x20\x20float\x20coneCos;\x0a\x20\x20\x20\x20float\x20penumbraCos;\x0a};\x0a\x0avoid\x20getSpotDirectLightIrradiance(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometry.position;\x0a\x20\x20\x20\x20directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x20\x20\x20\x20float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x20\x20\x20\x20float\x20angleCos\x20=\x20dot(\x20directLight.direction,\x20spotLight.direction\x20);\x0a\x20\x20\x20\x20if\x20(\x20angleCos\x20>\x20spotLight.coneCos\x20)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20spotEffect\x20=\x20smoothstep(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.color\x20=\x20spotLight.color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.color\x20*=\x20spotEffect\x20*\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.visible\x20=\x20true;\x0a\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.color\x20=\x20vec3(\x200.0\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.visible\x20=\x20false;\x0a\x20\x20\x20\x20}\x0a}\x0a\x0a#endif\x0a'
               , _0x1aaa75 = _0xc3a123(0x8c6)
               , _0x67b80c = _0xc3a123(0x9d8)
               , _0x41988a = _0xc3a123(0x23d)
               , _0x390443 = _0xc3a123(0x197)
               , _0x53dcd2 = '\x0a\x20\x20\x20\x20#define\x20cubeUV_minMipLevel\x204.0\x0a\x09#define\x20cubeUV_minTileSize\x2016.0\x0a\x0a\x09//\x20These\x20shader\x20functions\x20convert\x20between\x20the\x20UV\x20coordinates\x20of\x20a\x20single\x20face\x20of\x0a\x09//\x20a\x20cubemap,\x20the\x200-5\x20integer\x20index\x20of\x20a\x20cube\x20face,\x20and\x20the\x20direction\x20vector\x20for\x0a\x09//\x20sampling\x20a\x20textureCube\x20(not\x20generally\x20normalized\x20).\x0a\x0a\x09float\x20getFace(\x20vec3\x20direction\x20)\x20{\x0a\x0a\x09\x09vec3\x20absDirection\x20=\x20abs(\x20direction\x20);\x0a\x0a\x09\x09float\x20face\x20=\x20-\x201.0;\x0a\x0a\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200.0\x20:\x203.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.z\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202.0\x20:\x205.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x20face;\x0a\x0a\x09}\x0a\x0a\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09vec2\x20getUV(\x20vec3\x20direction,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09vec2\x20uv;\x0a\x0a\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20pos\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20-\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20pos\x20y\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20pos\x20z\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20neg\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20neg\x20y\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20neg\x20z\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x200.5\x20*\x20(\x20uv\x20+\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20bilinearCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20direction,\x20float\x20mipInt\x20)\x20{\x0a\x0a\x09\x09float\x20face\x20=\x20getFace(\x20direction\x20);\x0a\x0a\x09\x09float\x20filterInt\x20=\x20max(\x20cubeUV_minMipLevel\x20-\x20mipInt,\x200.0\x20);\x0a\x0a\x09\x09mipInt\x20=\x20max(\x20mipInt,\x20cubeUV_minMipLevel\x20);\x0a\x0a\x09\x09float\x20faceSize\x20=\x20exp2(\x20mipInt\x20);\x0a\x0a\x09\x09vec2\x20uv\x20=\x20getUV(\x20direction,\x20face\x20)\x20*\x20(\x20faceSize\x20-\x202.0\x20)\x20+\x201.0;\x0a\x0a\x09\x09if\x20(\x20face\x20>\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv.y\x20+=\x20faceSize;\x0a\x0a\x09\x09\x09face\x20-=\x203.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09uv.x\x20+=\x20face\x20*\x20faceSize;\x0a\x0a\x09\x09uv.x\x20+=\x20filterInt\x20*\x203.0\x20*\x20cubeUV_minTileSize;\x0a\x0a\x09\x09uv.y\x20+=\x204.0\x20*\x20(\x20exp2(\x20CUBEUV_MAX_MIP\x20)\x20-\x20faceSize\x20);\x0a\x0a\x09\x09uv.x\x20*=\x20CUBEUV_TEXEL_WIDTH;\x0a\x09\x09uv.y\x20*=\x20CUBEUV_TEXEL_HEIGHT;\x0a\x0a\x09\x09return\x20texture2DGradEXT(\x20envMap,\x20uv,\x20vec2(\x200.0\x20),\x20vec2(\x200.0\x20)\x20).rgb;\x20//\x20disable\x20anisotropic\x20filtering\x0a\x0a\x09}\x0a\x0a\x09//\x20These\x20defines\x20must\x20match\x20with\x20PMREMGenerator\x0a\x0a\x09#define\x20cubeUV_r0\x201.0\x0a\x09#define\x20cubeUV_v0\x200.339\x0a\x09#define\x20cubeUV_m0\x20-\x202.0\x0a\x09#define\x20cubeUV_r1\x200.8\x0a\x09#define\x20cubeUV_v1\x200.276\x0a\x09#define\x20cubeUV_m1\x20-\x201.0\x0a\x09#define\x20cubeUV_r4\x200.4\x0a\x09#define\x20cubeUV_v4\x200.046\x0a\x09#define\x20cubeUV_m4\x202.0\x0a\x09#define\x20cubeUV_r5\x200.305\x0a\x09#define\x20cubeUV_v5\x200.016\x0a\x09#define\x20cubeUV_m5\x203.0\x0a\x09#define\x20cubeUV_r6\x200.21\x0a\x09#define\x20cubeUV_v6\x200.0038\x0a\x09#define\x20cubeUV_m6\x204.0\x0a\x0a\x09float\x20roughnessToMip(\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x200.0;\x0a\x0a\x09\x09if\x20(\x20roughness\x20>=\x20cubeUV_r1\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r0\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m1\x20-\x20cubeUV_m0\x20)\x20/\x20(\x20cubeUV_r0\x20-\x20cubeUV_r1\x20)\x20+\x20cubeUV_m0;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r4\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r1\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m4\x20-\x20cubeUV_m1\x20)\x20/\x20(\x20cubeUV_r1\x20-\x20cubeUV_r4\x20)\x20+\x20cubeUV_m1;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r5\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r4\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m5\x20-\x20cubeUV_m4\x20)\x20/\x20(\x20cubeUV_r4\x20-\x20cubeUV_r5\x20)\x20+\x20cubeUV_m4;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r6\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r5\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m6\x20-\x20cubeUV_m5\x20)\x20/\x20(\x20cubeUV_r5\x20-\x20cubeUV_r6\x20)\x20+\x20cubeUV_m5;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20-\x202.0\x20*\x20log2(\x201.16\x20*\x20roughness\x20);\x20//\x201.16\x20=\x201.79^0.25\x0a\x09\x09}\x0a\x0a\x09\x09return\x20mip;\x0a\x0a\x09}\x0a\x0a\x09vec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20sampleDir,\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x20clamp(\x20roughnessToMip(\x20roughness\x20),\x20cubeUV_m0,\x20CUBEUV_MAX_MIP\x20);\x0a\x0a\x09\x09float\x20mipF\x20=\x20fract(\x20mip\x20);\x0a\x0a\x09\x09float\x20mipInt\x20=\x20floor(\x20mip\x20);\x0a\x0a\x09\x09vec3\x20color0\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20);\x0a\x0a\x09\x09if\x20(\x20mipF\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09return\x20vec4(\x20color0,\x201.0\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09vec3\x20color1\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20+\x201.0\x20);\x0a\x0a\x09\x09\x09return\x20vec4(\x20mix(\x20color0,\x20color1,\x20mipF\x20),\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09}\x0a';
          const _0x3fbacf = {
               'rainDecl': _0x4b63f3,
               'snowDecl': _0x54dfde,
               'hemisphereLightDecl': _0xb74cb4,
               'pointLightDecl': _0x3013af,
               'spotLightDecl': _0x5ca475,
               'directionLightDecl': _0x1aaa75,
               'lightSourceImpl': _0x67b80c,
               'brdf': _0x41988a,
               'executeServerExcavationDecl': _0x390443,
               'cubeUV_reflection': _0x53dcd2
          }
               , _0xf2149e = Cesium['defined'];
          function _0x3d4dc0() {
               const _0xe60198 = _0xc3a123;
               this['model'] = void 0x0,
                    this[_0xe60198(0x878)] = void 0x0;
          }
          function _0x28b18c(_0x95b3b7, _0x200a5a) {
               let _0x5b67d4 = _0x200a5a['length'];
               for (let _0x50f797 = 0x0; _0x50f797 < _0x5b67d4; ++_0x50f797) {
                    let _0x25763b = _0x95b3b7['getExtension'](_0x200a5a[_0x50f797]);
                    if (_0x25763b)
                         return _0x25763b;
               }
          }
          function _0x4b30e4(_0x355f1c) {
               const _0x39c697 = _0xc3a123;
               return 0x1 !== _0x355f1c[_0x39c697(0xc94)] || 0x1 !== _0x355f1c[_0x39c697(0x50d)] || 0x0 !== _0x355f1c[_0x39c697(0xc01)] || 0x1 !== _0x355f1c['_saturation'] || 0x1 !== _0x355f1c['_gamma'];
          }
          function _0x5de207(_0x18c72d) {
               return _0x18c72d['replace'](/^[ \t]*#include +<([\w\d./]+)>/gm, function (_0x4e820b, _0x35d7f8) {
                    const _0x5e7789 = _0x5e91;
                    var _0x379bff = _0x3fbacf[_0x35d7f8];
                    if (void 0x0 === _0x379bff)
                         throw new Error(_0x5e7789(0xa58) + _0x35d7f8 + '>');
                    return _0x5de207(_0x379bff);
               });
          }
          _0x3d4dc0['prototype'][_0xc3a123(0x320)] = function (_0x307364, _0x28b5f8) {
               const _0x337293 = _0xc3a123;
               this[_0x337293(0x5b3)] = _0x28b5f8,
                    this[_0x337293(0x878)] = _0x307364;
          }
               ,
               _0x3d4dc0['prototype']['execute'] = function () {
                    const _0x91f06a = _0xc3a123
                         , _0x401bb3 = this['context']
                         , _0x2d5ac6 = this[_0x91f06a(0x5b3)]
                         , _0x195410 = _0x2d5ac6[_0x91f06a(0x9c9)]
                         , _0x43b42d = _0x2d5ac6['vs']
                         , _0x402850 = _0x5de207(_0x2d5ac6['fs'])
                         , _0x18077c = _0x2d5ac6['attributeLocations']
                         , _0x556bd7 = _0x2d5ac6[_0x91f06a(0x1c0)]
                         , _0x2e9d4c = _0x2d5ac6[_0x91f06a(0xd49)];
                    let _0x86e7ed = _0x2d5ac6['batchTable'] ? _0x2d5ac6[_0x91f06a(0xd98)][_0x91f06a(0xbea)]()(_0x43b42d) : _0x43b42d;
                    void 0x0 === _0x401bb3[_0x91f06a(0x333)] && (_0x401bb3['texturelod'] = Cesium[_0x91f06a(0x4d9)](_0x28b18c(_0x401bb3[_0x91f06a(0x2b8)], ['EXT_shader_texture_lod']), !0x1));
                    let _0x47d76c = new Cesium['ShaderSource']({
                         'sources': [_0x86e7ed]
                    })
                         , _0x4a6e59 = new Cesium[(_0x91f06a(0x62f))]({
                              'sources': [_0x402850]
                         });
                    if (Cesium[_0x91f06a(0x336)](_0x18077c[_0x91f06a(0x637)]) && (_0x47d76c[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0xc24)]),
                         _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35['VertexNormal'])),
                         Cesium[_0x91f06a(0x336)](_0x18077c[_0x91f06a(0x7a0)]) && _0x47d76c[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0x79a)]),
                         _0x556bd7 && 0x2 === _0x556bd7[_0x91f06a(0xa0d)][_0x91f06a(0x72b)] && (_0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x91f06a(0xd7c)),
                              _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)]('TexCoord2')),
                         _0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)]('TexCoord'),
                         _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x91f06a(0xae7)),
                         _0x556bd7 && _0x556bd7[_0x91f06a(0xa0d)][_0x91f06a(0x72b)] > 0x0 && (_0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x4f8)]),
                              _0x4a6e59[_0x91f06a(0x340)]['push'](_0x266f35['COMPUTE_TEXCOORD'])),
                         _0x2e9d4c[_0x91f06a(0x956)] > -0x1 && _0x47d76c['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x47a)]),
                         _0x2e9d4c[_0x91f06a(0xd4e)] === _0x435eac[_0x91f06a(0x3b6)] && _0x47d76c[_0x91f06a(0x340)]['push'](_0x266f35['InstanceBim']),
                         _0x2e9d4c[_0x91f06a(0xd4e)] === _0x435eac[_0x91f06a(0xc90)] && _0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x685)]),
                         Cesium[_0x91f06a(0x336)](_0x2e9d4c[_0x91f06a(0x408)])) {
                         let _0x5c8d22 = _0x2e9d4c['compressOptions'];
                         (_0x5c8d22 & _0x38a067[_0x91f06a(0x741)]) === _0x38a067[_0x91f06a(0x741)] && _0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x6f7)]),
                              (_0x5c8d22 & _0x38a067[_0x91f06a(0xa26)]) === _0x38a067[_0x91f06a(0xa26)] && _0x47d76c['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x1e0)]),
                              (_0x5c8d22 & _0x38a067[_0x91f06a(0x864)]) === _0x38a067['SVC_VertexColor'] && _0x47d76c['defines']['push'](_0x266f35[_0x91f06a(0xb38)]),
                              (_0x5c8d22 & _0x38a067['SVC_TexutreCoord']) === _0x38a067[_0x91f06a(0x7d9)] && _0x47d76c[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0x50a)]);
                    }
                    if (_0x2e9d4c[_0x91f06a(0xb7d)] && _0x18077c[_0x91f06a(0xae7)] && _0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x2a4)]),
                         Cesium[_0x91f06a(0x336)](_0x2e9d4c[_0x91f06a(0x783)]) && Cesium[_0x91f06a(0x336)](_0x2e9d4c[_0x91f06a(0x783)]['TextureCoordMatrix']) && _0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x91f06a(0x5d6)),
                         _0x195410[_0x91f06a(0x7f9)] && _0x4a6e59[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0x339)]),
                         _0x195410[_0x91f06a(0x199)] && _0x4a6e59[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0x9a5)]),
                         _0x195410[_0x91f06a(0x371)][_0x91f06a(0x63d)] && (_0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35['HYPSOMETRIC']),
                              _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xa44)])),
                         _0x195410['_flattenPar'][_0x91f06a(0x5d7)] && _0x47d76c['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x4de)]),
                         _0x195410[_0x91f06a(0x6ea)] && _0x4a6e59['defines']['push'](_0x266f35[_0x91f06a(0x607)]),
                         _0x91f06a(0xd4b) === window['_vertexCompressionType'] && _0x47d76c['defines'][_0x91f06a(0x63e)]('MeshOPT_Compress'),
                         _0x2e9d4c['textureCoordIsW'] && _0x18077c[_0x91f06a(0xc8d)] && _0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x2a4)]),
                         _0x556bd7[_0x91f06a(0xd98)] && (_0x47d76c[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x3ea)]),
                              _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x3ea)])),
                         _0x556bd7[_0x91f06a(0x4ff)] && (_0x47d76c['defines']['push'](_0x266f35[_0x91f06a(0xa57)]),
                              _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xa57)])),
                         Cesium[_0x91f06a(0x336)](_0x2d5ac6['arrIndexPackage']) && _0x2d5ac6[_0x91f06a(0x47d)]['length'] > 0x0 && 0x2 === _0x2d5ac6[_0x91f06a(0x47d)][0x0][_0x91f06a(0xba3)] && _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x913)]),
                         _0x4b30e4(_0x195410) && _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xd0e)]),
                         _0x556bd7[_0x91f06a(0x316)] || Cesium[_0x91f06a(0x336)](_0x195410['_PBRMaterialParams']['loadingTexture']) && !_0x195410[_0x91f06a(0xb95)]['loadingTexture']) {
                         var _0x1591ce = Cesium['defined'](_0x18077c['aTexCoord0']);
                         _0x1591ce && _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xcd9)]),
                              (_0x556bd7[_0x91f06a(0x71c)] > -0x1 && _0xf2149e(_0x556bd7[_0x91f06a(0x8b9)]) || _0xf2149e(_0x195410['_PBRMaterialParams']['pbrMetallicRoughness'][_0x91f06a(0x8b9)])) && _0x1591ce && _0x4a6e59[_0x91f06a(0x340)]['push'](_0x266f35['HAS_BASE_TEXTURE']),
                              (_0x556bd7[_0x91f06a(0xadb)] > -0x1 && _0xf2149e(_0x556bd7[_0x91f06a(0x657)]) || _0xf2149e(_0x195410[_0x91f06a(0xb95)]['pbrMetallicRoughness'][_0x91f06a(0x657)])) && _0x1591ce && _0x4a6e59[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0x49f)]),
                              (_0x556bd7[_0x91f06a(0x550)] > -0x1 && _0xf2149e(_0x556bd7['normalTexture']) || _0xf2149e(_0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)]['normalTexture'])) && _0x1591ce && _0x4a6e59[_0x91f06a(0x340)]['push'](_0x266f35[_0x91f06a(0x233)]),
                              (_0x556bd7[_0x91f06a(0x646)] > -0x1 && _0xf2149e(_0x556bd7['emissiveTexture']) || _0xf2149e(_0x195410[_0x91f06a(0xb95)]['pbrMetallicRoughness']['emissiveTexture'])) && _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xa25)]),
                              (_0x556bd7[_0x91f06a(0x5b1)] > -0x1 || _0xf2149e(_0x195410['_PBRMaterialParams'][_0x91f06a(0x30c)]['occlusionTexture']) && _0x195410[_0x91f06a(0xb95)]['pbrMetallicRoughness'][_0x91f06a(0x5c2)] instanceof Texture) && _0x1591ce && _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x3d1)]),
                              (_0xf2149e(_0x556bd7[_0x91f06a(0x967)]) || _0xf2149e(_0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)][_0x91f06a(0xaec)])) && _0x1591ce && _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xb57)]),
                              (_0xf2149e(_0x556bd7['_clearcoat']) || _0xf2149e(_0x195410['_PBRMaterialParams'][_0x91f06a(0x30c)][_0x91f06a(0xbba)])) && _0x1591ce && _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35['HAS_CLEARCOAT']),
                              (_0x556bd7[_0x91f06a(0x450)] > -0x1 || _0xf2149e(_0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)]['indexOfRefraction']) && _0x195410[_0x91f06a(0xb95)]['pbrMetallicRoughness'][_0x91f06a(0xc66)] > 0x0) && _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x653)]),
                              _0xf2149e(_0x195410['_PBRMaterialParams'][_0x91f06a(0x30c)][_0x91f06a(0xc99)]) && _0x195410[_0x91f06a(0xb95)]['pbrMetallicRoughness'][_0x91f06a(0xc99)][_0x91f06a(0x9ca)] && _0x195410['_PBRMaterialParams'][_0x91f06a(0x30c)][_0x91f06a(0xc99)][_0x91f06a(0x9ca)] instanceof Texture && _0xf2149e(_0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)][_0x91f06a(0xc99)][_0x91f06a(0x694)]) && _0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)][_0x91f06a(0xc99)][_0x91f06a(0x694)] instanceof Texture && _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0x311)]),
                              _0xf2149e(_0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)][_0x91f06a(0x605)]) && _0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)][_0x91f06a(0x605)][_0x91f06a(0x4fc)] && _0x4a6e59[_0x91f06a(0x340)][_0x91f06a(0x63e)](_0x266f35[_0x91f06a(0xa95)]),
                              _0xf2149e(_0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)]['rainEffect']) && _0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)][_0x91f06a(0x605)][_0x91f06a(0x9b5)] && _0x195410[_0x91f06a(0xb95)][_0x91f06a(0x30c)]['rainEffect']['rippleTexture'] instanceof Texture && _0x4a6e59['defines'][_0x91f06a(0x63e)](_0x266f35['HAS_RAIN']);
                    }
                    _0x2d5ac6[_0x91f06a(0x940)] = Cesium['ShaderProgram'][_0x91f06a(0x6d8)]({
                         'context': _0x401bb3,
                         'vertexShaderSource': _0x47d76c,
                         'fragmentShaderSource': _0x4a6e59,
                         'attributeLocations': _0x18077c
                    });
               }
               ;
          const _0x268817 = {
               'RESET': 0x0,
               'SetColor': 0x1,
               'SELECTED': 0x2,
               'HIDE': 0x4,
               'OFFSET': 0x8,
               'CLIP': 0x10,
               'BLOOM': 0x20,
               'ALL': 0xff
          };
          var _0x2cc3e2 = Object[_0xc3a123(0xb56)](_0x268817)
               , _0x28757f = {
                    'NONE': 0x0,
                    'TITANIUM_SCUFFED': 0x1,
                    'METAL_PLATE': 0x2,
                    'EMISSION': 0x4,
                    'ROUGHNESS': 0x8
               }
               , _0x5dc18d = Object[_0xc3a123(0xb56)](_0x28757f);
          function _0x56d276(_0xb13447) {
               const _0x500f38 = _0xc3a123;
               let _0x338424, _0x30c9d2;
               for (this['layer'] = _0xb13447[_0x500f38(0x9c9)],
                    this[_0x500f38(0xd49)] = _0xb13447[_0x500f38(0xd49)],
                    this[_0x500f38(0x47d)] = _0xb13447[_0x500f38(0x47d)],
                    this['vertexBufferToCreate'] = new Cesium[(_0x500f38(0xb86))](),
                    this[_0x500f38(0x62a)] = new Cesium[(_0x500f38(0xb86))](),
                    this[_0x500f38(0x759)] = new Cesium[(_0x500f38(0xb86))](),
                    _0x338424 = 0x0,
                    _0x30c9d2 = this['vertexPackage'][_0x500f38(0x761)][_0x500f38(0x72b)]; _0x338424 < _0x30c9d2; _0x338424++)
                    this['vertexBufferToCreate']['enqueue'](_0x338424);
               for (_0x338424 = 0x0,
                    _0x30c9d2 = this[_0x500f38(0x47d)][_0x500f38(0x72b)]; _0x338424 < _0x30c9d2; _0x338424++)
                    this[_0x500f38(0x62a)][_0x500f38(0x1f0)](_0x338424);
               this[_0x500f38(0x759)]['enqueue'](0x0),
                    this['boundingVolume'] = _0xb13447[_0x500f38(0x802)],
                    this['material'] = Cesium[_0x500f38(0x4d9)](_0xb13447[_0x500f38(0x1c0)], new _0x3b324f()),
                    this[_0x500f38(0xb01)] = _0xb13447[_0x500f38(0xb01)],
                    this[_0x500f38(0xbbd)] = _0xb13447['modelMatrix'],
                    this[_0x500f38(0x8e8)] = _0xb13447['geoMatrix'],
                    this[_0x500f38(0x8b7)] = Cesium[_0x500f38(0xcdf)][_0x500f38(0x499)](this[_0x500f38(0x8e8)], new Cesium[(_0x500f38(0xcdf))]()),
                    this[_0x500f38(0x4a9)] = _0xb13447[_0x500f38(0xd49)][_0x500f38(0x4a9)],
                    this[_0x500f38(0x273)] = _0xb13447[_0x500f38(0xd49)][_0x500f38(0x360)],
                    this['shaderProgram'] = void 0x0,
                    this[_0x500f38(0x896)] = void 0x0,
                    this[_0x500f38(0x486)] = void 0x0,
                    this[_0x500f38(0x239)] = _0xb13447[_0x500f38(0x239)],
                    this[_0x500f38(0xd6a)] = new Cesium['AssociativeArray'](),
                    this[_0x500f38(0xd98)] = void 0x0,
                    this['batchTableDirty'] = !0x1,
                    this['pickColorIdentifier'] = _0x500f38(0x723),
                    this[_0x500f38(0x502)] = new Cesium[(_0x500f38(0xc6e))](),
                    this[_0x500f38(0xd22)] = new Cesium['AssociativeArray'](),
                    this[_0x500f38(0x899)] = 0x4 === _0xb13447[_0x500f38(0xd49)][_0x500f38(0x761)][0x0][_0x500f38(0x8cf)],
                    this[_0x500f38(0x1fb)] = _0xb13447['edgeGeometry'],
                    this[_0x500f38(0x8aa)](),
                    this[_0x500f38(0x3b8)] = !0x1;
          }
          const _0x38e2db = new _0x379017()
               , _0x6336d7 = new _0x48ba47()
               , _0x6aae01 = new _0x3d4dc0();
          function _0x4bbecf(_0x2360bd, _0x339332) {
               const _0x4c36cf = _0xc3a123;
               let _0x24d98b = _0x2360bd[_0x4c36cf(0x9c9)][_0x4c36cf(0x878)]
                    , _0x5f4125 = _0x2360bd[_0x4c36cf(0x445)];
               for (; _0x5f4125[_0x4c36cf(0x72b)];) {
                    let _0xf25f6d = _0x5f4125[_0x4c36cf(0xb73)]();
                    if (_0x38e2db[_0x4c36cf(0x320)](_0x24d98b, _0x2360bd, _0xf25f6d),
                         !_0x339332[_0x4c36cf(0xa10)][_0x4c36cf(0x32c)](_0x38e2db, Cesium[_0x4c36cf(0xc26)][_0x4c36cf(0x30d)]))
                         break;
                    _0x5f4125['dequeue']();
               }
          }
          function _0x6791ee(_0x203737, _0x521731) {
               const _0x4cba92 = _0xc3a123;
               let _0x54189c = _0x203737['layer']['context']
                    , _0x3633c3 = _0x203737[_0x4cba92(0x62a)];
               for (; _0x3633c3['length'];) {
                    let _0x288f98 = _0x3633c3[_0x4cba92(0xb73)]();
                    if (_0x6336d7[_0x4cba92(0x320)](_0x54189c, _0x203737, _0x288f98),
                         !_0x521731[_0x4cba92(0xa10)]['execute'](_0x6336d7, Cesium[_0x4cba92(0xc26)][_0x4cba92(0x30d)]))
                         break;
                    _0x3633c3['dequeue']();
               }
          }
          function _0x3af558(_0x13ef39, _0x1ef34b) {
               const _0x3daf6e = _0xc3a123;
               let _0x201cd6 = _0x13ef39[_0x3daf6e(0x9c9)]['context']
                    , _0xa47a2c = _0x13ef39['shaderProgramToCreate'];
               for (; _0xa47a2c[_0x3daf6e(0x72b)] && (_0xa47a2c['peek'](),
                    _0x6aae01[_0x3daf6e(0x320)](_0x201cd6, _0x13ef39),
                    _0x1ef34b[_0x3daf6e(0xa10)][_0x3daf6e(0x32c)](_0x6aae01, Cesium[_0x3daf6e(0xc26)][_0x3daf6e(0x696)]));)
                    _0xa47a2c['dequeue']();
          }
          function _0x3a0b05(_0x509d04, _0x21730a) {
               const _0x2c8667 = _0xc3a123;
               if (Cesium[_0x2c8667(0x336)](_0x509d04['batchTable']) || !_0x509d04[_0x2c8667(0x239)])
                    return;
               const _0x2d57e0 = _0x509d04['layer'][_0x2c8667(0x878)];
               let _0x17fdf7 = [];
               _0x17fdf7[_0x2c8667(0x63e)]({
                    'functionName': _0x2c8667(0x308),
                    'componentDatatype': Cesium[_0x2c8667(0x5fa)][_0x2c8667(0xb8c)],
                    'componentsPerAttribute': 0x4,
                    'normalize': !0x0
               }, {
                    'functionName': _0x2c8667(0x209),
                    'componentDatatype': Cesium[_0x2c8667(0x5fa)][_0x2c8667(0xb8c)],
                    'componentsPerAttribute': 0x4
               }, {
                    'functionName': 's3m_batchTable_pickColor',
                    'componentDatatype': Cesium['ComponentDatatype']['UNSIGNED_BYTE'],
                    'componentsPerAttribute': 0x4,
                    'normalize': !0x0
               });
               let _0x3e091a = _0x509d04['pickInfo']
                    , _0x1d7e90 = Object[_0x2c8667(0x60f)](_0x3e091a)
                    , _0x2fa593 = _0x509d04[_0x2c8667(0x4a9)] > 0x0 ? _0x509d04[_0x2c8667(0x4a9)] : _0x1d7e90[_0x2c8667(0x72b)];
               _0x509d04['batchTable'] = new Cesium['BatchTable'](_0x2d57e0, _0x17fdf7, _0x2fa593);
          }
          _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0xb72)] = function (_0x34c1d4) {
               _0x4bbecf(this, _0x34c1d4),
                    _0x6791ee(this, _0x34c1d4);
          }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x391)] = function (_0x1257e5) {
                    _0x3af558(this, _0x1257e5);
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x7f2)] = function (_0x14cf01) {
                    _0x3a0b05(this);
               }
               ;
          let _0x6356c6 = new Cesium['Cartesian3']();
          _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x8aa)] = function () {
               const _0x426f83 = _0xc3a123
                    , _0x3e26b9 = this[_0x426f83(0xd49)];
               if (!Cesium[_0x426f83(0x336)](_0x3e26b9) || -0x1 === _0x3e26b9[_0x426f83(0x956)] || !Cesium[_0x426f83(0x336)](_0x3e26b9[_0x426f83(0x1a6)]))
                    return;
               let _0x318c97 = _0x3e26b9[_0x426f83(0x1a6)]
                    , _0x5d023c = new Cesium['Cartesian3'](_0x318c97[0x0], _0x318c97[0x1], _0x318c97[0x2])
                    , _0xc7d22d = new Cesium[(_0x426f83(0x25b))](_0x318c97[0x3], _0x318c97[0x4], _0x318c97[0x5])
                    , _0x285a25 = Cesium[_0x426f83(0x25b)][_0x426f83(0xc2b)](_0x5d023c, _0xc7d22d, 0.5, _0x6356c6)
                    , _0x282176 = Cesium[_0x426f83(0x25b)][_0x426f83(0x3dd)](_0x285a25, _0x5d023c)
                    , _0x287e5a = new Cesium[(_0x426f83(0x25b))]();
               Cesium[_0x426f83(0xcdf)]['multiplyByPoint'](this[_0x426f83(0xbbd)], _0x285a25, _0x287e5a),
                    this['boundingVolume'][_0x426f83(0xa41)] = _0x287e5a,
                    this[_0x426f83(0x802)][_0x426f83(0x38b)] = _0x282176,
                    _0x3e26b9['instanceBounds'] = void 0x0;
          }
               ;
          let _0x1446a1 = new Cesium[(_0xc3a123(0xce9))]();
          function _0x294e8f(_0x4416d4, _0x1b8313) {
               const _0x920a64 = _0xc3a123;
               let _0x147364 = _0x4416d4[_0x920a64(0x340)][_0x920a64(0xcef)](_0x1b8313);
               _0x147364 >= 0x0 && _0x4416d4[_0x920a64(0x340)]['splice'](_0x147364, 0x1);
          }
          function _0x305f8f(_0x37b804, _0x2cc182) {
               const _0x38775c = _0xc3a123;
               -0x1 === _0x37b804[_0x38775c(0x340)][_0x38775c(0xcef)](_0x2cc182) && _0x37b804[_0x38775c(0x340)][_0x38775c(0x63e)](_0x2cc182);
          }
          function _0x3b2fd1(_0x309b71) {
               const _0x2a31ba = _0xc3a123;
               _0x56d276[_0x2a31ba(0x3fa)](this, _0x309b71),
                    this['vs'] = _0x5b10f8,
                    this['fs'] = _0x968c41;
          }
          function _0x3bae9a() {
               const _0x3b4ce0 = _0xc3a123;
               return Cesium[_0x3b4ce0(0x259)]['fromCache']({
                    'cull': {
                         'enabled': !0x0
                    },
                    'depthTest': {
                         'enabled': !0x0,
                         'func': Cesium[_0x3b4ce0(0x98b)][_0x3b4ce0(0x3c2)]
                    },
                    'blending': Cesium['BlendingState']['ALPHA_BLEND'],
                    'stencilTest': {
                         'backFunction': Cesium['StencilFunction'][_0x3b4ce0(0xd7e)],
                         'backOperation': {
                              'fail': Cesium[_0x3b4ce0(0x753)][_0x3b4ce0(0x3aa)],
                              'zFail': Cesium[_0x3b4ce0(0x753)]['KEEP'],
                              'zPass': Cesium[_0x3b4ce0(0x753)][_0x3b4ce0(0x26d)]
                         },
                         'enabled': !0x0,
                         'frontFunction': Cesium[_0x3b4ce0(0xbac)][_0x3b4ce0(0xd7e)],
                         'frontOperation': {
                              'fail': Cesium[_0x3b4ce0(0x753)]['KEEP'],
                              'zFail': Cesium[_0x3b4ce0(0x753)][_0x3b4ce0(0x3aa)],
                              'zPass': Cesium[_0x3b4ce0(0x753)][_0x3b4ce0(0x26d)]
                         },
                         'mask': Cesium[_0x3b4ce0(0x3bc)][_0x3b4ce0(0xc2d)],
                         'reference': Cesium[_0x3b4ce0(0x3bc)][_0x3b4ce0(0xc2d)]
                    }
               });
          }
          _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0xb5c)] = function () {
               const _0x216534 = _0xc3a123
                    , _0xf3167c = this['layer']
                    , _0x430b63 = _0xf3167c[_0x216534(0x878)]
                    , _0x44a168 = this[_0x216534(0x239)];
               if (!Cesium[_0x216534(0x336)](_0x44a168))
                    return;
               for (let _0x5edadd in _0x44a168)
                    _0x44a168[_0x216534(0x6e8)](_0x5edadd) && this[_0x216534(0xd6a)][_0x216534(0x320)](_0x5edadd, _0x44a168[_0x5edadd]);
               let _0x29971f = this[_0x216534(0xd98)]
                    , _0x2feb5a = this[_0x216534(0xd6a)]
                    , _0x59ac4a = _0x2feb5a['_hash'];
               for (let _0x50f44c in _0x59ac4a)
                    if (_0x59ac4a[_0x216534(0x6e8)](_0x50f44c)) {
                         let _0x214280, _0x4b51ba = _0x2feb5a[_0x216534(0x420)](_0x50f44c);
                         Cesium['defined'](_0x214280) || (_0x214280 = _0x430b63['createPickId']({
                              'primitive': _0xf3167c,
                              'id': _0x50f44c
                         }));
                         let _0x3110b0 = _0x214280['color'];
                         _0x1446a1['x'] = Cesium['Color'][_0x216534(0xb3a)](_0x3110b0[_0x216534(0x351)]),
                              _0x1446a1['y'] = Cesium[_0x216534(0x821)][_0x216534(0xb3a)](_0x3110b0[_0x216534(0x9a1)]),
                              _0x1446a1['z'] = Cesium[_0x216534(0x821)][_0x216534(0xb3a)](_0x3110b0[_0x216534(0x72a)]),
                              _0x1446a1['w'] = Cesium[_0x216534(0x821)][_0x216534(0xb3a)](_0x3110b0[_0x216534(0x6b2)]);
                         let _0x3e6f2c = _0x4b51ba[_0x216534(0x7d6)];
                         if (this['instanceCount'] > 0x0)
                              _0x3e6f2c[_0x216534(0x9f8)](function (_0x3b9566) {
                                   const _0x450a3d = _0x216534;
                                   _0x29971f[_0x450a3d(0x86c)](_0x3b9566, 0x2, _0x1446a1);
                              });
                         else {
                              let _0x2162ba = _0x4b51ba['batchId'];
                              _0x29971f[_0x216534(0x86c)](_0x2162ba, 0x2, _0x1446a1);
                         }
                    }
               this[_0x216534(0x239)] = void 0x0;
          }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0xb31)] = function (_0xac3be2) {
                    const _0x3af14b = _0xc3a123;
                    _0xac3be2[_0x3af14b(0x4f4)] && this['updateAllObjsVisible'](!_0xac3be2[_0x3af14b(0x4f4)]),
                         Object[_0x3af14b(0x60f)](_0xac3be2[_0x3af14b(0x2e6)])[_0x3af14b(0x72b)] > 0x0 && this[_0x3af14b(0x9e0)](_0xac3be2['_objsColorList']),
                         _0xac3be2[_0x3af14b(0xd3d)][_0x3af14b(0x72b)] > 0x0 && this[_0x3af14b(0x2eb)](_0xac3be2[_0x3af14b(0xd3d)]);
               }
               ,
               _0x56d276['prototype']['updateBatchTableAttributes'] = function () {
                    const _0x4dd220 = _0xc3a123;
                    let _0x557939 = this
                         , _0x7fb799 = this['idsColorMap']
                         , _0x1d5018 = [];
                    for (let _0x17fa6a = 0x0, _0x1bc00e = _0x7fb799[_0x4dd220(0x72b)]; _0x17fa6a < _0x1bc00e; _0x17fa6a++) {
                         let _0xe61c85 = _0x7fb799[_0x4dd220(0xcd3)][_0x17fa6a];
                         _0xe61c85[_0x4dd220(0x29a)] && (_0xe61c85[_0x4dd220(0x29a)] = !0x1,
                              _0x1d5018 = _0xe61c85[_0x4dd220(0x469)]['toBytes'](),
                              _0x1446a1['x'] = _0x1d5018[0x0],
                              _0x1446a1['y'] = _0x1d5018[0x1],
                              _0x1446a1['z'] = _0x1d5018[0x2],
                              _0x1446a1['w'] = _0x1d5018[0x3],
                              Cesium[_0x4dd220(0x336)](_0xe61c85[_0x4dd220(0xd53)]) ? this['batchTable'][_0x4dd220(0x86c)](_0xe61c85[_0x4dd220(0xd53)], 0x0, _0x1446a1) : Array[_0x4dd220(0x92f)](_0xe61c85['instanceIds']) && _0xe61c85[_0x4dd220(0x7d6)][_0x4dd220(0x9f8)](function (_0x19ea29) {
                                   const _0x5a5f65 = _0x4dd220;
                                   _0x557939[_0x5a5f65(0xd98)][_0x5a5f65(0x86c)](_0x19ea29, 0x0, _0x1446a1);
                              }));
                    }
                    let _0x3a37f6 = this[_0x4dd220(0x502)];
                    for (let _0x1d7c58 = 0x0, _0x444447 = _0x3a37f6['length']; _0x1d7c58 < _0x444447; _0x1d7c58++) {
                         let _0x152ffa = _0x3a37f6['values'][_0x1d7c58];
                         _0x152ffa['dirty'] && (_0x152ffa[_0x4dd220(0x29a)] = !0x1,
                              this['instanceCount'] > 0x0 ? Array[_0x4dd220(0x92f)](_0x152ffa[_0x4dd220(0x7d6)]) && _0x152ffa['instanceIds'][_0x4dd220(0x9f8)](function (_0x1cdd79) {
                                   const _0x4194c1 = _0x4dd220;
                                   _0x557939[_0x4194c1(0xd98)][_0x4194c1(0x86c)](_0x1cdd79, 0x1, _0x152ffa['operationValue']);
                              }) : Cesium[_0x4dd220(0x336)](_0x152ffa['batchId']) && this[_0x4dd220(0xd98)][_0x4dd220(0x86c)](_0x152ffa[_0x4dd220(0xd53)], 0x1, _0x152ffa[_0x4dd220(0x1af)]));
                    }
               }
               ,
               _0x56d276['prototype'][_0xc3a123(0x9e0)] = function (_0x50ee02) {
                    const _0x237af2 = _0xc3a123;
                    if (!this['ready'] || this[_0x237af2(0xd6a)][_0x237af2(0x72b)] < 0x1)
                         return;
                    let _0xa253b = this[_0x237af2(0xd6a)][_0x237af2(0xcc3)];
                    for (let _0x559d02 in _0xa253b) {
                         if (!_0xa253b[_0x237af2(0x6e8)](_0x559d02))
                              continue;
                         let _0x6b560f = _0x50ee02[_0x559d02];
                         if (!Cesium[_0x237af2(0x336)](_0x6b560f))
                              continue;
                         let _0x2b1af1 = _0xa253b[_0x559d02];
                         const _0x2380fc = _0x2b1af1['batchId']
                              , _0x2e090b = _0x2b1af1['instanceIds'];
                         this[_0x237af2(0xd22)]['set'](_0x559d02, {
                              'batchId': _0x2380fc,
                              'instanceIds': _0x2e090b,
                              'color': _0x6b560f,
                              'dirty': !0x0
                         });
                         let _0x3bf6f1 = this[_0x237af2(0x502)][_0x237af2(0x420)](_0x559d02);
                         Cesium[_0x237af2(0x336)](_0x3bf6f1) || (_0x3bf6f1 = {
                              'batchId': _0x2380fc,
                              'instanceIds': _0x2e090b,
                              'operationValue': new Cesium[(_0x237af2(0xce9))](),
                              'dirty': !0x0
                         }),
                              _0x3bf6f1['dirty'] = !0x0,
                              _0x3bf6f1[_0x237af2(0x1af)]['x'] = _0x6b560f === Cesium['Color'][_0x237af2(0x8f3)] ? 0xfe & _0x3bf6f1['operationValue']['x'] : 0x1 | _0x3bf6f1[_0x237af2(0x1af)]['x'],
                              this[_0x237af2(0x502)]['set'](_0x559d02, _0x3bf6f1),
                              this['batchTableDirty'] = !0x0;
                    }
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x2eb)] = function (_0x48e230) {
                    const _0x9f4b0a = _0xc3a123;
                    if (!this[_0x9f4b0a(0x3b8)] || this[_0x9f4b0a(0xd6a)][_0x9f4b0a(0x72b)] < 0x1)
                         return;
                    let _0x53fdac = this['selectionInfoMap'][_0x9f4b0a(0xcc3)];
                    for (let _0x6a00f0 in _0x53fdac) {
                         if (!_0x53fdac[_0x9f4b0a(0x6e8)](_0x6a00f0))
                              continue;
                         if (!_0x48e230['contains'](_0x6a00f0))
                              continue;
                         let _0x2005e = _0x53fdac[_0x6a00f0]
                              , _0x4fa5d7 = _0x2005e[_0x9f4b0a(0xd53)]
                              , _0x396150 = _0x2005e[_0x9f4b0a(0x7d6)]
                              , _0x4814b0 = _0x48e230[_0x9f4b0a(0x420)](_0x6a00f0)
                              , _0x593102 = this[_0x9f4b0a(0x502)]['get'](_0x6a00f0);
                         Cesium[_0x9f4b0a(0x336)](_0x593102) || (_0x593102 = {
                              'batchId': _0x4fa5d7,
                              'instanceIds': _0x396150,
                              'operationValue': new Cesium[(_0x9f4b0a(0xce9))](),
                              'dirty': !0x0
                         }),
                              _0x593102[_0x9f4b0a(0x29a)] = !0x0,
                              _0x593102[_0x9f4b0a(0x1af)]['x'] = 0x1 & _0x593102[_0x9f4b0a(0x1af)]['x'] | _0x4814b0,
                              this['idsOperationMap']['set'](_0x6a00f0, _0x593102),
                              this[_0x9f4b0a(0x47f)] = !0x0;
                    }
               }
               ,
               _0x56d276['prototype']['updateAllObjsVisible'] = function (_0x16814b) {
                    const _0x38367a = _0xc3a123;
                    if (!this[_0x38367a(0x3b8)] || this[_0x38367a(0xd6a)][_0x38367a(0x72b)] < 0x1)
                         return;
                    let _0x568d32 = this[_0x38367a(0x9c9)]
                         , _0x2d563a = this[_0x38367a(0xd6a)][_0x38367a(0xcc3)];
                    for (let _0x4e6163 in _0x2d563a) {
                         if (!_0x2d563a[_0x38367a(0x6e8)](_0x4e6163))
                              continue;
                         if (_0x568d32[_0x38367a(0xb75)][_0x38367a(0x264)](_0x4e6163))
                              continue;
                         let _0x2081e0 = _0x2d563a[_0x4e6163][0x0]
                              , _0x3660eb = _0x2081e0['batchId']
                              , _0x47fa8f = _0x2081e0[_0x38367a(0x7d6)]
                              , _0x30340a = this[_0x38367a(0x502)]['get'](_0x4e6163);
                         Cesium[_0x38367a(0x336)](_0x30340a) || (_0x30340a = {
                              'batchId': _0x3660eb,
                              'instanceIds': _0x47fa8f,
                              'operationValue': new Cesium[(_0x38367a(0xce9))](),
                              'dirty': !0x0
                         }),
                              _0x30340a[_0x38367a(0x29a)] = !0x0,
                              _0x30340a[_0x38367a(0x1af)]['x'] = _0x16814b ? _0x30340a[_0x38367a(0x1af)]['x'] & (_0x2cc3e2[_0x38367a(0x34a)] ^ _0x2cc3e2[_0x38367a(0x3ef)]) : _0x30340a[_0x38367a(0x1af)]['x'] | _0x2cc3e2[_0x38367a(0x3ef)],
                              this[_0x38367a(0x502)]['set'](_0x4e6163, _0x30340a),
                              _0x30340a['operationValue']['x'] === _0x2cc3e2['RESET'] ? _0x568d32[_0x38367a(0xd3d)]['remove'](_0x4e6163) : (_0x568d32[_0x38367a(0xd3d)]['set'](_0x4e6163, _0x30340a[_0x38367a(0x1af)]['x']),
                                   _0x568d32['_objsHideList'][_0x38367a(0x320)](_0x4e6163, !0x0)),
                              this[_0x38367a(0x47f)] = !0x0;
                    }
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)]['clip'] = function (_0x4383a1) {
                    const _0x337130 = _0xc3a123;
                    if (!this['ready'])
                         return;
                    let _0x2b21ec = this['shaderProgram'][_0x337130(0xc60)][_0x337130(0x432)]()
                         , _0x5db923 = this['shaderProgram']['fragmentShaderSource'][_0x337130(0x432)]()
                         , _0x2778cd = this['attributeLocations'];
                    _0x4383a1[_0x337130(0x1de)] ? -0x1 === _0x5db923['defines'][_0x337130(0xcef)](_0x266f35[_0x337130(0x339)]) && _0x5db923[_0x337130(0x340)][_0x337130(0x63e)](_0x266f35[_0x337130(0x339)]) : _0x294e8f(_0x5db923, _0x266f35[_0x337130(0x339)]),
                         this['layer'][_0x337130(0x199)] ? -0x1 === _0x5db923[_0x337130(0x340)][_0x337130(0xcef)](_0x266f35[_0x337130(0x9a5)]) && _0x5db923[_0x337130(0x340)][_0x337130(0x63e)](_0x266f35['CLIPPLANE']) : _0x294e8f(_0x5db923, _0x266f35['CLIPPLANE']),
                         this[_0x337130(0x940)][_0x337130(0x9bb)](),
                         this[_0x337130(0x940)] = Cesium['ShaderProgram'][_0x337130(0x6d8)]({
                              'context': this[_0x337130(0x9c9)][_0x337130(0x878)],
                              'vertexShaderSource': _0x2b21ec,
                              'fragmentShaderSource': _0x5db923,
                              'attributeLocations': _0x2778cd
                         }),
                         this['colorCommand'][_0x337130(0x940)] = this[_0x337130(0x940)];
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)]['hypsometric'] = function (_0x608486) {
                    const _0x327572 = _0xc3a123;
                    if (!this['ready'])
                         return;
                    let _0x24e3dc = this[_0x327572(0x940)][_0x327572(0xc60)]['clone']()
                         , _0x554f5a = this[_0x327572(0x940)][_0x327572(0x90e)][_0x327572(0x432)]()
                         , _0x38059d = this[_0x327572(0x273)];
                    _0x608486[_0x327572(0x1de)] ? (-0x1 === _0x24e3dc['defines']['indexOf'](_0x266f35[_0x327572(0xa44)]) && _0x24e3dc[_0x327572(0x340)]['push'](_0x266f35[_0x327572(0xa44)]),
                         -0x1 === _0x554f5a[_0x327572(0x340)][_0x327572(0xcef)](_0x266f35[_0x327572(0xa44)]) && _0x554f5a[_0x327572(0x340)][_0x327572(0x63e)](_0x266f35[_0x327572(0xa44)])) : _0x294e8f(_0x554f5a, _0x266f35[_0x327572(0xa44)]),
                         this[_0x327572(0x940)]['destroy'](),
                         this[_0x327572(0x940)] = Cesium[_0x327572(0xc23)][_0x327572(0x6d8)]({
                              'context': this[_0x327572(0x9c9)][_0x327572(0x878)],
                              'vertexShaderSource': _0x24e3dc,
                              'fragmentShaderSource': _0x554f5a,
                              'attributeLocations': _0x38059d
                         }),
                         this[_0x327572(0x486)][_0x327572(0x940)] = this[_0x327572(0x940)];
               }
               ,
               _0x56d276['prototype'][_0xc3a123(0x52e)] = function (_0x4a58c8) {
                    const _0x5998cc = _0xc3a123;
                    if (!this['ready'])
                         return;
                    let _0x1e10a3 = this['shaderProgram'][_0x5998cc(0xc60)][_0x5998cc(0x432)]()
                         , _0x8e3f91 = this[_0x5998cc(0x940)][_0x5998cc(0x90e)]['clone']()
                         , _0x22d07f = this[_0x5998cc(0x273)];
                    _0x4a58c8[_0x5998cc(0x1de)] ? -0x1 === _0x8e3f91['defines'][_0x5998cc(0xcef)](_0x266f35[_0x5998cc(0x607)]) && _0x8e3f91['defines'][_0x5998cc(0x63e)](_0x266f35['APPLY_SWIPE']) : _0x294e8f(_0x8e3f91, _0x266f35[_0x5998cc(0x607)]),
                         this[_0x5998cc(0x940)][_0x5998cc(0x9bb)](),
                         this['shaderProgram'] = Cesium[_0x5998cc(0xc23)][_0x5998cc(0x6d8)]({
                              'context': this[_0x5998cc(0x9c9)][_0x5998cc(0x878)],
                              'vertexShaderSource': _0x1e10a3,
                              'fragmentShaderSource': _0x8e3f91,
                              'attributeLocations': _0x22d07f
                         }),
                         this[_0x5998cc(0x486)][_0x5998cc(0x940)] = this[_0x5998cc(0x940)];
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x3ff)] = function (_0x2479ec) {
                    const _0x270b1a = _0xc3a123;
                    if (!this[_0x270b1a(0x3b8)])
                         return;
                    let _0x4db6ad = this[_0x270b1a(0x940)][_0x270b1a(0xc60)][_0x270b1a(0x432)]()
                         , _0x4b8142 = this[_0x270b1a(0x940)][_0x270b1a(0x90e)][_0x270b1a(0x432)]()
                         , _0x473a15 = this[_0x270b1a(0x273)];
                    _0x2479ec['enable'] ? -0x1 === _0x4db6ad['defines']['indexOf'](_0x266f35[_0x270b1a(0x4de)]) && _0x4db6ad[_0x270b1a(0x340)][_0x270b1a(0x63e)](_0x266f35[_0x270b1a(0x4de)]) : _0x294e8f(_0x4db6ad, _0x266f35[_0x270b1a(0x4de)]),
                         this[_0x270b1a(0x940)]['destroy'](),
                         this[_0x270b1a(0x940)] = Cesium[_0x270b1a(0xc23)][_0x270b1a(0x6d8)]({
                              'context': this[_0x270b1a(0x9c9)][_0x270b1a(0x878)],
                              'vertexShaderSource': _0x4db6ad,
                              'fragmentShaderSource': _0x4b8142,
                              'attributeLocations': _0x473a15
                         }),
                         this[_0x270b1a(0x486)][_0x270b1a(0x940)] = this[_0x270b1a(0x940)];
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x4ef)] = function (_0x12903d) {
                    const _0x2f4194 = _0xc3a123;
                    let _0x317c37 = this[_0x2f4194(0x940)]['vertexShaderSource'][_0x2f4194(0x432)]()
                         , _0x1ba309 = this['shaderProgram'][_0x2f4194(0x90e)][_0x2f4194(0x432)]()
                         , _0x4a24ac = this[_0x2f4194(0x273)];
                    if (_0x12903d['enable']) {
                         var _0x27c6a2 = _0x12903d[_0x2f4194(0x9c9)]
                              , _0x36dd4e = (_0x27c6a2['_pbrParameter'] & _0x5dc18d[_0x2f4194(0x212)]) > 0x0 || _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x1f4)]
                              , _0x455dc6 = Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xd86)]) && Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xd86)][_0x2f4194(0x48a)])
                              , _0x401842 = []
                              , _0x383081 = Cesium[_0x2f4194(0x336)](this[_0x2f4194(0x273)][_0x2f4194(0xc8d)]);
                         _0x36dd4e || _0x455dc6 ? (_0x383081 && _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0xcd9)]),
                              _0x455dc6 && (_0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0xb0d)]),
                                   _0x401842['push'](_0x2f4194(0x37a) + _0x27c6a2[_0x2f4194(0x59c)]['pbrMaterialsArr'][_0x2f4194(0x72b)])),
                              Cesium['defined'](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x8b9)]) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x8b9)] instanceof Cesium[_0x2f4194(0x74d)] && _0x383081 && _0x401842['push'](_0x266f35['HAS_BASE_TEXTURE']),
                              _0x383081 && Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x605)]) && Cesium[_0x2f4194(0x336)](_0x27c6a2['_PBRMaterialParams']['pbrMetallicRoughness'][_0x2f4194(0x605)][_0x2f4194(0x4fc)]) && (_0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0xa95)]),
                                   Cesium['defined'](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x605)]['rippleTexture']) && _0x27c6a2['_PBRMaterialParams'][_0x2f4194(0x30c)][_0x2f4194(0x605)]['rippleTexture'] instanceof Cesium[_0x2f4194(0x74d)] && _0x401842[_0x2f4194(0x63e)](_0x266f35['HAS_RAIN'])),
                              _0x383081 && Cesium[_0x2f4194(0x336)](_0x27c6a2['_PBRMaterialParams'][_0x2f4194(0x30c)][_0x2f4194(0xc99)]) && Cesium[_0x2f4194(0x336)](_0x27c6a2['_PBRMaterialParams'][_0x2f4194(0x30c)]['snowEffect'][_0x2f4194(0x9ca)]) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0xc99)][_0x2f4194(0x9ca)] instanceof Cesium[_0x2f4194(0x74d)] && Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)]['snowEffect'][_0x2f4194(0x694)]) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0xc99)][_0x2f4194(0x694)] instanceof Cesium[_0x2f4194(0x74d)] && _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x311)]),
                              (Cesium['defined'](this[_0x2f4194(0x7be)]) && this[_0x2f4194(0x7be)][_0x2f4194(0xadb)] > -0x1 || Cesium['defined'](_0x27c6a2[_0x2f4194(0xb95)]['pbrMetallicRoughness']['metallicRoughnessTexture']) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x657)] instanceof Cesium[_0x2f4194(0x74d)]) && _0x383081 && _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x49f)]),
                              (Cesium[_0x2f4194(0x336)](this[_0x2f4194(0x7be)]) && this['materialPass'][_0x2f4194(0x550)] > -0x1 || Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x8a6)]) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)]['normalTexture'] instanceof Cesium['Texture']) && _0x383081 && _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x233)]),
                              (Cesium['defined'](this['materialPass']) && this[_0x2f4194(0x7be)][_0x2f4194(0x5b1)] > -0x1 || Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0x5c2)]) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)]['occlusionTexture'] instanceof Cesium[_0x2f4194(0x74d)]) && _0x383081 && _0x401842['push'](_0x266f35[_0x2f4194(0x3d1)]),
                              (Cesium[_0x2f4194(0x336)](this[_0x2f4194(0x7be)]) && Cesium[_0x2f4194(0x336)](this['materialPass'][_0x2f4194(0x967)]) || Cesium['defined'](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0xaec)])) && _0x401842[_0x2f4194(0x63e)](_0x266f35['HAS_ANISOTROPY']),
                              (Cesium[_0x2f4194(0x336)](this[_0x2f4194(0x7be)]) && Cesium[_0x2f4194(0x336)](this[_0x2f4194(0x7be)]['_volume']) || Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xb95)]['pbrMetallicRoughness'][_0x2f4194(0x806)])) && (_0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x679)]),
                                   _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x81b)])),
                              (Cesium[_0x2f4194(0x336)](this['materialPass']) && Cesium['defined'](this[_0x2f4194(0x7be)][_0x2f4194(0x497)]) || Cesium[_0x2f4194(0x336)](_0x27c6a2['_PBRMaterialParams'][_0x2f4194(0x30c)][_0x2f4194(0xbba)])) && _0x401842[_0x2f4194(0x63e)](_0x266f35['HAS_CLEARCOAT']),
                              (Cesium['defined'](this[_0x2f4194(0x7be)]) && this[_0x2f4194(0x7be)]['_indexOfRefraction'] > -0x1 || Cesium[_0x2f4194(0x336)](_0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)][_0x2f4194(0xc66)]) && _0x27c6a2[_0x2f4194(0xb95)][_0x2f4194(0x30c)]['indexOfRefraction'] > 0x0) && _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x653)]),
                              Cesium[_0x2f4194(0x336)](this[_0x2f4194(0x7be)]) && this[_0x2f4194(0x7be)][_0x2f4194(0x646)] > -0x1 && _0x401842[_0x2f4194(0x63e)](_0x266f35['HAS_EMISSIVE_TEXTURE']),
                              Cesium[_0x2f4194(0x336)](_0x27c6a2['_frameState']['specularEnvironmentMaps']) && _0x401842[_0x2f4194(0x63e)](_0x266f35[_0x2f4194(0x1c9)]),
                              _0x401842[_0x2f4194(0xd43)](_0x384b76 => {
                                   _0x305f8f(_0x1ba309, _0x384b76);
                              }
                              )) : (_0x401842 = [_0x266f35['BRDF'], 'NUM_PBR_MATERIALS\x20' + _0x27c6a2[_0x2f4194(0x59c)]['pbrMaterialsArr']['length'], _0x266f35[_0x2f4194(0x42d)], _0x266f35[_0x2f4194(0x233)], _0x266f35['HAS_EMISSIVE_TEXTURE'], _0x266f35[_0x2f4194(0x1c9)], _0x266f35['HAS_MetallicRoughness_TEXTURE'], _0x266f35[_0x2f4194(0x311)], _0x266f35[_0x2f4194(0xb8d)]])['forEach'](_0x3028e0 => {
                                   _0x294e8f(_0x1ba309, _0x3028e0);
                              }
                              ),
                              this['shaderProgram']['destroy'](),
                              this[_0x2f4194(0x940)] = Cesium[_0x2f4194(0xc23)][_0x2f4194(0x6d8)]({
                                   'context': _0x27c6a2[_0x2f4194(0x878)],
                                   'vertexShaderSource': _0x317c37,
                                   'fragmentShaderSource': _0x1ba309,
                                   'attributeLocations': _0x4a24ac
                              }),
                              this['colorCommand']['shaderProgram'] = this[_0x2f4194(0x940)];
                    }
               }
               ,
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x71f)] = Cesium['DeveloperError'][_0xc3a123(0xd9e)],
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = Cesium['DeveloperError'][_0xc3a123(0xd9e)],
               _0x56d276[_0xc3a123(0x2d4)]['isDestroyed'] = Cesium['DeveloperError'][_0xc3a123(0xd9e)],
               _0x56d276[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = Cesium[_0xc3a123(0x610)][_0xc3a123(0xd9e)],
               _0x3b2fd1['prototype'] = Object[_0xc3a123(0x7e5)](_0x56d276['prototype']),
               _0x3b2fd1[_0xc3a123(0x2d4)][_0xc3a123(0xcc8)] = _0x56d276;
          let _0x111886 = new Cesium[(_0xc3a123(0xce9))]()
               , _0x489fa6 = new Cesium[(_0xc3a123(0xce9))]()
               , _0x44ab94 = new Cesium[(_0xc3a123(0xce9))]();
          function _0x644b5b(_0x1c4a11, _0x2afbf4, _0x564954) {
               const _0xd51a4 = _0xc3a123;
               let _0x3547d0 = {
                    'uGeoMatrix': function () {
                         return _0x564954['geoMatrix'];
                    },
                    'uInverseGeoMatrix': function () {
                         const _0x5d3a78 = _0x5e91;
                         return _0x564954[_0x5d3a78(0x8b7)];
                    },
                    'uTexture': function () {
                         const _0xd86278 = _0x5e91;
                         return _0x1c4a11[_0xd86278(0xa0d)][0x0];
                    },
                    'uTexture0Width': function () {
                         const _0x24f2a1 = _0x5e91;
                         return _0x1c4a11[_0x24f2a1(0xa0d)][0x0][_0x24f2a1(0x65e)];
                    },
                    'uClipMode': function () {
                         const _0xffabde = _0x5e91;
                         return _0x2afbf4[_0xffabde(0x247)];
                    },
                    'uClipPlanes': function () {
                         const _0x22a7ae = _0x5e91;
                         return _0x2afbf4[_0x22a7ae(0x678)];
                    },
                    'uHypsometricTexture': function () {
                         const _0x15fd7d = _0x5e91;
                         return _0x2afbf4[_0x15fd7d(0x371)][_0x15fd7d(0x350)];
                    },
                    'uHypLineColor': function () {
                         const _0x16aca8 = _0x5e91;
                         return _0x2afbf4[_0x16aca8(0x371)][_0x16aca8(0x561)]['LineColor'];
                    },
                    'uNoValueColor': function () {
                         const _0x439934 = _0x5e91;
                         return _0x2afbf4[_0x439934(0x371)][_0x439934(0x561)][_0x439934(0x66d)];
                    },
                    'uMinMaxValue': function () {
                         const _0xea9ece = _0x5e91;
                         let _0x3b80f8 = _0x2afbf4['_hypsometric'][_0xea9ece(0x561)];
                         return _0x111886['x'] = _0x3b80f8['ColorTableMinKey'],
                              _0x111886['y'] = _0x3b80f8['ColorTableMaxKey'],
                              _0x111886['z'] = _0x3b80f8['MinVisibleValue'],
                              _0x111886['w'] = _0x3b80f8['MaxVisibleValue'],
                              _0x111886;
                    },
                    'uOpacityIntervalFillMode': function () {
                         const _0x63f1fd = _0x5e91;
                         let _0x74762b = _0x2afbf4[_0x63f1fd(0x371)]['setting'];
                         return _0x489fa6['x'] = _0x74762b[_0x63f1fd(0x6a0)],
                              _0x489fa6['y'] = _0x74762b['LineInterval'],
                              _0x489fa6['z'] = _0x74762b[_0x63f1fd(0xc34)],
                              _0x489fa6;
                    },
                    'uFlattenRect': function () {
                         const _0x777c95 = _0x5e91;
                         return _0x2afbf4[_0x777c95(0x253)][_0x777c95(0xd75)];
                    },
                    'uFlattenTexture': function () {
                         const _0xed0b3d = _0x5e91;
                         return _0x2afbf4[_0xed0b3d(0x253)][_0xed0b3d(0x350)];
                    },
                    'uSwipeRegion': function () {
                         const _0x5a226a = _0x5e91
                              , _0x32161a = _0x2afbf4[_0x5a226a(0x878)];
                         return _0x44ab94['x'] = _0x2afbf4[_0x5a226a(0x7c8)]['x'] * _0x32161a[_0x5a226a(0x4a4)],
                              _0x44ab94['y'] = (0x1 - _0x2afbf4[_0x5a226a(0x7c8)]['y']) * _0x32161a[_0x5a226a(0x6ab)],
                              _0x44ab94['z'] = _0x2afbf4[_0x5a226a(0x7c8)]['z'] * _0x32161a[_0x5a226a(0x4a4)],
                              _0x44ab94['w'] = (0x1 - _0x2afbf4[_0x5a226a(0x7c8)]['w']) * _0x32161a['drawingBufferHeight'],
                              _0x44ab94;
                    },
                    'decodePositionMin': function () {
                         const _0x25ac66 = _0x5e91;
                         return _0x564954[_0x25ac66(0xd49)][_0x25ac66(0x472)];
                    },
                    'decodePositionNormConstant': function () {
                         const _0x597679 = _0x5e91;
                         return _0x564954['vertexPackage'][_0x597679(0x474)];
                    }
               };
               return _0xd51a4(0xd4b) == window[_0xd51a4(0x937)] && (_0x3547d0[_0xd51a4(0x4bc)] = function () {
                    const _0x4f5e84 = _0xd51a4;
                    return _0x564954[_0x4f5e84(0xd49)][_0x4f5e84(0x541)][0x0];
               }
                    ,
                    _0x3547d0[_0xd51a4(0x31b)] = function () {
                         const _0x593b32 = _0xd51a4;
                         return _0x564954[_0x593b32(0xd49)][_0x593b32(0x541)][0x1];
                    }
                    ,
                    _0x3547d0[_0xd51a4(0xcf5)] = function () {
                         const _0x4e667c = _0xd51a4;
                         return _0x564954[_0x4e667c(0xd49)][_0x4e667c(0x302)][0x0];
                    }
               ),
                    _0x3547d0;
          }
          _0x3b2fd1[_0xc3a123(0x2d4)][_0xc3a123(0x71f)] = function () {
               const _0x483496 = _0xc3a123;
               if (Cesium['defined'](this[_0x483496(0x486)]) || 0x0 !== this[_0x483496(0x445)][_0x483496(0x72b)] || 0x0 !== this[_0x483496(0x62a)][_0x483496(0x72b)] || 0x0 !== this[_0x483496(0x759)]['length'])
                    return;
               let _0x520ef0 = this[_0x483496(0x9c9)]
                    , _0x5249e1 = _0x520ef0['context']
                    , _0x1117a2 = this[_0x483496(0xd49)]
                    , _0x507e0f = this['arrIndexPackage']
                    , _0x3cc314 = _0x1117a2[_0x483496(0x761)];
               if (_0x507e0f[_0x483496(0x72b)] < 0x1)
                    return;
               let _0x46c32a = _0x507e0f[0x0]
                    , _0x535d6c = this[_0x483496(0x1c0)];
               this['vertexArray'] = new Cesium['VertexArray']({
                    'context': _0x5249e1,
                    'attributes': _0x3cc314,
                    'indexBuffer': _0x46c32a['indexBuffer']
               }),
                    this[_0x483496(0x486)] = new Cesium['DrawCommand']({
                         'primitiveType': _0x46c32a[_0x483496(0xba3)],
                         'modelMatrix': this[_0x483496(0xbbd)],
                         'boundingVolume': Cesium[_0x483496(0xc1c)][_0x483496(0x432)](this[_0x483496(0x802)]),
                         'vertexArray': this[_0x483496(0x896)],
                         'shaderProgram': this[_0x483496(0x940)],
                         'pass': _0x535d6c[_0x483496(0x9c6)] ? Cesium['Pass'][_0x483496(0x40f)] : Cesium[_0x483496(0xd8a)]['CESIUM_3D_TILE'],
                         'renderState': _0x3bae9a(),
                         'instanceCount': _0x1117a2['instanceCount']
                    }),
                    this['colorCommand'][_0x483496(0x7b8)] = _0x644b5b(_0x535d6c, _0x520ef0, this),
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    this['ready'] = !0x0;
          }
               ,
               _0x3b2fd1[_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x18238c, _0x2c4ee7) {
                    const _0x5db613 = _0xc3a123;
                    if (!this['ready'])
                         return this[_0x5db613(0xb72)](_0x18238c),
                              this['createShaderProgram'](_0x18238c),
                              this[_0x5db613(0x71f)](_0x18238c),
                              void this[_0x5db613(0xb31)](_0x2c4ee7);
                    _0x18238c[_0x5db613(0x7c3)][_0x5db613(0x63e)](this[_0x5db613(0x486)]);
               }
               ,
               _0x3b2fd1['prototype'][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x3b2fd1[_0xc3a123(0x2d4)]['destroy'] = function () {
                    const _0x1f66ca = _0xc3a123;
                    return this[_0x1f66ca(0x940)] = this[_0x1f66ca(0x940)] && !this[_0x1f66ca(0x940)][_0x1f66ca(0x567)]() && this[_0x1f66ca(0x940)][_0x1f66ca(0x9bb)](),
                         this[_0x1f66ca(0x896)] = this[_0x1f66ca(0x896)] && !this[_0x1f66ca(0x896)][_0x1f66ca(0x567)]() && this[_0x1f66ca(0x896)][_0x1f66ca(0x9bb)](),
                         this['material'] = this[_0x1f66ca(0x1c0)] && !this[_0x1f66ca(0x1c0)][_0x1f66ca(0x567)]() && this[_0x1f66ca(0x1c0)]['destroy'](),
                         this[_0x1f66ca(0x486)] = void 0x0,
                         this['vertexPackage'] = null,
                         this[_0x1f66ca(0x47d)] = null,
                         this['modelMatrix'] = void 0x0,
                         this[_0x1f66ca(0x239)] = void 0x0,
                         this[_0x1f66ca(0xd6a)] = void 0x0,
                         this['vs'] = void 0x0,
                         this['fs'] = void 0x0,
                         Cesium[_0x1f66ca(0x8e1)](this);
               }
               ;
          var _0x7db29e = '\x0a\x20\x20\x20\x20attribute\x20vec4\x20aPosition;\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20attribute\x20vec4\x20aColor;\x0a#endif\x0a#ifdef\x20USE_TextureCoordMatrix\x0a\x20\x20\x20\x20attribute\x20vec2\x20aTextureCoordMatrix;\x0a#endif\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20attribute\x20vec3\x20aNormal;\x0a#endif\x0a#ifdef\x20Instance\x0a\x20\x20\x20\x20attribute\x20float\x20instanceId;\x0a#else\x0a\x20\x20\x20\x20attribute\x20float\x20batchId;\x0a#endif\x20\x0a\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20attribute\x20float\x20aTextureBatchId0;\x0a#endif\x0a\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20attribute\x20vec4\x20aTexCoord0;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoord;\x0a\x20\x20\x20\x20uniform\x20mat4\x20uTexMatrix;\x0a\x20\x20\x20\x20uniform\x20vec2\x20decodeTexCoord0Min;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20uniform\x20vec4\x20uTexAtlasDim;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexAtlasTran;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexAtlasScale;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexAtlasSize;\x0a\x20\x20\x20\x20varying\x20vec2\x20vMaxMipLevel;\x0a#else\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexCoordTransform;\x0a#endif\x20\x20\x20\x20\x0a#endif\x0a#endif\x0a\x0a#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20attribute\x20vec4\x20aTexCoord1;\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture1Width;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix2;\x0a#endif\x0a#ifdef\x20InstanceBim\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv2;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv3;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv4;\x0a\x20\x20\x20\x20attribute\x20vec4\x20secondary_colour;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv6;\x20\x20\x20\x0a#endif\x0a\x0a#ifdef\x20InstancePipe\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv1;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv2;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv3;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv4;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv5;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv6;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv7;\x0a\x20\x20\x20\x20attribute\x20vec4\x20secondary_colour;\x0a\x20\x20\x20\x20attribute\x20vec4\x20uv9;\x0a#endif\x0a\x0a#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20uniform\x20vec4\x20decodePositionMin;\x0a\x20\x20\x20\x20uniform\x20float\x20decodePositionNormConstant;\x0a#endif\x0a\x0a//\x20meshopt判断\x0a#ifdef\x20MeshOPT_Compress\x0a\x20\x20\x20\x20uniform\x20vec3\x20decodeTexCoord0vNormConstant;\x0a\x20\x20\x20\x20uniform\x20vec3\x20decode_texCoord1_vNormConstant;\x0a#else\x0a\x20\x20\x20\x20uniform\x20float\x20decode_texCoord0_normConstant;\x0a\x20\x20\x20\x20uniform\x20float\x20decode_texCoord1_normConstant;\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20varying\x20float\x20wValue;\x20\x20\x20\x20\x0a#endif\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20uniform\x20mat4\x20uGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20mat4\x20uInverseGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uFlattenTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFlattenRect;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSelectedColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFillForeColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20varying\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20vec3\x20vPositionEC;\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20varying\x20vec3\x20vNormalEC;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT8\x20=\x201.0\x20/\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT4\x20=\x201.0\x20/\x2016.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT4\x20=\x2016.0;\x0a\x20\x20\x20\x20void\x20getTextureMatrixFromZValue(in\x20float\x20nZ,\x20inout\x20float\x20XTran,\x20inout\x20float\x20YTran,\x20inout\x20float\x20scale)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(nZ\x20<=\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel8\x20=\x20floor(nZ\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel16\x20=\x20floor(nDel8\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel20\x20=\x20floor(nDel16\x20*\x20SHIFT_RIGHT4);\x0a\x20\x20\x20\x20\x20\x20\x20\x20YTran\x20=\x20nZ\x20-\x20nDel8\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20XTran\x20=\x20nDel8\x20-\x20nDel16\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nLevel\x20=\x20nDel16\x20-\x20nDel20\x20*\x20SHIFT_LEFT4;\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20nLevel);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20operation(vec4\x20operationType,\x20vec4\x20color,\x20vec4\x20selectedColor,\x20inout\x20vec4\x20vertexColor)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_2\x20=\x20operationType.x\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_4\x20=\x20right_2\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_8\x20=\x20right_4\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_16\x20=\x20right_8\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20isSetColor\x20=\x20fract(right_2);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(isSetColor\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vertexColor\x20*=\x20color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20isPicked\x20=\x20fract(floor(right_2)*\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(isPicked\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vertexColor\x20*=\x20selectedColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20isHide\x20=\x20fract(floor(right_4)*\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(isHide\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vertexColor.a\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20float\x20unpackValue(vec4\x20packedValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT16\x20=\x2065536.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20value\x20=\x20packedValue\x20*\x20255.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20value.r\x20*\x20SHIFT_LEFT16\x20+\x20value.g\x20*\x20SHIFT_LEFT8\x20+\x20value.b\x20-\x209000.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20calculateHeight(vec4\x20vertexPos)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vecPos\x20=\x20uGeoMatrix\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecRatio\x20=\x20vec2(uFlattenRect.z\x20-\x20uFlattenRect.x,\x20uFlattenRect.w\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecTexCoord\x20=\x20vec2(vecPos.x\x20-\x20uFlattenRect.x,\x20vecPos.y\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.x\x20=\x20vecTexCoord.x\x20/\x20vecRatio.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.y\x20=\x20vecTexCoord.y\x20/\x20vecRatio.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecTexCoord.x\x20>\x201.0\x20||\x20vecTexCoord.x\x20<\x200.0\x20||\x20vecTexCoord.y\x20>\x201.0\x20||\x20vecTexCoord.y\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vertexPos;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fHeight\x20=\x20unpackValue(texture2D(uFlattenTexture,\x20vecTexCoord.xy));\x0a\x20\x20\x20\x20\x20\x20\x20\x20fHeight\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecPos.z\x20>\x20fHeight)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.z\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.w\x20=\x20vecPos.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uInverseGeoMatrix\x20*\x20vec4(vecPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20uniform\x20highp\x20sampler2D\x20batchTextureAtlas;\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20batchTextureAtlasStep;\x20\x0a#ifdef\x20SecTextureAtlas\x0a\x20\x20\x20\x20uniform\x20highp\x20sampler2D\x20batchTextureAtlasSec;\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20batchTextureAtlasStepSec;\x20\x0a#endif\x0a\x20\x20\x20\x20vec2\x20computeAtlasSt(float\x20batchId,\x20vec4\x20step)\x20\x0a\x20\x20\x20\x20{\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20stepX\x20=\x20step.x;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20centerX\x20=\x20step.y;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20numberOfAttributes\x20=\x20float(1);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(centerX\x20+\x20(batchId\x20*\x20numberOfAttributes\x20*\x20stepX),\x200.5);\x20\x0a\x20\x20\x20\x20}\x20\x0a\x20\x20\x20\x20vec4\x20atlas_batchTable_xywh(float\x20batchId,\x20sampler2D\x20texture,\x20vec4\x20step)\x20\x0a\x20\x20\x20\x20{\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20st\x20=\x20computeAtlasSt(batchId,\x20step);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20st.x\x20+=\x20step.x\x20*\x20float(0);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20textureValue\x20=\x20texture2D(texture,\x20st);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20value\x20=\x20textureValue;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20value;\x20\x0a\x20\x20\x20\x20}\x20\x0a\x20\x20\x20\x20void\x20getTexAtlasParameter(in\x20vec4\x20xywh,\x20in\x20vec2\x20textureDim,\x20inout\x20vec2\x20translate,\x20inout\x20vec2\x20scale,\x20inout\x20vec2\x20texSize,\x20inout\x20float\x20maxMipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20width\x20=\x20xywh.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20height\x20\x20=\x20xywh.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20width\x20*=\x202.0\x20/\x203.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20maxMipLevel\x20=\x20log2(min(width,\x20height));\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale.x\x20=\x20width\x20/\x20textureDim.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale.y\x20=\x20height\x20/\x20textureDim.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate.x\x20=\x20xywh.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate.y\x20\x20=\x20xywh.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate\x20/=\x20textureDim;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texSize.x\x20=\x20width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texSize.y\x20=\x20height;\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x0a\x0a\x20\x20\x20\x20#ifdef\x20TexCoord\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20aTexCoord0.xy;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(aTextureBatchId0\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMaxMipLevel.x\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20xywh\x20=\x20atlas_batchTable_xywh(aTextureBatchId0,\x20batchTextureAtlas,\x20batchTextureAtlasStep);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20getTexAtlasParameter(xywh,\x20uTexAtlasDim.xy,\x20vTexAtlasTran.xy,\x20vTexAtlasScale.xy,\x20vTexAtlasSize.xy,\x20vMaxMipLevel.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix\x20=\x20vec4(0.0,0.0,1.0,0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.x\x20=\x20aTexCoord0.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20USE_TextureCoordMatrix\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.x\x20=\x20aTextureCoordMatrix.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexCoordTransform.x\x20<\x20-90000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.z\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20getTextureMatrixFromZValue(floor(vTexCoordTransform.x),\x20vTexMatrix.x,\x20vTexMatrix.y,\x20vTexMatrix.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.w\x20=\x20log2(uTexture0Width\x20*\x20vTexMatrix.z);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(aTextureBatchIdSec\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMaxMipLevel.y\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20xywh2\x20=\x20atlas_batchTable_xywh(aTextureBatchIdSec,\x20batchTextureAtlasSec,\x20batchTextureAtlasStepSec);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20getTexAtlasParameter(xywh2,\x20uTexAtlasDim.zw,\x20vTexAtlasTran.zw,\x20vTexAtlasScale.zw,\x20vTexAtlasSize.zw,\x20vMaxMipLevel.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.zw\x20=\x20aTexCoord1.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix2\x20=\x20vec4(0.0,0.0,1.0,0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.y\x20=\x20aTexCoord1.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20USE_TextureCoordMatrix\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.y\x20=\x20aTextureCoordMatrix.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexCoordTransform.y\x20<\x20-90000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix2.z\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20getTextureMatrixFromZValue(floor(vTexCoordTransform.y),\x20vTexMatrix2.x,\x20vTexMatrix2.y,\x20vTexMatrix2.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix2.w\x20=\x20log2(uTexture1Width\x20*\x20vTexMatrix.z);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vertexPos\x20=\x20decodePositionMin\x20+\x20vec4(aPosition.xyz,\x201.0)\x20*\x20decodePositionNormConstant;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20aPosition;\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20//\x20meshopt压缩\x20这里对照主版本的\x20\x20主版本命名的都是通过下划线，但是插件获取uniform是通过函数，所以需要大写\x0a\x20\x20\x20\x20#ifdef\x20MeshOPT_Compress\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20texCoord0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texCoord0.x\x20=\x20aTexCoord0.x\x20*\x20decodeTexCoord0vNormConstant.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texCoord0.y\x20=\x20aTexCoord0.y\x20*\x20decodeTexCoord0vNormConstant.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20decodeTexCoord0Min\x20+\x20texCoord0.xy;\x0a\x20\x20\x20\x20#endif\x0a\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20vertexPos\x20=\x20calculateHeight(vertexPos);\x0a#endif\x0a\x20\x20\x20\x20vec4\x20vertexColor\x20=\x20uFillForeColor;\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20vertexColor\x20*=\x20aColor;\x0a#endif\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20aNormal;\x0a#endif\x0a#ifdef\x20InstanceBim\x0a\x20\x20\x20\x20mat4\x20worldMatrix;\x0a\x20\x20\x20\x20worldMatrix[0]\x20=\x20uv2;\x0a\x20\x20\x20\x20worldMatrix[1]\x20=\x20uv3;\x0a\x20\x20\x20\x20worldMatrix[2]\x20=\x20uv4;\x0a\x20\x20\x20\x20worldMatrix[3]\x20=\x20vec4(0,\x200,\x200,\x201);\x0a\x20\x20\x20\x20vertexPos\x20=\x20vec4(vertexPos.xyz,1.0)\x20*\x20worldMatrix;\x0a\x20\x20\x20\x20vertexColor\x20*=\x20secondary_colour;\x20\x0a#endif\x0a#ifdef\x20InstancePipe\x0a\x20\x20\x20\x20mat4\x20worldMatrix;\x0a\x20\x20\x20\x20mat4\x20worldMatrix0;\x0a\x20\x20\x20\x20mat4\x20worldMatrix1;\x0a\x20\x20\x20\x20vec4\x20worldPos0;\x0a\x20\x20\x20\x20vec4\x20worldPos1;\x0a\x20\x20\x20\x20worldMatrix0[0]\x20=\x20uv1;\x0a\x20\x20\x20\x20worldMatrix0[1]\x20=\x20uv2;\x0a\x20\x20\x20\x20worldMatrix0[2]\x20=\x20uv3;\x0a\x20\x20\x20\x20worldMatrix0[3]\x20=\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x20\x20\x20\x20worldMatrix1[0]\x20=\x20uv4;\x0a\x20\x20\x20\x20worldMatrix1[1]\x20=\x20uv5;\x0a\x20\x20\x20\x20worldMatrix1[2]\x20=\x20uv6;\x0a\x20\x20\x20\x20worldMatrix1[3]\x20=\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x20\x20\x20\x20vec4\x20realVertex\x20=\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20realVertex.x\x20=\x20realVertex.x\x20*\x20uv7.z;\x0a\x20\x20\x20\x20worldPos0\x20=\x20realVertex\x20*\x20worldMatrix0;\x0a\x20\x20\x20\x20worldPos1\x20=\x20realVertex\x20*\x20worldMatrix1;\x0a\x20\x20\x20\x20vertexColor\x20*=\x20secondary_colour;\x20\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20if(aTexCoord0.y\x20>\x200.5)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20tex4Vec\x20=\x20uTexMatrix\x20*\x20vec4(uv7.y,\x20aTexCoord0.x,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20tex4Vec.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vertexPos\x20=\x20worldPos1;\x0a\x20\x20\x20\x20\x20\x20\x20\x20worldMatrix\x20=\x20worldMatrix1;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20tex4Vec\x20=\x20uTexMatrix\x20*\x20vec4(uv7.x,\x20aTexCoord0.x,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20tex4Vec.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vertexPos\x20=\x20worldPos0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20worldMatrix\x20=\x20worldMatrix0;\x0a\x20\x20\x20\x20}\x0a#endif\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20normal.x\x20=\x20normal.x\x20*\x20uv7.z;\x0a#endif\x0a#endif\x0a\x20\x20\x20\x20#ifdef\x20Instance\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20index\x20=\x20instanceId;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20index\x20=\x20batchId;\x0a\x20\x20\x20\x20#endif\x20\x20\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20wValue\x20=\x20vertexPos.w;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20operationType\x20=\x20s3m_batchTable_operation(index);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20objsColor\x20=\x20s3m_batchTable_color(index);\x0a\x20\x20\x20\x20\x20\x20\x20\x20operation(operationType,\x20objsColor,\x20uSelectedColor,\x20vertexColor);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vSecondColor\x20=\x20s3m_batchTable_pickColor(index);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20positionMC\x20=\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vColor\x20=\x20vertexColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionMC\x20=\x20positionMC;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionEC\x20=\x20(czm_modelView\x20*\x20positionMC).xyz;\x0a\x20\x20\x20\x20#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20\x20\x20\x20\x20vNormalEC\x20=\x20czm_normal\x20*\x20normal;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a'
               , _0x22933a = _0xc3a123(0xcdd)
               , _0x1a748c = 'precision\x20highp\x20float;\x0aconst\x20float\x20uPixelRatio\x20=\x201.0;\x0a//\x20Inputs\x0aattribute\x20vec3\x20aPosition0;\x0aattribute\x20vec3\x20aPosition1;\x0a//attribute\x20float\x20aVariantOffset;\x0a//attribute\x20float\x20aVariantStroke;\x0a//attribute\x20float\x20aVariantExtension;\x0a\x0a#ifdef\x20SILHOUETTE\x0aattribute\x20vec3\x20aNormalA;\x0aattribute\x20vec3\x20aNormalB;\x0a#else\x20/*\x20SILHOUETTE\x20*/\x0aattribute\x20vec3\x20aNormal;\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x0aattribute\x20vec2\x20aSideness;\x0a//attribute\x20vec2\x20aPackedAttributes;\x0a\x0astruct\x20UnpackedAttributes\x0a{\x0a\x20\x20\x20\x20vec2\x20sideness;\x0a\x20\x20\x20\x20vec2\x20sidenessNorm;\x0a\x20\x20\x20\x20float\x20lineWidthPixels;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels;\x0a#if\x20(MODE\x20==\x202)\x0a\x20\x20\x20\x20float\x20type;\x0a#endif\x0a};\x0a\x0a//\x20Output\x20required\x20to\x20compute\x20color\x0avarying\x20vec4\x20vColor;\x0a//\x20Output\x20required\x20to\x20compute\x20distance\x20to\x20line/caps\x0avarying\x20vec3\x20vPosition;\x20\x0avarying\x20vec3\x20vViewPosition;\x0avarying\x20float\x20vRadius;\x0avarying\x20float\x20vLineLengthPixels;\x0avarying\x20float\x20vSizeFalloffFactor;\x0avarying\x20float\x20vDistanceFromEye;\x0a\x0auniform\x20float\x20uLineWidth;\x0auniform\x20vec4\x20uLineColor;\x0aconst\x20vec2\x20uDepthBias\x20=\x20vec2(0.5,\x20-4e-4);\x0a\x0a//\x20Utility\x20function\x20to\x20check\x20for\x20NaN\x20values\x0abool\x20isNaN(float\x20val)\x0a{\x0a\x20\x20\x20\x20return\x20(\x20val\x20<\x200.0\x20||\x200.0\x20<\x20val\x20||\x20val\x20==\x200.0\x20)\x20?\x20false\x20:\x20true;\x0a\x20\x20\x20\x20//\x20important:\x20some\x20nVidias\x20failed\x20to\x20cope\x20with\x20version\x20below.\x0a\x20\x20\x20\x20//\x20Probably\x20wrong\x20optimization.\x0a\x20\x20\x20\x20/*return\x20(\x20val\x20<=\x200.0\x20||\x200.0\x20<=\x20val\x20)\x20?\x20false\x20:\x20true;*/\x0a}\x0a\x0avec2\x20calculateProjectedBiasXY(vec4\x20projPos,\x20vec3\x20worldNormal)\x0a{\x0a\x20\x20\x20\x20float\x20offsetXY\x20=\x20uDepthBias.x;\x0a\x20\x20\x20\x20float\x20offsetZ\x20\x20=\x20uDepthBias.y;\x0a\x20\x20\x20\x20vec4\x20projNormal\x20=\x20czm_projection\x20*\x20czm_view\x20*\x20vec4(worldNormal,\x200.0);\x0a\x20\x20\x20\x20return\x20offsetXY\x20*\x20projPos.w\x20*\x202.0\x20/\x20czm_viewport.zw\x20*\x20normalize(projNormal.xyz).xy;\x0a}\x0a\x0a//\x20A\x20z-offset,\x20using\x20a\x20depth\x20based\x20heuristic.\x0afloat\x20calculateProjectedBiasZ(vec4\x20projPos)\x0a{\x0a\x20\x20\x20\x20float\x20fProjZ\x20=\x20projPos.z\x20/\x20projPos.w;\x0a\x20\x20\x20\x20if(fProjZ\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x200.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20offsetZ\x20=\x20uDepthBias.y;\x0a\x20\x20\x20\x20return\x20sqrt(projPos.z)\x20*\x20offsetZ;\x0a}\x0a\x0avec4\x20adjustProjectedPosition(vec4\x20projPos,\x20vec3\x20worldNormal,\x20float\x20lineWidth)\x0a{\x0a\x20\x20\x20\x20vec2\x20offsetXY\x20=\x20calculateProjectedBiasXY(projPos,\x20worldNormal);\x0a\x20\x20\x20\x20//\x20we\x20currently\x20have\x20to\x20do\x20this\x20check\x20because\x20some\x20geometries\x20come\x20with\x200\x20length\x20edge\x20normals.\x0a\x20\x20\x20\x20if\x20(!isNaN(offsetXY.x)\x20&&\x20!isNaN(offsetXY.y))\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20projPos.xy\x20+=\x20offsetXY;\x0a\x20\x20\x20\x20}\x0a#ifdef\x20LOG_DEPTH\x0a\x20\x20\x20\x20vDistanceFromEye\x20=\x20projPos.w;\x0a#else\x0a\x20\x20\x20\x20projPos.z\x20+=\x20calculateProjectedBiasZ(projPos);\x0a#endif\x0a\x20\x20\x20\x20return\x20projPos;\x0a}\x0a\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x201)\x0auniform\x20vec2\x20uStrokesTextureScale;\x0auniform\x20float\x20uStrokesLog2Resolution;\x0auniform\x20float\x20uStrokeVariants;\x0avarying\x20vec2\x20vStrokeUV;\x0avarying\x20float\x20vLineIndex;\x0avoid\x20calculateStyleOutputsSketch(float\x20lineLength,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20unpackedAttributes.sidenessNorm;\x0a\x20\x20\x20\x20float\x20lineIndex\x20=\x20clamp(ceil(log2(lineLength)),\x200.0,\x20uStrokesLog2Resolution);\x0a\x20\x20\x20\x20vStrokeUV\x20=\x20vec2(exp2(lineIndex)\x20*\x20sidenessNorm.y,\x20lineIndex\x20*\x20uStrokeVariants\x20+\x20aVariantStroke\x20+\x200.5)\x20*\x20uStrokesTextureScale;\x0a\x20\x20\x20\x20vStrokeUV.x\x20+=\x20aVariantOffset;\x0a\x20\x20\x20\x20vLineIndex\x20=\x20lineIndex;\x0a}\x0a#endif\x0a\x0a#if\x20(MODE\x20==\x200)\x0avoid\x20calculateStyleOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec4\x20projPos,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{}\x0a#elif\x20(MODE\x20==\x201)\x0avoid\x20calculateStyleOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec4\x20projPos,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20calculateStyleOutputsSketch(vLineLengthPixels,\x20unpackedAttributes);\x0a}\x0a#elif\x20(MODE\x20==\x202)\x0avarying\x20float\x20vType;\x0avoid\x20calculateStyleOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec4\x20projPos,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20vType\x20=\x20unpackedAttributes.type;\x0a\x20\x20\x20\x20if\x20(unpackedAttributes.type\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateStyleOutputsSketch(vLineLengthPixels,\x20unpackedAttributes);\x0a\x20\x20\x20\x20}\x0a}\x0a#endif\x0a\x0a\x0a//\x20Solid\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x200)\x0afloat\x20calculateLineAmplitudeSolid()\x0a{\x0a\x20\x20\x20\x20return\x200.0;\x0a}\x0a#endif\x0a#if\x20(MODE\x20==\x200)\x0afloat\x20calculateLineAmplitude(UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineAmplitudeSolid();\x0a}\x0a#endif\x0a//\x20Sketch\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x201)\x0a\x20\x20\x20\x20uniform\x20float\x20uStrokesAmplitude;\x0afloat\x20calculateLineAmplitudeSketch()\x0a{\x0a\x20\x20\x20\x20return\x20uStrokesAmplitude;\x0a}\x0a#endif\x0a#if\x20(MODE\x20==\x201)\x0afloat\x20calculateLineAmplitude(UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineAmplitudeSketch();\x0a}\x0a#endif\x0a//\x20Uber\x0a#if\x20(MODE\x20==\x202)\x0afloat\x20calculateLineAmplitude(UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20float\x20type\x20=\x20unpackedAttributes.type;\x0a\x20\x20\x20\x20if\x20(type\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineAmplitudeSketch();\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineAmplitudeSolid();\x0a\x20\x20\x20\x20}\x0a}\x0a#endif\x0a\x0a\x0auniform\x20float\x20uDistanceFalloffFactor;\x0afloat\x20distanceBasedPerspectiveFactor(float\x20distance)\x0a{\x0a\x20\x20\x20\x20return\x20clamp(sqrt(uDistanceFalloffFactor\x20/\x20distance),\x200.0,\x201.0);\x0a}\x0a\x0a#define\x20COMPONENT_COLOR_FIELD_OFFSET\x200.0\x0a#define\x20COMPONENT_OTHER_FIELDS_OFFSET\x201.0\x0a#define\x20COMPONENT_FIELD_COUNT\x202.0\x0a#define\x20LINE_WIDTH_FRACTION_FACTOR\x208.0\x0a#define\x20EXTENSION_LENGTH_OFFSET\x20128.0\x0a#define\x20COMPONENT_TEX_WIDTH\x204096.0\x0a\x0astruct\x20ComponentData\x0a{\x0a\x20\x20\x20\x20float\x20lineWidth;\x0a\x20\x20\x20\x20float\x20extensionLength;\x0a\x20\x20\x20\x20float\x20type;\x0a};\x0a\x0a\x0aComponentData\x20readComponentData()\x0a{\x0a\x20\x20\x20\x20return\x20ComponentData(uLineWidth,\x200.0,\x200.0);\x0a}\x0a\x0avec3\x20modelToWorldNormal(vec3\x20normal)\x0a{\x0a\x20\x20\x20\x20return\x20(czm_model\x20*\x20vec4(normal,\x200.0)).xyz;\x0a}\x0a\x0avec3\x20silhouetteWorldNormal(vec3\x20normalA,\x20vec3\x20normalB)\x0a{\x0a\x20\x20\x20\x20return\x20modelToWorldNormal(normalize(normalA\x20+\x20normalB));\x0a}\x0a\x0a//\x20Fall-off\x20extension\x20length\x20for\x20shorter\x20strokes,\x20starting\x20from\x20strokes\x20that\x20are\x20256\x20size,\x0a//\x20fall-off\x20exponentially\x0afloat\x20calculateExtensionLength(float\x20extensionLength,\x20float\x20lineLength)\x0a{\x0a\x20\x20\x20\x20return\x20extensionLength\x20/\x20(log2(max(1.0,\x20256.0\x20/\x20lineLength))\x20*\x200.2\x20+\x201.0);\x0a}\x0a\x0a#ifdef\x20SILHOUETTE\x0a//\x20#uniforms:\x20czm_view,\x20czm_model\x0abool\x20isSilhouetteEdge(vec4\x20viewPos,\x20vec3\x20normalA,\x20vec3\x20normalB)\x0a{\x0a//\x20transform\x20the\x20two\x20face\x20normals\x0a\x20\x20\x20\x20vec3\x20viewNormalA\x20=\x20(czm_view\x20*\x20czm_model\x20*\x20vec4(normalA,\x200.0)).xyz;\x0a\x20\x20\x20\x20vec3\x20viewNormalB\x20=\x20(czm_view\x20*\x20czm_model\x20*\x20vec4(normalB,\x200.0)).xyz;\x0a//\x20compute\x20the\x20direction\x20from\x20the\x20edge\x20to\x20the\x20camera\x0a\x20\x20\x20\x20vec3\x20viewDir\x20=\x20-viewPos.xyz;\x0a//\x20check\x20which\x20of\x20the\x20two\x20faces\x20are\x20visible\x0a//\x20display\x20the\x20edge\x20if\x20exactly\x20one\x20of\x20the\x20two\x20is\x20visible\x0a\x20\x20\x20\x20float\x20faceAVisible\x20=\x20dot(viewDir,\x20viewNormalA);\x0a//\x20positive\x20if\x20visible\x0a\x20\x20\x20\x20float\x20faceBVisible\x20=\x20dot(viewDir,\x20viewNormalB);\x0a//\x20positive\x20if\x20visible\x0a//\x201\x20if\x20exactly\x20one\x20face\x20visible,\x200\x20otherwise\x0a\x20\x20\x20\x20return\x20faceAVisible\x20*\x20faceBVisible\x20<\x200.0;\x0a}\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x0avoid\x20clipLineSegmentToNearPlane(vec3\x20p0,vec3\x20p1,out\x20bool\x20clipped,out\x20bool\x20culledByNearPlane,out\x20vec4\x20clippedPositionEC)\x0a{\x0a\x20\x20\x20\x20culledByNearPlane\x20=\x20false;\x0a\x20\x20\x20\x20clipped\x20=\x20false;\x0a\x20\x20\x20\x20vec3\x20p0ToP1\x20=\x20p1\x20-\x20p0;\x0a\x20\x20\x20\x20float\x20magnitude\x20=\x20length(p0ToP1);\x0a\x20\x20\x20\x20vec3\x20direction\x20=\x20normalize(p0ToP1);\x0a\x20\x20\x20\x20float\x20endPoint0Distance\x20=\x20\x20czm_currentFrustum.x\x20+\x20p0.z;\x0a\x20\x20\x20\x20float\x20denominator\x20=\x20-direction.z;\x0a\x20\x20\x20\x20if\x20(endPoint0Distance\x20>\x200.0\x20&&\x20abs(denominator)\x20<\x20czm_epsilon7)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20culledByNearPlane\x20=\x20true;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x20if\x20(endPoint0Distance\x20>\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20endPoint0Distance\x20/\x20denominator;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(t\x20<\x200.0\x20||\x20t\x20>\x20magnitude)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20culledByNearPlane\x20=\x20true;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0\x20=\x20p0\x20+\x20t\x20*\x20direction;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0.z\x20=\x20min(p0.z,\x20-czm_currentFrustum.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipped\x20=\x20true;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20clippedPositionEC\x20=\x20vec4(p0,\x201.0);\x0a}\x0a\x0afloat\x20writeNonPerspective(float\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec2\x20writeNonPerspective(vec2\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec3\x20writeNonPerspective(vec3\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec4\x20writeNonPerspective(vec4\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec4\x20calculateGeometricOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20unpackedAttributes.sideness;\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20unpackedAttributes.sidenessNorm;\x0a\x20\x20\x20\x20vec4\x20clippedViewPosV0;\x20\x20\x20\x20bool\x20clippedV0,culledV0;\x20\x20\x20\x20clipLineSegmentToNearPlane(viewPosV0.xyz,\x20viewPosV1.xyz,\x20clippedV0,\x20culledV0,\x20clippedViewPosV0);\x20\x20\x20\x20vec4\x20clippedViewPosV1;\x20\x20\x20\x20bool\x20clippedV1,\x20culledV1;\x20\x20\x20\x20clipLineSegmentToNearPlane(viewPosV1.xyz,\x20viewPosV0.xyz,\x20clippedV1,\x20culledV1,\x20clippedViewPosV1);\x20\x20\x20\x20vec4\x20viewPos\x20=\x20mix(clippedViewPosV0,\x20clippedViewPosV1,\x20sidenessNorm.y);\x0a\x20\x20\x20\x20vViewPosition\x20=\x20viewPos.xyz\x20/\x20viewPos.w;\x0a\x20\x20\x20\x20vec4\x20projPosV0\x20=\x20czm_projection\x20*\x20clippedViewPosV0;\x0a\x20\x20\x20\x20vec4\x20projPosV1\x20=\x20czm_projection\x20*\x20clippedViewPosV1;\x0a\x20\x20\x20\x20vec4\x20projPos\x20=\x20czm_projection\x20*\x20viewPos;\x0a\x20\x20\x20\x20vec3\x20screenSpaceLineNDC\x20=\x20(projPosV1.xyz\x20/\x20projPosV1.w\x20-\x20projPosV0.xyz\x20/\x20projPosV0.w);\x0a\x20\x20\x20\x20vec2\x20uNDCToPixel\x20=\x20vec2(czm_viewport.z\x20/\x202.0,\x20czm_viewport.w\x20/\x202.0);\x0a\x20\x20\x20\x20vec2\x20screenSpaceLinePixels\x20=\x20screenSpaceLineNDC.xy\x20*\x20uNDCToPixel;\x0a\x20\x20\x20\x20float\x20lineLengthPixels\x20=\x20length(screenSpaceLinePixels);\x0a\x20\x20\x20\x20float\x20dzPerPixel\x20=\x20screenSpaceLineNDC.z\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20screenSpaceDirection\x20=\x20screenSpaceLinePixels\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20perpendicularScreenSpaceDirection\x20=\x20vec2(screenSpaceDirection.y,\x20-screenSpaceDirection.x)\x20*\x20sideness.x;\x0a\x20\x20\x20\x20float\x20falloffFactor\x20=\x20distanceBasedPerspectiveFactor(-viewPos.z)\x20*\x20uPixelRatio;\x0a\x20\x20\x20\x20float\x20lineWidthPixels\x20=\x20unpackedAttributes.lineWidthPixels\x20*\x20falloffFactor;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels\x20=\x20calculateExtensionLength(unpackedAttributes.extensionLengthPixels,\x20lineLengthPixels)\x20*\x20falloffFactor;\x0a\x20\x20\x20\x20float\x20lineAmplitudePixels\x20=\x20calculateLineAmplitude(unpackedAttributes)\x20*\x20uPixelRatio;\x0a\x20\x20\x20\x20vSizeFalloffFactor\x20=\x20falloffFactor;\x0a\x20\x20\x20\x20float\x20lineWidthAndAmplitudePixels\x20=\x20lineWidthPixels\x20+\x20lineAmplitudePixels\x20+\x20lineAmplitudePixels;\x0a\x20\x20\x20\x20float\x20extendedLineLengthPixels\x20=\x20lineLengthPixels\x20+\x20extensionLengthPixels\x20+\x20extensionLengthPixels;\x0a#ifdef\x20ANTIALIASING\x0a\x20\x20\x20\x20const\x20float\x20aaPaddingPixels\x20=\x201.0;\x0a\x20\x20\x20\x20//\x20Line\x20size\x20with\x20padding\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineWidthAndAmplitudePixels\x20=\x20lineWidthAndAmplitudePixels\x20*\x200.5\x20+\x20aaPaddingPixels;\x0a\x20\x20\x20\x20float\x20aaPaddedRoundedCapSizePixels\x20=\x20lineWidthPixels\x20*\x200.5\x20+\x20aaPaddingPixels;\x0a\x20\x20\x20\x20//\x20Line\x20length\x20with\x20padding\x0a\x20\x20\x20\x20float\x20aaPaddedLineLengthPixels\x20=\x20extendedLineLengthPixels\x20+\x20aaPaddingPixels\x20+\x20aaPaddingPixels;\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineLengthPixels\x20=\x20aaPaddedLineLengthPixels\x20*\x200.5;\x0a#else\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20//\x20Even\x20if\x20there\x20is\x20no\x20AA,\x20we\x20still\x20want\x20to\x20do\x20proper\x20<1px\x20rendering,\x0a\x20\x20\x20\x20//\x20so\x20we\x20effectively\x20clamp\x20the\x20pixel\x20sizes\x20to\x20minimum\x20of\x201px\x20and\x20compute\x0a\x20\x20\x20\x20//\x20coverage\x20in\x20the\x20fragment\x20shader\x20\x20\x20\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineWidthAndAmplitudePixels\x20=\x20max(lineWidthAndAmplitudePixels,\x201.0)\x20*\x200.5;\x0a\x20\x20\x20\x20float\x20aaPaddedRoundedCapSizePixels\x20=\x20max(lineWidthPixels,\x201.0)\x20*\x200.5;\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineLengthPixels\x20=\x20max(extendedLineLengthPixels,\x201.0)\x20*\x200.5;\x0a#endif\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20//\x20Half\x20line\x20width\x20in\x20NDC\x20including\x20padding\x20for\x20anti\x20aliasing\x0a\x20\x20\x20\x20vec2\x20uPixelToNDC\x20=\x20vec2(2.0\x20/\x20czm_viewport.z,\x202.0\x20/\x20czm_viewport.w);\x0a\x20\x20\x20\x20vec2\x20halfAAPaddedLineWidthAndAmplitudeNDC\x20=\x20halfAAPaddedLineWidthAndAmplitudePixels\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20vec2\x20aaPaddedRoundedCapSizeNDC\x20=\x20aaPaddedRoundedCapSizePixels\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20vec2\x20extensionLengthNDC\x20=\x20extensionLengthPixels\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20//\x20Compute\x20screen\x20space\x20position\x20of\x20vertex,\x20offsetting\x20for\x20line\x20size\x20and\x20end\x20caps\x0a\x20\x20\x20\x20vec2\x20ndcOffset\x20=\x20(screenSpaceDirection\x20*\x20sideness.y\x20*\x20(aaPaddedRoundedCapSizeNDC\x20+\x20extensionLengthNDC)\x20+\x20perpendicularScreenSpaceDirection\x20*\x20halfAAPaddedLineWidthAndAmplitudeNDC);\x0a\x20\x20\x20\x20projPos.xy\x20+=\x20ndcOffset\x20*\x20projPos.w;\x0a\x20\x20\x20\x20projPos.z\x20+=\x20(dzPerPixel\x20*\x20(aaPaddedRoundedCapSizePixels\x20+\x20extensionLengthPixels))\x20*\x20sideness.y\x20*\x20projPos.w;\x0a\x20\x20\x20\x20projPos\x20=\x20adjustProjectedPosition(projPos,\x20worldNormal,\x201.0\x20+\x20max((lineWidthAndAmplitudePixels\x20-\x201.0)\x20*\x200.5,\x200.0));\x0a\x20\x20\x20\x20//\x20Line\x20length\x20with\x20end\x20caps\x0a\x20\x20\x20\x20float\x20aaPaddedLineWithCapsLengthPixels\x20=\x20extendedLineLengthPixels\x20+\x20aaPaddedRoundedCapSizePixels\x20+\x20aaPaddedRoundedCapSizePixels;\x0a\x20\x20\x20\x20float\x20pixelPositionAlongLine\x20=\x20aaPaddedLineWithCapsLengthPixels\x20*\x20sidenessNorm.y\x20-\x20aaPaddedRoundedCapSizePixels;\x0a\x20\x20\x20\x20//\x20Position\x20in\x20pixels\x20with\x20origin\x20at\x20first\x20vertex\x20of\x20line\x20segment\x0a\x20\x20\x20\x20//\x20The\x20line\x20width\x20radius\x20in\x20pixels\x0a\x20\x20\x20\x20vRadius\x20=\x20lineWidthPixels\x20*\x200.5;\x0a\x20\x20\x20\x20vLineLengthPixels\x20=\x20extendedLineLengthPixels;\x0a\x20\x20\x20\x20vPosition\x20=\x20writeNonPerspective(vec3(halfAAPaddedLineWidthAndAmplitudePixels\x20*\x20sideness.x,\x20pixelPositionAlongLine,\x20pixelPositionAlongLine\x20/\x20extendedLineLengthPixels),\x20projPos.w);\x0a#ifdef\x20SILHOUETTE\x0a\x20\x20\x20\x20gl_Position\x20=\x20isSilhouetteEdge(viewPosV0,\x20aNormalA,\x20aNormalB)\x20?\x20projPos\x20:\x20vec4(10.0,\x2010.0,\x2010.0,\x201.0);\x0a#else\x20/*\x20SILHOUETTE\x20*/\x0a\x20\x20\x20\x20gl_Position\x20=\x20projPos;\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x0a#if\x20(MODE\x20==\x202)\x0a\x20\x20\x20\x20if\x20(unpackedAttributes.type\x20<=\x200.0\x20&&\x20lineLengthPixels\x20<=\x203.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20vec4(10.0,\x2010.0,\x2010.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a#elif\x20(MODE\x20==\x201)\x0a\x20\x20\x20\x20if\x20(lineLengthPixels\x20<=\x203.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20vec4(10.0,\x2010.0,\x2010.0,\x201.0);\x20\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20return\x20projPos;\x0a}\x0a\x0a\x0a#if\x20(MODE\x20==\x202)\x0aUnpackedAttributes\x20unpackAttributes(ComponentData\x20component)\x0a{\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20aSideness;\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20sidenessNorm\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20float\x20fType\x20=\x20component.type;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels\x20=\x20component.extensionLength;\x0a\x20\x20\x20\x20float\x20lineWidth\x20=\x20component.lineWidth;\x0a\x20\x20\x20\x20if\x20(fType\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20extensionLengthPixels\x20*=\x20aVariantExtension\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20UnpackedAttributes(sideness,\x20sidenessNorm,\x20lineWidth,\x20extensionLengthPixels,\x20fType);\x0a}\x0a#else\x20/*\x20(MODE\x20==\x202)\x20*/\x0aUnpackedAttributes\x20unpackAttributes(ComponentData\x20component)\x0a{\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20aSideness;\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20sidenessNorm\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels\x20=\x20component.extensionLength;\x0a#if\x20(MODE\x20==\x201)\x0a\x20\x20\x20\x20extensionLengthPixels\x20*=\x20aVariantExtension\x20*\x202.0\x20-\x201.0;\x0a#endif\x0a\x20\x20\x20\x20float\x20lineWidth\x20=\x20component.lineWidth;\x0a\x20\x20\x20\x20return\x20UnpackedAttributes(sideness,\x20sidenessNorm,\x20lineWidth,\x20extensionLengthPixels);\x0a}\x0a#endif\x20/*\x20(MODE\x20==\x202)\x20*/\x0a\x0avarying\x20float\x20fSelected;\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20fSelected\x20=\x200.0;\x0a\x20\x20\x20\x20ComponentData\x20component\x20=\x20readComponentData();\x0a\x20\x20\x20\x20UnpackedAttributes\x20unpackedAttributes\x20=\x20unpackAttributes(component);\x0a\x20\x20\x20\x20vec4\x20worldPosV0\x20=\x20czm_model\x20*\x20vec4(aPosition0,\x201.0);\x0a\x20\x20\x20\x20vec4\x20worldPosV1\x20=\x20czm_model\x20*\x20vec4(aPosition1,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPosV0\x20=\x20czm_modelView\x20*\x20vec4(aPosition0,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPosV1\x20=\x20czm_modelView\x20*\x20vec4(aPosition1,\x201.0);\x0a#ifdef\x20SILHOUETTE\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20silhouetteWorldNormal(aNormalA,\x20aNormalB);\x0a#else\x20/*\x20SILHOUETTE\x20*/\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20modelToWorldNormal(aNormal);\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x20\x20\x20\x20//\x20General\x20geometric\x20computation\x20for\x20all\x20types\x20of\x20edges\x0a\x20\x20\x20\x20vec4\x20projPos\x20=\x20calculateGeometricOutputs(viewPosV0,\x20viewPosV1,\x20worldPosV0,\x20worldPosV1,\x20worldNormal,\x20unpackedAttributes);\x0a\x20\x20\x20\x20vColor\x20=\x20uLineColor;\x0a}'
               , _0x1d7c4b = '\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0aprecision\x20highp\x20float;\x0avarying\x20vec4\x20vColor;\x0avarying\x20float\x20vRadius;\x0avarying\x20vec3\x20vPosition;\x0avarying\x20vec3\x20vViewPosition;\x0avarying\x20float\x20vLineLengthPixels;\x0avarying\x20float\x20vSizeFalloffFactor;\x0avarying\x20float\x20vLineIndex;\x0avarying\x20float\x20vDistanceFromEye;\x0a\x0a//\x20At\x20which\x20coverage\x20threshold\x20we\x20discard\x20a\x20fragment\x20completely\x0a#define\x20COVERAGE_TEST_THRESHOLD\x200.01\x0aconst\x20float\x20nearRange\x20=\x201000.0;\x0aconst\x20float\x20farRange\x20=\x2020000.0;\x0a\x0a//\x20Sketch\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x201)\x0a//uniform\x20sampler2D\x20uStrokesTexture;\x0a//uniform\x20float\x20uStrokesNormalizationScale;\x0avarying\x20vec2\x20vStrokeUV;\x0a\x0afloat\x20calculateLineOffsetSketch()\x0a{\x0a\x20\x20\x20\x20//float\x20offsetNorm\x20=\x20rgba2float(texture2D(uStrokesTexture,\x20vStrokeUV));\x0a\x20\x20\x20\x20//return\x20(offsetNorm\x20-\x200.5)\x20*\x20uStrokesNormalizationScale;\x0a\x20\x20\x20\x20return\x201.0;\x0a}\x0a\x0afloat\x20calculateLinePressureSketch()\x0a{\x0a\x20\x20\x20\x20//return\x20rgba2float(texture2D(uStrokesTexture,\x20vStrokeUV\x20+\x20vec2(0.0,\x200.5)));\x0a\x20\x20\x20\x20return\x201.0;\x0a}\x0a#endif\x0a\x0a#if\x20(MODE\x20==\x201)\x0afloat\x20calculateLineOffset()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineOffsetSketch();\x0a}\x0afloat\x20calculateLinePressure()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLinePressureSketch();\x0a}\x0a#endif\x0a\x0a//\x20Solid\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x200)\x0afloat\x20calculateLineOffsetSolid()\x0a{\x0a\x20\x20\x20\x20return\x200.0;\x0a}\x0afloat\x20calculateLinePressureSolid()\x0a{\x0a\x20\x20\x20\x20return\x201.0;\x0a}\x0a#endif\x0a\x0a#if\x20(MODE\x20==\x200)\x0afloat\x20calculateLineOffset()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineOffsetSolid();\x0a}\x0afloat\x20calculateLinePressure()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLinePressureSolid();\x0a}\x0a#endif\x0a\x0a//\x20Uber\x0a#if\x20(MODE\x20==\x202)\x0avarying\x20float\x20vType;\x0afloat\x20calculateLineOffset()\x0a{\x0a\x20\x20\x20\x20if\x20(vType\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineOffsetSketch();\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineOffsetSolid();\x0a\x20\x20\x20\x20}\x0a}\x0a\x0afloat\x20calculateLinePressure()\x0a{\x0a\x20\x20\x20\x20if\x20(vType\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLinePressureSketch();\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLinePressureSolid();\x0a\x20\x20\x20\x20}\x0a}\x0a#endif\x0a\x0avec2\x20lineWithCapsDistance(float\x20radius,\x20vec2\x20position,\x20float\x20lineLength)\x0a{\x0a\x20\x20\x20\x20float\x20lineOffset\x20=\x20calculateLineOffset();\x0a\x20\x20\x20\x20float\x20positionX\x20=\x20position.x\x20-\x20lineOffset;\x0a\x20\x20\x20\x20if\x20(radius\x20<\x201.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20coverageX\x20=\x20clamp(min(radius,\x20positionX\x20+\x200.5)\x20-\x20max(-radius,\x20positionX\x20-\x200.5),\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20coverageY\x20=\x20clamp(min(lineLength,\x20position.y\x20+\x200.5)\x20-\x20max(0.0,\x20position.y\x20-\x200.5),\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20coverage\x20=\x20min(coverageX,\x20coverageY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(0.5\x20-\x20coverage,\x200.0);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Between\x20-radius\x20->\x200\x20for\x20start\x20cap,\x200\x20for\x20line,\x200\x20->\x20radius\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20positionOnCap\x20=\x20position.y\x20-\x20clamp(position.y,\x200.0,\x20lineLength);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20lineToPosition\x20=\x20vec2(positionX,\x20positionOnCap);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(length(lineToPosition)\x20-\x20radius,\x20positionOnCap\x20/\x20radius);\x0a\x20\x20\x20\x20}\x0a}\x0a\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20getClipDistance(vec3\x20pos,\x20vec3\x20planeNormal,\x20float\x20disToOrigin)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20dot(planeNormal,\x20pos)\x20+\x20disToOrigin;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[0].xyz,\x20uClipPlanes[0].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0afloat\x20readNonPerspective(float\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avec2\x20readNonPerspective(vec2\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avec3\x20readNonPerspective(vec3\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avec4\x20readNonPerspective(vec4\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec3\x20realPosition\x20=\x20readNonPerspective(vPosition,\x20gl_FragCoord.w);\x0a\x20\x20\x20\x20float\x20radius\x20=\x20vRadius\x20*\x20calculateLinePressure();\x0a\x20\x20\x20\x20vec2\x20distance\x20=\x20lineWithCapsDistance(radius,\x20realPosition.xy,\x20vLineLengthPixels);\x0a\x20\x20\x20\x20float\x20coverage\x20=\x20clamp(0.5\x20-\x20distance.x,\x200.0,\x201.0);\x0a#ifdef\x20ANTIALIASING\x0a\x20\x20\x20\x20const\x20float\x20coverageLimit\x20=\x20COVERAGE_TEST_THRESHOLD;\x0a#else\x0a\x20\x20\x20\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20//\x20Use\x20subpixel\x20coverage\x20computation\x20when\x20lines\x20get\x20subpixel\x20widths\x0a\x20\x20\x20\x20//\x20so\x20we\x20still\x20render\x20them\x20appropriately.\x20Otherwise\x20discard\x20anything\x0a\x20\x20\x20\x20//\x20that\x20is\x20not\x20fully\x20within\x20the\x20line\x0a\x20\x20\x20\x20float\x20coverageLimit\x20=\x20radius\x20<=\x200.5\x20?\x20COVERAGE_TEST_THRESHOLD\x20:\x200.75;\x0a#endif\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20if\x20(coverage\x20<\x20coverageLimit)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20vColor.a\x20*\x20coverage;\x0a\x20\x20\x20\x20gl_FragColor\x20=\x20vec4(vColor.rgb,\x20alpha);\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a#endif\x0a\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20\x20gl_FragColor\x20*=\x20clip(vec4(vViewPosition,\x201.0),\x201.0);\x0a#endif\x0a\x0a\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20-\x20smoothstep(nearRange,\x20farRange,\x20vDistanceFromEye);\x0a\x20\x20\x20\x20\x20gl_FragColor.a\x20*=\x20attenuation;\x0a\x20\x20\x20\x20\x20czm_writeLogDepth();\x0a}';
          function _0x219e8e() {
               const _0x455edd = _0xc3a123;
               this['model'] = void 0x0,
                    this[_0x455edd(0x878)] = void 0x0,
                    this[_0x455edd(0x350)] = void 0x0,
                    this[_0x455edd(0x2ba)] = void 0x0;
          }
          _0x219e8e['prototype']['set'] = function (_0x20568c, _0xabc338, _0x404134, _0x4ea407) {
               const _0x17cf01 = _0xc3a123;
               this['model'] = _0xabc338,
                    this['context'] = _0x20568c,
                    this[_0x17cf01(0x350)] = _0x404134,
                    this[_0x17cf01(0x2ba)] = _0x4ea407;
          }
               ,
               _0x219e8e[_0xc3a123(0x2d4)]['execute'] = function () {
                    const _0x585fec = _0xc3a123;
                    let _0xcf79de = this['subTextureInfo'];
                    this[_0x585fec(0x350)][_0x585fec(0x3b8)] || this[_0x585fec(0x350)][_0x585fec(0x366)](),
                         this[_0x585fec(0x350)]['copyFrom']({
                              'xOffset': _0xcf79de[_0x585fec(0x4af)],
                              'yOffset': _0xcf79de['yOffset'],
                              'width': _0xcf79de['width'],
                              'height': _0xcf79de[_0x585fec(0x48e)],
                              'arrayBufferView': _0xcf79de[_0x585fec(0x3e0)]
                         });
               }
               ;
          const _0x48a253 = {
               'OPAQUE': _0xc3a123(0x708),
               'BLEND': _0xc3a123(0x354),
               'MASK': _0xc3a123(0x709)
          };
          var _0x1401a3 = Object[_0xc3a123(0xb56)](_0x48a253);
          const _0x77a991 = Cesium[_0xc3a123(0x336)];
          function _0x3198f4(_0x1d43e4) {
               const _0x3d3d8e = _0xc3a123;
               _0x56d276[_0x3d3d8e(0x3fa)](this, _0x1d43e4),
                    this['vs'] = _0x7db29e,
                    this['fs'] = _0x22933a,
                    this[_0x3d3d8e(0xcab)] = void 0x0,
                    this[_0x3d3d8e(0x69b)] = void 0x0,
                    this['regularEdgeCommand'] = void 0x0,
                    this[_0x3d3d8e(0xb4b)] = void 0x0,
                    this['useLineColor'] = !0x1;
          }
          function _0x45d733() {
               const _0x21ea20 = _0xc3a123;
               return Cesium[_0x21ea20(0x259)][_0x21ea20(0x6d8)]({
                    'cull': {
                         'enabled': !0x1
                    },
                    'depthTest': {
                         'enabled': !0x0,
                         'func': Cesium[_0x21ea20(0x98b)][_0x21ea20(0x3c2)]
                    },
                    'blending': Cesium[_0x21ea20(0x75d)][_0x21ea20(0x276)],
                    'stencilTest': {
                         'backFunction': Cesium[_0x21ea20(0xbac)][_0x21ea20(0xd7e)],
                         'backOperation': {
                              'fail': Cesium[_0x21ea20(0x753)][_0x21ea20(0x3aa)],
                              'zFail': Cesium['StencilOperation'][_0x21ea20(0x3aa)],
                              'zPass': Cesium[_0x21ea20(0x753)][_0x21ea20(0x26d)]
                         },
                         'enabled': !0x0,
                         'frontFunction': Cesium['StencilFunction']['ALWAYS'],
                         'frontOperation': {
                              'fail': Cesium['StencilOperation'][_0x21ea20(0x3aa)],
                              'zFail': Cesium['StencilOperation'][_0x21ea20(0x3aa)],
                              'zPass': Cesium[_0x21ea20(0x753)][_0x21ea20(0x26d)]
                         },
                         'mask': Cesium['StencilConstants'][_0x21ea20(0xc2d)],
                         'reference': Cesium[_0x21ea20(0x3bc)][_0x21ea20(0xc2d)]
                    }
               });
          }
          function _0xf4df00() {
               const _0x4dc26c = _0xc3a123;
               return Cesium['RenderState'][_0x4dc26c(0x6d8)]({
                    'cull': {
                         'enabled': !0x0
                    },
                    'depthTest': {
                         'enabled': !0x0,
                         'func': Cesium[_0x4dc26c(0x98b)][_0x4dc26c(0x3c2)]
                    },
                    'blending': Cesium[_0x4dc26c(0x75d)][_0x4dc26c(0x276)]
               });
          }
          _0x3198f4[_0xc3a123(0x2d4)] = Object[_0xc3a123(0x7e5)](_0x56d276[_0xc3a123(0x2d4)]),
               _0x3198f4[_0xc3a123(0x2d4)][_0xc3a123(0xcc8)] = _0x56d276;
          let _0x2edb70 = new Cesium[(_0xc3a123(0xce9))]()
               , _0x57c2dd = new Cesium[(_0xc3a123(0xce9))]()
               , _0x32704c = new Cesium[(_0xc3a123(0xce9))]()
               , _0x10e256 = new Cesium[(_0xc3a123(0xce9))]();
          function _0x25b577(_0x5467ff, _0x5cfd77, _0x1117c8) {
               const _0x110894 = _0xc3a123;
               var _0x54260c = _0x1117c8[_0x110894(0x7be)] || {};
               let _0x42d5fa = {
                    'uGeoMatrix': function () {
                         const _0x2117f6 = _0x110894;
                         return _0x1117c8[_0x2117f6(0x8e8)];
                    },
                    'uTexMatrix': function () {
                         const _0x1b84fd = _0x110894;
                         return _0x5467ff[_0x1b84fd(0xd21)];
                    },
                    'uFillForeColor': function () {
                         const _0x30823f = _0x110894;
                         return _0x1117c8[_0x30823f(0x73d)] ? _0x5cfd77[_0x30823f(0xd55)][_0x30823f(0x60a)] : _0x5cfd77[_0x30823f(0xd55)][_0x30823f(0x3de)];
                    },
                    'uDiffuseColor': function () {
                         return _0x5467ff['diffuseColor'];
                    },
                    'uAmbientColor': function () {
                         return _0x5467ff['ambientColor'];
                    },
                    'uInverseGeoMatrix': function () {
                         const _0x585e29 = _0x110894;
                         return _0x1117c8[_0x585e29(0x8b7)];
                    },
                    'uTexture': function () {
                         const _0x45a153 = _0x110894;
                         let _0x219b47 = _0x5467ff[_0x45a153(0xa0d)][0x0];
                         return _0x219b47[_0x45a153(0xb6c)] ? _0x219b47[_0x45a153(0xb78)] && _0x219b47[_0x45a153(0x3b8)] ? _0x219b47 : _0x5467ff[_0x45a153(0xce1)] ? _0x5467ff['ancestorTexture'] : _0x219b47 : _0x5467ff[_0x45a153(0xa0d)][0x0];
                    },
                    'uTexture2': function () {
                         const _0x52b94c = _0x110894;
                         return _0x5467ff[_0x52b94c(0xa0d)][0x1];
                    },
                    'uTexAtlasDim': function () {
                         const _0x347825 = _0x110894;
                         let _0x4f308d = _0x5467ff[_0x347825(0xa0d)][0x0][_0x347825(0xb78)] ? _0x5467ff[_0x347825(0xa0d)][0x0] : _0x5467ff[_0x347825(0xce1)] ? _0x5467ff[_0x347825(0xce1)] : _0x5467ff[_0x347825(0xa0d)][0x0];
                         if (_0x10e256['x'] = _0x4f308d[_0x347825(0x65e)],
                              _0x10e256['y'] = _0x4f308d['height'],
                              _0x5467ff['textures'][0x1]) {
                              let _0x2940e6 = _0x5467ff[_0x347825(0xa0d)][0x1][_0x347825(0xb78)] ? _0x5467ff['textures'][0x1] : _0x5467ff[_0x347825(0x549)] ? _0x5467ff['ancestorTextureBake'] : _0x5467ff[_0x347825(0xa0d)][0x1];
                              _0x10e256['z'] = _0x2940e6[_0x347825(0x65e)],
                                   _0x10e256['w'] = _0x2940e6[_0x347825(0x48e)];
                         }
                         return _0x10e256;
                    },
                    'batchTextureAtlas': function () {
                         const _0x8d6961 = _0x110894;
                         return _0x5467ff[_0x8d6961(0xd98)][_0x8d6961(0x213)];
                    },
                    'batchTextureAtlasStep': function () {
                         const _0xe95c0a = _0x110894;
                         return _0x5467ff[_0xe95c0a(0xd98)]['_textureStep'];
                    },
                    'batchTextureAtlasSec': function () {
                         const _0x850604 = _0x110894;
                         return _0x5467ff[_0x850604(0x4ff)][_0x850604(0x213)];
                    },
                    'batchTextureAtlasStepSec': function () {
                         const _0x418b7c = _0x110894;
                         return _0x5467ff['batchTableBake'][_0x418b7c(0x999)];
                    },
                    'uTexture0Width': function () {
                         return _0x5467ff['textures'][0x0]['width'];
                    },
                    'uTexture1Width': function () {
                         const _0x7373c9 = _0x110894;
                         return _0x5467ff[_0x7373c9(0xa0d)][0x1][_0x7373c9(0x65e)];
                    },
                    'uSelectedColor': function () {
                         const _0x62ed51 = _0x110894;
                         return _0x5cfd77[_0x62ed51(0xaa7)];
                    },
                    'uClipMode': function () {
                         const _0x5518bf = _0x110894;
                         return _0x5cfd77[_0x5518bf(0x247)];
                    },
                    'uClipPlanes': function () {
                         const _0x515599 = _0x110894;
                         return _0x5cfd77[_0x515599(0x678)];
                    },
                    'uHypsometricTexture': function () {
                         const _0x2ff3f3 = _0x110894;
                         return _0x5cfd77[_0x2ff3f3(0x371)]['texture'];
                    },
                    'uHypLineColor': function () {
                         const _0x3a3129 = _0x110894;
                         return _0x5cfd77[_0x3a3129(0x371)][_0x3a3129(0x561)][_0x3a3129(0xb61)];
                    },
                    'uNoValueColor': function () {
                         const _0x166d03 = _0x110894;
                         return _0x5cfd77[_0x166d03(0x371)][_0x166d03(0x561)][_0x166d03(0x66d)];
                    },
                    'uMinMaxValue': function () {
                         const _0x36ebef = _0x110894;
                         let _0x5c38c2 = _0x5cfd77['_hypsometric'][_0x36ebef(0x561)];
                         return _0x2edb70['x'] = _0x5c38c2[_0x36ebef(0x993)],
                              _0x2edb70['y'] = _0x5c38c2[_0x36ebef(0x1e9)],
                              _0x2edb70['z'] = _0x5c38c2[_0x36ebef(0x35d)],
                              _0x2edb70['w'] = _0x5c38c2[_0x36ebef(0xc25)],
                              _0x2edb70;
                    },
                    'uOpacityIntervalFillMode': function () {
                         const _0x2ead2e = _0x110894;
                         let _0x34a9b5 = _0x5cfd77['_hypsometric'][_0x2ead2e(0x561)];
                         return _0x57c2dd['x'] = _0x34a9b5['Opacity'],
                              _0x57c2dd['y'] = _0x34a9b5[_0x2ead2e(0x68f)],
                              _0x57c2dd['z'] = _0x34a9b5[_0x2ead2e(0xc34)],
                              _0x57c2dd;
                    },
                    'uFlattenRect': function () {
                         const _0x54392d = _0x110894;
                         return _0x5cfd77[_0x54392d(0x253)][_0x54392d(0xd75)];
                    },
                    'uFlattenTexture': function () {
                         const _0x5a0194 = _0x110894;
                         return _0x5cfd77['_flattenPar'][_0x5a0194(0x350)];
                    },
                    'uSwipeRegion': function () {
                         const _0x59a61e = _0x110894
                              , _0x527f33 = _0x5cfd77[_0x59a61e(0x878)];
                         return _0x32704c['x'] = _0x5cfd77[_0x59a61e(0x7c8)]['x'] * _0x527f33['drawingBufferWidth'],
                              _0x32704c['y'] = (0x1 - _0x5cfd77[_0x59a61e(0x7c8)]['y']) * _0x527f33['drawingBufferHeight'],
                              _0x32704c['z'] = _0x5cfd77[_0x59a61e(0x7c8)]['z'] * _0x527f33['drawingBufferWidth'],
                              _0x32704c['w'] = (0x1 - _0x5cfd77['_swipeRegion']['w']) * _0x527f33[_0x59a61e(0x6ab)],
                              _0x32704c;
                    },
                    'uBrightness': function () {
                         const _0x52383e = _0x110894;
                         return _0x5cfd77[_0x52383e(0xc94)];
                    },
                    'uContrast': function () {
                         const _0x3e51fa = _0x110894;
                         return _0x5cfd77[_0x3e51fa(0x50d)];
                    },
                    'uHue': function () {
                         const _0x4e438c = _0x110894;
                         return _0x5cfd77[_0x4e438c(0xc01)];
                    },
                    'uSaturation': function () {
                         const _0x49aacc = _0x110894;
                         return _0x5cfd77[_0x49aacc(0x662)];
                    },
                    'uOneOverGamma': function () {
                         const _0x3680a7 = _0x110894;
                         return 0x1 / _0x5cfd77[_0x3680a7(0x8d7)];
                    },
                    'uBaseColorTextureIndex': function () {
                         const _0x2c23ca = _0x110894;
                         return _0x54260c['_baseColorTextureIndex'] > -0x1 ? _0x54260c[_0x2c23ca(0x71c)] : _0x5cfd77[_0x2c23ca(0xb95)][_0x2c23ca(0x30c)][_0x2c23ca(0xbe1)];
                    },
                    'uBaseColorFactor': function () {
                         const _0x82278f = _0x110894;
                         return _0x54260c[_0x82278f(0x8eb)] || _0x5cfd77[_0x82278f(0xb95)]['pbrMetallicRoughness']['baseColor'];
                    },
                    'uMetallicFactor': function () {
                         const _0x4bad24 = _0x110894;
                         return _0x54260c[_0x4bad24(0x6a6)] || _0x5cfd77['_PBRMaterialParams'][_0x4bad24(0x30c)]['metallicFactor'];
                    },
                    'uRoughnessFactor': function () {
                         const _0x3edef0 = _0x110894;
                         return Cesium['defaultValue'](_0x54260c['_roughnessFactor'], _0x5cfd77[_0x3edef0(0xb95)]['pbrMetallicRoughness']['roughnessFactor']);
                    },
                    'uEmissiveFactor': function () {
                         const _0x21d8c1 = _0x110894;
                         return _0x54260c[_0x21d8c1(0x3a7)] || _0x5cfd77['_PBRMaterialParams']['pbrMetallicRoughness'][_0x21d8c1(0xc5b)];
                    },
                    'uEmissionTexture': function () {
                         const _0x323318 = _0x110894;
                         if (_0x77a991(_0x54260c[_0x323318(0xda3)]))
                              return _0x54260c['emissiveTexture'];
                         var _0x1bba4c = _0x54260c[_0x323318(0x646)];
                         return _0x1bba4c > -0x1 && _0x77a991(_0x54260c[_0x323318(0x6eb)][_0x1bba4c]) ? _0x54260c[_0x323318(0x6eb)][_0x1bba4c] : _0x5cfd77[_0x323318(0xb95)][_0x323318(0x30c)]['emissiveTexture'];
                    },
                    'uMetallicRoughnessTexture': function () {
                         const _0x530b3f = _0x110894;
                         return _0x77a991(_0x54260c['_metallicRoughnessTextureIndex']) && _0x54260c[_0x530b3f(0xadb)] > -0x1 ? _0x77a991(_0x54260c[_0x530b3f(0x657)]) ? _0x54260c['metallicRoughnessTexture'] : _0x54260c[_0x530b3f(0x6eb)][_0x54260c[_0x530b3f(0xadb)]] : _0x5cfd77[_0x530b3f(0xb95)][_0x530b3f(0x30c)][_0x530b3f(0x657)];
                    },
                    'uNormalTexture': function () {
                         const _0xcce766 = _0x110894;
                         return _0x77a991(_0x54260c[_0xcce766(0x550)]) && _0x54260c[_0xcce766(0x550)] > -0x1 ? _0x54260c[_0xcce766(0x8a6)] ? _0x54260c[_0xcce766(0x8a6)] : _0x54260c[_0xcce766(0x6eb)][_0x54260c[_0xcce766(0x550)]] : _0x5cfd77[_0xcce766(0xb95)][_0xcce766(0x30c)]['normalTexture'];
                    },
                    'uNormalTextureScale': function () {
                         const _0x42398d = _0x110894;
                         return _0x77a991(_0x54260c['_normalTextureScale']) ? _0x54260c[_0x42398d(0x5f5)] : _0x5cfd77[_0x42398d(0xb95)][_0x42398d(0x30c)][_0x42398d(0x8b2)];
                    },
                    'uOcclusionTexture': function () {
                         const _0x14b1ee = _0x110894;
                         return _0x77a991(_0x54260c[_0x14b1ee(0x5b1)]) && _0x54260c[_0x14b1ee(0x5b1)] > -0x1 ? _0x54260c['occlusionTexture'] ? _0x54260c['occlusionTexture'] : _0x54260c[_0x14b1ee(0x6eb)][_0x54260c[_0x14b1ee(0x5b1)]] : _0x5cfd77[_0x14b1ee(0xb95)][_0x14b1ee(0x30c)][_0x14b1ee(0x5c2)];
                    },
                    'uIndexOfRefraction': function () {
                         const _0x5afad4 = _0x110894;
                         return _0x77a991(_0x54260c[_0x5afad4(0x450)]) && _0x54260c[_0x5afad4(0x450)] > 0x0 ? _0x54260c[_0x5afad4(0x450)] : _0x5cfd77[_0x5afad4(0xb95)][_0x5afad4(0x30c)][_0x5afad4(0xc66)];
                    },
                    'uTransmissionFactor': function () {
                         const _0x1ef496 = _0x110894;
                         return _0x77a991(_0x54260c[_0x1ef496(0x512)]) && _0x54260c[_0x1ef496(0x512)] > 0x0 ? _0x54260c[_0x1ef496(0x512)] : _0x77a991(_0x5cfd77['_PBRMaterialParams']['pbrMetallicRoughness'][_0x1ef496(0x806)]) && _0x77a991(_0x5cfd77[_0x1ef496(0xb95)][_0x1ef496(0x30c)][_0x1ef496(0x806)][_0x1ef496(0x20d)]) ? _0x5cfd77[_0x1ef496(0xb95)]['pbrMetallicRoughness'][_0x1ef496(0x806)][_0x1ef496(0x20d)] : 0x1;
                    },
                    'uBaseTexture': function () {
                         const _0x24e345 = _0x110894;
                         return _0x77a991(_0x54260c[_0x24e345(0x71c)]) && _0x54260c[_0x24e345(0x71c)] > -0x1 ? _0x54260c['baseColorTexture'] : _0x5cfd77['_PBRMaterialParams'][_0x24e345(0x30c)][_0x24e345(0x8b9)];
                    },
                    'decodePositionMin': function () {
                         const _0x791890 = _0x110894;
                         return _0x1117c8[_0x791890(0xd49)]['minVerticesValue'];
                    },
                    'decodePositionNormConstant': function () {
                         const _0x52ab66 = _0x110894;
                         return _0x1117c8[_0x52ab66(0xd49)][_0x52ab66(0x474)];
                    }
               };
               return _0x110894(0xd4b) == window[_0x110894(0x937)] && (_0x42d5fa[_0x110894(0x4bc)] = function () {
                    const _0x244ff5 = _0x110894;
                    return _0x1117c8[_0x244ff5(0xd49)][_0x244ff5(0x541)][0x0];
               }
                    ,
                    _0x42d5fa[_0x110894(0x31b)] = function () {
                         const _0x1a0249 = _0x110894;
                         return _0x1117c8[_0x1a0249(0xd49)][_0x1a0249(0x541)][0x1];
                    }
                    ,
                    _0x42d5fa['decodeTexCoord0Min'] = function () {
                         const _0x4198dc = _0x110894;
                         return _0x1117c8[_0x4198dc(0xd49)][_0x4198dc(0x302)][0x0];
                    }
               ),
                    _0x42d5fa;
          }
          new Cesium[(_0xc3a123(0x821))](),
               new Cesium[(_0xc3a123(0x821))](),
               _0x3198f4[_0xc3a123(0x2d4)][_0xc3a123(0xd4f)] = function (_0x3b95e3, _0x2cd56d, _0x4fb8ff, _0x43869d, _0x1eafa4) {
                    const _0x2604a9 = _0xc3a123;
                    if (!_0x4fb8ff[_0x2604a9(0x732)] || 0x0 == _0x4fb8ff[_0x2604a9(0x732)][_0x2604a9(0x72b)] || !_0x4fb8ff[_0x2604a9(0x4a9)] || 0x0 === _0x4fb8ff[_0x2604a9(0x4a9)])
                         return null;
                    let _0x47e556, _0x3de0a4, _0x4fef22 = new Cesium[(_0x2604a9(0x2f8))]({
                         'primitiveType': Cesium['PrimitiveType'][_0x2604a9(0x415)],
                         'modelMatrix': this[_0x2604a9(0xbbd)],
                         'boundingVolume': this[_0x2604a9(0x802)],
                         'pass': Cesium[_0x2604a9(0xd8a)]['CESIUM_3D_TILE'],
                         'owner': this,
                         'cull': !0x0
                    });
                    this[_0x2604a9(0xcab)] = new Cesium[(_0x2604a9(0x8e5))]({
                         'context': _0x3b95e3,
                         'attributes': _0x4fb8ff[_0x2604a9(0x732)],
                         'indexBuffer': _0x43869d
                    }),
                         _0x4fef22['vertexArray'] = this[_0x2604a9(0xcab)],
                         _0x4fef22[_0x2604a9(0x4a9)] = _0x4fb8ff[_0x2604a9(0x4a9)],
                         _0x47e556 = new Cesium[(_0x2604a9(0x62f))]({
                              'sources': [_0x1a748c]
                         }),
                         _0x3de0a4 = new Cesium[(_0x2604a9(0x62f))]({
                              'sources': [_0x1d7c4b]
                         }),
                         _0x1eafa4 || (_0x47e556['defines'][_0x2604a9(0x63e)](_0x2604a9(0x3a9)),
                              _0x3de0a4[_0x2604a9(0x340)][_0x2604a9(0x63e)](_0x2604a9(0x3a9))),
                         _0x47e556[_0x2604a9(0x340)][_0x2604a9(0x63e)]('ANTIALIASING'),
                         _0x3de0a4[_0x2604a9(0x340)][_0x2604a9(0x63e)](_0x2604a9(0x2fb)),
                         _0x47e556[_0x2604a9(0x340)]['push'](_0x2604a9(0xabb)),
                         _0x3de0a4[_0x2604a9(0x340)][_0x2604a9(0x63e)](_0x2604a9(0xabb)),
                         _0x2cd56d[_0x2604a9(0x6ea)] && _0x3de0a4[_0x2604a9(0x340)]['push'](ProgramDefines[_0x2604a9(0x607)]),
                         _0x2cd56d[_0x2604a9(0x7f9)] && _0x3de0a4['defines'][_0x2604a9(0x63e)]('CLIP'),
                         _0x2cd56d['_enableClipPlane'] && _0x3de0a4[_0x2604a9(0x340)][_0x2604a9(0x63e)](_0x2604a9(0x9a5)),
                         (_0x47e556[_0x2604a9(0x340)][_0x2604a9(0x63e)](_0x2604a9(0x6db)),
                              _0x3de0a4[_0x2604a9(0x340)][_0x2604a9(0x63e)](_0x2604a9(0x6db)),
                              this['edgeSP'] = Cesium['ShaderProgram'][_0x2604a9(0x6d8)]({
                                   'context': _0x3b95e3,
                                   'vertexShaderSource': _0x47e556,
                                   'fragmentShaderSource': _0x3de0a4,
                                   'attributeLocations': _0x4fb8ff[_0x2604a9(0x273)]
                              }),
                              _0x4fef22['shaderProgram'] = this[_0x2604a9(0x69b)],
                              _0x4fef22[_0x2604a9(0x54e)] = Cesium['RenderState'][_0x2604a9(0x6d8)]({
                                   'depthTest': {
                                        'enabled': !0x0,
                                        'func': Cesium['DepthFunction'][_0x2604a9(0x3c2)]
                                   },
                                   'cull': {
                                        'enabled': !0x0
                                   },
                                   'blending': Cesium[_0x2604a9(0x75d)][_0x2604a9(0x276)]
                              }));
                    let _0x57a76f = {
                         'uLineColor': function () {
                              const _0x1fe226 = _0x2604a9;
                              return _0x2cd56d[_0x1fe226(0xd55)][_0x1fe226(0x60a)];
                         },
                         'uLineWidth': function () {
                              return _0x2cd56d['style3D']['lineWidth'];
                         },
                         'uDistanceFalloffFactor': function () {
                              const _0x5d3b99 = _0x2604a9;
                              return _0x2cd56d[_0x5d3b99(0x3a6)];
                         },
                         'u_polygonOffset': function () {
                              const _0x194014 = _0x2604a9;
                              return new Cesium[(_0x194014(0x1b7))](-0x5, -0x5);
                         }
                    };
                    return _0x4fef22[_0x2604a9(0x7b8)] = Cesium[_0x2604a9(0xd74)](_0x57a76f, this[_0x2604a9(0x486)][_0x2604a9(0x7b8)]),
                         _0x4fef22[_0x2604a9(0x8e2)] = _0x4fb8ff[_0x2604a9(0x23e)],
                         _0x4fef22['edgeCount'] = _0x4fb8ff[_0x2604a9(0x4a9)],
                         _0x4fef22;
               }
               ,
               _0x3198f4['prototype'][_0xc3a123(0x71f)] = function () {
                    const _0x5d6cf6 = _0xc3a123;
                    if (Cesium[_0x5d6cf6(0x336)](this[_0x5d6cf6(0x486)]) || 0x0 !== this[_0x5d6cf6(0x445)][_0x5d6cf6(0x72b)] || 0x0 !== this[_0x5d6cf6(0x62a)]['length'] || 0x0 !== this[_0x5d6cf6(0x759)][_0x5d6cf6(0x72b)])
                         return;
                    let _0x416e81 = this[_0x5d6cf6(0x9c9)]
                         , _0x2ccade = _0x416e81[_0x5d6cf6(0x878)]
                         , _0x2b8857 = this[_0x5d6cf6(0xd49)]
                         , _0x5751a4 = this[_0x5d6cf6(0x47d)]
                         , _0xd509fa = _0x2b8857[_0x5d6cf6(0x761)];
                    if (_0x5751a4[_0x5d6cf6(0x72b)] < 0x1)
                         return;
                    let _0x53f7d0 = _0x5751a4[0x0]
                         , _0x2d622f = this[_0x5d6cf6(0x1c0)];
                    this[_0x5d6cf6(0x896)] = new Cesium['VertexArray']({
                         'context': _0x2ccade,
                         'attributes': _0xd509fa,
                         'indexBuffer': _0x53f7d0['indexBuffer']
                    });
                    let _0x3ab1d4 = Cesium[_0x5d6cf6(0xa6c)][_0x5d6cf6(0x415)];
                    switch (_0x53f7d0['primitiveType']) {
                         case 0x1:
                              _0x3ab1d4 = Cesium[_0x5d6cf6(0xa6c)][_0x5d6cf6(0x8ae)];
                              break;
                         case 0x2:
                              _0x3ab1d4 = Cesium[_0x5d6cf6(0xa6c)][_0x5d6cf6(0x1e2)];
                              break;
                         case 0x4:
                              _0x3ab1d4 = Cesium['PrimitiveType'][_0x5d6cf6(0x415)];
                    }
                    this[_0x5d6cf6(0x73d)] = _0x3ab1d4 === Cesium['PrimitiveType'][_0x5d6cf6(0x1e2)];
                    let _0x5fd14a = !0x1;
                    (_0x2d622f['alphaMode'] === _0x1401a3['MASK'] || _0x2d622f[_0x5d6cf6(0x40d)] === _0x1401a3[_0x5d6cf6(0xcd7)] || _0x416e81['_isTransparencyOptimization'] && _0x2d622f[_0x5d6cf6(0x9c6)]) && (_0x5fd14a = !0x0),
                         this['colorCommand'] = new Cesium[(_0x5d6cf6(0x2f8))]({
                              'primitiveType': _0x3ab1d4,
                              'modelMatrix': this[_0x5d6cf6(0xbbd)],
                              'boundingVolume': Cesium[_0x5d6cf6(0xc1c)][_0x5d6cf6(0x432)](this[_0x5d6cf6(0x802)]),
                              'pickId': this[_0x5d6cf6(0x948)],
                              'vertexArray': this[_0x5d6cf6(0x896)],
                              'shaderProgram': this[_0x5d6cf6(0x940)],
                              'pass': _0x5fd14a ? Cesium['Pass']['TRANSLUCENT'] : Cesium[_0x5d6cf6(0xd8a)][_0x5d6cf6(0xb60)],
                              'renderState': _0x2d622f['bTransparentSorting'] ? _0xf4df00() : _0x45d733(),
                              'instanceCount': _0x2b8857['instanceCount']
                         });
                    let _0x5a1361 = _0x25b577(_0x2d622f, _0x416e81, this);
                    this[_0x5d6cf6(0xd98)] && (_0x5a1361 = this[_0x5d6cf6(0xd98)][_0x5d6cf6(0xda6)]()(_0x5a1361)),
                         _0x2d622f[_0x5d6cf6(0xd98)] && (_0x5a1361 = _0x2d622f[_0x5d6cf6(0xd98)]['getUniformMapCallback']()(_0x5a1361)),
                         this[_0x5d6cf6(0x486)][_0x5d6cf6(0x7b8)] = _0x5a1361,
                         this['vs'] = void 0x0,
                         this['fs'] = void 0x0,
                         this[_0x5d6cf6(0x3b8)] = !0x0;
               }
               ,
               _0x3198f4[_0xc3a123(0x2d4)]['createWireFrame'] = function (_0x29642c) {
                    const _0x4a3962 = _0xc3a123;
                    if (!this[_0x4a3962(0x486)] || !this[_0x4a3962(0x1fb)] || this['regularEdgeCommand'])
                         return;
                    let _0x406462 = this[_0x4a3962(0x9c9)][_0x4a3962(0x878)]
                         , _0x41a9f3 = this[_0x4a3962(0x1fb)];
                    _0x1d0b86[_0x4a3962(0x411)](_0x406462, _0x41a9f3[_0x4a3962(0xc7d)]),
                         _0x1d0b86[_0x4a3962(0x33b)](_0x406462, _0x41a9f3[_0x4a3962(0xbad)]);
                    let _0x5e88be = _0x1d0b86[_0x4a3962(0x8c0)](_0x406462);
                    this['regularEdgeCommand'] = this['createOneEdgeCommand'](_0x406462, this[_0x4a3962(0x9c9)], _0x41a9f3[_0x4a3962(0xc7d)], _0x5e88be, !0x0),
                         this[_0x4a3962(0xb4b)] = this[_0x4a3962(0xd4f)](_0x406462, this[_0x4a3962(0x9c9)], _0x41a9f3['silhouette'], _0x5e88be, !0x1);
               }
               ;
          let _0x510550 = new _0x219e8e();
          _0x3198f4[_0xc3a123(0x2d4)][_0xc3a123(0x6f4)] = function (_0x4eb6d4) {
               const _0x1ca877 = _0xc3a123;
               this[_0x1ca877(0x1c0)][_0x1ca877(0xad3)](),
                    this[_0x1ca877(0x1c0)][_0x1ca877(0x589)](_0x4eb6d4, this['layer']);
               let _0x29be5a = this['material'][_0x1ca877(0x966)];
               for (; _0x29be5a[_0x1ca877(0x72b)];) {
                    let _0x1bb714 = _0x29be5a[_0x1ca877(0xb73)]()
                         , _0x2316da = _0x1bb714['texture']
                         , _0x4a6338 = _0x1bb714[_0x1ca877(0x2ba)];
                    if (_0x510550['set'](_0x4eb6d4[_0x1ca877(0x878)], this, _0x2316da, _0x4a6338),
                         !_0x4eb6d4[_0x1ca877(0xa10)][_0x1ca877(0x32c)](_0x510550, Cesium['JobType'][_0x1ca877(0xa87)]))
                         break;
                    _0x29be5a[_0x1ca877(0xaaa)]();
               }
               0x0 === _0x29be5a[_0x1ca877(0x72b)] && this[_0x1ca877(0x1c0)][_0x1ca877(0x8db)](),
                    this[_0x1ca877(0x1c0)]['batchTable']['update'](_0x4eb6d4);
          }
               ,
               _0x3198f4[_0xc3a123(0x2d4)]['update'] = function (_0x30a885, _0x5d53b8) {
                    const _0x2270f4 = _0xc3a123;
                    if (!this[_0x2270f4(0x3b8)])
                         return this[_0x2270f4(0x7f2)](_0x30a885),
                              this['createPickIds'](),
                              this[_0x2270f4(0xb72)](_0x30a885),
                              this[_0x2270f4(0x391)](_0x30a885),
                              this[_0x2270f4(0x71f)](_0x30a885),
                              this[_0x2270f4(0x45f)](_0x30a885),
                              void this[_0x2270f4(0xb31)](_0x5d53b8);
                    this[_0x2270f4(0x47f)] && (this[_0x2270f4(0xa02)](),
                         this[_0x2270f4(0x47f)] = !0x1),
                         this[_0x2270f4(0xd98)] && this[_0x2270f4(0xd98)][_0x2270f4(0x2dc)](_0x30a885),
                         this[_0x2270f4(0x1c0)][_0x2270f4(0xd98)] && this['updateMaterialBatchTable'](_0x30a885),
                         _0x5d53b8['style3D'][_0x2270f4(0x88b)] !== _0x26f6a9['WireFrame'] && _0x30a885[_0x2270f4(0x7c3)]['push'](this['colorCommand']),
                         _0x5d53b8[_0x2270f4(0xd55)]['fillStyle'] !== _0x26f6a9['Fill'] && (this[_0x2270f4(0x410)] && (_0x30a885['commandList'][_0x2270f4(0x63e)](this['regularEdgeCommand']),
                              _0x5d53b8[_0x2270f4(0x1e1)](this[_0x2270f4(0x410)][_0x2270f4(0x8e2)], this[_0x2270f4(0x410)][_0x2270f4(0x5d0)])),
                              this[_0x2270f4(0xb4b)] && (_0x30a885[_0x2270f4(0x7c3)][_0x2270f4(0x63e)](this[_0x2270f4(0xb4b)]),
                                   _0x5d53b8[_0x2270f4(0x1e1)](this[_0x2270f4(0xb4b)][_0x2270f4(0x8e2)], this['silhouetteEdgeCommand'][_0x2270f4(0x5d0)])));
               }
               ,
               _0x3198f4[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x3198f4[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x103035 = _0xc3a123;
                    return this['shaderProgram'] = this[_0x103035(0x940)] && !this['shaderProgram'][_0x103035(0x567)]() && this['shaderProgram'][_0x103035(0x9bb)](),
                         this[_0x103035(0x896)] = this[_0x103035(0x896)] && !this[_0x103035(0x896)][_0x103035(0x567)]() && this[_0x103035(0x896)][_0x103035(0x9bb)](),
                         this[_0x103035(0x1c0)] = this['material'] && !this['material']['isDestroyed']() && this[_0x103035(0x1c0)][_0x103035(0x9bb)](),
                         this[_0x103035(0xd98)] = this['batchTable'] && !this[_0x103035(0xd98)][_0x103035(0x567)]() && this[_0x103035(0xd98)][_0x103035(0x9bb)](),
                         this[_0x103035(0xcab)] = this[_0x103035(0xcab)] && !this[_0x103035(0xcab)][_0x103035(0x567)]() && this[_0x103035(0xcab)]['destroy'](),
                         this[_0x103035(0x69b)] = this[_0x103035(0x69b)] && !this[_0x103035(0x69b)]['isDestroyed']() && this['edgeSP'][_0x103035(0x9bb)](),
                         this[_0x103035(0x486)] = void 0x0,
                         this[_0x103035(0xd49)] = null,
                         this['arrIndexPackage'] = null,
                         this[_0x103035(0xbbd)] = void 0x0,
                         this['pickInfo'] = void 0x0,
                         this[_0x103035(0xd6a)] = void 0x0,
                         this['vs'] = void 0x0,
                         this['fs'] = void 0x0,
                         Cesium[_0x103035(0x8e1)](this);
               }
               ;
          var _0x5a1e49 = _0xc3a123(0x45e)
               , _0x68f99b = _0xc3a123(0x851);
          function _0x30548f(_0x3b6c06) {
               const _0x90ac3f = _0xc3a123;
               _0x56d276[_0x90ac3f(0x3fa)](this, _0x3b6c06),
                    this['vs'] = _0x5a1e49,
                    this['fs'] = _0x68f99b;
          }
          function _0x252b30() {
               const _0x33bfd5 = _0xc3a123;
               return Cesium[_0x33bfd5(0x259)][_0x33bfd5(0x6d8)]({
                    'cull': {
                         'enabled': !0x0
                    },
                    'depthTest': {
                         'enabled': !0x0,
                         'func': Cesium[_0x33bfd5(0x98b)]['LESS_OR_EQUAL']
                    }
               });
          }
          _0x30548f[_0xc3a123(0x2d4)] = Object[_0xc3a123(0x7e5)](_0x56d276[_0xc3a123(0x2d4)]),
               _0x30548f[_0xc3a123(0x2d4)]['constructor'] = _0x56d276;
          let _0x1057f3 = new Cesium['Cartesian4']()
               , _0x18f9cf = new Cesium[(_0xc3a123(0xce9))]()
               , _0x31c069 = new Cesium[(_0xc3a123(0xce9))]();
          function _0x456714(_0x5abc02, _0x1c1d65) {
               const _0x283232 = _0xc3a123;
               let _0x24acf7 = _0x1c1d65[_0x283232(0xd49)]
                    , _0x5a5f11 = {
                         'uGeoMatrix': function () {
                              return _0x1c1d65['geoMatrix'];
                         },
                         'uInverseGeoMatrix': function () {
                              const _0x1e0ba3 = _0x283232;
                              return _0x1c1d65[_0x1e0ba3(0x8b7)];
                         },
                         'uClipMode': function () {
                              return _0x5abc02['_clipMode'];
                         },
                         'uClipPlanes': function () {
                              const _0x11f57b = _0x283232;
                              return _0x5abc02[_0x11f57b(0x678)];
                         },
                         'uUseWValue': function () {
                              return _0x1c1d65['useWValue'];
                         },
                         'uHypsometricTexture': function () {
                              const _0x540338 = _0x283232;
                              return _0x5abc02[_0x540338(0x371)][_0x540338(0x350)];
                         },
                         'uHypLineColor': function () {
                              const _0x58b117 = _0x283232;
                              return _0x5abc02[_0x58b117(0x371)][_0x58b117(0x561)][_0x58b117(0xb61)];
                         },
                         'uNoValueColor': function () {
                              const _0x1299c0 = _0x283232;
                              return _0x5abc02[_0x1299c0(0x371)]['setting'][_0x1299c0(0x66d)];
                         },
                         'uMinMaxValue': function () {
                              const _0x1dd1a0 = _0x283232;
                              let _0x2d66d6 = _0x5abc02[_0x1dd1a0(0x371)][_0x1dd1a0(0x561)];
                              return _0x1057f3['x'] = _0x2d66d6[_0x1dd1a0(0x993)],
                                   _0x1057f3['y'] = _0x2d66d6[_0x1dd1a0(0x1e9)],
                                   _0x1057f3['z'] = _0x2d66d6[_0x1dd1a0(0x35d)],
                                   _0x1057f3['w'] = _0x2d66d6[_0x1dd1a0(0xc25)],
                                   _0x1057f3;
                         },
                         'uOpacityIntervalFillMode': function () {
                              const _0x43595b = _0x283232;
                              let _0x25853b = _0x5abc02[_0x43595b(0x371)]['setting'];
                              return _0x18f9cf['x'] = _0x25853b[_0x43595b(0x6a0)],
                                   _0x18f9cf['y'] = _0x25853b['LineInterval'],
                                   _0x18f9cf['z'] = _0x25853b[_0x43595b(0xc34)],
                                   _0x18f9cf;
                         },
                         'uSwipeRegion': function () {
                              const _0xe23882 = _0x283232
                                   , _0x4b0973 = _0x5abc02['context'];
                              return _0x31c069['x'] = _0x5abc02[_0xe23882(0x7c8)]['x'] * _0x4b0973[_0xe23882(0x4a4)],
                                   _0x31c069['y'] = (0x1 - _0x5abc02[_0xe23882(0x7c8)]['y']) * _0x4b0973[_0xe23882(0x6ab)],
                                   _0x31c069['z'] = _0x5abc02[_0xe23882(0x7c8)]['z'] * _0x4b0973[_0xe23882(0x4a4)],
                                   _0x31c069['w'] = (0x1 - _0x5abc02[_0xe23882(0x7c8)]['w']) * _0x4b0973[_0xe23882(0x6ab)],
                                   _0x31c069;
                         },
                         'uBottom': function () {
                              const _0x2a5875 = _0x283232;
                              return _0x5abc02[_0x2a5875(0xd55)][_0x2a5875(0x4aa)];
                         },
                         'uFillForeColor': function () {
                              const _0x585233 = _0x283232;
                              return _0x5abc02[_0x585233(0xd55)][_0x585233(0x3de)];
                         },
                         'uPointCloudSize': function () {
                              const _0x23ce95 = _0x283232;
                              return _0x5abc02[_0x23ce95(0xd55)][_0x23ce95(0x403)];
                         }
                    }
                    , _0x5e75df = _0x24acf7[_0x283232(0x408)];
               return (_0x5e75df & _0x38a067['SVC_Vertex']) === _0x38a067['SVC_Vertex'] && (_0x5a5f11[_0x283232(0x2fd)] = function () {
                    const _0x4fc9db = _0x283232;
                    return _0x24acf7[_0x4fc9db(0x472)];
               }
                    ,
                    _0x5a5f11[_0x283232(0xae1)] = function () {
                         const _0x111fea = _0x283232;
                         return _0x24acf7[_0x111fea(0x474)];
                    }
               ),
                    (_0x5e75df & _0x38a067[_0x283232(0xa26)]) === _0x38a067[_0x283232(0xa26)] && (_0x5a5f11[_0x283232(0x4a1)] = function () {
                         const _0x58a144 = _0x283232;
                         return _0x24acf7[_0x58a144(0x7a3)];
                    }
                    ),
                    (_0x5e75df & _0x38a067[_0x283232(0x7d9)]) === _0x38a067['SVC_TexutreCoord'] && (_0x24acf7['texCoordCompressConstant'][_0x283232(0x72b)] > 0x0 && (_0x5a5f11[_0x283232(0x1c6)] = function () {
                         const _0x18a9a2 = _0x283232;
                         return _0x24acf7[_0x18a9a2(0x302)][0x0];
                    }
                         ,
                         _0x5a5f11['decode_texCoord0_normConstant'] = function () {
                              return _0x24acf7['texCoordCompressConstant'][0x0];
                         }
                    ),
                         _0x24acf7[_0x283232(0x541)][_0x283232(0x72b)] > 0x1 && (_0x5a5f11[_0x283232(0xa4d)] = function () {
                              const _0x5d2e05 = _0x283232;
                              return _0x24acf7[_0x5d2e05(0x302)][0x1];
                         }
                              ,
                              _0x5a5f11['decode_texCoord1_normConstant'] = function () {
                                   return _0x24acf7['texCoordCompressConstant'][0x1];
                              }
                         ),
                         _0x24acf7[_0x283232(0x541)]['length'] > 0x2 && (_0x5a5f11[_0x283232(0xa1b)] = function () {
                              return _0x24acf7['minTexCoordValue'][0x2];
                         }
                              ,
                              _0x5a5f11[_0x283232(0xd30)] = function () {
                                   const _0x39ea73 = _0x283232;
                                   return _0x24acf7[_0x39ea73(0x541)][0x2];
                              }
                         ),
                         _0x24acf7[_0x283232(0x541)][_0x283232(0x72b)] > 0x3 && (_0x5a5f11['decode_texCoord3_min'] = function () {
                              const _0x56a110 = _0x283232;
                              return _0x24acf7[_0x56a110(0x302)][0x3];
                         }
                              ,
                              _0x5a5f11[_0x283232(0x324)] = function () {
                                   const _0x4759b2 = _0x283232;
                                   return _0x24acf7[_0x4759b2(0x541)][0x3];
                              }
                         ),
                         _0x24acf7['texCoordCompressConstant'][_0x283232(0x72b)] > 0x4 && (_0x5a5f11['decode_texCoord4_min'] = function () {
                              const _0x20dcc3 = _0x283232;
                              return _0x24acf7[_0x20dcc3(0x302)][0x4];
                         }
                              ,
                              _0x5a5f11[_0x283232(0x530)] = function () {
                                   const _0x456838 = _0x283232;
                                   return _0x24acf7[_0x456838(0x541)][0x4];
                              }
                         ),
                         _0x24acf7['texCoordCompressConstant'][_0x283232(0x72b)] > 0x5 && (_0x5a5f11[_0x283232(0x344)] = function () {
                              const _0x10f5e9 = _0x283232;
                              return _0x24acf7[_0x10f5e9(0x302)][0x5];
                         }
                              ,
                              _0x5a5f11[_0x283232(0x515)] = function () {
                                   const _0x5f0ce = _0x283232;
                                   return _0x24acf7[_0x5f0ce(0x541)][0x5];
                              }
                         ),
                         _0x24acf7[_0x283232(0x541)][_0x283232(0x72b)] > 0x6 && (_0x5a5f11[_0x283232(0x4bb)] = function () {
                              const _0x44af1a = _0x283232;
                              return _0x24acf7[_0x44af1a(0x302)][0x6];
                         }
                              ,
                              _0x5a5f11[_0x283232(0xa5f)] = function () {
                                   const _0x4ff8e7 = _0x283232;
                                   return _0x24acf7[_0x4ff8e7(0x541)][0x6];
                              }
                         ),
                         _0x24acf7[_0x283232(0x541)][_0x283232(0x72b)] > 0x7 && (_0x5a5f11['decode_texCoord7_min'] = function () {
                              return _0x24acf7['minTexCoordValue'][0x7];
                         }
                              ,
                              _0x5a5f11['decode_texCoord7_normConstant'] = function () {
                                   return _0x24acf7['texCoordCompressConstant'][0x7];
                              }
                         )),
                    _0x5a5f11;
          }
          _0x30548f[_0xc3a123(0x2d4)][_0xc3a123(0x71f)] = function () {
               const _0x2b26be = _0xc3a123;
               if (Cesium[_0x2b26be(0x336)](this[_0x2b26be(0x486)]) || 0x0 !== this['vertexBufferToCreate'][_0x2b26be(0x72b)] || 0x0 !== this[_0x2b26be(0x62a)][_0x2b26be(0x72b)] || 0x0 !== this[_0x2b26be(0x759)][_0x2b26be(0x72b)])
                    return;
               let _0x494fd8 = this[_0x2b26be(0x9c9)]
                    , _0x47914d = _0x494fd8[_0x2b26be(0x878)]
                    , _0x477a81 = this[_0x2b26be(0xd49)];
               this[_0x2b26be(0x47d)];
               let _0x522e9d = _0x477a81['vertexAttributes'];
               this[_0x2b26be(0x896)] = new Cesium['VertexArray']({
                    'context': _0x47914d,
                    'attributes': _0x522e9d
               }),
                    this['colorCommand'] = new Cesium['DrawCommand']({
                         'primitiveType': Cesium[_0x2b26be(0xa6c)][_0x2b26be(0x8ae)],
                         'modelMatrix': this[_0x2b26be(0xbbd)],
                         'boundingVolume': Cesium[_0x2b26be(0xc1c)]['clone'](this['boundingVolume']),
                         'vertexArray': this['vertexArray'],
                         'shaderProgram': this[_0x2b26be(0x940)],
                         'pass': Cesium[_0x2b26be(0xd8a)][_0x2b26be(0xb60)],
                         'renderState': _0x252b30(),
                         'count': _0x477a81['verticesCount']
                    }),
                    this[_0x2b26be(0x486)][_0x2b26be(0x7b8)] = _0x456714(_0x494fd8, this),
                    this[_0x2b26be(0xd49)] = void 0x0,
                    this['arrIndexPackage'] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    this[_0x2b26be(0x3b8)] = !0x0;
          }
               ,
               _0x30548f[_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x83eab0, _0x1a9476) {
                    const _0x335773 = _0xc3a123;
                    if (!this['ready'])
                         return this[_0x335773(0xb72)](_0x83eab0),
                              this[_0x335773(0x391)](_0x83eab0),
                              void this['createCommand'](_0x83eab0);
                    _0x83eab0[_0x335773(0x7c3)][_0x335773(0x63e)](this[_0x335773(0x486)]);
               }
               ,
               _0x30548f[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x30548f[_0xc3a123(0x2d4)]['destroy'] = function () {
                    const _0x5a1b8d = _0xc3a123;
                    return this[_0x5a1b8d(0x940)] = this[_0x5a1b8d(0x940)] && !this[_0x5a1b8d(0x940)][_0x5a1b8d(0x567)]() && this[_0x5a1b8d(0x940)][_0x5a1b8d(0x9bb)](),
                         this[_0x5a1b8d(0x896)] = this[_0x5a1b8d(0x896)] && !this[_0x5a1b8d(0x896)][_0x5a1b8d(0x567)]() && this['vertexArray'][_0x5a1b8d(0x9bb)](),
                         this['material'] = this[_0x5a1b8d(0x1c0)] && !this[_0x5a1b8d(0x1c0)][_0x5a1b8d(0x567)]() && this[_0x5a1b8d(0x1c0)][_0x5a1b8d(0x9bb)](),
                         this['colorCommand'] = void 0x0,
                         this[_0x5a1b8d(0xd49)] = null,
                         this['arrIndexPackage'] = null,
                         this[_0x5a1b8d(0xbbd)] = void 0x0,
                         this['vs'] = void 0x0,
                         this['fs'] = void 0x0,
                         Cesium['destroyObject'](this);
               }
               ;
          var _0xc2ea4f = _0xc3a123(0x9c4)
               , _0x453484 = _0xc3a123(0x392);
          function _0x116cf7(_0x4b04d0) {
               const _0x2bd310 = _0xc3a123;
               _0x56d276['call'](this, _0x4b04d0),
                    this['vs'] = _0xc2ea4f,
                    this['fs'] = _0x453484,
                    this[_0x2bd310(0x8bd)] = -0x1,
                    this[_0x2bd310(0x70f)] = 0x0;
          }
          function _0xcb57b5() {
               const _0x345c91 = _0xc3a123;
               return Cesium[_0x345c91(0x259)]['fromCache']({
                    'cull': {
                         'enabled': !0x0
                    },
                    'depthTest': {
                         'enabled': !0x0,
                         'func': Cesium[_0x345c91(0x98b)]['LESS_OR_EQUAL']
                    },
                    'blending': Cesium[_0x345c91(0x75d)][_0x345c91(0x276)]
               });
          }
          _0x116cf7[_0xc3a123(0x2d4)] = Object[_0xc3a123(0x7e5)](_0x56d276[_0xc3a123(0x2d4)]),
               _0x116cf7[_0xc3a123(0x2d4)][_0xc3a123(0xcc8)] = _0x56d276;
          let _0x14b43c = new Cesium[(_0xc3a123(0xce9))]();
          function _0x1acb8b(_0xcd369c, _0x5206d7, _0x39b2e4) {
               return {
                    'uGeoMatrix': function () {
                         return _0x39b2e4['geoMatrix'];
                    },
                    'uFillForeColor': function () {
                         const _0x59f105 = _0x5e91;
                         return _0x5206d7[_0x59f105(0xd55)][_0x59f105(0x3de)];
                    },
                    'uSelectedColor': function () {
                         const _0x117f73 = _0x5e91;
                         return _0x5206d7[_0x117f73(0xaa7)];
                    },
                    'uClipMode': function () {
                         const _0x20945a = _0x5e91;
                         return _0x5206d7[_0x20945a(0x247)];
                    },
                    'uClipPlanes': function () {
                         const _0x513bc6 = _0x5e91;
                         return _0x5206d7[_0x513bc6(0x678)];
                    },
                    'uSwipeRegion': function () {
                         const _0x3c7da7 = _0x5e91
                              , _0x130ebd = _0x5206d7[_0x3c7da7(0x878)];
                         return _0x14b43c['x'] = _0x5206d7[_0x3c7da7(0x7c8)]['x'] * _0x130ebd[_0x3c7da7(0x4a4)],
                              _0x14b43c['y'] = (0x1 - _0x5206d7[_0x3c7da7(0x7c8)]['y']) * _0x130ebd[_0x3c7da7(0x6ab)],
                              _0x14b43c['z'] = _0x5206d7['_swipeRegion']['z'] * _0x130ebd[_0x3c7da7(0x4a4)],
                              _0x14b43c['w'] = (0x1 - _0x5206d7[_0x3c7da7(0x7c8)]['w']) * _0x130ebd['drawingBufferHeight'],
                              _0x14b43c;
                    },
                    'uReflectMap': function () {
                         const _0x5b5599 = _0x5e91;
                         let _0x26db27 = _0x5206d7[_0x5b5599(0x878)][_0x5b5599(0xd1d)] && _0x5206d7['context']['reflectFramebuffer']['sceneFramebuffer'] && _0x5206d7[_0x5b5599(0x878)]['reflectFramebuffer'][_0x5b5599(0x6fb)][_0x5b5599(0xbe6)]();
                         return _0x26db27 ? _0x26db27['getColorTexture'](0x0) : _0x5206d7['context'][_0x5b5599(0x6b7)];
                    },
                    'uNoiseMap': function () {
                         const _0x3905cc = _0x5e91;
                         return _0x5206d7[_0x3905cc(0x878)][_0x3905cc(0x6b7)];
                    },
                    'uTimeVal': function () {
                         const _0x14a43f = _0x5e91;
                         let _0x1e90a7 = 0.01 * _0x5206d7[_0x14a43f(0xc56)][_0x14a43f(0xb15)];
                         return _0x39b2e4[_0x14a43f(0x70f)] = _0x39b2e4[_0x14a43f(0x70f)] > 0x1 ? _0x1e90a7 : _0x39b2e4[_0x14a43f(0x70f)] + _0x1e90a7,
                              _0x39b2e4['waterTime'];
                    },
                    'uScale': function () {
                         const _0x4a883f = _0x5e91;
                         return _0x5206d7[_0x4a883f(0xc56)][_0x4a883f(0x909)];
                    },
                    'uScroll': function () {
                         const _0x488bd7 = _0x5e91;
                         return _0x5206d7['_waterParameters'][_0x488bd7(0xc67)];
                    },
                    'uNoise': function () {
                         const _0x4add29 = _0x5e91;
                         return _0x5206d7['_waterParameters'][_0x4add29(0x7e2)];
                    },
                    'uBumpSpeed': function () {
                         return _0x5206d7['_waterParameters']['bumpSpeed'];
                    },
                    'uFresnelPower': function () {
                         const _0x2f7898 = _0x5e91;
                         return _0x5206d7['_waterParameters'][_0x2f7898(0xb40)];
                    },
                    'uMinFresnel': function () {
                         const _0x335001 = _0x5e91;
                         return _0x5206d7[_0x335001(0xc56)][_0x335001(0x953)];
                    },
                    'uMaxFresnel': function () {
                         const _0xe0be94 = _0x5e91;
                         return _0x5206d7['_waterParameters'][_0xe0be94(0x5e0)];
                    },
                    'uTintColour': function () {
                         const _0x1a2d02 = _0x5e91;
                         return _0x5206d7['_waterParameters'][_0x1a2d02(0xcd0)];
                    },
                    'uNoiseScale': function () {
                         const _0x5656b4 = _0x5e91;
                         return _0x5206d7['_waterParameters'][_0x5656b4(0xca8)];
                    },
                    'uWaterColour': function () {
                         const _0x417bc5 = _0x5e91;
                         return _0x5206d7[_0x417bc5(0xc56)]['waterColour'];
                    },
                    'uWaterBrightness': function () {
                         const _0x23a708 = _0x5e91;
                         return _0x5206d7[_0x23a708(0xc56)][_0x23a708(0xdad)];
                    }
               };
          }
          function _0x1f244b(_0x56b9f9, _0x3d03d3) {
               const _0x1b3034 = _0xc3a123;
               let _0x182334 = {
                    'boundingVolume': _0x56b9f9['boundingVolume'],
                    'distance': _0x3d03d3[_0x1b3034(0xd55)][_0x1b3034(0x4aa)] + _0x3d03d3[_0x1b3034(0xc56)][_0x1b3034(0x96e)]
               };
               _0x56b9f9['waterIndex'] = _0x3d03d3[_0x1b3034(0xa71)](_0x182334);
          }
          _0x116cf7[_0xc3a123(0x2d4)][_0xc3a123(0x71f)] = function () {
               const _0x42f43b = _0xc3a123;
               if (Cesium[_0x42f43b(0x336)](this[_0x42f43b(0x486)]) || 0x0 !== this[_0x42f43b(0x445)][_0x42f43b(0x72b)] || 0x0 !== this['indexBufferToCreate'][_0x42f43b(0x72b)] || 0x0 !== this[_0x42f43b(0x759)][_0x42f43b(0x72b)])
                    return;
               let _0x489734 = this[_0x42f43b(0x9c9)]
                    , _0x54d196 = _0x489734[_0x42f43b(0x878)]
                    , _0x251df9 = this['vertexPackage']
                    , _0x30e358 = this[_0x42f43b(0x47d)]
                    , _0x55710d = _0x251df9[_0x42f43b(0x761)];
               if (_0x30e358[_0x42f43b(0x72b)] < 0x1)
                    return;
               let _0x1bbd3a = _0x30e358[0x0]
                    , _0x15a693 = this[_0x42f43b(0x1c0)];
               this[_0x42f43b(0x896)] = new Cesium[(_0x42f43b(0x8e5))]({
                    'context': _0x54d196,
                    'attributes': _0x55710d,
                    'indexBuffer': _0x1bbd3a[_0x42f43b(0xcf3)]
               }),
                    this[_0x42f43b(0x486)] = new Cesium[(_0x42f43b(0x2f8))]({
                         'primitiveType': _0x1bbd3a[_0x42f43b(0xba3)],
                         'modelMatrix': this['modelMatrix'],
                         'boundingVolume': Cesium[_0x42f43b(0xc1c)]['clone'](this['boundingVolume']),
                         'vertexArray': this['vertexArray'],
                         'shaderProgram': this[_0x42f43b(0x940)],
                         'pass': _0x15a693[_0x42f43b(0x9c6)] ? Cesium[_0x42f43b(0xd8a)]['TRANSLUCENT'] : Cesium['Pass']['CESIUM_3D_TILE'],
                         'renderState': _0x15a693['bTransparentSorting'] ? getTransparentRenderState() : _0xcb57b5(),
                         'instanceCount': _0x251df9[_0x42f43b(0x4a9)]
                    });
               let _0x45e0ca = _0x1acb8b(0x0, _0x489734, this);
               this[_0x42f43b(0x486)][_0x42f43b(0x7b8)] = this[_0x42f43b(0xd98)][_0x42f43b(0xda6)]()(_0x45e0ca),
                    this['vertexPackage'] = void 0x0,
                    this[_0x42f43b(0x47d)] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    this[_0x42f43b(0x3b8)] = !0x0;
          }
               ,
               _0x116cf7[_0xc3a123(0x2d4)]['update'] = function (_0x3960a2, _0x582ac8) {
                    const _0x1e3b59 = _0xc3a123;
                    if (!_0x3960a2['camera']['bReflect']) {
                         if (!this['ready'])
                              return this[_0x1e3b59(0x7f2)](_0x3960a2),
                                   this['createPickIds'](),
                                   this[_0x1e3b59(0xb72)](_0x3960a2),
                                   this['createShaderProgram'](_0x3960a2),
                                   this[_0x1e3b59(0x71f)](_0x3960a2),
                                   this['initLayerSetting'](_0x582ac8),
                                   void _0x1f244b(this, _0x582ac8);
                         this[_0x1e3b59(0x47f)] && (this[_0x1e3b59(0xa02)](),
                              this['batchTableDirty'] = !0x1),
                              this[_0x1e3b59(0xd98)][_0x1e3b59(0x2dc)](_0x3960a2),
                              _0x3960a2['commandList'][_0x1e3b59(0x63e)](this[_0x1e3b59(0x486)]);
                    }
               }
               ,
               _0x116cf7[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x116cf7['prototype']['destroy'] = function () {
                    const _0xcf9fb4 = _0xc3a123;
                    return this['shaderProgram'] = this[_0xcf9fb4(0x940)] && !this[_0xcf9fb4(0x940)][_0xcf9fb4(0x567)]() && this[_0xcf9fb4(0x940)][_0xcf9fb4(0x9bb)](),
                         this['vertexArray'] = this[_0xcf9fb4(0x896)] && !this[_0xcf9fb4(0x896)]['isDestroyed']() && this['vertexArray'][_0xcf9fb4(0x9bb)](),
                         this[_0xcf9fb4(0x1c0)] = this[_0xcf9fb4(0x1c0)] && !this[_0xcf9fb4(0x1c0)][_0xcf9fb4(0x567)]() && this['material'][_0xcf9fb4(0x9bb)](),
                         this[_0xcf9fb4(0xd98)] = this['batchTable'] && !this[_0xcf9fb4(0xd98)]['isDestroyed']() && this[_0xcf9fb4(0xd98)][_0xcf9fb4(0x9bb)](),
                         this['waterIndex'] > -0x1 && this[_0xcf9fb4(0x9c9)][_0xcf9fb4(0x70e)](this[_0xcf9fb4(0x8bd)]),
                         this[_0xcf9fb4(0x486)] = void 0x0,
                         this[_0xcf9fb4(0xd49)] = null,
                         this[_0xcf9fb4(0x47d)] = null,
                         this['modelMatrix'] = void 0x0,
                         this['pickInfo'] = void 0x0,
                         this['selectionInfoMap'] = void 0x0,
                         this['vs'] = void 0x0,
                         this['fs'] = void 0x0,
                         Cesium[_0xcf9fb4(0x8e1)](this);
               }
               ;
          let _0x4bd879 = {
               'OSGBFile': function (_0x588745) {
                    return new _0x3b2fd1(_0x588745);
               },
               'OSGBCacheFile': function (_0x4290a0) {
                    return new _0x3198f4(_0x4290a0);
               },
               'PointCloudFile': function (_0x391f26) {
                    return new _0x30548f(_0x391f26);
               },
               'OSGBCacheFile_Water': function (_0x455f7c) {
                    return new _0x116cf7(_0x455f7c);
               }
          };
          var _0x49f414 = {
               'DEPTH_BUFFER_BIT': 0x100,
               'STENCIL_BUFFER_BIT': 0x400,
               'COLOR_BUFFER_BIT': 0x4000,
               'POINTS': 0x0,
               'LINES': 0x1,
               'LINE_LOOP': 0x2,
               'LINE_STRIP': 0x3,
               'TRIANGLES': 0x4,
               'TRIANGLE_STRIP': 0x5,
               'TRIANGLE_FAN': 0x6,
               'ZERO': 0x0,
               'ONE': 0x1,
               'SRC_COLOR': 0x300,
               'ONE_MINUS_SRC_COLOR': 0x301,
               'SRC_ALPHA': 0x302,
               'ONE_MINUS_SRC_ALPHA': 0x303,
               'DST_ALPHA': 0x304,
               'ONE_MINUS_DST_ALPHA': 0x305,
               'DST_COLOR': 0x306,
               'ONE_MINUS_DST_COLOR': 0x307,
               'SRC_ALPHA_SATURATE': 0x308,
               'FUNC_ADD': 0x8006,
               'BLEND_EQUATION': 0x8009,
               'BLEND_EQUATION_RGB': 0x8009,
               'BLEND_EQUATION_ALPHA': 0x883d,
               'FUNC_SUBTRACT': 0x800a,
               'FUNC_REVERSE_SUBTRACT': 0x800b,
               'BLEND_DST_RGB': 0x80c8,
               'BLEND_SRC_RGB': 0x80c9,
               'BLEND_DST_ALPHA': 0x80ca,
               'BLEND_SRC_ALPHA': 0x80cb,
               'CONSTANT_COLOR': 0x8001,
               'ONE_MINUS_CONSTANT_COLOR': 0x8002,
               'CONSTANT_ALPHA': 0x8003,
               'ONE_MINUS_CONSTANT_ALPHA': 0x8004,
               'BLEND_COLOR': 0x8005,
               'ARRAY_BUFFER': 0x8892,
               'ELEMENT_ARRAY_BUFFER': 0x8893,
               'ARRAY_BUFFER_BINDING': 0x8894,
               'ELEMENT_ARRAY_BUFFER_BINDING': 0x8895,
               'STREAM_DRAW': 0x88e0,
               'STATIC_DRAW': 0x88e4,
               'DYNAMIC_DRAW': 0x88e8,
               'BUFFER_SIZE': 0x8764,
               'BUFFER_USAGE': 0x8765,
               'CURRENT_VERTEX_ATTRIB': 0x8626,
               'FRONT': 0x404,
               'BACK': 0x405,
               'FRONT_AND_BACK': 0x408,
               'CULL_FACE': 0xb44,
               'BLEND': 0xbe2,
               'DITHER': 0xbd0,
               'STENCIL_TEST': 0xb90,
               'DEPTH_TEST': 0xb71,
               'SCISSOR_TEST': 0xc11,
               'POLYGON_OFFSET_FILL': 0x8037,
               'SAMPLE_ALPHA_TO_COVERAGE': 0x809e,
               'SAMPLE_COVERAGE': 0x80a0,
               'NO_ERROR': 0x0,
               'INVALID_ENUM': 0x500,
               'INVALID_VALUE': 0x501,
               'INVALID_OPERATION': 0x502,
               'OUT_OF_MEMORY': 0x505,
               'CW': 0x900,
               'CCW': 0x901,
               'LINE_WIDTH': 0xb21,
               'ALIASED_POINT_SIZE_RANGE': 0x846d,
               'ALIASED_LINE_WIDTH_RANGE': 0x846e,
               'CULL_FACE_MODE': 0xb45,
               'FRONT_FACE': 0xb46,
               'DEPTH_RANGE': 0xb70,
               'DEPTH_WRITEMASK': 0xb72,
               'DEPTH_CLEAR_VALUE': 0xb73,
               'DEPTH_FUNC': 0xb74,
               'STENCIL_CLEAR_VALUE': 0xb91,
               'STENCIL_FUNC': 0xb92,
               'STENCIL_FAIL': 0xb94,
               'STENCIL_PASS_DEPTH_FAIL': 0xb95,
               'STENCIL_PASS_DEPTH_PASS': 0xb96,
               'STENCIL_REF': 0xb97,
               'STENCIL_VALUE_MASK': 0xb93,
               'STENCIL_WRITEMASK': 0xb98,
               'STENCIL_BACK_FUNC': 0x8800,
               'STENCIL_BACK_FAIL': 0x8801,
               'STENCIL_BACK_PASS_DEPTH_FAIL': 0x8802,
               'STENCIL_BACK_PASS_DEPTH_PASS': 0x8803,
               'STENCIL_BACK_REF': 0x8ca3,
               'STENCIL_BACK_VALUE_MASK': 0x8ca4,
               'STENCIL_BACK_WRITEMASK': 0x8ca5,
               'VIEWPORT': 0xba2,
               'SCISSOR_BOX': 0xc10,
               'COLOR_CLEAR_VALUE': 0xc22,
               'COLOR_WRITEMASK': 0xc23,
               'UNPACK_ALIGNMENT': 0xcf5,
               'PACK_ALIGNMENT': 0xd05,
               'MAX_TEXTURE_SIZE': 0xd33,
               'MAX_VIEWPORT_DIMS': 0xd3a,
               'SUBPIXEL_BITS': 0xd50,
               'RED_BITS': 0xd52,
               'GREEN_BITS': 0xd53,
               'BLUE_BITS': 0xd54,
               'ALPHA_BITS': 0xd55,
               'DEPTH_BITS': 0xd56,
               'STENCIL_BITS': 0xd57,
               'POLYGON_OFFSET_UNITS': 0x2a00,
               'POLYGON_OFFSET_FACTOR': 0x8038,
               'TEXTURE_BINDING_2D': 0x8069,
               'SAMPLE_BUFFERS': 0x80a8,
               'SAMPLES': 0x80a9,
               'SAMPLE_COVERAGE_VALUE': 0x80aa,
               'SAMPLE_COVERAGE_INVERT': 0x80ab,
               'COMPRESSED_TEXTURE_FORMATS': 0x86a3,
               'DONT_CARE': 0x1100,
               'FASTEST': 0x1101,
               'NICEST': 0x1102,
               'GENERATE_MIPMAP_HINT': 0x8192,
               'BYTE': 0x1400,
               'UNSIGNED_BYTE': 0x1401,
               'SHORT': 0x1402,
               'UNSIGNED_SHORT': 0x1403,
               'INT': 0x1404,
               'UNSIGNED_INT': 0x1405,
               'FLOAT': 0x1406,
               'DEPTH_COMPONENT': 0x1902,
               'ALPHA': 0x1906,
               'RGB': 0x1907,
               'RGBA': 0x1908,
               'LUMINANCE': 0x1909,
               'LUMINANCE_ALPHA': 0x190a,
               'UNSIGNED_SHORT_4_4_4_4': 0x8033,
               'UNSIGNED_SHORT_5_5_5_1': 0x8034,
               'UNSIGNED_SHORT_5_6_5': 0x8363,
               'FRAGMENT_SHADER': 0x8b30,
               'VERTEX_SHADER': 0x8b31,
               'MAX_VERTEX_ATTRIBS': 0x8869,
               'MAX_VERTEX_UNIFORM_VECTORS': 0x8dfb,
               'MAX_VARYING_VECTORS': 0x8dfc,
               'MAX_COMBINED_TEXTURE_IMAGE_UNITS': 0x8b4d,
               'MAX_VERTEX_TEXTURE_IMAGE_UNITS': 0x8b4c,
               'MAX_TEXTURE_IMAGE_UNITS': 0x8872,
               'MAX_FRAGMENT_UNIFORM_VECTORS': 0x8dfd,
               'SHADER_TYPE': 0x8b4f,
               'DELETE_STATUS': 0x8b80,
               'LINK_STATUS': 0x8b82,
               'VALIDATE_STATUS': 0x8b83,
               'ATTACHED_SHADERS': 0x8b85,
               'ACTIVE_UNIFORMS': 0x8b86,
               'ACTIVE_ATTRIBUTES': 0x8b89,
               'SHADING_LANGUAGE_VERSION': 0x8b8c,
               'CURRENT_PROGRAM': 0x8b8d,
               'NEVER': 0x200,
               'LESS': 0x201,
               'EQUAL': 0x202,
               'LEQUAL': 0x203,
               'GREATER': 0x204,
               'NOTEQUAL': 0x205,
               'GEQUAL': 0x206,
               'ALWAYS': 0x207,
               'KEEP': 0x1e00,
               'REPLACE': 0x1e01,
               'INCR': 0x1e02,
               'DECR': 0x1e03,
               'INVERT': 0x150a,
               'INCR_WRAP': 0x8507,
               'DECR_WRAP': 0x8508,
               'VENDOR': 0x1f00,
               'RENDERER': 0x1f01,
               'VERSION': 0x1f02,
               'NEAREST': 0x2600,
               'LINEAR': 0x2601,
               'NEAREST_MIPMAP_NEAREST': 0x2700,
               'LINEAR_MIPMAP_NEAREST': 0x2701,
               'NEAREST_MIPMAP_LINEAR': 0x2702,
               'LINEAR_MIPMAP_LINEAR': 0x2703,
               'TEXTURE_MAG_FILTER': 0x2800,
               'TEXTURE_MIN_FILTER': 0x2801,
               'TEXTURE_WRAP_S': 0x2802,
               'TEXTURE_WRAP_T': 0x2803,
               'TEXTURE_2D': 0xde1,
               'TEXTURE': 0x1702,
               'TEXTURE_CUBE_MAP': 0x8513,
               'TEXTURE_BINDING_CUBE_MAP': 0x8514,
               'TEXTURE_CUBE_MAP_POSITIVE_X': 0x8515,
               'TEXTURE_CUBE_MAP_NEGATIVE_X': 0x8516,
               'TEXTURE_CUBE_MAP_POSITIVE_Y': 0x8517,
               'TEXTURE_CUBE_MAP_NEGATIVE_Y': 0x8518,
               'TEXTURE_CUBE_MAP_POSITIVE_Z': 0x8519,
               'TEXTURE_CUBE_MAP_NEGATIVE_Z': 0x851a,
               'MAX_CUBE_MAP_TEXTURE_SIZE': 0x851c,
               'TEXTURE0': 0x84c0,
               'TEXTURE1': 0x84c1,
               'TEXTURE2': 0x84c2,
               'TEXTURE3': 0x84c3,
               'TEXTURE4': 0x84c4,
               'TEXTURE5': 0x84c5,
               'TEXTURE6': 0x84c6,
               'TEXTURE7': 0x84c7,
               'TEXTURE8': 0x84c8,
               'TEXTURE9': 0x84c9,
               'TEXTURE10': 0x84ca,
               'TEXTURE11': 0x84cb,
               'TEXTURE12': 0x84cc,
               'TEXTURE13': 0x84cd,
               'TEXTURE14': 0x84ce,
               'TEXTURE15': 0x84cf,
               'TEXTURE16': 0x84d0,
               'TEXTURE17': 0x84d1,
               'TEXTURE18': 0x84d2,
               'TEXTURE19': 0x84d3,
               'TEXTURE20': 0x84d4,
               'TEXTURE21': 0x84d5,
               'TEXTURE22': 0x84d6,
               'TEXTURE23': 0x84d7,
               'TEXTURE24': 0x84d8,
               'TEXTURE25': 0x84d9,
               'TEXTURE26': 0x84da,
               'TEXTURE27': 0x84db,
               'TEXTURE28': 0x84dc,
               'TEXTURE29': 0x84dd,
               'TEXTURE30': 0x84de,
               'TEXTURE31': 0x84df,
               'ACTIVE_TEXTURE': 0x84e0,
               'REPEAT': 0x2901,
               'CLAMP_TO_EDGE': 0x812f,
               'MIRRORED_REPEAT': 0x8370,
               'FLOAT_VEC2': 0x8b50,
               'FLOAT_VEC3': 0x8b51,
               'FLOAT_VEC4': 0x8b52,
               'INT_VEC2': 0x8b53,
               'INT_VEC3': 0x8b54,
               'INT_VEC4': 0x8b55,
               'BOOL': 0x8b56,
               'BOOL_VEC2': 0x8b57,
               'BOOL_VEC3': 0x8b58,
               'BOOL_VEC4': 0x8b59,
               'FLOAT_MAT2': 0x8b5a,
               'FLOAT_MAT3': 0x8b5b,
               'FLOAT_MAT4': 0x8b5c,
               'SAMPLER_2D': 0x8b5e,
               'SAMPLER_CUBE': 0x8b60,
               'VERTEX_ATTRIB_ARRAY_ENABLED': 0x8622,
               'VERTEX_ATTRIB_ARRAY_SIZE': 0x8623,
               'VERTEX_ATTRIB_ARRAY_STRIDE': 0x8624,
               'VERTEX_ATTRIB_ARRAY_TYPE': 0x8625,
               'VERTEX_ATTRIB_ARRAY_NORMALIZED': 0x886a,
               'VERTEX_ATTRIB_ARRAY_POINTER': 0x8645,
               'VERTEX_ATTRIB_ARRAY_BUFFER_BINDING': 0x889f,
               'IMPLEMENTATION_COLOR_READ_TYPE': 0x8b9a,
               'IMPLEMENTATION_COLOR_READ_FORMAT': 0x8b9b,
               'COMPILE_STATUS': 0x8b81,
               'LOW_FLOAT': 0x8df0,
               'MEDIUM_FLOAT': 0x8df1,
               'HIGH_FLOAT': 0x8df2,
               'LOW_INT': 0x8df3,
               'MEDIUM_INT': 0x8df4,
               'HIGH_INT': 0x8df5,
               'FRAMEBUFFER': 0x8d40,
               'RENDERBUFFER': 0x8d41,
               'RGBA4': 0x8056,
               'RGB5_A1': 0x8057,
               'RGB565': 0x8d62,
               'DEPTH_COMPONENT16': 0x81a5,
               'STENCIL_INDEX': 0x1901,
               'STENCIL_INDEX8': 0x8d48,
               'DEPTH_STENCIL': 0x84f9,
               'RENDERBUFFER_WIDTH': 0x8d42,
               'RENDERBUFFER_HEIGHT': 0x8d43,
               'RENDERBUFFER_INTERNAL_FORMAT': 0x8d44,
               'RENDERBUFFER_RED_SIZE': 0x8d50,
               'RENDERBUFFER_GREEN_SIZE': 0x8d51,
               'RENDERBUFFER_BLUE_SIZE': 0x8d52,
               'RENDERBUFFER_ALPHA_SIZE': 0x8d53,
               'RENDERBUFFER_DEPTH_SIZE': 0x8d54,
               'RENDERBUFFER_STENCIL_SIZE': 0x8d55,
               'FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE': 0x8cd0,
               'FRAMEBUFFER_ATTACHMENT_OBJECT_NAME': 0x8cd1,
               'FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL': 0x8cd2,
               'FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE': 0x8cd3,
               'COLOR_ATTACHMENT0': 0x8ce0,
               'DEPTH_ATTACHMENT': 0x8d00,
               'STENCIL_ATTACHMENT': 0x8d20,
               'DEPTH_STENCIL_ATTACHMENT': 0x821a,
               'NONE': 0x0,
               'FRAMEBUFFER_COMPLETE': 0x8cd5,
               'FRAMEBUFFER_INCOMPLETE_ATTACHMENT': 0x8cd6,
               'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT': 0x8cd7,
               'FRAMEBUFFER_INCOMPLETE_DIMENSIONS': 0x8cd9,
               'FRAMEBUFFER_UNSUPPORTED': 0x8cdd,
               'FRAMEBUFFER_BINDING': 0x8ca6,
               'RENDERBUFFER_BINDING': 0x8ca7,
               'MAX_RENDERBUFFER_SIZE': 0x84e8,
               'INVALID_FRAMEBUFFER_OPERATION': 0x506,
               'UNPACK_FLIP_Y_WEBGL': 0x9240,
               'UNPACK_PREMULTIPLY_ALPHA_WEBGL': 0x9241,
               'CONTEXT_LOST_WEBGL': 0x9242,
               'UNPACK_COLORSPACE_CONVERSION_WEBGL': 0x9243,
               'BROWSER_DEFAULT_WEBGL': 0x9244,
               'COMPRESSED_RGB_S3TC_DXT1_EXT': 0x83f0,
               'COMPRESSED_RGBA_S3TC_DXT1_EXT': 0x83f1,
               'COMPRESSED_RGBA_S3TC_DXT3_EXT': 0x83f2,
               'COMPRESSED_RGBA_S3TC_DXT5_EXT': 0x83f3,
               'COMPRESSED_RGB_PVRTC_4BPPV1_IMG': 0x8c00,
               'COMPRESSED_RGB_PVRTC_2BPPV1_IMG': 0x8c01,
               'COMPRESSED_RGBA_PVRTC_4BPPV1_IMG': 0x8c02,
               'COMPRESSED_RGBA_PVRTC_2BPPV1_IMG': 0x8c03,
               'COMPRESSED_RGB_ETC1_WEBGL': 0x8d64,
               'HALF_FLOAT_OES': 0x8d61,
               'DOUBLE': 0x140a,
               'READ_BUFFER': 0xc02,
               'UNPACK_ROW_LENGTH': 0xcf2,
               'UNPACK_SKIP_ROWS': 0xcf3,
               'UNPACK_SKIP_PIXELS': 0xcf4,
               'PACK_ROW_LENGTH': 0xd02,
               'PACK_SKIP_ROWS': 0xd03,
               'PACK_SKIP_PIXELS': 0xd04,
               'COLOR': 0x1800,
               'DEPTH': 0x1801,
               'STENCIL': 0x1802,
               'RED': 0x1903,
               'RGB8': 0x8051,
               'RGBA8': 0x8058,
               'RGB10_A2': 0x8059,
               'TEXTURE_BINDING_3D': 0x806a,
               'UNPACK_SKIP_IMAGES': 0x806d,
               'UNPACK_IMAGE_HEIGHT': 0x806e,
               'TEXTURE_3D': 0x806f,
               'TEXTURE_WRAP_R': 0x8072,
               'MAX_3D_TEXTURE_SIZE': 0x8073,
               'UNSIGNED_INT_2_10_10_10_REV': 0x8368,
               'MAX_ELEMENTS_VERTICES': 0x80e8,
               'MAX_ELEMENTS_INDICES': 0x80e9,
               'TEXTURE_MIN_LOD': 0x813a,
               'TEXTURE_MAX_LOD': 0x813b,
               'TEXTURE_BASE_LEVEL': 0x813c,
               'TEXTURE_MAX_LEVEL': 0x813d,
               'MIN': 0x8007,
               'MAX': 0x8008,
               'DEPTH_COMPONENT24': 0x81a6,
               'MAX_TEXTURE_LOD_BIAS': 0x84fd,
               'TEXTURE_COMPARE_MODE': 0x884c,
               'TEXTURE_COMPARE_FUNC': 0x884d,
               'CURRENT_QUERY': 0x8865,
               'QUERY_RESULT': 0x8866,
               'QUERY_RESULT_AVAILABLE': 0x8867,
               'STREAM_READ': 0x88e1,
               'STREAM_COPY': 0x88e2,
               'STATIC_READ': 0x88e5,
               'STATIC_COPY': 0x88e6,
               'DYNAMIC_READ': 0x88e9,
               'DYNAMIC_COPY': 0x88ea,
               'MAX_DRAW_BUFFERS': 0x8824,
               'DRAW_BUFFER0': 0x8825,
               'DRAW_BUFFER1': 0x8826,
               'DRAW_BUFFER2': 0x8827,
               'DRAW_BUFFER3': 0x8828,
               'DRAW_BUFFER4': 0x8829,
               'DRAW_BUFFER5': 0x882a,
               'DRAW_BUFFER6': 0x882b,
               'DRAW_BUFFER7': 0x882c,
               'DRAW_BUFFER8': 0x882d,
               'DRAW_BUFFER9': 0x882e,
               'DRAW_BUFFER10': 0x882f,
               'DRAW_BUFFER11': 0x8830,
               'DRAW_BUFFER12': 0x8831,
               'DRAW_BUFFER13': 0x8832,
               'DRAW_BUFFER14': 0x8833,
               'DRAW_BUFFER15': 0x8834,
               'MAX_FRAGMENT_UNIFORM_COMPONENTS': 0x8b49,
               'MAX_VERTEX_UNIFORM_COMPONENTS': 0x8b4a,
               'SAMPLER_3D': 0x8b5f,
               'SAMPLER_2D_SHADOW': 0x8b62,
               'FRAGMENT_SHADER_DERIVATIVE_HINT': 0x8b8b,
               'PIXEL_PACK_BUFFER': 0x88eb,
               'PIXEL_UNPACK_BUFFER': 0x88ec,
               'PIXEL_PACK_BUFFER_BINDING': 0x88ed,
               'PIXEL_UNPACK_BUFFER_BINDING': 0x88ef,
               'FLOAT_MAT2x3': 0x8b65,
               'FLOAT_MAT2x4': 0x8b66,
               'FLOAT_MAT3x2': 0x8b67,
               'FLOAT_MAT3x4': 0x8b68,
               'FLOAT_MAT4x2': 0x8b69,
               'FLOAT_MAT4x3': 0x8b6a,
               'SRGB': 0x8c40,
               'SRGB8': 0x8c41,
               'SRGB8_ALPHA8': 0x8c43,
               'COMPARE_REF_TO_TEXTURE': 0x884e,
               'RGBA32F': 0x8814,
               'RGB32F': 0x8815,
               'RGBA16F': 0x881a,
               'RGB16F': 0x881b,
               'VERTEX_ATTRIB_ARRAY_INTEGER': 0x88fd,
               'MAX_ARRAY_TEXTURE_LAYERS': 0x88ff,
               'MIN_PROGRAM_TEXEL_OFFSET': 0x8904,
               'MAX_PROGRAM_TEXEL_OFFSET': 0x8905,
               'MAX_VARYING_COMPONENTS': 0x8b4b,
               'TEXTURE_2D_ARRAY': 0x8c1a,
               'TEXTURE_BINDING_2D_ARRAY': 0x8c1d,
               'R11F_G11F_B10F': 0x8c3a,
               'UNSIGNED_INT_10F_11F_11F_REV': 0x8c3b,
               'RGB9_E5': 0x8c3d,
               'UNSIGNED_INT_5_9_9_9_REV': 0x8c3e,
               'TRANSFORM_FEEDBACK_BUFFER_MODE': 0x8c7f,
               'MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS': 0x8c80,
               'TRANSFORM_FEEDBACK_VARYINGS': 0x8c83,
               'TRANSFORM_FEEDBACK_BUFFER_START': 0x8c84,
               'TRANSFORM_FEEDBACK_BUFFER_SIZE': 0x8c85,
               'TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN': 0x8c88,
               'RASTERIZER_DISCARD': 0x8c89,
               'MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS': 0x8c8a,
               'MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS': 0x8c8b,
               'INTERLEAVED_ATTRIBS': 0x8c8c,
               'SEPARATE_ATTRIBS': 0x8c8d,
               'TRANSFORM_FEEDBACK_BUFFER': 0x8c8e,
               'TRANSFORM_FEEDBACK_BUFFER_BINDING': 0x8c8f,
               'RGBA32UI': 0x8d70,
               'RGB32UI': 0x8d71,
               'RGBA16UI': 0x8d76,
               'RGB16UI': 0x8d77,
               'RGBA8UI': 0x8d7c,
               'RGB8UI': 0x8d7d,
               'RGBA32I': 0x8d82,
               'RGB32I': 0x8d83,
               'RGBA16I': 0x8d88,
               'RGB16I': 0x8d89,
               'RGBA8I': 0x8d8e,
               'RGB8I': 0x8d8f,
               'RED_INTEGER': 0x8d94,
               'RGB_INTEGER': 0x8d98,
               'RGBA_INTEGER': 0x8d99,
               'SAMPLER_2D_ARRAY': 0x8dc1,
               'SAMPLER_2D_ARRAY_SHADOW': 0x8dc4,
               'SAMPLER_CUBE_SHADOW': 0x8dc5,
               'UNSIGNED_INT_VEC2': 0x8dc6,
               'UNSIGNED_INT_VEC3': 0x8dc7,
               'UNSIGNED_INT_VEC4': 0x8dc8,
               'INT_SAMPLER_2D': 0x8dca,
               'INT_SAMPLER_3D': 0x8dcb,
               'INT_SAMPLER_CUBE': 0x8dcc,
               'INT_SAMPLER_2D_ARRAY': 0x8dcf,
               'UNSIGNED_INT_SAMPLER_2D': 0x8dd2,
               'UNSIGNED_INT_SAMPLER_3D': 0x8dd3,
               'UNSIGNED_INT_SAMPLER_CUBE': 0x8dd4,
               'UNSIGNED_INT_SAMPLER_2D_ARRAY': 0x8dd7,
               'DEPTH_COMPONENT32F': 0x8cac,
               'DEPTH32F_STENCIL8': 0x8cad,
               'FLOAT_32_UNSIGNED_INT_24_8_REV': 0x8dad,
               'FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING': 0x8210,
               'FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE': 0x8211,
               'FRAMEBUFFER_ATTACHMENT_RED_SIZE': 0x8212,
               'FRAMEBUFFER_ATTACHMENT_GREEN_SIZE': 0x8213,
               'FRAMEBUFFER_ATTACHMENT_BLUE_SIZE': 0x8214,
               'FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE': 0x8215,
               'FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE': 0x8216,
               'FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE': 0x8217,
               'FRAMEBUFFER_DEFAULT': 0x8218,
               'UNSIGNED_INT_24_8': 0x84fa,
               'DEPTH24_STENCIL8': 0x88f0,
               'UNSIGNED_NORMALIZED': 0x8c17,
               'DRAW_FRAMEBUFFER_BINDING': 0x8ca6,
               'READ_FRAMEBUFFER': 0x8ca8,
               'DRAW_FRAMEBUFFER': 0x8ca9,
               'READ_FRAMEBUFFER_BINDING': 0x8caa,
               'RENDERBUFFER_SAMPLES': 0x8cab,
               'FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER': 0x8cd4,
               'MAX_COLOR_ATTACHMENTS': 0x8cdf,
               'COLOR_ATTACHMENT1': 0x8ce1,
               'COLOR_ATTACHMENT2': 0x8ce2,
               'COLOR_ATTACHMENT3': 0x8ce3,
               'COLOR_ATTACHMENT4': 0x8ce4,
               'COLOR_ATTACHMENT5': 0x8ce5,
               'COLOR_ATTACHMENT6': 0x8ce6,
               'COLOR_ATTACHMENT7': 0x8ce7,
               'COLOR_ATTACHMENT8': 0x8ce8,
               'COLOR_ATTACHMENT9': 0x8ce9,
               'COLOR_ATTACHMENT10': 0x8cea,
               'COLOR_ATTACHMENT11': 0x8ceb,
               'COLOR_ATTACHMENT12': 0x8cec,
               'COLOR_ATTACHMENT13': 0x8ced,
               'COLOR_ATTACHMENT14': 0x8cee,
               'COLOR_ATTACHMENT15': 0x8cef,
               'FRAMEBUFFER_INCOMPLETE_MULTISAMPLE': 0x8d56,
               'MAX_SAMPLES': 0x8d57,
               'HALF_FLOAT': 0x140b,
               'RG': 0x8227,
               'RG_INTEGER': 0x8228,
               'R8': 0x8229,
               'RG8': 0x822b,
               'R16F': 0x822d,
               'R32F': 0x822e,
               'RG16F': 0x822f,
               'RG32F': 0x8230,
               'R8I': 0x8231,
               'R8UI': 0x8232,
               'R16I': 0x8233,
               'R16UI': 0x8234,
               'R32I': 0x8235,
               'R32UI': 0x8236,
               'RG8I': 0x8237,
               'RG8UI': 0x8238,
               'RG16I': 0x8239,
               'RG16UI': 0x823a,
               'RG32I': 0x823b,
               'RG32UI': 0x823c,
               'VERTEX_ARRAY_BINDING': 0x85b5,
               'R8_SNORM': 0x8f94,
               'RG8_SNORM': 0x8f95,
               'RGB8_SNORM': 0x8f96,
               'RGBA8_SNORM': 0x8f97,
               'SIGNED_NORMALIZED': 0x8f9c,
               'COPY_READ_BUFFER': 0x8f36,
               'COPY_WRITE_BUFFER': 0x8f37,
               'COPY_READ_BUFFER_BINDING': 0x8f36,
               'COPY_WRITE_BUFFER_BINDING': 0x8f37,
               'UNIFORM_BUFFER': 0x8a11,
               'UNIFORM_BUFFER_BINDING': 0x8a28,
               'UNIFORM_BUFFER_START': 0x8a29,
               'UNIFORM_BUFFER_SIZE': 0x8a2a,
               'MAX_VERTEX_UNIFORM_BLOCKS': 0x8a2b,
               'MAX_FRAGMENT_UNIFORM_BLOCKS': 0x8a2d,
               'MAX_COMBINED_UNIFORM_BLOCKS': 0x8a2e,
               'MAX_UNIFORM_BUFFER_BINDINGS': 0x8a2f,
               'MAX_UNIFORM_BLOCK_SIZE': 0x8a30,
               'MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS': 0x8a31,
               'MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS': 0x8a33,
               'UNIFORM_BUFFER_OFFSET_ALIGNMENT': 0x8a34,
               'ACTIVE_UNIFORM_BLOCKS': 0x8a36,
               'UNIFORM_TYPE': 0x8a37,
               'UNIFORM_SIZE': 0x8a38,
               'UNIFORM_BLOCK_INDEX': 0x8a3a,
               'UNIFORM_OFFSET': 0x8a3b,
               'UNIFORM_ARRAY_STRIDE': 0x8a3c,
               'UNIFORM_MATRIX_STRIDE': 0x8a3d,
               'UNIFORM_IS_ROW_MAJOR': 0x8a3e,
               'UNIFORM_BLOCK_BINDING': 0x8a3f,
               'UNIFORM_BLOCK_DATA_SIZE': 0x8a40,
               'UNIFORM_BLOCK_ACTIVE_UNIFORMS': 0x8a42,
               'UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES': 0x8a43,
               'UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER': 0x8a44,
               'UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER': 0x8a46,
               'INVALID_INDEX': 0xffffffff,
               'MAX_VERTEX_OUTPUT_COMPONENTS': 0x9122,
               'MAX_FRAGMENT_INPUT_COMPONENTS': 0x9125,
               'MAX_SERVER_WAIT_TIMEOUT': 0x9111,
               'OBJECT_TYPE': 0x9112,
               'SYNC_CONDITION': 0x9113,
               'SYNC_STATUS': 0x9114,
               'SYNC_FLAGS': 0x9115,
               'SYNC_FENCE': 0x9116,
               'SYNC_GPU_COMMANDS_COMPLETE': 0x9117,
               'UNSIGNALED': 0x9118,
               'SIGNALED': 0x9119,
               'ALREADY_SIGNALED': 0x911a,
               'TIMEOUT_EXPIRED': 0x911b,
               'CONDITION_SATISFIED': 0x911c,
               'WAIT_FAILED': 0x911d,
               'SYNC_FLUSH_COMMANDS_BIT': 0x1,
               'VERTEX_ATTRIB_ARRAY_DIVISOR': 0x88fe,
               'ANY_SAMPLES_PASSED': 0x8c2f,
               'ANY_SAMPLES_PASSED_CONSERVATIVE': 0x8d6a,
               'SAMPLER_BINDING': 0x8919,
               'RGB10_A2UI': 0x906f,
               'INT_2_10_10_10_REV': 0x8d9f,
               'TRANSFORM_FEEDBACK': 0x8e22,
               'TRANSFORM_FEEDBACK_PAUSED': 0x8e23,
               'TRANSFORM_FEEDBACK_ACTIVE': 0x8e24,
               'TRANSFORM_FEEDBACK_BINDING': 0x8e25,
               'COMPRESSED_R11_EAC': 0x9270,
               'COMPRESSED_SIGNED_R11_EAC': 0x9271,
               'COMPRESSED_RG11_EAC': 0x9272,
               'COMPRESSED_SIGNED_RG11_EAC': 0x9273,
               'COMPRESSED_RGB8_ETC2': 0x9274,
               'COMPRESSED_SRGB8_ETC2': 0x9275,
               'COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2': 0x9276,
               'COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2': 0x9277,
               'COMPRESSED_RGBA8_ETC2_EAC': 0x9278,
               'COMPRESSED_SRGB8_ALPHA8_ETC2_EAC': 0x9279,
               'TEXTURE_IMMUTABLE_FORMAT': 0x912f,
               'MAX_ELEMENT_INDEX': 0x8d6b,
               'TEXTURE_IMMUTABLE_LEVELS': 0x82df,
               'MAX_TEXTURE_MAX_ANISOTROPY_EXT': 0x84ff
          }
               , _0x39d2ab = Object['freeze'](_0x49f414)
               , _0x4709b6 = {
                    'UNSIGNED_BYTE': _0x39d2ab[_0xc3a123(0xb8c)],
                    'UNSIGNED_SHORT': _0x39d2ab[_0xc3a123(0x744)],
                    'UNSIGNED_INT': _0x39d2ab[_0xc3a123(0xc7a)],
                    'FLOAT': _0x39d2ab['FLOAT'],
                    'HALF_FLOAT': _0x39d2ab[_0xc3a123(0xcee)],
                    'UNSIGNED_INT_24_8': _0x39d2ab['UNSIGNED_INT_24_8'],
                    'UNSIGNED_SHORT_4_4_4_4': _0x39d2ab[_0xc3a123(0xdae)],
                    'UNSIGNED_SHORT_5_5_5_1': _0x39d2ab['UNSIGNED_SHORT_5_5_5_1'],
                    'UNSIGNED_SHORT_5_6_5': _0x39d2ab[_0xc3a123(0x3ac)],
                    'isPacked': function (_0x44c2cf) {
                         const _0x612d93 = _0xc3a123;
                         return _0x44c2cf === _0x4709b6[_0x612d93(0xb82)] || _0x44c2cf === _0x4709b6['UNSIGNED_SHORT_4_4_4_4'] || _0x44c2cf === _0x4709b6[_0x612d93(0x4cc)] || _0x44c2cf === _0x4709b6[_0x612d93(0x3ac)];
                    },
                    'sizeInBytes': function (_0x386564) {
                         const _0x482b64 = _0xc3a123;
                         switch (_0x386564) {
                              case _0x4709b6[_0x482b64(0xb8c)]:
                                   return 0x1;
                              case _0x4709b6[_0x482b64(0x744)]:
                              case _0x4709b6['UNSIGNED_SHORT_4_4_4_4']:
                              case _0x4709b6[_0x482b64(0x4cc)]:
                              case _0x4709b6[_0x482b64(0x3ac)]:
                              case _0x4709b6[_0x482b64(0x532)]:
                              case _0x39d2ab[_0x482b64(0xcee)]:
                                   return 0x2;
                              case _0x4709b6[_0x482b64(0xc7a)]:
                              case _0x4709b6[_0x482b64(0xa80)]:
                              case _0x4709b6[_0x482b64(0xb82)]:
                                   return 0x4;
                         }
                    },
                    'validate': function (_0x46173c) {
                         const _0x513902 = _0xc3a123;
                         return _0x46173c === _0x4709b6['UNSIGNED_BYTE'] || _0x46173c === _0x4709b6[_0x513902(0x744)] || _0x46173c === _0x4709b6[_0x513902(0xc7a)] || _0x46173c === _0x4709b6[_0x513902(0xa80)] || _0x46173c === _0x4709b6[_0x513902(0x532)] || _0x46173c === _0x4709b6[_0x513902(0xb82)] || _0x46173c === _0x4709b6[_0x513902(0xdae)] || _0x46173c === _0x4709b6[_0x513902(0x4cc)] || _0x46173c === _0x4709b6['UNSIGNED_SHORT_5_6_5'];
                    }
               };
          const _0x17f054 = Cesium[_0xc3a123(0x336)];
          var _0x416d82 = {
               'DEPTH_COMPONENT': _0x39d2ab[_0xc3a123(0x96f)],
               'DEPTH_STENCIL': _0x39d2ab[_0xc3a123(0xbf5)],
               'ALPHA': _0x39d2ab[_0xc3a123(0x468)],
               'RGB': _0x39d2ab['RGB'],
               'RGBA': _0x39d2ab[_0xc3a123(0x8a5)],
               'LUMINANCE': _0x39d2ab['LUMINANCE'],
               'LUMINANCE_ALPHA': _0x39d2ab[_0xc3a123(0x863)],
               'RGB_DXT1': _0x39d2ab[_0xc3a123(0x4b4)],
               'RGBA_DXT1': _0x39d2ab['COMPRESSED_RGBA_S3TC_DXT1_EXT'],
               'RGBA_DXT3': _0x39d2ab['COMPRESSED_RGBA_S3TC_DXT3_EXT'],
               'RGBA_DXT5': _0x39d2ab['COMPRESSED_RGBA_S3TC_DXT5_EXT'],
               'RGB_PVRTC_4BPPV1': _0x39d2ab[_0xc3a123(0x7ef)],
               'RGB_PVRTC_2BPPV1': _0x39d2ab['COMPRESSED_RGB_PVRTC_2BPPV1_IMG'],
               'RGBA_PVRTC_4BPPV1': _0x39d2ab[_0xc3a123(0xafa)],
               'RGBA_PVRTC_2BPPV1': _0x39d2ab[_0xc3a123(0xb7c)],
               'RGB_ETC1': _0x39d2ab['COMPRESSED_RGB_ETC1_WEBGL'],
               'componentsLength': function (_0x475337) {
                    const _0x1729dc = _0xc3a123;
                    switch (_0x475337) {
                         case _0x416d82[_0x1729dc(0x8ce)]:
                              return 0x3;
                         case _0x416d82[_0x1729dc(0x8a5)]:
                              return 0x4;
                         case _0x416d82[_0x1729dc(0x863)]:
                              return 0x2;
                         case _0x416d82['ALPHA']:
                         case _0x416d82[_0x1729dc(0x3cf)]:
                         default:
                              return 0x1;
                    }
               },
               'validate': function (_0x19dbd1) {
                    const _0x21d3a6 = _0xc3a123;
                    return _0x19dbd1 === _0x416d82['DEPTH_COMPONENT'] || _0x19dbd1 === _0x416d82[_0x21d3a6(0xbf5)] || _0x19dbd1 === _0x416d82['ALPHA'] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x8ce)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x8a5)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x3cf)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x863)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x788)] || _0x19dbd1 === _0x416d82['RGBA_DXT1'] || _0x19dbd1 === _0x416d82['RGBA_DXT3'] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x215)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0xa59)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x293)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0xacf)] || _0x19dbd1 === _0x416d82[_0x21d3a6(0x5b7)] || _0x19dbd1 === _0x416d82['RGB_ETC1'];
               },
               'isColorFormat': function (_0x4aa9f5) {
                    const _0x1df3c6 = _0xc3a123;
                    return _0x4aa9f5 === _0x416d82['ALPHA'] || _0x4aa9f5 === _0x416d82['RGB'] || _0x4aa9f5 === _0x416d82[_0x1df3c6(0x8a5)] || _0x4aa9f5 === _0x416d82[_0x1df3c6(0x3cf)] || _0x4aa9f5 === _0x416d82[_0x1df3c6(0x863)];
               },
               'isDepthFormat': function (_0xaebb3e) {
                    const _0x3d3ead = _0xc3a123;
                    return _0xaebb3e === _0x416d82[_0x3d3ead(0x96f)] || _0xaebb3e === _0x416d82[_0x3d3ead(0xbf5)];
               },
               'isCompressedFormat': function (_0x31f6ee) {
                    const _0x43df18 = _0xc3a123;
                    return _0x31f6ee === _0x416d82['RGB_DXT1'] || _0x31f6ee === _0x416d82[_0x43df18(0x4f7)] || _0x31f6ee === _0x416d82[_0x43df18(0x3ad)] || _0x31f6ee === _0x416d82[_0x43df18(0x215)] || _0x31f6ee === _0x416d82[_0x43df18(0xa59)] || _0x31f6ee === _0x416d82[_0x43df18(0x293)] || _0x31f6ee === _0x416d82[_0x43df18(0xacf)] || _0x31f6ee === _0x416d82[_0x43df18(0x5b7)] || _0x31f6ee === _0x416d82[_0x43df18(0x5dc)];
               },
               'isDXTFormat': function (_0x19f73a) {
                    const _0x7fe78d = _0xc3a123;
                    return _0x19f73a === _0x416d82[_0x7fe78d(0x788)] || _0x19f73a === _0x416d82[_0x7fe78d(0x4f7)] || _0x19f73a === _0x416d82[_0x7fe78d(0x3ad)] || _0x19f73a === _0x416d82[_0x7fe78d(0x215)];
               },
               'isPVRTCFormat': function (_0x57b8eb) {
                    const _0x2ab7af = _0xc3a123;
                    return _0x57b8eb === _0x416d82[_0x2ab7af(0xa59)] || _0x57b8eb === _0x416d82['RGB_PVRTC_2BPPV1'] || _0x57b8eb === _0x416d82[_0x2ab7af(0xacf)] || _0x57b8eb === _0x416d82[_0x2ab7af(0x5b7)];
               },
               'isETC1Format': function (_0x5135fe) {
                    return _0x5135fe === _0x416d82['RGB_ETC1'];
               },
               'compressedTextureSizeInBytes': function (_0x415418, _0x2eb0f2, _0x429486, _0x5693d2) {
                    const _0x3f2c23 = _0xc3a123;
                    var _0x9ffe33 = _0x17f054(_0x5693d2) ? _0x5693d2 : 0x1;
                    switch (_0x415418) {
                         case _0x416d82[_0x3f2c23(0x788)]:
                         case _0x416d82[_0x3f2c23(0x4f7)]:
                         case _0x416d82[_0x3f2c23(0x5dc)]:
                              return Math['floor']((_0x2eb0f2 + 0x3) / 0x4) * Math[_0x3f2c23(0x763)]((_0x429486 + 0x3) / 0x4) * 0x8 * _0x9ffe33;
                         case _0x416d82['RGBA_DXT3']:
                         case _0x416d82[_0x3f2c23(0x215)]:
                              return Math[_0x3f2c23(0x763)]((_0x2eb0f2 + 0x3) / 0x4) * Math[_0x3f2c23(0x763)]((_0x429486 + 0x3) / 0x4) * 0x10 * _0x9ffe33;
                         case _0x416d82[_0x3f2c23(0xa59)]:
                         case _0x416d82[_0x3f2c23(0xacf)]:
                              return Math[_0x3f2c23(0x763)]((Math[_0x3f2c23(0x590)](_0x2eb0f2, 0x8) * Math[_0x3f2c23(0x590)](_0x429486, 0x8) * 0x4 + 0x7) / 0x8) * _0x9ffe33;
                         case _0x416d82['RGB_PVRTC_2BPPV1']:
                         case _0x416d82[_0x3f2c23(0x5b7)]:
                              return Math['floor']((Math[_0x3f2c23(0x590)](_0x2eb0f2, 0x10) * Math[_0x3f2c23(0x590)](_0x429486, 0x8) * 0x2 + 0x7) / 0x8) * _0x9ffe33;
                         default:
                              return 0x0;
                    }
               },
               'textureSizeInBytes': function (_0x36dd29, _0x12cce0, _0x2899de, _0xdf69dc, _0x5051e9) {
                    const _0x34963a = _0xc3a123;
                    var _0xecdce4 = _0x17f054(_0x5051e9) ? _0x5051e9 : 0x1
                         , _0x5c0221 = _0x416d82[_0x34963a(0x70a)](_0x36dd29);
                    return _0x4709b6['isPacked'](_0x12cce0) && (_0x5c0221 = 0x1),
                         _0x5c0221 * _0x4709b6[_0x34963a(0xb0a)](_0x12cce0) * _0x2899de * _0xdf69dc * _0xecdce4;
               },
               'alignmentInBytes': function (_0x125433, _0x577f1e, _0x27e8c8) {
                    const _0x3aa480 = _0xc3a123;
                    var _0x18a02c = _0x416d82[_0x3aa480(0x546)](_0x125433, _0x577f1e, _0x27e8c8, 0x1) % 0x4;
                    return 0x0 === _0x18a02c ? 0x4 : 0x2 === _0x18a02c ? 0x2 : 0x1;
               },
               'createTypedArray': function (_0x5ee473, _0x1eed76, _0x553c53, _0x3d56db) {
                    const _0x13dc4e = _0xc3a123;
                    var _0x5e7631 = _0x4709b6['sizeInBytes'](_0x1eed76);
                    return new (_0x5e7631 === Uint8Array['BYTES_PER_ELEMENT'] ? Uint8Array : _0x5e7631 === Uint16Array[(_0x13dc4e(0x385))] ? Uint16Array : _0x5e7631 === Float32Array[(_0x13dc4e(0x385))] && _0x1eed76 === _0x4709b6[(_0x13dc4e(0xa80))] ? Float32Array : Uint32Array)(_0x416d82[_0x13dc4e(0x70a)](_0x5ee473) * _0x553c53 * _0x3d56db);
               },
               'flipY': function (_0x3feeb5, _0x35d3b6, _0x4669c6, _0x3e6dca, _0x32547d) {
                    const _0x3283ec = _0xc3a123;
                    if (0x1 === _0x32547d)
                         return _0x3feeb5;
                    for (var _0x3e282b = _0x416d82[_0x3283ec(0x8bc)](_0x35d3b6, _0x4669c6, _0x3e6dca, _0x32547d), _0x10b3d5 = _0x416d82[_0x3283ec(0x70a)](_0x35d3b6), _0x53c877 = _0x3e6dca * _0x10b3d5, _0x138b8d = 0x0; _0x138b8d < _0x32547d; ++_0x138b8d)
                         for (var _0x5a7806 = _0x138b8d * _0x3e6dca * _0x10b3d5, _0x1d15ad = (_0x32547d - _0x138b8d - 0x1) * _0x3e6dca * _0x10b3d5, _0x23db08 = 0x0; _0x23db08 < _0x53c877; ++_0x23db08)
                              _0x3e282b[_0x1d15ad + _0x23db08] = _0x3feeb5[_0x5a7806 + _0x23db08];
                    return _0x3e282b;
               }
          }
               , _0x3aea87 = Object[_0xc3a123(0xb56)](_0x416d82);
          const _0x463940 = Cesium[_0xc3a123(0x336)];
          function _0x4400d8(_0x4efd11, _0x54fb5e, _0x48db59, _0x561f09, _0x2eab35) {
               const _0x55677f = _0xc3a123;
               this[_0x55677f(0x347)] = _0x4efd11,
                    this[_0x55677f(0x2b9)] = _0x54fb5e,
                    this[_0x55677f(0x667)] = _0x48db59,
                    this[_0x55677f(0x2d7)] = _0x561f09,
                    this[_0x55677f(0xb6d)] = _0x2eab35;
          }
          Object[_0xc3a123(0xcde)](_0x4400d8[_0xc3a123(0x2d4)], {
               'internalFormat': {
                    'get': function () {
                         const _0x4da215 = _0xc3a123;
                         return this[_0x4da215(0x347)];
                    }
               },
               'width': {
                    'get': function () {
                         const _0x5f408a = _0xc3a123;
                         return this[_0x5f408a(0x2b9)];
                    }
               },
               'height': {
                    'get': function () {
                         const _0x5f7733 = _0xc3a123;
                         return this[_0x5f7733(0x667)];
                    }
               },
               'bufferView': {
                    'get': function () {
                         const _0x5d866a = _0xc3a123;
                         return this[_0x5d866a(0x2d7)];
                    }
               },
               'pixelDatatype': {
                    'get': function () {
                         const _0x39c998 = _0xc3a123;
                         return this[_0x39c998(0xb6d)];
                    }
               }
          }),
               _0x4400d8[_0xc3a123(0x432)] = function (_0x5771e8) {
                    const _0x3e3a4a = _0xc3a123;
                    if (_0x463940(_0x5771e8))
                         return new _0x4400d8(_0x5771e8[_0x3e3a4a(0x347)], _0x5771e8[_0x3e3a4a(0x2b9)], _0x5771e8['_height'], _0x5771e8[_0x3e3a4a(0x2d7)], _0x5771e8['_datatype']);
               }
               ,
               _0x4400d8[_0xc3a123(0x2d4)][_0xc3a123(0x432)] = function () {
                    const _0x29a898 = _0xc3a123;
                    return _0x4400d8[_0x29a898(0x432)](this);
               }
               ;
          const _0x353429 = Cesium['defined'];
          /**
           * @license
           *
           * Copyright (c) 2014, Brandon Jones. All rights reserved.
           *
           * Redistribution and use in source and binary forms, with or without modification,
           * are permitted provided that the following conditions are met:
           *
           *  * Redistributions of source code must retain the above copyright notice, this
           *  list of conditions and the following disclaimer.
           *  * Redistributions in binary form must reproduce the above copyright notice,
           *  this list of conditions and the following disclaimer in the documentation
           *  and/or other materials provided with the distribution.
           *
           * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
           * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
           * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
           * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
           * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
           * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
           * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
           * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
           * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
           */
          var _0x2ba0bb, _0x3f783a = void 0x0 !== _0x3f783a ? _0x3f783a : {}, _0xb5a776 = {};
          for (_0x2ba0bb in _0x3f783a)
               _0x3f783a[_0xc3a123(0x6e8)](_0x2ba0bb) && (_0xb5a776[_0x2ba0bb] = _0x3f783a[_0x2ba0bb]);
          var _0x4cc0ae = !0x1
               , _0x545922 = !0x1
               , _0x410b1f = !0x1
               , _0x2dcdf7 = !0x1;
          _0x4cc0ae = _0xc3a123(0xb70) == typeof window,
               _0x545922 = _0xc3a123(0x1a2) == typeof importScripts,
               _0x410b1f = _0xc3a123(0xb70) == typeof process && _0xc3a123(0xb70) == typeof process[_0xc3a123(0x65d)] && _0xc3a123(0x379) == typeof process[_0xc3a123(0x65d)][_0xc3a123(0xc1e)] && !_0x4cc0ae && !_0x545922,
               _0x2dcdf7 = !_0x4cc0ae && !_0x410b1f && !_0x545922;
          var _0x3267cf, _0x18e097, _0x555502, _0x5d81c0, _0xb5ab8a = '';
          _0x410b1f ? (_0xb5ab8a = __dirname + '/',
               _0x3267cf = function (_0x517d86, _0x2ef207) {
                    const _0x19c42d = _0xc3a123;
                    return _0x555502 || (_0x555502 = require('fs')),
                         _0x5d81c0 || (_0x5d81c0 = require(_0x19c42d(0x6c6))),
                         _0x517d86 = _0x5d81c0[_0x19c42d(0x579)](_0x517d86),
                         _0x555502[_0x19c42d(0x7f6)](_0x517d86, _0x2ef207 ? null : 'utf8');
               }
               ,
               _0x18e097 = function (_0x2d252a) {
                    const _0x1695bf = _0xc3a123;
                    var _0x2d42ad = _0x3267cf(_0x2d252a, !0x0);
                    return _0x2d42ad[_0x1695bf(0x25d)] || (_0x2d42ad = new Uint8Array(_0x2d42ad)),
                         _0x3221e7(_0x2d42ad[_0x1695bf(0x25d)]),
                         _0x2d42ad;
               }
               ,
               process[_0xc3a123(0x9df)][_0xc3a123(0x72b)] > 0x1 && process['argv'][0x1]['replace'](/\\/g, '/'),
               process[_0xc3a123(0x9df)][_0xc3a123(0x21c)](0x2),
               _0xc3a123(0x211) != typeof module && (module[_0xc3a123(0x705)] = _0x3f783a),
               process['on'](_0xc3a123(0xb67), function (_0x442ced) {
                    if (!(_0x442ced instanceof _0x4c8de9))
                         throw _0x442ced;
               }),
               process['on'](_0xc3a123(0x38e), _0x23763f),
               _0x3f783a[_0xc3a123(0xa69)] = function () {
                    const _0x402311 = _0xc3a123;
                    return _0x402311(0xd6b);
               }
          ) : _0x2dcdf7 ? (_0xc3a123(0x211) != typeof read && (_0x3267cf = function (_0xb4709b) {
               return read(_0xb4709b);
          }
          ),
               _0x18e097 = function (_0x376d87) {
                    const _0x1dcb19 = _0xc3a123;
                    var _0x34efa2;
                    return 'function' == typeof readbuffer ? new Uint8Array(readbuffer(_0x376d87)) : (_0x3221e7('object' == typeof (_0x34efa2 = read(_0x376d87, _0x1dcb19(0x1bb)))),
                         _0x34efa2);
               }
               ,
               'undefined' != typeof scriptArgs && scriptArgs,
               _0xc3a123(0x211) != typeof print && (_0xc3a123(0x211) == typeof console && (console = {}),
                    console[_0xc3a123(0x7bc)] = print,
                    console[_0xc3a123(0x1eb)] = console[_0xc3a123(0x749)] = _0xc3a123(0x211) != typeof printErr ? printErr : print)) : (_0x4cc0ae || _0x545922) && (_0x545922 ? _0xb5ab8a = self['location'][_0xc3a123(0x9fd)] : document[_0xc3a123(0x959)] && (_0xb5ab8a = document[_0xc3a123(0x959)][_0xc3a123(0xaa4)]),
                         _0xb5ab8a = 0x0 !== _0xb5ab8a['indexOf']('blob:') ? _0xb5ab8a[_0xc3a123(0x563)](0x0, _0xb5ab8a[_0xc3a123(0x61c)]('/') + 0x1) : '',
                         _0x3267cf = function (_0xd0446) {
                              const _0x1cbd9c = _0xc3a123;
                              var _0x38fdb1 = new XMLHttpRequest();
                              return _0x38fdb1[_0x1cbd9c(0xb3f)]('GET', _0xd0446, !0x1),
                                   _0x38fdb1[_0x1cbd9c(0x8f7)](null),
                                   _0x38fdb1[_0x1cbd9c(0xc0e)];
                         }
                         ,
                         _0x545922 && (_0x18e097 = function (_0x468645) {
                              const _0x4e4e51 = _0xc3a123;
                              var _0x556b8c = new XMLHttpRequest();
                              return _0x556b8c[_0x4e4e51(0xb3f)](_0x4e4e51(0x296), _0x468645, !0x1),
                                   _0x556b8c[_0x4e4e51(0xace)] = _0x4e4e51(0x30b),
                                   _0x556b8c['send'](null),
                                   new Uint8Array(_0x556b8c['response']);
                         }
                         ));
          var _0x4c80de, _0xb3dc97, _0x440ccc = _0x3f783a[_0xc3a123(0x750)] || console[_0xc3a123(0x7bc)][_0xc3a123(0x5c4)](console), _0x169ebd = _0x3f783a[_0xc3a123(0xc05)] || console[_0xc3a123(0x1eb)][_0xc3a123(0x5c4)](console);
          for (_0x2ba0bb in _0xb5a776)
               _0xb5a776[_0xc3a123(0x6e8)](_0x2ba0bb) && (_0x3f783a[_0x2ba0bb] = _0xb5a776[_0x2ba0bb]);
          _0xb5a776 = null,
               _0x3f783a[_0xc3a123(0xc32)],
               _0x3f783a[_0xc3a123(0x5f9)],
               _0x3f783a[_0xc3a123(0xd46)],
               _0x3f783a['wasmBinary'] && (_0x4c80de = _0x3f783a[_0xc3a123(0x3d4)]),
               _0x3f783a[_0xc3a123(0x285)],
               'object' != typeof WebAssembly && _0x169ebd(_0xc3a123(0x35b));
          var _0x51649c = new WebAssembly['Table']({
               'initial': 0x6,
               'maximum': 0x6,
               'element': _0xc3a123(0x26e)
          })
               , _0x4c827d = !0x1;
          function _0x3221e7(_0x2c678c, _0x3fb4cf) {
               _0x2c678c || _0x23763f('Assertion\x20failed:\x20' + _0x3fb4cf);
          }
          var _0x3e4425 = _0xc3a123(0x211) != typeof TextDecoder ? new TextDecoder(_0xc3a123(0x7af)) : void 0x0;
          function _0x2aabf2(_0x28a533, _0x342aad, _0x314250) {
               const _0x3e337a = _0xc3a123;
               for (var _0x2e8aa3 = _0x342aad + _0x314250, _0x5dd04c = _0x342aad; _0x28a533[_0x5dd04c] && !(_0x5dd04c >= _0x2e8aa3);)
                    ++_0x5dd04c;
               if (_0x5dd04c - _0x342aad > 0x10 && _0x28a533[_0x3e337a(0x4ca)] && _0x3e4425)
                    return _0x3e4425[_0x3e337a(0xcb7)](_0x28a533[_0x3e337a(0x4ca)](_0x342aad, _0x5dd04c));
               for (var _0x49e054 = ''; _0x342aad < _0x5dd04c;) {
                    var _0x57073d = _0x28a533[_0x342aad++];
                    if (0x80 & _0x57073d) {
                         var _0x349347 = 0x3f & _0x28a533[_0x342aad++];
                         if (0xc0 != (0xe0 & _0x57073d)) {
                              var _0x21ffd6 = 0x3f & _0x28a533[_0x342aad++];
                              if ((_0x57073d = 0xe0 == (0xf0 & _0x57073d) ? (0xf & _0x57073d) << 0xc | _0x349347 << 0x6 | _0x21ffd6 : (0x7 & _0x57073d) << 0x12 | _0x349347 << 0xc | _0x21ffd6 << 0x6 | 0x3f & _0x28a533[_0x342aad++]) < 0x10000)
                                   _0x49e054 += String[_0x3e337a(0x8a3)](_0x57073d);
                              else {
                                   var _0x2b420e = _0x57073d - 0x10000;
                                   _0x49e054 += String['fromCharCode'](0xd800 | _0x2b420e >> 0xa, 0xdc00 | 0x3ff & _0x2b420e);
                              }
                         } else
                              _0x49e054 += String[_0x3e337a(0x8a3)]((0x1f & _0x57073d) << 0x6 | _0x349347);
                    } else
                         _0x49e054 += String[_0x3e337a(0x8a3)](_0x57073d);
               }
               return _0x49e054;
          }
          function _0x13eab0(_0x37767d, _0x5e69bf) {
               return _0x37767d ? _0x2aabf2(_0x251eb5, _0x37767d, _0x5e69bf) : '';
          }
          _0xc3a123(0x211) != typeof TextDecoder && new TextDecoder('utf-16le');
          var _0x2441ef, _0x32daf8, _0x251eb5, _0x39576e, _0x56dff2 = 0x10000;
          function _0xbaaf1(_0x56beb8, _0xbf1c23) {
               return _0x56beb8 % _0xbf1c23 > 0x0 && (_0x56beb8 += _0xbf1c23 - _0x56beb8 % _0xbf1c23),
                    _0x56beb8;
          }
          function _0x2208a4(_0x4a1b16) {
               const _0x3b0e62 = _0xc3a123;
               _0x2441ef = _0x4a1b16,
                    _0x3f783a[_0x3b0e62(0x5b4)] = _0x32daf8 = new Int8Array(_0x4a1b16),
                    _0x3f783a['HEAP16'] = new Int16Array(_0x4a1b16),
                    _0x3f783a['HEAP32'] = _0x39576e = new Int32Array(_0x4a1b16),
                    _0x3f783a[_0x3b0e62(0x79f)] = _0x251eb5 = new Uint8Array(_0x4a1b16),
                    _0x3f783a['HEAPU16'] = new Uint16Array(_0x4a1b16),
                    _0x3f783a[_0x3b0e62(0x73e)] = new Uint32Array(_0x4a1b16),
                    _0x3f783a[_0x3b0e62(0xccf)] = new Float32Array(_0x4a1b16),
                    _0x3f783a[_0x3b0e62(0x5e7)] = new Float64Array(_0x4a1b16);
          }
          var _0x3e95cd = 0x501260
               , _0x48862d = 0x11c0
               , _0x5d0683 = _0x3f783a[_0xc3a123(0x62c)] || 0x1000000;
          function _0x149889(_0x463586) {
               const _0x5b1af9 = _0xc3a123;
               for (; _0x463586[_0x5b1af9(0x72b)] > 0x0;) {
                    var _0x2fda22 = _0x463586[_0x5b1af9(0x90f)]();
                    if (_0x5b1af9(0x1a2) != typeof _0x2fda22) {
                         var _0x381c07 = _0x2fda22['func'];
                         _0x5b1af9(0x6f6) == typeof _0x381c07 ? void 0x0 === _0x2fda22[_0x5b1af9(0xa11)] ? _0x3f783a[_0x5b1af9(0xbb3)](_0x381c07) : _0x3f783a[_0x5b1af9(0x51b)](_0x381c07, _0x2fda22[_0x5b1af9(0xa11)]) : _0x381c07(void 0x0 === _0x2fda22[_0x5b1af9(0xa11)] ? null : _0x2fda22['arg']);
                    } else
                         _0x2fda22();
               }
          }
          (_0xb3dc97 = _0x3f783a[_0xc3a123(0x7e1)] ? _0x3f783a[_0xc3a123(0x7e1)] : new WebAssembly[(_0xc3a123(0x98f))]({
               'initial': _0x5d0683 / _0x56dff2
          })) && (_0x2441ef = _0xb3dc97['buffer']),
               _0x5d0683 = _0x2441ef['byteLength'],
               _0x2208a4(_0x2441ef),
               _0x39576e[_0x48862d >> 0x2] = _0x3e95cd;
          var _0xe298a7 = []
               , _0x168c47 = []
               , _0x4268dd = []
               , _0x217720 = [];
          function _0x3b7f97() {
               const _0x469c65 = _0xc3a123;
               if (_0x3f783a[_0x469c65(0x7ce)]) {
                    for (_0x469c65(0x1a2) == typeof _0x3f783a[_0x469c65(0x7ce)] && (_0x3f783a[_0x469c65(0x7ce)] = [_0x3f783a[_0x469c65(0x7ce)]]); _0x3f783a[_0x469c65(0x7ce)][_0x469c65(0x72b)];)
                         _0x5e5f39(_0x3f783a[_0x469c65(0x7ce)][_0x469c65(0x90f)]());
               }
               _0x149889(_0xe298a7);
          }
          function _0x58cfa0() {
               _0x149889(_0x168c47);
          }
          function _0x1849ea() {
               _0x149889(_0x4268dd);
          }
          function _0x2851fe() {
               const _0x11f220 = _0xc3a123;
               if (_0x3f783a['postRun']) {
                    for (_0x11f220(0x1a2) == typeof _0x3f783a[_0x11f220(0x3e2)] && (_0x3f783a['postRun'] = [_0x3f783a[_0x11f220(0x3e2)]]); _0x3f783a[_0x11f220(0x3e2)][_0x11f220(0x72b)];)
                         _0x564399(_0x3f783a[_0x11f220(0x3e2)][_0x11f220(0x90f)]());
               }
               _0x149889(_0x217720);
          }
          function _0x5e5f39(_0x4fc180) {
               _0xe298a7['unshift'](_0x4fc180);
          }
          function _0x564399(_0x8cb026) {
               const _0x20d2ca = _0xc3a123;
               _0x217720[_0x20d2ca(0x4ec)](_0x8cb026);
          }
          var _0x1ced12 = 0x0
               , _0x1686af = null;
          function _0x2c151c(_0x564938) {
               const _0x3f26ff = _0xc3a123;
               _0x1ced12++,
                    _0x3f783a[_0x3f26ff(0x655)] && _0x3f783a[_0x3f26ff(0x655)](_0x1ced12);
          }
          function _0x410b9d(_0x12924f) {
               const _0x13fe3c = _0xc3a123;
               if (_0x1ced12--,
                    _0x3f783a[_0x13fe3c(0x655)] && _0x3f783a[_0x13fe3c(0x655)](_0x1ced12),
                    0x0 == _0x1ced12 && _0x1686af) {
                    var _0x5604f7 = _0x1686af;
                    _0x1686af = null,
                         _0x5604f7();
               }
          }
          function _0x23763f(_0x2dab14) {
               const _0x222305 = _0xc3a123;
               throw _0x3f783a[_0x222305(0x907)] && _0x3f783a[_0x222305(0x907)](_0x2dab14),
               _0x440ccc(_0x2dab14 += ''),
               _0x169ebd(_0x2dab14),
               _0x4c827d = !0x0,
               _0x2dab14 = _0x222305(0xccd) + _0x2dab14 + ').\x20Build\x20with\x20-s\x20ASSERTIONS=1\x20for\x20more\x20info.',
               new WebAssembly['RuntimeError'](_0x2dab14);
          }
          _0x3f783a[_0xc3a123(0x924)] = {},
               _0x3f783a[_0xc3a123(0x510)] = {};
          var _0x217b30 = _0xc3a123(0x5b8);
          function _0x16dec5(_0x20d712) {
               const _0xc1083b = _0xc3a123;
               return String[_0xc1083b(0x2d4)][_0xc1083b(0x203)] ? _0x20d712[_0xc1083b(0x203)](_0x217b30) : 0x0 === _0x20d712[_0xc1083b(0xcef)](_0x217b30);
          }
          var _0xc29623 = 'crunch.wasm';
          function _0x53b6d6() {
               const _0x15fe18 = _0xc3a123;
               try {
                    if (_0x4c80de)
                         return new Uint8Array(_0x4c80de);
                    if (_0x18e097)
                         return _0x18e097(_0xc29623);
                    throw _0x15fe18(0xc83);
               } catch (_0x275907) {
                    _0x23763f(_0x275907);
               }
          }
          function _0x59e050() {
               const _0x1f7581 = _0xc3a123;
               return _0x4c80de || !_0x4cc0ae && !_0x545922 || _0x1f7581(0x1a2) != typeof fetch ? new Promise(function (_0x3b0c43, _0xe446d) {
                    _0x3b0c43(_0x53b6d6());
               }
               ) : fetch(_0xc29623, {
                    'credentials': 'same-origin'
               })['then'](function (_0x2cd7e2) {
                    const _0x3820a7 = _0x1f7581;
                    if (!_0x2cd7e2['ok'])
                         throw _0x3820a7(0x9b6) + _0xc29623 + '\x27';
                    return _0x2cd7e2[_0x3820a7(0x5f7)]();
               })['catch'](function () {
                    return _0x53b6d6();
               });
          }
          function _0x18f8ad() {
               const _0xe6b92c = _0xc3a123;
               var _0x1fdeb7 = {
                    'env': _0x4650f5,
                    'wasi_unstable': _0x4650f5
               };
               function _0x4cd240(_0x5f4e9c, _0x2c6764) {
                    const _0x384f08 = _0x5e91;
                    var _0x48e046 = _0x5f4e9c[_0x384f08(0x705)];
                    _0x3f783a[_0x384f08(0x435)] = _0x48e046,
                         _0x410b9d();
               }
               function _0x3ef879(_0x5ec4db) {
                    const _0xd009f3 = _0x5e91;
                    _0x4cd240(_0x5ec4db[_0xd009f3(0x861)]);
               }
               function _0x2fa3bb(_0x19c1ed) {
                    const _0xd0e44b = _0x5e91;
                    return _0x59e050()[_0xd0e44b(0x7db)](function (_0x2e3e9e) {
                         const _0x59ff30 = _0xd0e44b;
                         return WebAssembly[_0x59ff30(0x476)](_0x2e3e9e, _0x1fdeb7);
                    })[_0xd0e44b(0x7db)](_0x19c1ed, function (_0xd3900) {
                         const _0x1af326 = _0xd0e44b;
                         _0x169ebd(_0x1af326(0x531) + _0xd3900),
                              _0x23763f(_0xd3900);
                    });
               }
               if (_0x2c151c(),
                    _0x3f783a[_0xe6b92c(0x81a)])
                    try {
                         return _0x3f783a['instantiateWasm'](_0x1fdeb7, _0x4cd240);
                    } catch (_0x469683) {
                         return _0x169ebd(_0xe6b92c(0x5ac) + _0x469683),
                              !0x1;
                    }
               return function () {
                    const _0x268349 = _0xe6b92c;
                    if (_0x4c80de || _0x268349(0x1a2) != typeof WebAssembly[_0x268349(0xb2a)] || _0x16dec5(_0xc29623) || 'function' != typeof fetch)
                         return _0x2fa3bb(_0x3ef879);
                    fetch(_0xc29623, {
                         'credentials': 'same-origin'
                    })[_0x268349(0x7db)](function (_0x5ce90b) {
                         const _0x45c563 = _0x268349;
                         return WebAssembly['instantiateStreaming'](_0x5ce90b, _0x1fdeb7)[_0x45c563(0x7db)](_0x3ef879, function (_0x442722) {
                              const _0x37feb8 = _0x45c563;
                              _0x169ebd(_0x37feb8(0x1dc) + _0x442722),
                                   _0x169ebd(_0x37feb8(0xcbf)),
                                   _0x2fa3bb(_0x3ef879);
                         });
                    });
               }(),
                    {};
          }
          function _0x126d2e() {
               const _0x3dbca8 = _0xc3a123;
               return _0x32daf8[_0x3dbca8(0x72b)];
          }
          function _0x2f0831(_0x52e9c3, _0x4b0f16, _0x1c8db2) {
               const _0x39ec1b = _0xc3a123;
               _0x251eb5[_0x39ec1b(0x320)](_0x251eb5[_0x39ec1b(0x4ca)](_0x4b0f16, _0x4b0f16 + _0x1c8db2), _0x52e9c3);
          }
          function _0x4e0fa5(_0x42e478) {
               const _0xe9955 = _0xc3a123;
               try {
                    return _0xb3dc97['grow'](_0x42e478 - _0x2441ef['byteLength'] + 0xffff >> 0x10),
                         _0x2208a4(_0xb3dc97[_0xe9955(0x25d)]),
                         0x1;
               } catch (_0x3ad2f4) { }
          }
          function _0x32d660(_0x5386da) {
               const _0x275a6d = _0xc3a123;
               var _0x374b65 = _0x126d2e()
                    , _0x25c622 = 0x10000
                    , _0x4a7c73 = 0x7fff0000;
               if (_0x5386da > _0x4a7c73)
                    return !0x1;
               for (var _0x85a172 = Math[_0x275a6d(0x590)](_0x374b65, 0x1000000); _0x85a172 < _0x5386da;)
                    _0x85a172 = _0x85a172 <= 0x20000000 ? _0xbaaf1(0x2 * _0x85a172, _0x25c622) : Math[_0x275a6d(0x455)](_0xbaaf1((0x3 * _0x85a172 + 0x80000000) / 0x4, _0x25c622), _0x4a7c73);
               return !!_0x4e0fa5(_0x85a172);
          }
          _0x16dec5(_0xc29623) || (_0xc29623 = _0x3b80ec(_0xc3a123(0x18b))),
               _0x168c47[_0xc3a123(0x63e)]({
                    'func': function () {
                         _0x266f9e();
                    }
               });
          var _0x18ac13 = {
               'buffers': [null, [], []],
               'printChar': function (_0xf65719, _0x27bdde) {
                    const _0x58fbd8 = _0xc3a123;
                    var _0x131069 = _0x18ac13[_0x58fbd8(0x888)][_0xf65719];
                    0x0 === _0x27bdde || 0xa === _0x27bdde ? ((0x1 === _0xf65719 ? _0x440ccc : _0x169ebd)(_0x2aabf2(_0x131069, 0x0)),
                         _0x131069[_0x58fbd8(0x72b)] = 0x0) : _0x131069[_0x58fbd8(0x63e)](_0x27bdde);
               },
               'varargs': 0x0,
               'get': function (_0x5a005f) {
                    const _0x22d9a7 = _0xc3a123;
                    return _0x18ac13[_0x22d9a7(0x9fc)] += 0x4,
                         _0x39576e[_0x18ac13[_0x22d9a7(0x9fc)] - 0x4 >> 0x2];
               },
               'getStr': function () {
                    const _0x5eea5e = _0xc3a123;
                    return _0x13eab0(_0x18ac13[_0x5eea5e(0x420)]());
               },
               'get64': function () {
                    const _0x353871 = _0xc3a123;
                    var _0xb6a97c = _0x18ac13[_0x353871(0x420)]();
                    return _0x18ac13[_0x353871(0x420)](),
                         _0xb6a97c;
               },
               'getZero': function () {
                    const _0x2d51d2 = _0xc3a123;
                    _0x18ac13[_0x2d51d2(0x420)]();
               }
          };
          function _0x348142(_0x2d37da, _0x551d0d, _0x114e68, _0x43b287) {
               const _0x12ead2 = _0xc3a123;
               try {
                    for (var _0x1004d5 = 0x0, _0x4c59db = 0x0; _0x4c59db < _0x114e68; _0x4c59db++) {
                         for (var _0x3deb98 = _0x39576e[_0x551d0d + 0x8 * _0x4c59db >> 0x2], _0xa3e9a0 = _0x39576e[_0x551d0d + (0x8 * _0x4c59db + 0x4) >> 0x2], _0x3c3457 = 0x0; _0x3c3457 < _0xa3e9a0; _0x3c3457++)
                              _0x18ac13[_0x12ead2(0x20f)](_0x2d37da, _0x251eb5[_0x3deb98 + _0x3c3457]);
                         _0x1004d5 += _0xa3e9a0;
                    }
                    return _0x39576e[_0x43b287 >> 0x2] = _0x1004d5,
                         0x0;
               } catch (_0x565b5b) {
                    return _0x12ead2(0x211) != typeof FS && _0x565b5b instanceof FS[_0x12ead2(0x840)] || _0x23763f(_0x565b5b),
                         _0x565b5b[_0x12ead2(0xd13)];
               }
          }
          var _0x4650f5 = {
               'a': _0x2f0831,
               'b': _0x32d660,
               'c': _0x348142,
               'memory': _0xb3dc97,
               'table': _0x51649c
          }
               , _0x2eb479 = _0x18f8ad();
          _0x3f783a['asm'] = _0x2eb479;
          var _0x266f9e = _0x3f783a[_0xc3a123(0x919)] = function () {
               const _0x411683 = _0xc3a123;
               return _0x3f783a[_0x411683(0x435)]['d']['apply'](null, arguments);
          }
               , _0x4c4762 = _0x3f783a['_malloc'] = function () {
                    const _0x18d493 = _0xc3a123;
                    return _0x3f783a[_0x18d493(0x435)]['e'][_0x18d493(0x83b)](null, arguments);
               }
               , _0x27e515 = _0x3f783a[_0xc3a123(0x4ae)] = function () {
                    const _0x1eb09f = _0xc3a123;
                    return _0x3f783a[_0x1eb09f(0x435)]['f']['apply'](null, arguments);
               }
               , _0x24705d = _0x3f783a[_0xc3a123(0x3f7)] = function () {
                    return _0x3f783a['asm']['g']['apply'](null, arguments);
               }
               , _0x231f6c = _0x3f783a['_crn_get_height'] = function () {
                    const _0x3c0b8c = _0xc3a123;
                    return _0x3f783a[_0x3c0b8c(0x435)]['h'][_0x3c0b8c(0x83b)](null, arguments);
               }
               , _0x391d40 = _0x3f783a[_0xc3a123(0xc20)] = function () {
                    const _0xca1b76 = _0xc3a123;
                    return _0x3f783a['asm']['i'][_0xca1b76(0x83b)](null, arguments);
               }
               , _0x34d5fa = _0x3f783a['_crn_get_dxt_format'] = function () {
                    const _0x4fab89 = _0xc3a123;
                    return _0x3f783a[_0x4fab89(0x435)]['j']['apply'](null, arguments);
               }
               ;
          _0x3f783a[_0xc3a123(0xce2)] = function () {
               const _0x4a0ebe = _0xc3a123;
               return _0x3f783a[_0x4a0ebe(0x435)]['k'][_0x4a0ebe(0x83b)](null, arguments);
          }
               ,
               _0x3f783a[_0xc3a123(0xa49)] = function () {
                    const _0x4974b0 = _0xc3a123;
                    return _0x3f783a[_0x4974b0(0x435)]['l'][_0x4974b0(0x83b)](null, arguments);
               }
               ;
          var _0x1cb176, _0x3ee379 = _0x3f783a[_0xc3a123(0xbf9)] = function () {
               const _0x8b7a8f = _0xc3a123;
               return _0x3f783a[_0x8b7a8f(0x435)]['m'][_0x8b7a8f(0x83b)](null, arguments);
          }
               ;
          function _0x4c8de9(_0x2522da) {
               const _0x2f5630 = _0xc3a123;
               this[_0x2f5630(0xca3)] = _0x2f5630(0x6a2),
                    this[_0x2f5630(0x91b)] = _0x2f5630(0x5fb) + _0x2522da + ')',
                    this[_0x2f5630(0x2c3)] = _0x2522da;
          }
          function _0x298a1c(_0x154c9f) {
               const _0x59fe3c = _0xc3a123;
               function _0x4a720d() {
                    const _0xf5768f = _0x5e91;
                    _0x1cb176 || (_0x1cb176 = !0x0,
                         _0x4c827d || (_0x58cfa0(),
                              _0x1849ea(),
                              _0x3f783a['onRuntimeInitialized'] && _0x3f783a[_0xf5768f(0x8c5)](),
                              _0x2851fe()));
               }
               _0x1ced12 > 0x0 || (_0x3b7f97(),
                    _0x1ced12 > 0x0 || (_0x3f783a[_0x59fe3c(0xaf2)] ? (_0x3f783a[_0x59fe3c(0xaf2)]('Running...'),
                         setTimeout(function () {
                              setTimeout(function () {
                                   const _0x205c35 = _0x5e91;
                                   _0x3f783a[_0x205c35(0xaf2)]('');
                              }, 0x1),
                                   _0x4a720d();
                         }, 0x1)) : _0x4a720d()));
          }
          if (_0x3f783a[_0xc3a123(0x435)] = _0x2eb479,
               _0x1686af = function _0x5d61ce() {
                    _0x1cb176 || _0x298a1c(),
                         _0x1cb176 || (_0x1686af = _0x5d61ce);
               }
               ,
               _0x3f783a['run'] = _0x298a1c,
               _0x3f783a[_0xc3a123(0x722)]) {
               for (_0xc3a123(0x1a2) == typeof _0x3f783a[_0xc3a123(0x722)] && (_0x3f783a[_0xc3a123(0x722)] = [_0x3f783a[_0xc3a123(0x722)]]); _0x3f783a[_0xc3a123(0x722)]['length'] > 0x0;)
                    _0x3f783a['preInit'][_0xc3a123(0x82c)]()();
          }
          _0x298a1c();
          var _0x204ea0, _0x37ef9a, _0x669a82 = {
               'cCRNFmtInvalid': -0x1,
               'cCRNFmtDXT1': 0x0,
               'cCRNFmtDXT3': 0x1,
               'cCRNFmtDXT5': 0x2
          }, _0x4d837a = {};
          _0x4d837a[_0x669a82[_0xc3a123(0x88f)]] = _0x3aea87[_0xc3a123(0x788)],
               _0x4d837a[_0x669a82[_0xc3a123(0x341)]] = _0x3aea87[_0xc3a123(0x3ad)],
               _0x4d837a[_0x669a82[_0xc3a123(0x90d)]] = _0x3aea87[_0xc3a123(0x215)];
          var _0x3106b7 = 0x0;
          function _0x3a18a4(_0x15d9b6, _0x48414a, _0x38f76b, _0x541d5d) {
               const _0x3c9301 = _0xc3a123;
               var _0x527966, _0x4e7906 = _0x38f76b / 0x4, _0x403f4d = _0x541d5d % 0x4, _0xf47119 = new Uint32Array(_0x15d9b6[_0x3c9301(0x25d)], 0x0, (_0x541d5d - _0x403f4d) / 0x4), _0x1d33a9 = new Uint32Array(_0x48414a[_0x3c9301(0x25d)]);
               for (_0x527966 = 0x0; _0x527966 < _0xf47119[_0x3c9301(0x72b)]; _0x527966++)
                    _0x1d33a9[_0x4e7906 + _0x527966] = _0xf47119[_0x527966];
               for (_0x527966 = _0x541d5d - _0x403f4d; _0x527966 < _0x541d5d; _0x527966++)
                    _0x48414a[_0x38f76b + _0x527966] = _0x15d9b6[_0x527966];
          }
          function _0x2228c1(_0x441a2e, _0x53260e) {
               const _0x1670fd = _0xc3a123;
               var _0x52dd33 = _0x441a2e[_0x1670fd(0x1ab)]
                    , _0x1d070c = _0x52dd33['byteLength']
                    , _0x1cf9f0 = new Uint8Array(_0x52dd33)
                    , _0x5ca021 = _0x4c4762(_0x1d070c);
               _0x3a18a4(_0x1cf9f0, _0x251eb5, _0x5ca021, _0x1d070c);
               var _0x1bb3ef = _0x34d5fa(_0x5ca021, _0x1d070c)
                    , _0x536a84 = _0x4d837a[_0x1bb3ef];
               if (!_0x353429(_0x536a84))
                    throw new RuntimeError(_0x1670fd(0x2a8));
               var _0x14fdcf, _0x265b98 = _0x391d40(_0x5ca021, _0x1d070c), _0x5ca3ee = _0x24705d(_0x5ca021, _0x1d070c), _0xeca106 = _0x231f6c(_0x5ca021, _0x1d070c), _0x233b17 = 0x0;
               for (_0x14fdcf = 0x0; _0x14fdcf < _0x265b98; ++_0x14fdcf)
                    _0x233b17 += _0x3aea87[_0x1670fd(0x5c5)](_0x536a84, _0x5ca3ee >> _0x14fdcf, _0xeca106 >> _0x14fdcf);
               if (_0x3106b7 < _0x233b17 && (_0x353429(_0x204ea0) && _0x27e515(_0x204ea0),
                    _0x204ea0 = _0x4c4762(_0x233b17),
                    _0x37ef9a = new Uint8Array(_0x251eb5[_0x1670fd(0x25d)], _0x204ea0, _0x233b17),
                    _0x3106b7 = _0x233b17),
                    _0x3ee379(_0x5ca021, _0x1d070c, _0x204ea0, _0x233b17, 0x0, _0x265b98),
                    _0x27e515(_0x5ca021),
                    Cesium[_0x1670fd(0x4d9)](_0x441a2e[_0x1670fd(0xd54)], !0x1)) {
                    var _0x11f102 = _0x37ef9a[_0x1670fd(0x21c)](0x0, _0x233b17);
                    return _0x53260e[_0x1670fd(0x63e)](_0x11f102[_0x1670fd(0x25d)]),
                         window[_0x1670fd(0x53c)] = new _0x4400d8(_0x536a84, _0x5ca3ee, _0xeca106, _0x11f102),
                         window['CompressedTextureBuffer'];
               }
               var _0x1e75d5 = _0x3aea87[_0x1670fd(0x5c5)](_0x536a84, _0x5ca3ee, _0xeca106)
                    , _0x1b61d4 = _0x37ef9a['subarray'](0x0, _0x1e75d5)
                    , _0x16997f = new Uint8Array(_0x1e75d5);
               return _0x16997f['set'](_0x1b61d4, 0x0),
                    _0x53260e[_0x1670fd(0x63e)](_0x16997f[_0x1670fd(0x25d)]),
                    new _0x4400d8(_0x536a84, _0x5ca3ee, _0xeca106, _0x16997f);
          }
          function _0x3f7e0e(_0x472514) {
               _0x2228c1(_0x472514, []);
          }
          function _0xd7caa2(_0x2be7c2, []) {
               _0x3f7e0e({
                    'bMipMap': !0x0,
                    'data': _0x2be7c2
               });
          }
          function _0x1a5fdd() { }
          const _0x2baac3 = {
               'CRN_DXT5': 0x1a
          };
          function _0x15fafb(_0x2914a7, _0x1f7546, _0x6ed9ed) {
               const _0x2b083d = _0xc3a123;
               let _0x576722 = {}
                    , _0x41f9d4 = _0x1f7546[_0x2b083d(0x214)][_0x2b083d(0x1c0)];
               for (let _0x26eabd = 0x0, _0x155064 = _0x41f9d4[_0x2b083d(0x72b)]; _0x26eabd < _0x155064; _0x26eabd++) {
                    let _0x50fb57 = _0x41f9d4[_0x26eabd][_0x2b083d(0x1c0)]
                         , _0x425155 = _0x50fb57['id']
                         , _0x3ed9c9 = new _0x3b324f();
                    _0x576722[_0x425155] = _0x3ed9c9;
                    let _0x15d98b = _0x50fb57[_0x2b083d(0x950)];
                    _0x3ed9c9['ambientColor'] = new Cesium[(_0x2b083d(0x821))](_0x15d98b['r'], _0x15d98b['g'], _0x15d98b['b'], _0x15d98b['a']);
                    let _0x2c4e99 = _0x50fb57[_0x2b083d(0xb5b)];
                    _0x3ed9c9[_0x2b083d(0xaa2)] = new Cesium['Color'](_0x2c4e99['r'], _0x2c4e99['g'], _0x2c4e99['b'], _0x2c4e99['a']);
                    let _0x1e6092 = _0x50fb57[_0x2b083d(0x981)];
                    _0x3ed9c9[_0x2b083d(0x471)] = new Cesium[(_0x2b083d(0x821))](_0x1e6092['r'], _0x1e6092['g'], _0x1e6092['b'], _0x1e6092['a']),
                         _0x3ed9c9[_0x2b083d(0x847)] = _0x50fb57['shininess'],
                         _0x3ed9c9['bTransparentSorting'] = _0x50fb57['transparentsorting'],
                         _0x3ed9c9[_0x2b083d(0x40d)] = _0x50fb57[_0x2b083d(0x40d)];
                    let _0x23dab3 = _0x50fb57[_0x2b083d(0x85c)]
                         , _0x12ebaf = _0x23dab3[_0x2b083d(0x72b)];
                    for (let _0x2bc3be = 0x0; _0x2bc3be < _0x12ebaf; _0x2bc3be++) {
                         let _0x3ba88e = _0x23dab3[_0x2bc3be][_0x2b083d(0x9ff)]
                              , _0x5710ca = _0x3ba88e['id']
                              , _0x51d996 = 0x0 === _0x3ba88e[_0x2b083d(0x2c0)]['u'] ? Cesium[_0x2b083d(0x7a5)][_0x2b083d(0x641)] : Cesium[_0x2b083d(0x7a5)]['CLAMP_TO_EDGE']
                              , _0x190a77 = 0x0 === _0x3ba88e['addressmode']['v'] ? Cesium[_0x2b083d(0x7a5)][_0x2b083d(0x641)] : Cesium['TextureWrap']['CLAMP_TO_EDGE'];
                         _0x3ed9c9[_0x2b083d(0xd21)] = Cesium[_0x2b083d(0xcdf)][_0x2b083d(0xb04)](_0x3ba88e[_0x2b083d(0x363)]);
                         let _0x1b3328 = _0x1f7546[_0x2b083d(0x245)][_0x5710ca];
                         if (Cesium['defined'](_0x1b3328) && _0x1b3328['arrayBufferView'][_0x2b083d(0x62b)] > 0x0) {
                              _0x1b3328[_0x2b083d(0x28e)] = _0x51d996,
                                   _0x1b3328[_0x2b083d(0x7a2)] = _0x190a77;
                              let _0x24c178 = _0x6ed9ed[_0x2b083d(0x421)] + _0x5710ca
                                   , _0x20e0b5 = _0x2914a7['textureCache']['getTexture'](_0x24c178);
                              if (!Cesium[_0x2b083d(0x336)](_0x20e0b5)) {
                                   if (_0x1b3328[_0x2b083d(0xb6c)] = !0x1,
                                        _0x1b3328[_0x2b083d(0x56f)] === _0x2baac3['CRN_DXT5'])
                                        _0xd7caa2(_0x1b3328[_0x2b083d(0x3e0)], []),
                                             _0x1b3328[_0x2b083d(0x3e0)] = window[_0x2b083d(0x53c)]['_buffer'],
                                             _0x20e0b5 = new _0x3d3090(_0x2914a7, _0x5710ca, _0x1b3328),
                                             _0x2914a7[_0x2b083d(0x973)]['addTexture'](_0x24c178, _0x20e0b5);
                                   else
                                        _0x20e0b5 = new _0x3d3090(_0x2914a7, _0x5710ca, _0x1b3328),
                                             _0x2914a7[_0x2b083d(0x973)]['addTexture'](_0x24c178, _0x20e0b5);
                              }
                              _0x3ed9c9[_0x2b083d(0xa0d)][_0x2b083d(0x63e)](_0x20e0b5);
                         }
                    }
               }
               return _0x576722;
          }
          function _0x3819d3(_0x39d6cb, _0x225227) {
               const _0x52b6f9 = _0xc3a123;
               let _0x560503, _0x2238e9, _0x1d8c76 = new Cesium[(_0x52b6f9(0xc1c))](), _0x5a31dc = new Cesium[(_0x52b6f9(0x25b))](), _0x25324e = _0x39d6cb[_0x52b6f9(0x761)][0x0], _0x8ab4c5 = _0x25324e[_0x52b6f9(0x8cf)], _0x52f90f = Cesium[_0x52b6f9(0x336)](_0x39d6cb[_0x52b6f9(0x408)]) && (_0x39d6cb[_0x52b6f9(0x408)] & _0x38a067['SVC_Vertex']) === _0x38a067[_0x52b6f9(0x741)], _0x12121d = 0x1;
               _0x52f90f ? (_0x12121d = _0x39d6cb[_0x52b6f9(0x474)],
                    _0x560503 = new Cesium['Cartesian3'](_0x39d6cb['minVerticesValue']['x'], _0x39d6cb['minVerticesValue']['y'], _0x39d6cb[_0x52b6f9(0x472)]['z']),
                    _0x2238e9 = new Uint16Array(_0x25324e[_0x52b6f9(0xcfb)][_0x52b6f9(0x25d)], _0x25324e[_0x52b6f9(0xcfb)][_0x52b6f9(0x490)], _0x25324e['typedArray'][_0x52b6f9(0x62b)] / 0x2)) : _0x2238e9 = new Float32Array(_0x25324e[_0x52b6f9(0xcfb)][_0x52b6f9(0x25d)], _0x25324e[_0x52b6f9(0xcfb)][_0x52b6f9(0x490)], _0x25324e['typedArray'][_0x52b6f9(0x62b)] / 0x4);
               let _0x210586 = [];
               for (let _0x1c84a2 = 0x0; _0x1c84a2 < _0x39d6cb['verticesCount']; _0x1c84a2++)
                    Cesium[_0x52b6f9(0x25b)]['fromArray'](_0x2238e9, _0x8ab4c5 * _0x1c84a2, _0x5a31dc),
                         _0x52f90f && (_0x5a31dc = Cesium[_0x52b6f9(0x25b)][_0x52b6f9(0xc03)](_0x5a31dc, _0x12121d, _0x5a31dc),
                              _0x5a31dc = Cesium[_0x52b6f9(0x25b)][_0x52b6f9(0x2ef)](_0x5a31dc, _0x560503, _0x5a31dc)),
                         _0x210586['push'](Cesium[_0x52b6f9(0x25b)][_0x52b6f9(0x432)](_0x5a31dc));
               return Cesium[_0x52b6f9(0xc1c)]['fromPoints'](_0x210586, _0x1d8c76),
                    Cesium[_0x52b6f9(0xc1c)][_0x52b6f9(0x335)](_0x1d8c76, _0x225227, _0x1d8c76),
                    _0x210586[_0x52b6f9(0x72b)] = 0x0,
                    _0x1d8c76;
          }
          let _0x489ae3 = new Cesium[(_0xc3a123(0x25b))]();
          function _0x264e63(_0x496044) {
               const _0x539b08 = _0xc3a123;
               let _0x49b20e = new Cesium['BoundingSphere']()
                    , _0x1aafff = _0x496044[_0x539b08(0x1a6)];
               if (!Cesium[_0x539b08(0x336)](_0x1aafff))
                    return _0x49b20e;
               let _0x483c1f = new Cesium['Cartesian3'](_0x1aafff[0x0], _0x1aafff[0x1], _0x1aafff[0x2])
                    , _0x232a9c = new Cesium[(_0x539b08(0x25b))](_0x1aafff[0x3], _0x1aafff[0x4], _0x1aafff[0x5])
                    , _0x28395f = new Cesium['Cartesian3'][(_0x539b08(0xc2b))](_0x483c1f, _0x232a9c, 0.5, _0x489ae3)
                    , _0x1d847c = new Cesium['Cartesian3'][(_0x539b08(0x3dd))](_0x28395f, _0x483c1f);
               return _0x49b20e[_0x539b08(0xa41)] = _0x28395f,
                    _0x49b20e[_0x539b08(0x38b)] = _0x1d847c,
                    _0x49b20e;
          }
          function _0x37577f(_0x3e0953, _0x4f89ce) {
               const _0xbd1dbf = _0xc3a123;
               return _0x3e0953[_0xbd1dbf(0x956)] > -0x1 ? _0x264e63(_0x3e0953) : _0x3819d3(_0x3e0953, _0x4f89ce);
          }
          function _0xc07b4d(_0x15c216, _0x494693, _0x10cdc4, _0x16a820, _0x59626e) {
               const _0x343776 = _0xc3a123;
               let _0x461d17 = {}
                    , _0x44baab = _0x16a820[_0x343776(0x660)];
               for (let _0x39e4f9 = 0x0, _0x1e25e8 = _0x44baab[_0x343776(0x72b)]; _0x39e4f9 < _0x1e25e8; _0x39e4f9++) {
                    let _0xcd1e34, _0x394b0a = _0x44baab[_0x39e4f9], _0x527459 = _0x394b0a[_0x343776(0x89c)], _0x4f5a46 = Cesium[_0x343776(0xcdf)]['multiply'](_0x15c216['modelMatrix'], _0x527459, new Cesium[(_0x343776(0xcdf))]()), _0x2df8ce = _0x394b0a[_0x343776(0x5db)];
                    for (let _0x689ec9 = 0x0, _0x200e06 = _0x2df8ce['length']; _0x689ec9 < _0x200e06; _0x689ec9++) {
                         let _0x206eef, _0x52ffb2 = _0x2df8ce[_0x689ec9], _0x1cfc2b = _0x494693[_0x343776(0x9b0)][_0x52ffb2], _0x4b30a6 = _0x1cfc2b[_0x343776(0xd49)], _0x5e31e3 = _0x1cfc2b[_0x343776(0x47d)], _0x16adc0 = _0x1cfc2b[_0x343776(0x239)];
                         _0x5e31e3[_0x343776(0x72b)] > 0x0 && (_0x206eef = _0x10cdc4[_0x5e31e3[0x0][_0x343776(0x586)]]);
                         let _0x45a5c1 = Cesium[_0x343776(0x336)](_0xcd1e34) ? _0xcd1e34 : _0x37577f(_0x4b30a6, _0x4f5a46);
                         _0x461d17[_0x52ffb2] = _0x4bd879[_0x15c216['fileType']]({
                              'layer': _0x15c216,
                              'vertexPackage': _0x4b30a6,
                              'arrIndexPackage': _0x5e31e3,
                              'pickInfo': _0x16adc0,
                              'modelMatrix': _0x4f5a46,
                              'geoMatrix': _0x527459,
                              'boundingVolume': _0x45a5c1,
                              'material': _0x206eef,
                              'edgeGeometry': _0x1cfc2b['edgeGeometry'],
                              'geoName': _0x52ffb2
                         });
                    }
               }
               if (!(Object['keys'](_0x461d17)[_0x343776(0x72b)] < 0x1)) {
                    if (!Cesium['defined'](_0x59626e['boundingVolume'])) {
                         let _0x2446c6 = [];
                         for (let _0x13f279 in _0x461d17)
                              _0x461d17[_0x343776(0x6e8)](_0x13f279) && _0x2446c6[_0x343776(0x63e)](_0x461d17[_0x13f279][_0x343776(0x802)]);
                         _0x59626e[_0x343776(0x802)] = {
                              'sphere': Cesium[_0x343776(0xc1c)]['fromBoundingSpheres'](_0x2446c6)
                         };
                    }
                    _0x59626e[_0x343776(0x475)] = _0x461d17;
               }
          }
          function _0x26672a(_0x5f1f50, _0x4e52f1, _0x2d5692) {
               const _0x4e059b = _0xc3a123;
               let _0x3446d4 = _0x4e52f1['groupNode']
                    , _0x417496 = [];
               for (let _0x5a52e6 = 0x0, _0xa91c00 = _0x3446d4['pageLods'][_0x4e059b(0x72b)]; _0x5a52e6 < _0xa91c00; _0x5a52e6++) {
                    let _0x33f66b = {}
                         , _0x639c4a = _0x3446d4[_0x4e059b(0xb12)][_0x5a52e6];
                    _0x33f66b[_0x4e059b(0xaf9)] = _0x639c4a['rangeMode'],
                         _0x33f66b[_0x4e059b(0x6fc)] = _0x639c4a['childTile'],
                         _0x33f66b['rangeList'] = _0x639c4a[_0x4e059b(0x894)];
                    let _0x5bc208 = _0x639c4a['boundingSphere'][_0x4e059b(0xa41)]
                         , _0x4d9f7c = _0x639c4a[_0x4e059b(0xa01)]['radius'];
                    '' !== _0x33f66b[_0x4e059b(0x6fc)] ? _0x33f66b[_0x4e059b(0x802)] = {
                         'sphere': {
                              'center': new Cesium[(_0x4e059b(0x25b))](_0x5bc208['x'], _0x5bc208['y'], _0x5bc208['z']),
                              'radius': _0x4d9f7c
                         }
                    } : _0x33f66b[_0x4e059b(0x9f6)] = !0x0,
                         _0xc07b4d(_0x5f1f50, _0x4e52f1, _0x2d5692, _0x639c4a, _0x33f66b),
                         Cesium[_0x4e059b(0x336)](_0x33f66b[_0x4e059b(0x475)]) && _0x417496[_0x4e059b(0x63e)](_0x33f66b);
               }
               return _0x417496;
          }
          _0x1a5fdd['parse'] = function (_0x5e3f2b, _0x200ea5, _0x59a8a9) {
               if (!Cesium['defined'](_0x200ea5))
                    return;
               return _0x26672a(_0x5e3f2b, _0x200ea5, _0x15fafb(_0x5e3f2b['context'], _0x200ea5, _0x59a8a9));
          }
               ;
          let _0x3a3263 = {
               'cache': {},
               'cacheSize': 0x0,
               'freeCache': {},
               'freeQueue': new Cesium['Queue'](),
               'freeCacheSize': 0x0,
               'throttleSize': 0x3200000,
               'getCache': function (_0x43db03, _0x5dbb75, _0x255993) {
                    const _0x1d2216 = _0xc3a123;
                    let _0x161078 = this[_0x1d2216(0x6c4)][_0x43db03];
                    _0x161078 || (_0x161078 = this['cache'][_0x43db03] = {});
                    let _0x1d50ae = _0x161078[_0x5dbb75];
                    _0x1d50ae || (_0x1d50ae = _0x161078[_0x5dbb75] = {});
                    let _0x840756 = _0x1d50ae[_0x255993];
                    return _0x840756 || (_0x840756 = _0x1d50ae[_0x255993] = {}),
                         _0x840756;
               },
               'get': function (_0x267c0b, _0x2ae40f, _0x5906de, _0x1df098) {
                    const _0x4e7c9b = _0xc3a123;
                    let _0x199360 = this['getCache'](_0x267c0b, _0x2ae40f, _0x5906de)[_0x1df098];
                    if (_0x199360)
                         return _0x199360[_0x4e7c9b(0xb9d)]++,
                              _0x199360;
               },
               'create': function (_0x5565c6) {
                    const _0x1e1506 = _0xc3a123;
                    let _0x22265b = _0x5565c6['context']
                         , _0x5a630d = _0x22265b['id']
                         , _0x31a6b9 = _0x5565c6['layerId']
                         , _0x73f764 = _0x5565c6[_0x1e1506(0x2b6)]
                         , _0x21b4d0 = _0x5565c6[_0x1e1506(0xda0)]
                         , _0x3d3a5b = this['getCache'](_0x5a630d, _0x31a6b9, _0x73f764)
                         , _0x56049d = _0x3d3a5b[_0x21b4d0];
                    if (_0x56049d)
                         return _0x56049d[_0x1e1506(0xb9d)]++,
                              _0x56049d;
                    let _0x1d2e17 = _0x5565c6[_0x1e1506(0x65e)]
                         , _0xa38a72 = _0x5565c6[_0x1e1506(0x48e)]
                         , _0x23c435 = _0x5565c6[_0x1e1506(0x56f)]
                         , _0x300001 = _0x5565c6['pixelFormat']
                         , _0x51823e = _0x5565c6[_0x1e1506(0x3e0)];
                    return _0x56049d = new _0x3d3090(_0x22265b, _0x21b4d0, {
                         'context': _0x22265b,
                         'layerId': _0x31a6b9,
                         'rootName': _0x73f764,
                         'textureId': _0x21b4d0,
                         'width': _0x1d2e17,
                         'height': _0xa38a72,
                         'compressType': _0x23c435,
                         'pixelFormat': _0x300001,
                         'internalFormat': _0x5565c6['internalFormat'],
                         'isTexBlock': !0x0,
                         'arrayBufferView': _0x51823e
                    }),
                         _0x3d3a5b[_0x21b4d0] = _0x56049d,
                         _0x56049d;
               },
               'del': function (_0x48d6e4) {
                    const _0x3f6c75 = _0xc3a123;
                    if (!_0x48d6e4[_0x3f6c75(0x6dc)])
                         return;
                    let _0x1718a9 = this[_0x3f6c75(0x274)](_0x48d6e4[_0x3f6c75(0x6dc)], _0x48d6e4[_0x3f6c75(0x5ea)], _0x48d6e4[_0x3f6c75(0x2b6)]);
                    _0x1718a9[_0x48d6e4['textureId']] && 0x0 == --_0x48d6e4[_0x3f6c75(0xb9d)] && (delete _0x1718a9[_0x48d6e4[_0x3f6c75(0xda0)]],
                         _0x48d6e4[_0x3f6c75(0x9bb)]());
               }
          };
          function _0x3d614c() {
               const _0x348164 = _0xc3a123;
               this[_0x348164(0x689)] = !0x1,
                    this[_0x348164(0x877)] = !0x1,
                    this[_0x348164(0x5ea)] = void 0x0,
                    this[_0x348164(0xb90)] = void 0x0,
                    this['refCount'] = 0x0,
                    this['id'] = void 0x0,
                    this['ambientColor'] = new Cesium['Cartesian4'](0x1, 0x1, 0x1, 0x1),
                    this[_0x348164(0xaa2)] = new Cesium[(_0x348164(0xce9))](0x1, 0x1, 0x1, 0x1),
                    this[_0x348164(0x471)] = new Cesium[(_0x348164(0xce9))](0x0),
                    this['shininess'] = 0x32,
                    this[_0x348164(0x9c6)] = !0x1,
                    this[_0x348164(0xa0d)] = [],
                    this['created'] = !0x1,
                    this['createdBaker'] = !0x1,
                    this[_0x348164(0x912)] = !0x1,
                    this[_0x348164(0x1ed)] = !0x1,
                    this[_0x348164(0x41c)] = void 0x0,
                    this[_0x348164(0x412)] = void 0x0,
                    this['subTextureNames'] = void 0x0,
                    this[_0x348164(0x7c4)] = void 0x0,
                    this[_0x348164(0x772)] = void 0x0,
                    this['oriTextureBake'] = void 0x0,
                    this[_0x348164(0xd98)] = void 0x0,
                    this[_0x348164(0x4ff)] = void 0x0,
                    this[_0x348164(0xce1)] = void 0x0,
                    this[_0x348164(0x514)] = void 0x0,
                    this[_0x348164(0x570)] = void 0x0,
                    this[_0x348164(0x207)] = void 0x0,
                    this[_0x348164(0xd61)] = !0x1,
                    this[_0x348164(0x5e9)] = !0x1,
                    this['textureRenderableFlag'] = !0x1,
                    this['textureBakeRenderableFlag'] = !0x1,
                    this['isCrnTexture'] = !0x1,
                    this[_0x348164(0x966)] = new Cesium[(_0x348164(0xb86))]();
          }
          let _0x331586 = {};
          function _0x190048(_0x5a17ad, _0xd043ee, _0x46165d) {
               const _0x408983 = _0xc3a123;
               for (let _0x1ea9b1 in _0x46165d)
                    if (_0x46165d[_0x408983(0x6e8)](_0x1ea9b1)) {
                         let _0x4a7b25 = _0x46165d[_0x1ea9b1]
                              , _0x195461 = Number(_0x1ea9b1);
                         _0xd043ee[_0x408983(0x86c)](_0x195461, 0x0, _0x4a7b25);
                    }
               _0xd043ee[_0x408983(0x2dc)](_0x5a17ad);
          }
          function _0x567d80(_0x7e79d5, _0x55f2e8, _0x49429e, _0x33f80e, _0x54a6be, _0x46b58f) {
               const _0x3fd98c = _0xc3a123;
               let _0x510067 = _0x54a6be[_0x33f80e];
               if (!_0x510067)
                    return;
               let _0x10969e = _0x3a3263[_0x3fd98c(0x420)](_0x7e79d5, _0x55f2e8, _0x49429e, _0x510067);
               for (; _0x510067 && _0x10969e && !_0x10969e[_0x3fd98c(0xb78)];)
                    _0x10969e['refCount']--,
                         _0x510067 = _0x54a6be[_0x510067],
                         _0x10969e = _0x3a3263[_0x3fd98c(0x420)](_0x7e79d5, _0x55f2e8, _0x49429e, _0x510067);
               return _0x46b58f['name'] = _0x510067,
                    _0x10969e;
          }
          function _0x517150(_0x3a7b01) {
               const _0x278525 = _0xc3a123;
               let _0x2fae2e = _0x3a7b01['indexOf']('.');
               return _0x3a7b01[_0x278525(0x563)](0x0, _0x2fae2e);
          }
          function _0x51151d() {
               const _0x32fc6a = _0xc3a123;
               this[_0x32fc6a(0x6c4)] = {};
          }
          function _0x13c1fa() {
               let _0x4d6b3b, _0x3e025a;
               const _0x1a616a = new Promise(function (_0x3630d8, _0x3548c8) {
                    _0x4d6b3b = _0x3630d8,
                         _0x3e025a = _0x3548c8;
               }
               );
               return {
                    'resolve': _0x4d6b3b,
                    'reject': _0x3e025a,
                    'promise': _0x1a616a
               };
          }
          function _0x4d557c() {
               const _0x1e2bbe = _0xc3a123;
               this[_0x1e2bbe(0x4f1)] = {},
                    this['cache'] = {},
                    this[_0x1e2bbe(0x81f)] = new Cesium[(_0x1e2bbe(0x1e5))](),
                    this[_0x1e2bbe(0x5ad)] = [],
                    this[_0x1e2bbe(0x263)] = {},
                    this[_0x1e2bbe(0x2f5)] = {},
                    this[_0x1e2bbe(0x218)] = {},
                    this[_0x1e2bbe(0xd3e)] = {};
          }
          _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x932)] = function (_0x20f6ae, _0x4d4258, _0x1eee11, _0x5acfe3, _0x3777f7, _0x597a7e, _0x3e7a48, _0x3e7428) {
               const _0xa9dbfd = _0xc3a123;
               if (this['createdBaker'])
                    return;
               this[_0xa9dbfd(0x207)] = {
                    'context': _0x20f6ae,
                    'layer': _0x4d4258,
                    'isRoot': _0x1eee11,
                    'rootName': _0x5acfe3,
                    'curTextureName': _0x3777f7,
                    'textureInfo': _0x597a7e,
                    'rootBatchIdMap': _0x3e7a48,
                    'ancestorMap': _0x3e7428
               },
                    this[_0xa9dbfd(0xcd2)] = !0x0,
                    this[_0xa9dbfd(0x1ed)] = _0x1eee11;
               let _0x30015b = _0x597a7e[_0xa9dbfd(0xbf2)]
                    , _0x51365c = PixelFormat[_0xa9dbfd(0x215)]
                    , _0x214999 = _0x3a3263['create']({
                         'context': _0x20f6ae,
                         'layerId': _0x4d4258['id'],
                         'rootName': _0x5acfe3,
                         'textureId': _0x597a7e['id'],
                         'width': _0x597a7e['width'],
                         'height': _0x597a7e[_0xa9dbfd(0x48e)],
                         'compressType': _0x597a7e[_0xa9dbfd(0x56f)],
                         'pixelFormat': _0x597a7e['format'],
                         'internalFormat': _0x51365c,
                         'arrayBufferView': _0x30015b
                    });
               _0x214999[_0xa9dbfd(0xb78)] = _0x1eee11;
               let _0x3c9c8c = _0x597a7e[_0xa9dbfd(0x686)][_0xa9dbfd(0x72b)]
                    , _0x4b58bf = _0x3e7a48[_0x597a7e['rootTextureName']];
               this[_0xa9dbfd(0xa0d)][_0xa9dbfd(0x63e)](_0x214999);
               let _0x5ca496 = [{
                    'functionName': _0xa9dbfd(0x246),
                    'componentDatatype': ComponentDatatype[_0xa9dbfd(0xa80)],
                    'componentsPerAttribute': 0x4
               }]
                    , _0x3ed362 = defined(_0x4b58bf) ? Object[_0xa9dbfd(0x60f)](_0x4b58bf)[_0xa9dbfd(0x72b)] : _0x3c9c8c;
               this[_0xa9dbfd(0x4ff)] = new BatchTable(_0x20f6ae, _0x5ca496, _0x3ed362),
                    this[_0xa9dbfd(0x4ff)]['suffix'] = '_2';
               let _0x121ce8 = _0x331586[_0x4d4258[_0xa9dbfd(0xca3)]];
               defined(_0x121ce8) || (_0x121ce8 = _0x331586[_0x4d4258[_0xa9dbfd(0xca3)]] = {});
               let _0x50caf3 = _0x121ce8[_0x5acfe3];
               defined(_0x50caf3) || (_0x50caf3 = _0x121ce8[_0x5acfe3] = {});
               let _0x3cf19a = _0x50caf3[_0x3777f7];
               defined(_0x3cf19a) || (_0x3cf19a = _0x50caf3[_0x3777f7] = {});
               let _0x466a46 = _0x597a7e[_0xa9dbfd(0x686)];
               for (let _0x5c3c50 = 0x0; _0x5c3c50 < _0x3c9c8c; _0x5c3c50++) {
                    let _0x47dc67 = _0x466a46[_0x5c3c50]
                         , _0x4125b = _0x47dc67['subName'][_0xa9dbfd(0x39b)]('_')[0x0]
                         , _0x3a150d = _0x47dc67[_0xa9dbfd(0x5d3)]
                         , _0x57846a = _0x47dc67[_0xa9dbfd(0xcb4)]
                         , _0x366285 = _0x47dc67[_0xa9dbfd(0x65e)]
                         , _0x97a917 = _0x47dc67[_0xa9dbfd(0x48e)]
                         , _0x431cf4 = new Cartesian4(_0x3a150d, _0x57846a, _0x366285, _0x97a917);
                    _0x3cf19a[_0x4125b] = _0x431cf4;
               }
               if (!_0x1eee11) {
                    this['subRequestNamesBake'] = [];
                    for (let _0x5a3c51 = 0x0; _0x5a3c51 < _0x597a7e[_0xa9dbfd(0x71e)][_0xa9dbfd(0x72b)]; _0x5a3c51++) {
                         let _0x1cf920 = _0x597a7e[_0xa9dbfd(0x71e)][_0x5a3c51]
                              , _0xb2eab5 = _0x517150(_0x1cf920);
                         if (_0xa9dbfd(0x7e9) === _0xb2eab5[_0xa9dbfd(0x39b)]('_')[0x0]) {
                              let _0x30d92a = _0x1cf920[_0xa9dbfd(0x39b)]('#')
                                   , _0x14ef5d = _0x517150(_0x30d92a[0x0]);
                              if (_0x30d92a[_0xa9dbfd(0x72b)] > 0x1) {
                                   let _0x553297 = _0x30d92a[0x1]
                                        , _0x47f351 = _0x553297[_0xa9dbfd(0x72b)];
                                   for (let _0x12182a = 0x0; _0x12182a < _0x47f351; _0x12182a += 0x3) {
                                        let _0x26ed78 = _0x14ef5d + '_' + _0x553297[_0xa9dbfd(0x617)](_0x12182a, _0x12182a + 0x3);
                                        this[_0xa9dbfd(0x412)][_0xa9dbfd(0x63e)](_0x26ed78);
                                   }
                              }
                         } else
                              this[_0xa9dbfd(0x412)]['push'](_0xb2eab5);
                    }
               }
               return this[_0xa9dbfd(0xbe0)] = _0x214999,
                    _0x214999;
          }
               ,
               _0x3d614c[_0xc3a123(0x2d4)]['initTexture'] = function () {
                    const _0x2bc3bc = _0xc3a123;
                    if (this[_0x2bc3bc(0xd61)] || !this['textureParameter'])
                         return;
                    this[_0x2bc3bc(0xd61)] = !0x0;
                    let _0x442845 = this[_0x2bc3bc(0x570)][_0x2bc3bc(0x878)]
                         , _0x2a693d = this[_0x2bc3bc(0x570)][_0x2bc3bc(0x9c9)]
                         , _0x451d0f = this[_0x2bc3bc(0x570)][_0x2bc3bc(0x689)]
                         , _0x495d8b = this['textureParameter'][_0x2bc3bc(0x2b6)]
                         , _0x5816e6 = this['textureParameter'][_0x2bc3bc(0xbc8)]
                         , _0x5d28c7 = this[_0x2bc3bc(0x570)][_0x2bc3bc(0xc0b)]
                         , _0x244ef1 = this[_0x2bc3bc(0x570)][_0x2bc3bc(0x66c)]
                         , _0x26913e = this['textureParameter'][_0x2bc3bc(0x36c)];
                    this['textureParameter'] = void 0x0;
                    let _0x2cbb4c = {}
                         , _0x5a4928 = _0x244ef1[_0x5d28c7[_0x2bc3bc(0x436)]]
                         , _0x3e8818 = _0x451d0f ? void 0x0 : _0x567d80(_0x442845['id'], _0x2a693d['id'], _0x495d8b, _0x5816e6, _0x26913e, _0x2cbb4c)
                         , _0x47c510 = _0x331586[_0x2a693d[_0x2bc3bc(0xca3)]];
                    _0x47c510 || (_0x47c510 = _0x331586[_0x2a693d[_0x2bc3bc(0xca3)]] = {});
                    let _0x4f0fc1 = _0x47c510[_0x495d8b];
                    _0x4f0fc1 || (_0x4f0fc1 = _0x47c510[_0x495d8b] = {});
                    let _0x5f2004 = _0x4f0fc1[_0x5816e6];
                    _0x5f2004 || (_0x5f2004 = _0x4f0fc1[_0x5816e6] = {});
                    let _0x30d719 = _0x451d0f ? void 0x0 : _0x2cbb4c[_0x2bc3bc(0xca3)] ? _0x4f0fc1[_0x2cbb4c['name']] : void 0x0
                         , _0x3a2997 = {}
                         , _0x45694b = _0x5d28c7[_0x2bc3bc(0x686)]
                         , _0x54b5a3 = []
                         , _0x2478c6 = _0x5d28c7[_0x2bc3bc(0x686)]['length'];
                    for (let _0x3426dc = 0x0; _0x3426dc < _0x2478c6; _0x3426dc++) {
                         let _0x1dac3b = _0x45694b[_0x3426dc]
                              , _0x215f29 = _0x1dac3b['subName'][_0x2bc3bc(0x39b)]('_')[0x0]
                              , _0x33be49 = _0x1dac3b[_0x2bc3bc(0x5d3)]
                              , _0x53f67c = _0x1dac3b[_0x2bc3bc(0xcb4)]
                              , _0x39f961 = _0x1dac3b['width']
                              , _0x1aab45 = _0x1dac3b['height']
                              , _0x935f86 = new Cesium[(_0x2bc3bc(0xce9))](_0x33be49, _0x53f67c, _0x39f961, _0x1aab45)
                              , _0x565f34 = _0x5a4928 ? _0x5a4928[_0x215f29] : _0x3426dc
                              , _0xb5a94a = _0x451d0f ? void 0x0 : _0x30d719 ? _0x30d719[_0x215f29] : void 0x0
                              , _0x51efb3 = _0xb5a94a || _0x935f86;
                         this['batchTable'][_0x2bc3bc(0x86c)](_0x565f34, 0x0, _0x51efb3),
                              _0x3a2997[_0x565f34] = _0x935f86,
                              _0x5f2004[_0x215f29] = _0x935f86,
                              _0x54b5a3[_0x2bc3bc(0x63e)](_0x1dac3b[_0x2bc3bc(0xb29)]);
                    }
                    this['subTexInfos'] = _0x45694b,
                         this[_0x2bc3bc(0xc45)] = _0x54b5a3,
                         this[_0x2bc3bc(0x772)] = _0x3a2997,
                         this[_0x2bc3bc(0xce1)] = _0x3e8818;
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)]['initBakeTexture'] = function () {
                    const _0x34ea95 = _0xc3a123;
                    if (this[_0x34ea95(0x5e9)] || !defined(this['textureParameterBake']))
                         return;
                    this[_0x34ea95(0x5e9)] = !0x0;
                    let _0x26cac0 = this[_0x34ea95(0x207)]['context']
                         , _0x2ca27c = this[_0x34ea95(0x207)][_0x34ea95(0x9c9)]
                         , _0x3edf47 = this[_0x34ea95(0x207)][_0x34ea95(0x689)]
                         , _0xca79da = this[_0x34ea95(0x207)][_0x34ea95(0x2b6)]
                         , _0x39b958 = this[_0x34ea95(0x207)][_0x34ea95(0xbc8)]
                         , _0x2746f0 = this['textureParameterBake']['textureInfo']
                         , _0x13830a = this[_0x34ea95(0x207)][_0x34ea95(0x66c)]
                         , _0x25f593 = this[_0x34ea95(0x207)]['ancestorMap'];
                    this['textureParameterBake'] = void 0x0;
                    let _0xa3eb60 = {}
                         , _0x23cfcc = _0x13830a[_0x2746f0['rootTextureName']]
                         , _0x51360a = _0x3edf47 ? void 0x0 : _0x567d80(_0x26cac0['id'], _0x2ca27c['id'], _0xca79da, _0x39b958, _0x25f593, _0xa3eb60)
                         , _0x5b91bf = _0x331586[_0x2ca27c['name']];
                    defined(_0x5b91bf) || (_0x5b91bf = _0x331586[_0x2ca27c[_0x34ea95(0xca3)]] = {});
                    let _0x39a939 = _0x5b91bf[_0xca79da];
                    defined(_0x39a939) || (_0x39a939 = _0x5b91bf[_0xca79da] = {});
                    let _0x13a80a = _0x39a939[_0x39b958];
                    defined(_0x13a80a) || (_0x13a80a = _0x39a939[_0x39b958] = {});
                    let _0x347d49 = _0x3edf47 ? void 0x0 : defined(_0xa3eb60['name']) ? _0x39a939[_0xa3eb60[_0x34ea95(0xca3)]] : void 0x0
                         , _0x4f1b3f = {}
                         , _0x39a8b8 = _0x2746f0[_0x34ea95(0x686)]
                         , _0x1313ea = []
                         , _0x2418bc = _0x2746f0[_0x34ea95(0x686)]['length'];
                    for (let _0x419c96 = 0x0; _0x419c96 < _0x2418bc; _0x419c96++) {
                         let _0x4b8bae = _0x39a8b8[_0x419c96]
                              , _0x566fd4 = _0x4b8bae[_0x34ea95(0xb29)][_0x34ea95(0x39b)]('_')[0x0]
                              , _0x114c79 = _0x4b8bae[_0x34ea95(0x5d3)]
                              , _0x2edaf1 = _0x4b8bae['offsetY']
                              , _0x50c4b2 = _0x4b8bae[_0x34ea95(0x65e)]
                              , _0x4a0e05 = _0x4b8bae['height']
                              , _0x49cbd3 = new Cartesian4(_0x114c79, _0x2edaf1, _0x50c4b2, _0x4a0e05)
                              , _0x40906f = defined(_0x23cfcc) ? _0x23cfcc[_0x566fd4] : _0x419c96
                              , _0x1baf9f = _0x3edf47 ? void 0x0 : defined(_0x347d49) ? _0x347d49[_0x566fd4] : void 0x0
                              , _0x1d2ce0 = defined(_0x1baf9f) ? _0x1baf9f : _0x49cbd3;
                         this[_0x34ea95(0x4ff)][_0x34ea95(0x86c)](_0x40906f, 0x0, _0x1d2ce0),
                              _0x4f1b3f[_0x40906f] = _0x49cbd3,
                              _0x13a80a[_0x566fd4] = _0x49cbd3,
                              _0x1313ea[_0x34ea95(0x63e)](_0x4b8bae['subName']);
                    }
                    this[_0x34ea95(0xd11)] = _0x39a8b8,
                         this[_0x34ea95(0x7c4)] = _0x1313ea,
                         this['_subBatchValuesBake'] = _0x4f1b3f,
                         this['_ancestorTextureBake'] = _0x51360a;
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x64e)] = function (_0x36f263, _0x47e9f8, _0x5b3e86, _0x42cc83, _0x36b34a) {
                    const _0xe5d652 = _0xc3a123;
                    if (this[_0xe5d652(0xc92)])
                         return;
                    let _0x29a082 = _0x36f263[_0xe5d652(0x878)]
                         , _0x323772 = _0x5b3e86['id']
                         , _0x4f47d4 = _0x36b34a[_0xe5d652(0x66c)]
                         , _0x51c346 = _0x36b34a['ancestorMap'];
                    this[_0xe5d652(0xada)] = _0x5b3e86['compressType'] === _0x582a9d[_0xe5d652(0x831)],
                         this[_0xe5d652(0x570)] = {
                              'context': _0x29a082,
                              'layer': _0x36f263,
                              'isRoot': _0x47e9f8[_0xe5d652(0x779)],
                              'rootName': _0x47e9f8['rootName'],
                              'curTextureName': _0x323772,
                              'textureInfo': _0x5b3e86,
                              'rootBatchIdMap': _0x4f47d4,
                              'ancestorMap': _0x51c346
                         },
                         this[_0xe5d652(0x689)] = _0x47e9f8[_0xe5d652(0x779)],
                         this[_0xe5d652(0xc92)] = !0x0,
                         this[_0xe5d652(0x912)] = _0x47e9f8['isRootTile'];
                    let _0x5c0ada = _0x5b3e86[_0xe5d652(0xbf2)]
                         , _0x5b5dae = Cesium[_0xe5d652(0x4e1)][_0xe5d652(0x215)]
                         , _0x20515d = _0x3a3263['create']({
                              'context': _0x29a082,
                              'layerId': _0x36f263['id'],
                              'rootName': _0x47e9f8[_0xe5d652(0x2b6)],
                              'textureId': _0x5b3e86['id'],
                              'width': _0x5b3e86['width'],
                              'height': _0x5b3e86[_0xe5d652(0x48e)],
                              'compressType': _0x5b3e86[_0xe5d652(0x56f)],
                              'supportCompressType': _0x36f263['_supportCompressType'],
                              'pixelFormat': _0x5b3e86['format'],
                              'internalFormat': _0x5b5dae,
                              'arrayBufferView': _0x5c0ada
                         });
                    _0x20515d[_0xe5d652(0xb78)] = _0x47e9f8[_0xe5d652(0x779)];
                    let _0x401df2 = _0x5b3e86[_0xe5d652(0x686)][_0xe5d652(0x72b)]
                         , _0x6860fc = _0x4f47d4[_0x5b3e86[_0xe5d652(0x436)]];
                    this[_0xe5d652(0xa0d)][_0xe5d652(0x63e)](_0x20515d);
                    let _0x305149 = [{
                         'functionName': _0xe5d652(0x6b5),
                         'componentDatatype': Cesium[_0xe5d652(0x5fa)][_0xe5d652(0xa80)],
                         'componentsPerAttribute': 0x4
                    }]
                         , _0x32ee21 = _0x6860fc ? Object['keys'](_0x6860fc)['length'] : _0x401df2;
                    this['batchTable'] = new Cesium[(_0xe5d652(0x8b0))](_0x29a082, _0x305149, _0x32ee21);
                    let _0xf19da1 = _0x331586[_0x36f263[_0xe5d652(0xca3)]];
                    _0xf19da1 || (_0xf19da1 = _0x331586[_0x36f263['name']] = {});
                    let _0x3b40f3 = _0xf19da1[_0x47e9f8[_0xe5d652(0x2b6)]];
                    _0x3b40f3 || (_0x3b40f3 = _0xf19da1[_0x47e9f8[_0xe5d652(0x2b6)]] = {});
                    let _0x55b9d0 = _0x3b40f3[_0x323772];
                    _0x55b9d0 || (_0x55b9d0 = _0x3b40f3[_0x323772] = {});
                    let _0x5c5c61 = _0x5b3e86[_0xe5d652(0x686)];
                    for (let _0x3fa9de = 0x0; _0x3fa9de < _0x401df2; _0x3fa9de++) {
                         let _0x5bdbf6 = _0x5c5c61[_0x3fa9de]
                              , _0x9a7b6b = _0x5bdbf6['subName'][_0xe5d652(0x39b)]('_')[0x0]
                              , _0x4263bc = _0x5bdbf6[_0xe5d652(0x5d3)]
                              , _0x1b3049 = _0x5bdbf6[_0xe5d652(0xcb4)]
                              , _0x3a28dc = _0x5bdbf6[_0xe5d652(0x65e)]
                              , _0x2b231d = _0x5bdbf6[_0xe5d652(0x48e)]
                              , _0x2e73e6 = new Cesium[(_0xe5d652(0xce9))](_0x4263bc, _0x1b3049, _0x3a28dc, _0x2b231d);
                         _0x55b9d0[_0x9a7b6b] = _0x2e73e6;
                    }
                    if (!_0x47e9f8[_0xe5d652(0x779)]) {
                         this[_0xe5d652(0x41c)] = [];
                         for (let _0x58bf07 = 0x0; _0x58bf07 < _0x5b3e86['requestNames'][_0xe5d652(0x72b)]; _0x58bf07++) {
                              let _0x128296 = _0x5b3e86[_0xe5d652(0x71e)][_0x58bf07]
                                   , _0xce9104 = _0x517150(_0x128296);
                              if (_0xe5d652(0x7e9) === _0xce9104[_0xe5d652(0x39b)]('_')[0x0]) {
                                   let _0x5def86 = _0x128296[_0xe5d652(0x39b)]('#')
                                        , _0x4b16c2 = _0x517150(_0x5def86[0x0]);
                                   if (_0x5def86['length'] > 0x1) {
                                        let _0x16ba4e = _0x5def86[0x1]
                                             , _0x3c7289 = _0x16ba4e['length'];
                                        for (let _0x50f0a5 = 0x0; _0x50f0a5 < _0x3c7289; _0x50f0a5 += 0x3) {
                                             let _0x204e3f = _0x4b16c2 + '_' + _0x16ba4e[_0xe5d652(0x617)](_0x50f0a5, _0x50f0a5 + 0x3);
                                             this[_0xe5d652(0x41c)][_0xe5d652(0x63e)](_0x204e3f);
                                        }
                                   }
                              } else
                                   this[_0xe5d652(0x41c)][_0xe5d652(0x63e)](_0xce9104);
                         }
                    }
                    return this[_0xe5d652(0x877)] = !(_0x47e9f8[_0xe5d652(0x779)] || 0x1 === _0x5b3e86[_0xe5d652(0x71e)][_0xe5d652(0x72b)] && _0x5b3e86[_0xe5d652(0x71e)][0x0] === _0x323772),
                         this['oriTexture'] = _0x20515d,
                         _0x20515d;
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x589)] = function (_0x171ccb, _0x1c02c6) {
                    const _0x4dabd1 = _0xc3a123;
                    if (this['subRequested'])
                         return;
                    if (!this[_0x4dabd1(0x41c)])
                         return;
                    _0x1c02c6[_0x4dabd1(0x878)];
                    let _0x507e21 = this[_0x4dabd1(0x41c)]
                         , _0x5295db = this[_0x4dabd1(0x686)]
                         , _0x48cbe3 = this[_0x4dabd1(0xc45)]
                         , _0x4aa4ac = this[_0x4dabd1(0x772)]
                         , _0x16454d = this['oriTexture']
                         , _0x447fb9 = []
                         , _0x26c1a4 = this['tile'][_0x4dabd1(0x345)][_0x4dabd1(0x29f)][_0x4dabd1(0x617)](0x0, this[_0x4dabd1(0xb90)][_0x4dabd1(0x345)][_0x4dabd1(0x29f)][_0x4dabd1(0x61c)]('/') + 0x1)
                         , _0x4ca381 = _0x1c02c6[_0x4dabd1(0x873)]
                         , _0x441d44 = this[_0x4dabd1(0x966)];
                    for (let _0x554de2 = 0x0, _0x11c0c1 = _0x507e21['length']; _0x554de2 < _0x11c0c1; _0x554de2++) {
                         let _0x4a00b6 = _0x507e21[_0x554de2]
                              , _0x56cd1a = _0x4ca381['get'](_0x1c02c6['id'], _0x26c1a4, _0x4a00b6, this, this['tile']);
                         if (!_0x56cd1a)
                              continue;
                         let _0x36ff22 = _0x56cd1a['result'];
                         _0x447fb9[_0x4dabd1(0x63e)](_0x554de2);
                         for (let _0x2b77b5 in _0x36ff22)
                              if (_0x36ff22[_0x4dabd1(0x6e8)](_0x2b77b5)) {
                                   let _0xdb9e10 = _0x36ff22[_0x2b77b5]
                                        , _0x2bd2f1 = _0x48cbe3['indexOf'](_0x2b77b5);
                                   if (_0x2bd2f1 < 0x0 && this[_0x4dabd1(0x877)])
                                        continue;
                                   let _0xefa335 = 0x0
                                        , _0x5de9df = 0x0
                                        , _0xa3dd1c = _0xdb9e10[_0x4dabd1(0x65e)]
                                        , _0x388086 = _0xdb9e10[_0x4dabd1(0x48e)];
                                   if (_0x2bd2f1 >= 0x0) {
                                        let _0x4773ba = _0x5295db[_0x2bd2f1];
                                        _0xefa335 = _0x4773ba[_0x4dabd1(0x5d3)],
                                             _0x5de9df = _0x4773ba[_0x4dabd1(0xcb4)];
                                   }
                                   this['isLeaf'] ? _0x441d44[_0x4dabd1(0x1f0)]({
                                        'texture': _0x16454d,
                                        'subTextureInfo': {
                                             'xOffset': _0xefa335,
                                             'yOffset': _0x5de9df,
                                             'width': _0xa3dd1c,
                                             'height': _0x388086,
                                             'arrayBufferView': _0xdb9e10[_0x4dabd1(0x3e0)]
                                        }
                                   }) : _0x16454d[_0x4dabd1(0x3e0)] = _0xdb9e10[_0x4dabd1(0x3e0)];
                              }
                    }
                    if (_0x447fb9[_0x4dabd1(0x72b)] === _0x507e21[_0x4dabd1(0x72b)])
                         _0x507e21['length'] = 0x0;
                    else {
                         let _0x41197f = 0x0;
                         for (let _0x2cc411 = 0x0, _0x474b52 = _0x447fb9[_0x4dabd1(0x72b)]; _0x2cc411 < _0x474b52; _0x2cc411++)
                              _0x507e21[_0x4dabd1(0x3d3)](_0x447fb9[_0x2cc411] - _0x41197f, 0x1),
                                   _0x41197f++;
                    }
                    0x0 === _0x507e21[_0x4dabd1(0x72b)] && (this[_0x4dabd1(0x44c)] = !0x0,
                         this[_0x4dabd1(0x877)] || _0x16454d[_0x4dabd1(0x366)](),
                         _0x190048(_0x171ccb, this[_0x4dabd1(0xd98)], _0x4aa4ac),
                         this[_0x4dabd1(0x912)] = !0x0,
                         this['subRequestNames'] = void 0x0,
                         this[_0x4dabd1(0xc45)] = void 0x0,
                         this[_0x4dabd1(0x772)] = void 0x0,
                         this[_0x4dabd1(0x686)] = void 0x0);
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x7ed)] = function (_0x2d7cee, _0x2f42de, _0x37546a, _0x9e086c) {
                    const _0x504b99 = _0xc3a123;
                    if (this[_0x504b99(0x1ed)])
                         return;
                    if (!defined(this[_0x504b99(0x412)]))
                         return;
                    let _0x5aa278 = this[_0x504b99(0x412)]
                         , _0x70fb1b = this[_0x504b99(0xd11)]
                         , _0x2e2773 = this[_0x504b99(0x7c4)]
                         , _0x2b70b7 = this[_0x504b99(0x85d)]
                         , _0x22662d = this[_0x504b99(0xbe0)]
                         , _0x5df044 = []
                         , _0x21ec70 = _0x37546a[_0x504b99(0x54a)]
                         , _0x3a3ae6 = _0x37546a[_0x504b99(0x949)];
                    for (let _0x151c48 = 0x0, _0x47304f = _0x5aa278[_0x504b99(0x72b)]; _0x151c48 < _0x47304f; _0x151c48++) {
                         let _0x2017ac = _0x5aa278[_0x151c48]
                              , _0x38c226 = _0x3a3ae6[_0x504b99(0x420)](_0x37546a[_0x504b99(0x5b5)], _0x21ec70, _0x2017ac, this);
                         if (!_0x38c226)
                              continue;
                         let _0xdc6ab5 = _0x38c226['result'];
                         _0x5df044[_0x504b99(0x63e)](_0x151c48);
                         for (let _0xd6a97b in _0xdc6ab5)
                              if (_0xdc6ab5[_0x504b99(0x6e8)](_0xd6a97b)) {
                                   let _0x3da3ef = _0xdc6ab5[_0xd6a97b]
                                        , _0x2b0631 = _0x2e2773[_0x504b99(0xcef)](_0xd6a97b);
                                   if (_0x2b0631 < 0x0 && this[_0x504b99(0x877)])
                                        continue;
                                   let _0x9b7753 = 0x0
                                        , _0x3464e5 = 0x0
                                        , _0x391948 = _0x3da3ef['width']
                                        , _0x587dd1 = _0x3da3ef[_0x504b99(0x48e)];
                                   if (_0x2b0631 >= 0x0) {
                                        let _0x443176 = _0x70fb1b[_0x2b0631];
                                        _0x9b7753 = _0x443176[_0x504b99(0x5d3)],
                                             _0x3464e5 = _0x443176['offsetY'];
                                   }
                                   _0x9e086c['enqueue']({
                                        'texture': _0x22662d,
                                        'subTextureInfo': {
                                             'xOffset': _0x9b7753,
                                             'yOffset': _0x3464e5,
                                             'width': _0x391948,
                                             'height': _0x587dd1,
                                             'arrayBufferView': _0x3da3ef[_0x504b99(0x3e0)]
                                        }
                                   });
                              }
                    }
                    if (_0x5df044['length'] === _0x5aa278[_0x504b99(0x72b)])
                         _0x5aa278[_0x504b99(0x72b)] = 0x0;
                    else {
                         let _0x5294b5 = 0x0;
                         for (let _0x239232 = 0x0, _0x40007a = _0x5df044['length']; _0x239232 < _0x40007a; _0x239232++)
                              _0x5aa278[_0x504b99(0x3d3)](_0x5df044[_0x239232] - _0x5294b5, 0x1),
                                   _0x5294b5++;
                    }
                    0x0 === _0x5aa278[_0x504b99(0x72b)] && (this['textureBakeRenderableFlag'] = !0x0,
                         this[_0x504b99(0x877)] || _0x22662d[_0x504b99(0x366)](),
                         this[_0x504b99(0x1ed)] = !0x0,
                         this['subRequestNamesBake'] = void 0x0,
                         this[_0x504b99(0x7c4)] = void 0x0,
                         this['_subBatchValuesBake'] = void 0x0,
                         this['_subTexInfosBake'] = void 0x0,
                         _0x190048(_0x2d7cee, this[_0x504b99(0x4ff)], _0x2b70b7));
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x8db)] = function () {
                    const _0x18601f = _0xc3a123;
                    if (!this['textureRenderableFlag'])
                         return;
                    this[_0x18601f(0x44c)] = !0x1;
                    let _0x4f1c90 = this[_0x18601f(0x514)];
                    _0x4f1c90[_0x18601f(0xb78)] = !0x0,
                         this[_0x18601f(0xce1)] && this[_0x18601f(0xce1)][_0x18601f(0xda0)] !== _0x4f1c90[_0x18601f(0xda0)] && _0x3a3263[_0x18601f(0xb1c)](this[_0x18601f(0xce1)]),
                         this['textures'][0x0] = _0x4f1c90,
                         this[_0x18601f(0x514)] = void 0x0,
                         this[_0x18601f(0xce1)] = void 0x0;
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)]['enableBakeTextureRenderable'] = function () {
                    const _0x528930 = _0xc3a123;
                    if (!this[_0x528930(0xc86)])
                         return;
                    this[_0x528930(0xc86)] = !0x1;
                    let _0x37784d = this[_0x528930(0xbe0)];
                    _0x37784d[_0x528930(0xb78)] = !0x0,
                         defined(this[_0x528930(0xb3b)]) && this[_0x528930(0xb3b)][_0x528930(0xda0)] !== _0x37784d[_0x528930(0xda0)] && _0x3a3263['del'](this[_0x528930(0xb3b)]),
                         this['textures'][0x1] = _0x37784d,
                         this[_0x528930(0xbe0)] = void 0x0,
                         this[_0x528930(0xb3b)] = void 0x0;
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x3d614c[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x39769c = _0xc3a123;
                    if (--this[_0x39769c(0xb9d)] > 0x0)
                         return;
                    let _0x4ff282 = this['tile'][_0x39769c(0x9c9)];
                    delete _0x4ff282[_0x39769c(0xac3)][_0x39769c(0x6c4)][this['id']],
                         this[_0x39769c(0x7a7)] = null,
                         this[_0x39769c(0xaa2)] = null,
                         this[_0x39769c(0x471)] = null;
                    for (let _0x2684df = 0x0, _0x3aa99f = this[_0x39769c(0xa0d)][_0x39769c(0x72b)]; _0x2684df < _0x3aa99f; _0x2684df++) {
                         let _0x55aec1 = this[_0x39769c(0xa0d)][_0x2684df];
                         _0x3a3263[_0x39769c(0xb1c)](_0x55aec1);
                    }
                    if (this[_0x39769c(0xa0d)][_0x39769c(0x72b)] = 0x0,
                         this[_0x39769c(0xd98)] = this[_0x39769c(0xd98)] && this[_0x39769c(0xd98)]['destroy'](),
                         this['batchTableBake'] = this['batchTableBake'] && this['batchTableBake'][_0x39769c(0x9bb)](),
                         this[_0x39769c(0xb07)] = void 0x0,
                         this[_0x39769c(0xc45)] = void 0x0,
                         this[_0x39769c(0x772)] = void 0x0,
                         this[_0x39769c(0x7c4)] = void 0x0,
                         this['_subTexInfosBake'] = void 0x0,
                         Cesium['defined'](this['ancestorTexture']) && this['ancestorTexture'][_0x39769c(0xda0)] !== this[_0x39769c(0x514)][_0x39769c(0xda0)] && _0x3a3263['del'](this[_0x39769c(0xce1)]),
                         this['oriTexture'] = void 0x0,
                         this['ancestorTexture'] = void 0x0,
                         this['tile'] = void 0x0,
                         this['textureParameter'] = void 0x0,
                         this[_0x39769c(0xbe0)] = void 0x0,
                         Cesium[_0x39769c(0x336)](this['subRequestNames'])) {
                         for (let _0x290eec = 0x0, _0x541b13 = this[_0x39769c(0x41c)][_0x39769c(0x72b)]; _0x290eec < _0x541b13; _0x290eec++) {
                              let _0x33a0af = this[_0x39769c(0x41c)][_0x290eec]
                                   , _0x14273e = _0x33a0af[_0x39769c(0x39b)]('.')[0x0]
                                   , _0x1a25e7 = _0x33a0af[_0x39769c(0xcef)](_0x39769c(0x4e5));
                              _0x14273e = _0x1a25e7 > -0x1 ? _0x14273e + _0x33a0af[_0x39769c(0x617)](_0x1a25e7) : _0x14273e,
                                   _0x4ff282[_0x39769c(0x873)][_0x39769c(0xb1c)](_0x4ff282['id'], _0x14273e);
                         }
                         this[_0x39769c(0x41c)] = void 0x0;
                    }
                    if (Cesium['defined'](this[_0x39769c(0x412)])) {
                         for (i = 0x0,
                              j = this[_0x39769c(0x412)][_0x39769c(0x72b)]; i < j; i++) {
                              let _0x48d627 = this[_0x39769c(0x412)][i]
                                   , _0x7231c3 = _0x48d627[_0x39769c(0x39b)]('.')[0x0]
                                   , _0x11d9c4 = _0x48d627[_0x39769c(0xcef)](_0x39769c(0x4e5));
                              _0x7231c3 = _0x11d9c4 > -0x1 ? _0x7231c3 + _0x48d627[_0x39769c(0x617)](_0x11d9c4) : _0x7231c3,
                                   _0x4ff282[_0x39769c(0x949)][_0x39769c(0xb1c)](_0x4ff282['id'], _0x7231c3);
                         }
                         this[_0x39769c(0x41c)] = void 0x0;
                    }
                    return Cesium[_0x39769c(0x8e1)](this);
               }
               ,
               _0x51151d['prototype'][_0xc3a123(0x7e5)] = function (_0x5cc987) {
                    const _0xe2f1be = _0xc3a123;
                    let _0x29745e = this['cache'][_0x5cc987];
                    return _0x29745e ? _0x29745e['refCount']++ : (_0x29745e = new _0x3d614c(),
                         this[_0xe2f1be(0x6c4)][_0x5cc987] = _0x29745e),
                         _0x29745e;
               }
               ,
               _0x51151d[_0xc3a123(0x2d4)][_0xc3a123(0x441)] = function (_0x234cf4) {
                    const _0x29ee12 = _0xc3a123;
                    let _0x428fb5 = this[_0x29ee12(0x6c4)][_0x234cf4];
                    _0x428fb5 && 0x0 == --_0x428fb5[_0x29ee12(0xb9d)] && (delete this[_0x29ee12(0x6c4)][_0x234cf4],
                         _0x428fb5[_0x29ee12(0x9bb)]());
               }
               ;
          const _0xd29427 = {
               'UnLoad': 0x0,
               'Loading': 0x1,
               'Loaded': 0x2,
               'Parsing': 0x3,
               'Ready': 0x4,
               'Failed': 0x5
          };
          let _0x320941 = 0x0;
          const _0x57a578 = 0xc800000;
          _0x4d557c['prototype'][_0xc3a123(0x57a)] = function (_0x38cb12, _0x110673, _0x118c50, _0x3cb6b5, _0xbfd5ef) {
               const _0x28b634 = _0xc3a123;
               let _0x4c68a8 = _0x38cb12 + '_' + _0x118c50
                    , _0x15dde9 = _0x110673 + _0x118c50 + '.texblock'
                    , _0x5429f5 = new Cesium[(_0x28b634(0xd8c))]({
                         'url': _0x15dde9,
                         'throttle': !0x0,
                         'throttleByServer': !0x0,
                         'priorityFunction': function () {
                              return _0x3cb6b5['distanceToCamera'];
                         }
                    });
               _0x5429f5[_0x28b634(0xc29)] = _0x118c50,
                    _0x5429f5['providerName'] = _0xbfd5ef['tile'][_0x28b634(0x9c9)][_0x28b634(0xca3)],
                    _0x5429f5['keyWord'] = _0x4c68a8,
                    this[_0x28b634(0x5ad)][_0x28b634(0x63e)](_0x5429f5);
          }
               ;
          let _0x36e12c = function (_0x2be16d, _0x1d0faf) {
               const _0x2abd94 = _0xc3a123;
               return _0x2be16d[_0x2abd94(0x58c)] - _0x1d0faf['priority'];
          };
          function _0x160980(_0xba40aa) {
               const _0x4faf1d = _0xc3a123;
               let _0x2cc4dc = []
                    , _0x5ecb9c = {}
                    , _0x453720 = 0x0;
               for (let _0x2381f7 = 0x0, _0x3c4ff5 = _0xba40aa[_0x4faf1d(0x72b)]; _0x2381f7 < _0x3c4ff5; _0x2381f7++) {
                    let _0x42675d = _0xba40aa[_0x2381f7];
                    if (_0x42675d[_0x4faf1d(0xa0e)])
                         continue;
                    let _0x2f90fb = _0x42675d[_0x4faf1d(0xc29)];
                    _0x5ecb9c[_0x2f90fb] || (_0x5ecb9c[_0x2f90fb] = !0x0,
                         _0x2cc4dc[_0x4faf1d(0x63e)](_0x2f90fb),
                         _0x42675d[_0x4faf1d(0xa8a)] = _0x453720++);
               }
               return _0x2cc4dc;
          }
          function _0x5d6d3b(_0x311917, _0x307552) {
               const _0x229fdd = _0xc3a123;
               let _0x192560 = new DataView(_0x311917)
                    , _0x13a8ed = 0x0
                    , _0x460d0b = _0x192560[_0x229fdd(0x494)](_0x13a8ed, !0x0);
               if (_0x307552 > _0x460d0b - 0x1 || _0x460d0b > 0x100)
                    return;
               _0x13a8ed += 0x4;
               let _0x1c1a19, _0x58bb49, _0x4a5719 = [];
               for (_0x1c1a19 = 0x0; _0x1c1a19 < _0x460d0b; _0x1c1a19++)
                    _0x58bb49 = _0x192560[_0x229fdd(0x494)](_0x13a8ed, !0x0),
                         _0x4a5719[_0x229fdd(0x63e)](_0x58bb49),
                         _0x13a8ed += 0x4;
               for (_0x1c1a19 = 0x0; _0x1c1a19 < _0x460d0b; _0x1c1a19++) {
                    if (_0x58bb49 = _0x4a5719[_0x1c1a19],
                         _0x1c1a19 === _0x307552) {
                         if (0x0 === _0x58bb49)
                              return;
                         return new Uint8Array(_0x311917)[_0x229fdd(0x21c)](_0x13a8ed, _0x13a8ed + _0x58bb49)[_0x229fdd(0x25d)];
                    }
                    _0x13a8ed += _0x58bb49;
               }
          }
          function _0x126376() { }
          function _0x4e7496(_0x13594e, _0x344aba, _0x3d5c82) {
               const _0x4225c8 = _0xc3a123;
               _0x13594e['context'];
               let _0x274579 = _0x13594e[_0x4225c8(0xac3)];
               _0x274579 || (_0x274579 = _0x13594e[_0x4225c8(0xac3)] = new _0x51151d()),
                    _0x13594e[_0x4225c8(0x873)],
                    _0x13594e[_0x4225c8(0x873)] || (_0x13594e[_0x4225c8(0x873)] = _0x4d557c[_0x4225c8(0xaa6)]());
               let _0x176f8a = _0x344aba['materials'][_0x4225c8(0x1c0)];
               for (let _0x5c202b = 0x0, _0x249cee = _0x176f8a[_0x4225c8(0x72b)]; _0x5c202b < _0x249cee; _0x5c202b++) {
                    let _0x30f968 = _0x176f8a[_0x5c202b][_0x4225c8(0x1c0)]
                         , _0x517004 = _0x30f968['id']
                         , _0x37a30d = _0x274579['create'](_0x517004);
                    _0x37a30d[_0x4225c8(0x5ea)] = _0x13594e['id'],
                         _0x37a30d[_0x4225c8(0xb90)] = _0x3d5c82;
                    let _0xda2e8a = _0x30f968[_0x4225c8(0x950)];
                    _0x37a30d[_0x4225c8(0x7a7)] = new Cesium[(_0x4225c8(0x821))](_0xda2e8a['r'], _0xda2e8a['g'], _0xda2e8a['b'], _0xda2e8a['a']);
                    let _0x1dadc5 = _0x30f968['diffuse'];
                    _0x37a30d['diffuseColor'] = new Cesium[(_0x4225c8(0x821))](_0x1dadc5['r'], _0x1dadc5['g'], _0x1dadc5['b'], _0x1dadc5['a']);
                    let _0x1a6743 = _0x30f968[_0x4225c8(0x981)];
                    _0x37a30d[_0x4225c8(0x471)] = new Cesium[(_0x4225c8(0x821))](_0x1a6743['r'], _0x1a6743['g'], _0x1a6743['b'], _0x1a6743['a']),
                         _0x37a30d[_0x4225c8(0x847)] = _0x30f968[_0x4225c8(0x847)],
                         _0x37a30d[_0x4225c8(0x9c6)] = _0x30f968[_0x4225c8(0x5c6)],
                         _0x37a30d['id'] = _0x517004;
                    let _0x33a35 = _0x30f968[_0x4225c8(0x85c)];
                    _0x33a35[_0x4225c8(0x72b)];
                    for (let _0x274bd8 = 0x0; _0x274bd8 < 0x1; _0x274bd8++) {
                         let _0x6442ab = _0x33a35[_0x274bd8][_0x4225c8(0x9ff)]
                              , _0x241313 = _0x6442ab['id']
                              , _0xbdfe21 = 0x0 === _0x6442ab[_0x4225c8(0x2c0)]['u'] ? Cesium[_0x4225c8(0x7a5)][_0x4225c8(0x641)] : Cesium['TextureWrap'][_0x4225c8(0x53e)]
                              , _0x13f6dd = 0x0 === _0x6442ab[_0x4225c8(0x2c0)]['v'] ? Cesium[_0x4225c8(0x7a5)][_0x4225c8(0x641)] : Cesium[_0x4225c8(0x7a5)]['CLAMP_TO_EDGE'];
                         _0x37a30d[_0x4225c8(0xd21)] = Cesium[_0x4225c8(0xcdf)][_0x4225c8(0xb04)](_0x6442ab[_0x4225c8(0x363)]);
                         let _0x49235c = _0x344aba[_0x4225c8(0x245)][_0x241313];
                         _0x49235c && (_0x49235c[_0x4225c8(0x28e)] = _0xbdfe21,
                              _0x49235c[_0x4225c8(0x7a2)] = _0x13f6dd,
                              _0x37a30d[_0x4225c8(0x64e)](_0x13594e, _0x3d5c82, _0x49235c, _0x274bd8, _0x344aba));
                    }
               }
          }
          function _0x67d5f(_0x4cb945, _0xcc0bd4) {
               const _0x4a0fdb = _0xc3a123;
               let _0xfcc2ee, _0x198b0b, _0x45378b = new Cesium[(_0x4a0fdb(0xc1c))](), _0x3a56dc = new Cesium[(_0x4a0fdb(0x25b))](), _0x449944 = _0x4cb945['vertexAttributes'][0x0], _0x1938f4 = _0x449944[_0x4a0fdb(0x8cf)], _0x4898c0 = Cesium[_0x4a0fdb(0x336)](_0x4cb945['compressOptions']) && (_0x4cb945[_0x4a0fdb(0x408)] & _0x38a067[_0x4a0fdb(0x741)]) === _0x38a067[_0x4a0fdb(0x741)], _0x4bf7d5 = 0x1;
               _0x4898c0 ? (_0x4bf7d5 = _0x4cb945['vertCompressConstant'],
                    _0xfcc2ee = new Cesium[(_0x4a0fdb(0x25b))](_0x4cb945['minVerticesValue']['x'], _0x4cb945['minVerticesValue']['y'], _0x4cb945[_0x4a0fdb(0x472)]['z']),
                    _0x198b0b = new Uint16Array(_0x449944['typedArray'][_0x4a0fdb(0x25d)], _0x449944[_0x4a0fdb(0xcfb)][_0x4a0fdb(0x490)], _0x449944[_0x4a0fdb(0xcfb)][_0x4a0fdb(0x62b)] / 0x2)) : _0x198b0b = new Float32Array(_0x449944['typedArray'][_0x4a0fdb(0x25d)], _0x449944[_0x4a0fdb(0xcfb)][_0x4a0fdb(0x490)], _0x449944['typedArray'][_0x4a0fdb(0x62b)] / 0x4);
               let _0x18c5e8 = [];
               for (let _0x4eb134 = 0x0; _0x4eb134 < _0x4cb945[_0x4a0fdb(0x8d0)]; _0x4eb134++)
                    Cesium[_0x4a0fdb(0x25b)]['fromArray'](_0x198b0b, _0x1938f4 * _0x4eb134, _0x3a56dc),
                         _0x4898c0 && (_0x3a56dc = Cesium[_0x4a0fdb(0x25b)][_0x4a0fdb(0xc03)](_0x3a56dc, _0x4bf7d5, _0x3a56dc),
                              _0x3a56dc = Cesium[_0x4a0fdb(0x25b)][_0x4a0fdb(0x2ef)](_0x3a56dc, _0xfcc2ee, _0x3a56dc)),
                         _0x18c5e8['push'](Cesium[_0x4a0fdb(0x25b)][_0x4a0fdb(0x432)](_0x3a56dc));
               return Cesium[_0x4a0fdb(0xc1c)][_0x4a0fdb(0x5df)](_0x18c5e8, _0x45378b),
                    Cesium[_0x4a0fdb(0xc1c)][_0x4a0fdb(0x335)](_0x45378b, _0xcc0bd4, _0x45378b),
                    _0x18c5e8['length'] = 0x0,
                    _0x45378b;
          }
          _0x4d557c[_0xc3a123(0x2d4)][_0xc3a123(0x524)] = function () {
               const _0x52508c = _0xc3a123;
               if (!(this[_0x52508c(0x5ad)][_0x52508c(0x72b)] < 0x1)) {
                    this['pendingRequests']['sort'](_0x36e12c),
                         this[_0x52508c(0x2bf)]();
                    for (let _0x1091d0 = 0x0, _0x128223 = this['pendingRequests'][_0x52508c(0x72b)]; _0x1091d0 < _0x128223; _0x1091d0++) {
                         let _0x24333c = this[_0x52508c(0x5ad)][_0x1091d0];
                         this[_0x52508c(0x774)](_0x24333c);
                    }
                    this[_0x52508c(0x5ad)][_0x52508c(0x72b)] = 0x0;
               }
          }
               ,
               _0x4d557c[_0xc3a123(0x2d4)][_0xc3a123(0x2bf)] = function () {
                    const _0x3fae72 = _0xc3a123;
                    let _0x1197d3 = _0x160980(this[_0x3fae72(0x5ad)])['join'](';')
                         , _0x123648 = this[_0x3fae72(0x5ad)][0x0][_0x3fae72(0x29f)]
                         , _0x3d10ae = new Cesium[(_0x3fae72(0x6e9))]({
                              'url': _0x123648,
                              'queryParameters': {
                                   'extratiles': _0x1197d3
                              }
                         })
                         , _0x293287 = _0x13c1fa()
                         , _0x8b64d = _0x3d10ae[_0x3fae72(0x49b)]();
                    if (_0x8b64d) {
                         for (let _0x39608 = 0x0, _0x414c3b = this[_0x3fae72(0x5ad)][_0x3fae72(0x72b)]; _0x39608 < _0x414c3b; _0x39608++) {
                              this[_0x3fae72(0x5ad)][_0x39608]['deferred'] = _0x293287;
                         }
                         _0x8b64d[_0x3fae72(0x7db)](function (_0x535126) {
                              _0x293287['resolve'](_0x535126);
                         }, _0x1d1f42 => {
                              _0x293287['reject'](error);
                         }
                         );
                    }
               }
               ,
               _0x4d557c[_0xc3a123(0x2d4)]['request'] = function (_0x43b460) {
                    const _0xdc5043 = _0xc3a123;
                    let _0x54450c = _0x43b460['keyWord']
                         , _0x2ec253 = _0x43b460[_0xdc5043(0x284)][_0xdc5043(0xa16)];
                    this[_0xdc5043(0x4f1)][_0x54450c] = _0xd29427[_0xdc5043(0xc88)];
                    let _0x9c155 = this;
                    _0x2ec253[_0xdc5043(0x7db)](function (_0x420df5) {
                         const _0x7b6958 = _0xdc5043;
                         if (!Cesium[_0x7b6958(0x336)](_0x9c155['state'][_0x54450c]))
                              return;
                         _0x9c155['state'][_0x54450c] = _0xd29427[_0x7b6958(0x72e)];
                         let _0x2b9e32 = _0x5d6d3b(_0x420df5, _0x43b460[_0x7b6958(0xa8a)]);
                         if (!_0x2b9e32)
                              return void (_0x9c155['state'][_0x54450c] = _0xd29427[_0x7b6958(0x49c)]);
                         let _0x2a2704 = new Uint8Array(_0x2b9e32)
                              , _0x4ba367 = new DataView(_0x2b9e32)
                              , _0x1d019c = 0x0
                              , _0x2d453d = _0x4ba367['getUint32'](_0x1d019c, !0x0);
                         _0x1d019c += Uint32Array[_0x7b6958(0x385)];
                         let _0x1fefb0 = {};
                         for (let _0x25d7be = 0x0; _0x25d7be < _0x2d453d; _0x25d7be++) {
                              let _0xa79cc9 = _0x4ba367[_0x7b6958(0x494)](_0x1d019c, !0x0);
                              _0x1d019c += Uint32Array[_0x7b6958(0x385)];
                              let _0x598e08 = Cesium[_0x7b6958(0x236)](_0x2a2704, _0x1d019c, _0xa79cc9);
                              _0x1d019c += _0xa79cc9,
                                   _0x4ba367[_0x7b6958(0x494)](_0x1d019c, !0x0),
                                   _0x1d019c += Uint32Array['BYTES_PER_ELEMENT'];
                              let _0x3236ab = _0x4ba367['getUint32'](_0x1d019c, !0x0);
                              _0x1d019c += Uint32Array[_0x7b6958(0x385)];
                              let _0x1e6e7d = new Uint8Array(_0x2b9e32, _0x1d019c, _0x3236ab)
                                   , _0x27d6ed = _0xce368[_0x7b6958(0xcb6)](_0x1e6e7d)[_0x7b6958(0x25d)];
                              _0x1d019c += _0x3236ab;
                              let _0x1aa7ea = new DataView(_0x27d6ed)
                                   , _0x507e89 = 0x0;
                              _0x1aa7ea[_0x7b6958(0x494)](_0x507e89, !0x0),
                                   _0x507e89 += Uint32Array['BYTES_PER_ELEMENT'];
                              let _0x369656 = _0x1aa7ea[_0x7b6958(0x494)](_0x507e89, !0x0);
                              _0x507e89 += Uint32Array['BYTES_PER_ELEMENT'];
                              let _0x4b25f3 = _0x1aa7ea[_0x7b6958(0x494)](_0x507e89, !0x0);
                              _0x507e89 += Uint32Array[_0x7b6958(0x385)],
                                   _0x1aa7ea['getUint32'](_0x507e89, !0x0),
                                   _0x507e89 += Uint32Array['BYTES_PER_ELEMENT'];
                              let _0x1c657f = _0x1aa7ea[_0x7b6958(0x494)](_0x507e89, !0x0);
                              _0x507e89 += Uint32Array[_0x7b6958(0x385)];
                              let _0x7ce96c = new Uint8Array(_0x27d6ed, _0x507e89, _0x1c657f);
                              _0x1fefb0[_0x598e08] = {
                                   'width': _0x369656,
                                   'height': _0x4b25f3,
                                   'arrayBufferView': _0x7ce96c
                              };
                         }
                         let _0x471b1d = {
                              'keyWord': _0x54450c,
                              'result': _0x1fefb0,
                              'byteLength': _0x2b9e32[_0x7b6958(0x62b)]
                         }
                              , _0x4e7d79 = _0x9c155[_0x7b6958(0x81f)][_0x7b6958(0x2ef)](_0x471b1d);
                         _0x9c155[_0x7b6958(0x6c4)][_0x54450c] = _0x4e7d79,
                              _0x9c155[_0x7b6958(0x4f1)][_0x54450c] = _0xd29427[_0x7b6958(0xa99)],
                              delete _0x9c155['state'][_0x54450c],
                              _0x320941 += _0x2b9e32[_0x7b6958(0x62b)];
                         let _0x21298d = _0x9c155['list'][_0x7b6958(0xd0a)];
                         for (; _0x320941 > _0x57a578;) {
                              let _0xe778a2 = _0x21298d
                                   , _0x20f416 = _0x21298d[_0x7b6958(0x516)]['keyWord']
                                   , _0x56c09a = _0x9c155[_0x7b6958(0x6c4)][_0x20f416][_0x7b6958(0x516)];
                              _0x320941 -= _0x56c09a[_0x7b6958(0x62b)],
                                   delete _0x9c155[_0x7b6958(0x6c4)][_0x20f416],
                                   _0x21298d = _0x21298d[_0x7b6958(0xb06)],
                                   _0x9c155[_0x7b6958(0x81f)][_0x7b6958(0xced)](_0xe778a2);
                         }
                    }, function (_0x469674) {
                         const _0x451e96 = _0xdc5043;
                         _0x9c155['state'][_0x54450c] = _0x469674 ? _0xd29427[_0x451e96(0x49c)] : _0xd29427[_0x451e96(0xc38)];
                    });
               }
               ,
               _0x4d557c[_0xc3a123(0x2d4)][_0xc3a123(0x420)] = function (_0x11c6ce, _0x32ee2c, _0x38e5a7, _0xaedbd) {
                    const _0x3239c5 = _0xc3a123;
                    let _0x4fc1ff = _0x11c6ce + '_' + _0x38e5a7
                         , _0x183d01 = this[_0x3239c5(0x6c4)][_0x4fc1ff];
                    if (_0x183d01)
                         return this[_0x3239c5(0x81f)]['splice'](this[_0x3239c5(0x81f)]['tail'], _0x183d01),
                              _0x183d01[_0x3239c5(0x516)];
                    let _0x1bdff7 = this['state'][_0x4fc1ff];
                    Cesium[_0x3239c5(0x336)](_0x1bdff7) || (_0x1bdff7 = this['state'][_0x4fc1ff] = _0xd29427['UnLoad']),
                         _0x1bdff7 === _0xd29427['UnLoad'] && this[_0x3239c5(0x57a)](_0x11c6ce, _0x32ee2c, _0x38e5a7, _0xaedbd[_0x3239c5(0xb90)], _0xaedbd);
               }
               ,
               _0x4d557c[_0xc3a123(0x2d4)][_0xc3a123(0xb1c)] = function (_0x260607, _0x848687) {
                    const _0x4e9bd8 = _0xc3a123;
                    let _0x3def7a = _0x260607 + '_' + _0x848687;
                    delete this[_0x4e9bd8(0x4f1)][_0x3def7a];
               }
               ,
               _0x4d557c[_0xc3a123(0x4df)] = void 0x0,
               _0x4d557c['getSingleInstance'] = function () {
                    const _0x174d97 = _0xc3a123;
                    return _0x4d557c[_0x174d97(0x4df)] || (_0x4d557c[_0x174d97(0x4df)] = new _0x4d557c()),
                         _0x4d557c[_0x174d97(0x4df)];
               }
               ;
          let _0x5deb15 = new Cesium[(_0xc3a123(0x25b))]();
          function _0x5a705a(_0x3bb303) {
               const _0x44fa83 = _0xc3a123;
               let _0x33021a = new Cesium[(_0x44fa83(0xc1c))]()
                    , _0x89f78e = _0x3bb303[_0x44fa83(0x1a6)];
               if (!Cesium[_0x44fa83(0x336)](_0x89f78e))
                    return _0x33021a;
               let _0x441895 = new Cesium[(_0x44fa83(0x25b))](_0x89f78e[0x0], _0x89f78e[0x1], _0x89f78e[0x2])
                    , _0x1b1be8 = new Cesium['Carteisan3'](_0x89f78e[0x3], _0x89f78e[0x4], _0x89f78e[0x5])
                    , _0xf7a30a = new Cesium[(_0x44fa83(0x25b))][(_0x44fa83(0xc2b))](_0x441895, _0x1b1be8, 0.5, _0x5deb15)
                    , _0x3a0022 = new Cesium[(_0x44fa83(0x25b))]['distance'](_0xf7a30a, _0x441895);
               return _0x33021a[_0x44fa83(0xa41)] = _0xf7a30a,
                    _0x33021a['radius'] = _0x3a0022,
                    _0x33021a;
          }
          function _0x1a1aa4(_0x3b3627, _0x1149f0) {
               return _0x3b3627['instanceIndex'] > -0x1 ? _0x5a705a(_0x3b3627) : _0x67d5f(_0x3b3627, _0x1149f0);
          }
          function _0x6a3305(_0x4af942, _0x4d261a, _0xd8650e, _0x302ddc) {
               const _0x501e93 = _0xc3a123;
               let _0x86b5ea = {}
                    , _0x34c957 = _0xd8650e[_0x501e93(0x660)];
               for (let _0x449a8d = 0x0, _0x3ed8bd = _0x34c957['length']; _0x449a8d < _0x3ed8bd; _0x449a8d++) {
                    let _0x23b787, _0x9fad47 = _0x34c957[_0x449a8d], _0x53c752 = _0x9fad47[_0x501e93(0x89c)], _0x4ccd0a = Cesium['Matrix4'][_0x501e93(0x59d)](_0x4af942[_0x501e93(0xbbd)], _0x53c752, new Cesium[(_0x501e93(0xcdf))]());
                    Cesium['defined'](_0x302ddc[_0x501e93(0x802)]) && (_0x23b787 = new Cesium['BoundingSphere'](_0x302ddc[_0x501e93(0x802)]['sphere'][_0x501e93(0xa41)], _0x302ddc[_0x501e93(0x802)]['sphere'][_0x501e93(0x38b)]),
                         Cesium['BoundingSphere'][_0x501e93(0x335)](_0x23b787, _0x4af942[_0x501e93(0xbbd)], _0x23b787));
                    let _0x57a33b = _0x9fad47[_0x501e93(0x5db)];
                    for (let _0x3bf13a = 0x0, _0xe6d01f = _0x57a33b['length']; _0x3bf13a < _0xe6d01f; _0x3bf13a++) {
                         let _0xc1a686, _0x300915 = _0x57a33b[_0x3bf13a], _0x52d98f = _0x4d261a['geoPackage'][_0x300915], _0x5ee88f = _0x52d98f[_0x501e93(0xd49)], _0x5f29ba = _0x52d98f[_0x501e93(0x47d)], _0x39adf8 = _0x52d98f['pickInfo'];
                         _0x5f29ba[_0x501e93(0x72b)] > 0x0 && (_0xc1a686 = _0x4af942['_materialManager'][_0x501e93(0x7e5)](_0x5f29ba[0x0][_0x501e93(0x586)]));
                         let _0x5f3b5f = Cesium['defined'](_0x23b787) ? _0x23b787 : _0x1a1aa4(_0x5ee88f, _0x4ccd0a);
                         _0x86b5ea[_0x300915] = _0x4bd879[_0x4af942[_0x501e93(0x747)]]({
                              'layer': _0x4af942,
                              'vertexPackage': _0x5ee88f,
                              'arrIndexPackage': _0x5f29ba,
                              'pickInfo': _0x39adf8,
                              'modelMatrix': _0x4ccd0a,
                              'geoMatrix': _0x53c752,
                              'boundingVolume': _0x5f3b5f,
                              'material': _0xc1a686,
                              'edgeGeometry': _0x52d98f[_0x501e93(0x1fb)],
                              'geoName': _0x300915
                         });
                    }
               }
               if (!(Object['keys'](_0x86b5ea)['length'] < 0x1)) {
                    if (!Cesium[_0x501e93(0x336)](_0x302ddc[_0x501e93(0x802)])) {
                         let _0x5ed909 = [];
                         for (let _0x3b1c65 in _0x86b5ea)
                              _0x86b5ea[_0x501e93(0x6e8)](_0x3b1c65) && _0x5ed909[_0x501e93(0x63e)](_0x86b5ea[_0x3b1c65]['boundingVolume']);
                         let _0x5f21e2 = Cesium[_0x501e93(0xc1c)]['fromBoundingSpheres'](_0x5ed909);
                         _0x302ddc['boundingVolume'] = {
                              'sphere': _0x5f21e2
                         };
                    }
                    _0x302ddc['geoMap'] = _0x86b5ea;
               }
          }
          function _0x316038(_0x4856d7, _0x5d3371) {
               const _0x568ea9 = _0xc3a123;
               let _0x21197e = _0x5d3371[_0x568ea9(0xb91)]
                    , _0x592da2 = [];
               for (let _0x4c166f = 0x0, _0x40e8b7 = _0x21197e['pageLods'][_0x568ea9(0x72b)]; _0x4c166f < _0x40e8b7; _0x4c166f++) {
                    let _0x48f595 = {}
                         , _0x1d42f2 = _0x21197e[_0x568ea9(0xb12)][_0x4c166f];
                    _0x48f595[_0x568ea9(0xaf9)] = _0x1d42f2[_0x568ea9(0xaf9)],
                         _0x48f595[_0x568ea9(0x6fc)] = _0x1d42f2[_0x568ea9(0x9bf)],
                         _0x48f595[_0x568ea9(0x894)] = _0x1d42f2[_0x568ea9(0x894)];
                    let _0x680c6c = _0x1d42f2['boundingSphere'][_0x568ea9(0xa41)]
                         , _0xb38c42 = _0x1d42f2['boundingSphere'][_0x568ea9(0x38b)];
                    '' !== _0x48f595[_0x568ea9(0x6fc)] ? _0x48f595[_0x568ea9(0x802)] = {
                         'sphere': {
                              'center': new Cesium['Cartesian3'](_0x680c6c['x'], _0x680c6c['y'], _0x680c6c['z']),
                              'radius': _0xb38c42
                         }
                    } : _0x48f595['isLeafTile'] = !0x0,
                         _0x6a3305(_0x4856d7, _0x5d3371, _0x1d42f2, _0x48f595),
                         Cesium[_0x568ea9(0x336)](_0x48f595[_0x568ea9(0x475)]) && _0x592da2[_0x568ea9(0x63e)](_0x48f595);
               }
               return _0x592da2;
          }
          _0x126376['parse'] = function (_0x3eb699, _0x233aa7, _0x9ba7c1) {
               const _0x55ab6d = _0xc3a123;
               if (!Cesium[_0x55ab6d(0x336)](_0x9ba7c1))
                    return;
               return _0x4e7496(_0x3eb699, _0x9ba7c1, _0x233aa7),
                    _0x316038(_0x3eb699, _0x9ba7c1);
          }
               ;
          const _0x3b0801 = Cesium[_0xc3a123(0x336)];
          function _0x33bfc3(_0xa5616d, _0x4c75ce, _0x2e38b4, _0x94da45, _0x5569c6, _0x4d348e) {
               const _0x214c50 = _0xc3a123;
               this[_0x214c50(0x9c9)] = _0xa5616d,
                    this['parent'] = _0x4c75ce;
               let _0x34e5b9 = _0x94da45[_0x214c50(0x6c0)](/\\/g, '/');
               this['fileExtension'] = Cesium[_0x214c50(0x256)](_0x94da45),
                    this[_0x214c50(0xd09)] = _0x1bb4ef(_0x34e5b9, _0xa5616d),
                    this[_0x214c50(0x421)] = _0x94da45,
                    this[_0x214c50(0x9f6)] = 0x0 === _0x5569c6,
                    this[_0x214c50(0x779)] = !0x1,
                    this[_0x214c50(0x802)] = this[_0x214c50(0xc76)](_0x2e38b4, _0xa5616d[_0x214c50(0xbbd)]);
               let _0x48a8ed = Cesium[_0x214c50(0x6e9)]['createIfNeeded'](_0xa5616d['_baseResource']);
               if (Cesium[_0x214c50(0x336)](_0x4c75ce))
                    this['baseUri'] = _0x4c75ce[_0x214c50(0xc30)];
               else {
                    let _0x2701ab = new Cesium['Resource'](_0x34e5b9);
                    this[_0x214c50(0xc30)] = _0x2701ab[_0x214c50(0x5bf)]();
               }
               this[_0x214c50(0x345)] = _0x48a8ed[_0x214c50(0x9d4)]({
                    'url': this[_0x214c50(0xd09)]
               }),
                    this['serverKey'] = Cesium[_0x214c50(0xd95)][_0x214c50(0x9d2)](this[_0x214c50(0x345)][_0x214c50(0x592)]()),
                    this[_0x214c50(0x774)] = void 0x0,
                    this[_0x214c50(0xcb0)] = void 0x0,
                    this[_0x214c50(0x346)] = 0x0,
                    this[_0x214c50(0xcc0)] = 0x0,
                    this[_0x214c50(0xbd7)] = 0x0,
                    this[_0x214c50(0x691)] = _0x4c75ce ? _0x4c75ce[_0x214c50(0x691)] + 0x1 : 0x0,
                    this['visibilityPlaneMask'] = 0x0,
                    this[_0x214c50(0xbc3)] = !0x1,
                    this['children'] = [],
                    this[_0x214c50(0x292)] = [],
                    this[_0x214c50(0xc14)] = [],
                    this[_0x214c50(0x1bf)] = Cesium[_0x214c50(0x4d9)](_0x5569c6, 0x10),
                    this[_0x214c50(0x9e7)] = Cesium[_0x214c50(0x4d9)](_0x4d348e, _0x1a0a6e[_0x214c50(0xa9f)]),
                    this[_0x214c50(0x853)] = this['isLeafTile'] ? _0x15a287['READY'] : _0x15a287[_0x214c50(0x3d8)],
                    this[_0x214c50(0x5a3)] = 0x0,
                    this[_0x214c50(0x9e5)] = 0x0,
                    this[_0x214c50(0x7e3)] = 0x0,
                    this[_0x214c50(0x4ee)] = 0x0,
                    this['updatedVisibilityFrame'] = 0x0,
                    this['foveatedFactor'] = 0x0,
                    this[_0x214c50(0x58c)] = 0x0,
                    this[_0x214c50(0x8d4)] = this,
                    this[_0x214c50(0xa0b)] = !0x1,
                    this[_0x214c50(0x815)] = !0x1,
                    this[_0x214c50(0x7f0)] = !0x1,
                    this[_0x214c50(0xa4e)] = !0x0,
                    this['index'] = 0x0,
                    this['_renderable'] = !0x1,
                    this['rootName'] = _0x4c75ce ? _0x4c75ce[_0x214c50(0x2b6)] : this[_0x214c50(0x421)],
                    this[_0x214c50(0xc35)] = '',
                    this[_0x214c50(0x792)] = !0x1,
                    this['isChildBlock'] = !0x1,
                    this[_0x214c50(0x66c)] = {},
                    this[_0x214c50(0x36c)] = {};
          }
          Object['defineProperties'](_0x33bfc3[_0xc3a123(0x2d4)], {
               'renderable': {
                    'get': function () {
                         const _0x36b747 = _0xc3a123;
                         if (this['_renderable'])
                              return this[_0x36b747(0x94c)];
                         let _0xbe84fb = this[_0x36b747(0x292)]
                              , _0x2f3fbc = _0xbe84fb[_0x36b747(0x72b)];
                         if (0x0 === _0x2f3fbc)
                              return !0x1;
                         for (let _0x3afad6 = 0x0; _0x3afad6 < _0x2f3fbc; _0x3afad6++) {
                              let _0x578b70 = _0xbe84fb[_0x3afad6];
                              for (let _0x2d3932 = 0x0, _0x43f9ce = _0x578b70[_0x36b747(0x72b)]; _0x2d3932 < _0x43f9ce; _0x2d3932++) {
                                   if (!_0x578b70[_0x2d3932][_0x36b747(0x3b8)])
                                        return !0x1;
                              }
                         }
                         return this['_renderable'] = !0x0,
                              !0x0;
                    }
               }
          });
          let _0xf121b9 = new Cesium[(_0xc3a123(0x25b))]();
          function _0x4a25ac(_0x14cade, _0x1d6aba) {
               const _0x586dc4 = _0xc3a123;
               let _0xd39e09 = Cesium[_0x586dc4(0x25b)]['clone'](_0x14cade['center'])
                    , _0x57e2cc = _0x14cade[_0x586dc4(0x38b)];
               _0xd39e09 = Cesium[_0x586dc4(0xcdf)][_0x586dc4(0xbde)](_0x1d6aba, _0xd39e09, _0xd39e09);
               let _0x2e3007 = Cesium[_0x586dc4(0xcdf)][_0x586dc4(0x9d1)](_0x1d6aba, _0xf121b9);
               return _0x57e2cc *= Cesium[_0x586dc4(0x25b)][_0x586dc4(0xa72)](_0x2e3007),
                    new Cesium[(_0x586dc4(0xd88))](_0xd39e09, _0x57e2cc);
          }
          function _0x1bb4ef(_0x422fb5, _0x215e75) {
               const _0x320516 = _0xc3a123;
               _0x422fb5 = _0x422fb5['replace'](/\+/g, '%2B');
               let _0x1d49dc = _0x215e75[_0x320516(0xd4d)];
               if (!(_0x215e75[_0x320516(0xd4d)][_0x320516(0xcef)]('realspace') > -0x1))
                    return _0x422fb5;
               let _0x549212 = _0x1d49dc[_0x320516(0x6c0)](/(.*realspace)/, '')
                    , _0x19f57a = _0x1d49dc[_0x320516(0x6c0)](/\/rest\/realspace/g, '')['replace'](_0x549212, '');
               return _0x19f57a += '/rest/realspace' + _0x549212 + _0x320516(0x338) + _0x422fb5[_0x320516(0x6c0)](/^\.*/, '')[_0x320516(0x6c0)](/^\//, '')[_0x320516(0x6c0)](/\/$/, ''),
                    _0x3b0801(_0x424c59[_0x320516(0x597)]) && (_0x19f57a = _0x3b0801(_0x424c59[_0x320516(0x597)][_0x320516(0x1a1)][_0x1d49dc]) ? _0x424c59['addTokenWithKey'](_0x1d49dc, _0x19f57a) : _0x424c59[_0x320516(0x6be)](_0x19f57a)),
                    _0x19f57a;
          }
          function _0x31b954(_0x4a53b8, _0x533ca9) {
               const _0x2b0892 = _0xc3a123;
               if (Cesium['defined'](_0x4a53b8[_0x2b0892(0xa41)])) {
                    const _0x3ab678 = _0x4a53b8;
                    let _0x24a48b = new Cesium[(_0x2b0892(0x7d4))]();
                    const _0x4c17c5 = new Cesium['Cartesian3'](_0x3ab678[_0x2b0892(0xa41)]['x'], _0x3ab678[_0x2b0892(0xa41)]['y'], _0x3ab678[_0x2b0892(0xa41)]['z'])
                         , _0xc9d2d0 = new Cesium['Cartesian4'](_0x3ab678[_0x2b0892(0xbf4)]['x'], _0x3ab678[_0x2b0892(0xbf4)]['y'], _0x3ab678[_0x2b0892(0xbf4)]['z'], 0x0)
                         , _0x4b0324 = new Cesium[(_0x2b0892(0xce9))](_0x3ab678['yExtent']['x'], _0x3ab678['yExtent']['y'], _0x3ab678['yExtent']['z'], 0x0)
                         , _0x204355 = new Cesium[(_0x2b0892(0xce9))](_0x3ab678['zExtent']['x'], _0x3ab678[_0x2b0892(0xa81)]['y'], _0x3ab678[_0x2b0892(0xa81)]['z'], 0x0);
                    Cesium['Matrix3'][_0x2b0892(0xc36)](_0x24a48b, 0x0, _0xc9d2d0, _0x24a48b),
                         Cesium['Matrix3']['setColumn'](_0x24a48b, 0x1, _0x4b0324, _0x24a48b),
                         Cesium['Matrix3'][_0x2b0892(0xc36)](_0x24a48b, 0x2, _0x204355, _0x24a48b);
                    const _0x252439 = new Cesium['OrientedBoundingBox'](_0x4c17c5, _0x24a48b)
                         , _0x206f12 = Cesium[_0x2b0892(0xc1c)][_0x2b0892(0x8f8)](_0x252439, new Cesium['BoundingSphere']())
                         , _0x24f4ca = Cesium['BoundingSphere'][_0x2b0892(0x335)](_0x206f12, _0x533ca9, new Cesium[(_0x2b0892(0xc1c))]());
                    return new Cesium[(_0x2b0892(0xd88))](_0x24f4ca['center'], _0x24f4ca[_0x2b0892(0x38b)]);
               }
               {
                    let _0x1bbd9c = new Cesium['Cartesian3'](_0x4a53b8['min']['x'], _0x4a53b8[_0x2b0892(0x455)]['y'], _0x4a53b8[_0x2b0892(0x455)]['z']);
                    Cesium[_0x2b0892(0xcdf)]['multiplyByPoint'](_0x533ca9, _0x1bbd9c, _0x1bbd9c);
                    let _0x1e9b23 = new Cesium['Cartesian3'](_0x4a53b8[_0x2b0892(0x590)]['x'], _0x4a53b8[_0x2b0892(0x590)]['y'], _0x4a53b8['max']['z']);
                    Cesium[_0x2b0892(0xcdf)][_0x2b0892(0xbde)](_0x533ca9, _0x1e9b23, _0x1e9b23);
                    let _0x244415 = Cesium[_0x2b0892(0xc1c)]['fromCornerPoints'](_0x1bbd9c, _0x1e9b23, new Cesium['BoundingSphere']())
                         , _0x3ad560 = _0x244415[_0x2b0892(0xa41)]
                         , _0x304afd = _0x244415['radius']
                         , _0x27e914 = Cesium['Matrix4']['getScale'](_0x533ca9, _0xf121b9);
                    return _0x304afd *= Cesium[_0x2b0892(0x25b)][_0x2b0892(0xa72)](_0x27e914),
                         new Cesium['TileBoundingSphere'](_0x3ad560, _0x304afd);
               }
          }
          function _0x5a6097(_0x11362f, _0x321781) {
               const _0x2db226 = _0xc3a123;
               return _0x11362f[_0x2db226(0x802)];
          }
          _0x33bfc3['prototype'][_0xc3a123(0xc76)] = function (_0x3eae12, _0x136aad) {
               const _0x2ac052 = _0xc3a123;
               return Cesium['defined'](_0x3eae12['sphere']) ? _0x4a25ac(_0x3eae12['sphere'], _0x136aad) : Cesium[_0x2ac052(0x336)](_0x3eae12[_0x2ac052(0xc9c)]) ? _0x31b954(_0x3eae12[_0x2ac052(0xc9c)], _0x136aad) : void 0x0;
          }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x4d8)] = function () {
                    const _0x5b0888 = _0xc3a123;
                    return 0x0 !== this['children'][_0x5b0888(0x72b)] && !this[_0x5b0888(0x9f6)] && (!Cesium[_0x5b0888(0x336)](this['lodRangeData']) || this[_0x5b0888(0xbd7)] > this[_0x5b0888(0x1bf)]);
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x729)] = function (_0x1ea211) {
                    const _0x2d9439 = _0xc3a123;
                    let _0x198fc6 = this[_0x2d9439(0x802)]
                         , _0xf1666e = _0x198fc6[_0x2d9439(0x38b)]
                         , _0x2e38e6 = _0x198fc6[_0x2d9439(0xa41)]
                         , _0x352af0 = Cesium[_0x2d9439(0x25b)][_0x2d9439(0x3dd)](_0x1ea211[_0x2d9439(0xc97)][_0x2d9439(0xdbc)], _0x2e38e6)
                         , _0x4db947 = _0x1ea211[_0x2d9439(0x878)]['drawingBufferHeight']
                         , _0x36140e = 0.5 * _0x1ea211[_0x2d9439(0xc97)][_0x2d9439(0x8a1)][_0x2d9439(0x3a2)];
                    return 0.5 * _0x4db947 / Math['tan'](_0x36140e) * _0xf1666e / _0x352af0;
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x267)] = function (_0x428847) {
                    const _0x441e72 = _0xc3a123;
                    return _0x5a6097(this)[_0x441e72(0x346)](_0x428847);
               }
               ;
          let _0x246402 = new Cesium['Cartesian3']();
          _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0xb21)] = function (_0x2e6209) {
               const _0x49c346 = _0xc3a123
                    , _0x466b17 = _0x5a6097(this)
                    , _0x26d22c = Cesium[_0x49c346(0x25b)]['subtract'](_0x466b17[_0x49c346(0xa41)], _0x2e6209['camera'][_0x49c346(0xdbc)], _0x246402);
               return Cesium[_0x49c346(0x25b)][_0x49c346(0xd06)](_0x2e6209['camera'][_0x49c346(0xca0)], _0x26d22c);
          }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0xa43)] = function (_0x464441, _0x54ddbf) {
                    const _0x3b90b3 = _0xc3a123;
                    let _0x540738 = _0x5a6097(this);
                    return _0x464441['cullingVolume'][_0x3b90b3(0x809)](_0x540738, _0x54ddbf);
               }
               ;
          let _0x479ce7 = new Cesium[(_0xc3a123(0x25b))]();
          function _0x4c9ef8(_0x42cac5, _0x11a28c) {
               const _0x5b5c7d = _0xc3a123;
               let _0x426e53 = _0x11a28c[_0x5b5c7d(0xc97)]
                    , _0x518c41 = _0x42cac5[_0x5b5c7d(0x802)]
                    , _0x41eb70 = _0x518c41['radius']
                    , _0x501a5b = Cesium[_0x5b5c7d(0x25b)]['multiplyByScalar'](_0x426e53[_0x5b5c7d(0xca0)], _0x42cac5[_0x5b5c7d(0xcc0)], _0x479ce7)
                    , _0x13422f = Cesium[_0x5b5c7d(0x25b)][_0x5b5c7d(0x2ef)](_0x426e53[_0x5b5c7d(0xdbc)], _0x501a5b, _0x479ce7)
                    , _0x4ce26a = Cesium['Cartesian3'][_0x5b5c7d(0x60c)](_0x13422f, _0x518c41['center'], _0x479ce7);
               if (Cesium[_0x5b5c7d(0x25b)][_0x5b5c7d(0x869)](_0x4ce26a) > _0x41eb70) {
                    let _0xe27e20 = Cesium[_0x5b5c7d(0x25b)][_0x5b5c7d(0x579)](_0x4ce26a, _0x479ce7)
                         , _0x8cde0f = Cesium['Cartesian3'][_0x5b5c7d(0xc03)](_0xe27e20, _0x41eb70, _0x479ce7)
                         , _0x549733 = Cesium['Cartesian3']['add'](_0x518c41[_0x5b5c7d(0xa41)], _0x8cde0f, _0x479ce7)
                         , _0x535f21 = Cesium[_0x5b5c7d(0x25b)][_0x5b5c7d(0x60c)](_0x549733, _0x426e53[_0x5b5c7d(0xdbc)], _0x479ce7)
                         , _0x5611b7 = Cesium[_0x5b5c7d(0x25b)][_0x5b5c7d(0x579)](_0x535f21, _0x479ce7);
                    _0x42cac5[_0x5b5c7d(0x19c)] = 0x1 - Math[_0x5b5c7d(0xbd6)](Cesium[_0x5b5c7d(0x25b)][_0x5b5c7d(0xd06)](_0x426e53[_0x5b5c7d(0xca0)], _0x5611b7));
               } else
                    _0x42cac5['foveatedFactor'] = 0x0;
          }
          function _0x362795(_0x1a620c) {
               return function () {
                    const _0x15231e = _0x5e91;
                    return _0x1a620c[_0x15231e(0x58c)];
               }
                    ;
          }
          function _0x51b187(_0x3cba57) {
               return function (_0x3739fa) {
                    const _0x3dae12 = _0x5e91;
                    _0x3cba57[_0x3dae12(0x853)] = _0x15a287[_0x3dae12(0x801)],
                         _0x3cba57[_0x3dae12(0xb17)][_0x3dae12(0xa56)](_0x3739fa);
               }
                    ;
          }
          function _0x51332a(_0x4c4457, _0x3b9b0e) {
               const _0x33df72 = _0xc3a123;
               let _0xd3c72f = _0x4c4457['layer']
                    , _0xdeaa14 = _0x3b9b0e[_0x33df72(0x72b)]
                    , _0x35c47e = Number[_0x33df72(0x83f)]
                    , _0x559dc9 = 0x0
                    , _0x4a1578 = _0x1a0a6e['Pixel'];
               for (let _0x43bf5c = 0x0; _0x43bf5c < _0xdeaa14; _0x43bf5c++) {
                    let _0x3dd5e4 = _0x3b9b0e[_0x43bf5c]
                         , _0x79e277 = _0x3dd5e4[_0x33df72(0x802)]
                         , _0x4576d9 = _0x3dd5e4[_0x33df72(0x6fc)];
                    _0x4576d9 = _0x4c4457[_0x33df72(0xc30)] + _0x4576d9;
                    let _0x2a35bc = _0x3dd5e4[_0x33df72(0x894)]
                         , _0x5394f3 = _0x3dd5e4[_0x33df72(0xaf9)]
                         , _0x103347 = _0x3dd5e4[_0x33df72(0x475)];
                    if (0x0 !== _0x2a35bc) {
                         let _0x134978 = new _0x33bfc3(_0xd3c72f, _0x4c4457, _0x79e277, _0x4576d9, _0x2a35bc, _0x5394f3);
                         _0x134978['index'] = _0x43bf5c,
                              _0x4c4457[_0x33df72(0x704)][_0x33df72(0x63e)](_0x134978),
                              _0xd3c72f[_0x33df72(0xa85)][_0x33df72(0x2ef)](_0x134978);
                    }
                    _0x4c4457[_0x33df72(0x292)][_0x43bf5c] = [],
                         _0x4c4457['rosRenderFlag'][_0x43bf5c] = !0x0;
                    for (let _0x428ba4 in _0x103347)
                         _0x103347[_0x33df72(0x6e8)](_0x428ba4) && _0x4c4457[_0x33df72(0x292)][_0x43bf5c][_0x33df72(0x63e)](_0x103347[_0x428ba4]);
                    _0x35c47e = Math[_0x33df72(0x455)](_0x35c47e, _0x2a35bc),
                         _0x559dc9 = Math[_0x33df72(0x590)](_0x559dc9, _0x2a35bc),
                         _0x4a1578 = _0x5394f3;
               }
               _0x4c4457['isRootTile'] && (_0x4c4457[_0x33df72(0x1bf)] = _0x4a1578 === _0x1a0a6e[_0x33df72(0xa9f)] ? _0x35c47e / 0x2 : 0x2 * _0x559dc9,
                    _0x4c4457[_0x33df72(0x9e7)] = _0x4a1578);
          }
          function _0x5f03a8(_0x219c91, _0x135611, _0x3e3a93) {
               const _0x4bdcf1 = _0xc3a123;
               let _0x171b73 = _0x135611[_0x3e3a93[_0x4bdcf1(0x421)]];
               if (!_0x171b73)
                    return;
               _0x3e3a93['blockKey'] = _0x3e3a93['fileName'],
                    _0x3e3a93[_0x4bdcf1(0x792)] = !0x0,
                    _0x51332a(_0x3e3a93, _0x126376['parse'](_0x219c91, _0x3e3a93, _0x171b73));
               let _0x3de472 = [_0x3e3a93];
               for (; _0x3de472[_0x4bdcf1(0x72b)];) {
                    let _0x2c08b5 = _0x3de472[_0x4bdcf1(0x82c)]()
                         , _0x2a11d1 = _0x2c08b5['children'];
                    for (let _0x57ba04 = 0x0, _0x3c02f3 = _0x2a11d1['length']; _0x57ba04 < _0x3c02f3; _0x57ba04++) {
                         let _0x514458 = _0x2a11d1[_0x57ba04];
                         if ('' === _0x514458[_0x4bdcf1(0x421)])
                              continue;
                         _0x514458[_0x4bdcf1(0x66c)] = _0x171b73[_0x4bdcf1(0x66c)],
                              _0x514458[_0x4bdcf1(0x36c)] = _0x171b73[_0x4bdcf1(0x36c)];
                         let _0x486c17 = _0x135611[_0x514458[_0x4bdcf1(0x421)]];
                         if (_0x486c17)
                              _0x514458[_0x4bdcf1(0x853)] = _0x15a287[_0x4bdcf1(0x75a)],
                                   _0x514458[_0x4bdcf1(0xc35)] = _0x2c08b5['blockKey'],
                                   _0x514458[_0x4bdcf1(0x1a9)] = !0x0,
                                   _0x51332a(_0x514458, _0x126376[_0x4bdcf1(0x9bc)](_0x219c91, _0x514458, _0x486c17)),
                                   _0x3de472['push'](_0x514458);
                         else
                              _0x514458[_0x4bdcf1(0x792)] = !0x0,
                                   _0x514458[_0x4bdcf1(0xc35)] = _0x514458['fileName'];
                    }
               }
          }
          function _0x3ec733(_0x43c0de, _0x4d54ed, _0x4d9ec3) {
               const _0xbe7aab = _0xc3a123;
               if (_0x43c0de['_cache'][_0xbe7aab(0x2ef)](_0x4d54ed),
                    _0x43c0de[_0xbe7aab(0xb1e)])
                    return _0x5f03a8(_0x43c0de, _0x3e9f08[_0xbe7aab(0xbc4)](_0x4d9ec3, _0x4d54ed), _0x4d54ed),
                         _0x4d54ed[_0xbe7aab(0x4ee)] = 0x0,
                         _0x4d54ed[_0xbe7aab(0x853)] = _0x15a287[_0xbe7aab(0x75a)],
                         void _0x4d54ed[_0xbe7aab(0xb17)][_0xbe7aab(0x559)](!0x0);
               let _0x36f31a;
               if (_0xbe7aab(0xa89) === _0x4d54ed[_0xbe7aab(0x22a)] ? _0x36f31a = _0x1f50b1['parseBuffer'](_0x4d9ec3) : _0xbe7aab(0xc6b) === _0x4d54ed[_0xbe7aab(0x22a)] && (_0x36f31a = _0x4dac31[_0xbe7aab(0xbc4)](_0x4d9ec3)),
                    !_0x36f31a)
                    return _0x4d54ed[_0xbe7aab(0x853)] = _0x15a287[_0xbe7aab(0x801)],
                         void _0x4d54ed[_0xbe7aab(0xb17)][_0xbe7aab(0xa56)]();
               _0x51332a(_0x4d54ed, _0x1a5fdd['parse'](_0x43c0de, _0x36f31a, _0x4d54ed)),
                    _0x4d54ed[_0xbe7aab(0x4ee)] = 0x0,
                    _0x4d54ed[_0xbe7aab(0x853)] = _0x15a287[_0xbe7aab(0x75a)],
                    _0x4d54ed[_0xbe7aab(0xb17)] && _0x4d54ed[_0xbe7aab(0xb17)]['resolve'](_0x36f31a);
          }
          function _0x1078f7(_0x24eae3, _0x5f53cf, _0x4ff242) {
               const _0x2bee60 = _0xc3a123;
               return Math[_0x2bee60(0x590)](Cesium[_0x2bee60(0x417)]['normalize'](_0x24eae3, _0x5f53cf, _0x4ff242) - Cesium[_0x2bee60(0x417)]['EPSILON7'], 0x0);
          }
          function _0x2c01ad(_0x140d60, _0x1101b8, _0x32c8d0) {
               const _0x40a7a1 = _0xc3a123;
               let _0x1190a1 = _0x140d60 * Math[_0x40a7a1(0xd18)](0xa, _0x1101b8);
               return parseInt(_0x1190a1) * Math[_0x40a7a1(0xd18)](0xa, _0x32c8d0);
          }
          function _0xdf44a7() {
               const _0x640ea7 = _0xc3a123;
               this[_0x640ea7(0x43c)] = [];
          }
          function _0x36b09b(_0x291c05, _0xe6c432) {
               const _0x4608b3 = _0xc3a123;
               return 0x0 === _0xe6c432['distanceToCamera'] && 0x0 === _0x291c05['distanceToCamera'] ? _0xe6c432['centerZDepth'] - _0x291c05['centerZDepth'] : _0xe6c432['distanceToCamera'] - _0x291c05[_0x4608b3(0x346)];
          }
          function _0x23f347(_0x51a0c8, _0x363de1, _0x24875, _0x3c7cf3) {
               const _0x3d57b7 = _0xc3a123;
               let _0x2de170, _0x45c44b = _0x363de1['children'], _0x103f86 = _0x45c44b[_0x3d57b7(0x72b)];
               for (_0x2de170 = 0x0; _0x2de170 < _0x103f86; ++_0x2de170)
                    _0x3413c0(_0x3c7cf3, _0x51a0c8, _0x45c44b[_0x2de170]);
               _0x45c44b[_0x3d57b7(0x208)](_0x36b09b);
               let _0x3e8803 = !0x0
                    , _0x200e63 = !0x1
                    , _0x2615bb = -0x1
                    , _0x25c238 = Number[_0x3d57b7(0x83f)];
               for (_0x2de170 = 0x0; _0x2de170 < _0x103f86; ++_0x2de170) {
                    let _0xe449c8 = _0x45c44b[_0x2de170];
                    if (_0xe449c8[_0x3d57b7(0x19c)] < _0x25c238 && (_0x2615bb = _0x2de170,
                         _0x25c238 = _0xe449c8['foveatedFactor']),
                         _0xe449c8['visible']) {
                         _0x24875['push'](_0xe449c8),
                              _0x200e63 = !0x0;
                         let _0x17b62f = _0xe449c8[_0x3d57b7(0xb78)];
                         _0x363de1[_0x3d57b7(0x757)](_0xe449c8[_0x3d57b7(0xbb5)], !_0x17b62f),
                              _0x3e8803 = _0x3e8803 && _0x17b62f;
                    } else
                         _0x3d6987(_0x51a0c8, _0xe449c8, _0x3c7cf3);
               }
               if (_0x200e63 || (_0x3e8803 = !0x1),
                    -0x1 !== _0x2615bb) {
                    let _0x23ebc1 = _0x45c44b[_0x2615bb];
                    _0x23ebc1[_0x3d57b7(0xa0b)] = !0x0;
                    let _0x2dfc58 = (_0x363de1['wasMinPriorityChild'] || _0x363de1['isRootTile']) && _0x25c238 <= _0x363de1[_0x3d57b7(0x8d4)][_0x3d57b7(0x19c)] ? _0x363de1[_0x3d57b7(0x8d4)] : _0x363de1;
                    for (_0x2dfc58[_0x3d57b7(0x19c)] = Math[_0x3d57b7(0x455)](_0x23ebc1[_0x3d57b7(0x19c)], _0x2dfc58[_0x3d57b7(0x19c)]),
                         _0x2dfc58['distanceToCamera'] = Math[_0x3d57b7(0x455)](_0x23ebc1[_0x3d57b7(0x346)], _0x2dfc58[_0x3d57b7(0x346)]),
                         _0x2de170 = 0x0; _0x2de170 < _0x103f86; ++_0x2de170) {
                         _0x45c44b[_0x2de170]['priorityHolder'] = _0x2dfc58;
                    }
               }
               return _0x3e8803;
          }
          function _0x1f4b65(_0xd1f5e4, _0x5054d4, _0x4c6dd3) {
               const _0x39ba56 = _0xc3a123;
               _0x5054d4[_0x39ba56(0x4ee)] !== _0x4c6dd3['frameNumber'] && _0x5054d4[_0x39ba56(0xb78)] && (_0xd1f5e4[_0x39ba56(0x1f1)][_0x39ba56(0x63e)](_0x5054d4),
                    _0x5054d4['selectedFrame'] = _0x4c6dd3[_0x39ba56(0x67c)]);
          }
          function _0x3d1a8b(_0x48e7f9, _0x346d7c, _0x47d7a7) {
               const _0x2d6bac = _0xc3a123;
               _0x346d7c[_0x2d6bac(0x9e5)] !== _0x47d7a7[_0x2d6bac(0x67c)] && _0x346d7c[_0x2d6bac(0x853)] === _0x15a287['UNLOADED'] && (_0x48e7f9[_0x2d6bac(0x56d)][_0x2d6bac(0x63e)](_0x346d7c),
                    _0x346d7c[_0x2d6bac(0x9e5)] = _0x47d7a7[_0x2d6bac(0x67c)]);
          }
          function _0x24b899(_0xda8c50, _0x2ecf73, _0x1e3943) {
               const _0x7cff64 = _0xc3a123;
               _0x2ecf73[_0x7cff64(0x7e3)] === _0x1e3943[_0x7cff64(0x67c)] || _0x2ecf73['contentState'] !== _0x15a287[_0x7cff64(0x75a)] || _0x2ecf73[_0x7cff64(0xb78)] || (_0x2ecf73['processFrame'] = _0x1e3943[_0x7cff64(0x67c)],
                    _0xda8c50[_0x7cff64(0x3be)][_0x7cff64(0x63e)](_0x2ecf73));
          }
          function _0x3d6987(_0x467e15, _0x523765, _0x5aee4d) {
               const _0x1bdac8 = _0xc3a123;
               _0x523765[_0x1bdac8(0x5a3)] !== _0x5aee4d[_0x1bdac8(0x67c)] && (_0x467e15[_0x1bdac8(0xa85)][_0x1bdac8(0x625)](_0x523765),
                    _0x523765['touchedFrame'] = _0x5aee4d[_0x1bdac8(0x67c)]);
          }
          function _0x4b2995(_0x153c3b, _0x2b22ea, _0x2f9404) {
               const _0x1b7a5c = _0xc3a123;
               _0x2b22ea[_0x1b7a5c(0xd29)] !== _0x2f9404[_0x1b7a5c(0x67c)] && (_0x2b22ea[_0x1b7a5c(0xd29)] = _0x2f9404['frameNumber'],
                    _0x2b22ea[_0x1b7a5c(0xc75)](_0x2f9404, _0x153c3b));
          }
          function _0x31ed03(_0x8d2cbd, _0x36339c, _0x4fc837) {
               _0x4b2995(_0x36339c, _0x4fc837, _0x8d2cbd);
          }
          function _0x4ded6f(_0x59f198, _0x21f74a) {
               const _0x1edcdd = _0xc3a123;
               _0x59f198['_maximumPriority']['distance'] = Math[_0x1edcdd(0x590)](_0x21f74a[_0x1edcdd(0x346)], _0x59f198[_0x1edcdd(0x764)][_0x1edcdd(0x3dd)]),
                    _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0x3dd)] = Math[_0x1edcdd(0x455)](_0x21f74a['distanceToCamera'], _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0x3dd)]),
                    _0x59f198['_maximumPriority'][_0x1edcdd(0x691)] = Math['max'](_0x21f74a['depth'], _0x59f198[_0x1edcdd(0x764)]['depth']),
                    _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0x691)] = Math[_0x1edcdd(0x455)](_0x21f74a[_0x1edcdd(0x691)], _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0x691)]),
                    _0x59f198[_0x1edcdd(0x764)][_0x1edcdd(0x19c)] = Math[_0x1edcdd(0x590)](_0x21f74a[_0x1edcdd(0x19c)], _0x59f198[_0x1edcdd(0x764)][_0x1edcdd(0x19c)]),
                    _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0x19c)] = Math[_0x1edcdd(0x455)](_0x21f74a[_0x1edcdd(0x19c)], _0x59f198['_minimumPriority']['foveatedFactor']),
                    _0x59f198[_0x1edcdd(0x764)][_0x1edcdd(0xbd7)] = Math[_0x1edcdd(0x590)](_0x21f74a[_0x1edcdd(0xbd7)], _0x59f198[_0x1edcdd(0x764)][_0x1edcdd(0xbd7)]),
                    _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0xbd7)] = Math['min'](_0x21f74a[_0x1edcdd(0xbd7)], _0x59f198[_0x1edcdd(0xc2a)][_0x1edcdd(0xbd7)]);
          }
          function _0x3413c0(_0x3bcf7d, _0x1cfdd2, _0x183124) {
               const _0x30f190 = _0xc3a123;
               _0x31ed03(_0x3bcf7d, _0x1cfdd2, _0x183124),
                    _0x183124[_0x30f190(0xa0b)] = !0x1,
                    _0x183124[_0x30f190(0x8d4)] = _0x183124,
                    _0x4ded6f(_0x1cfdd2, _0x183124),
                    _0x183124['shouldSelect'] = !0x1,
                    _0x183124[_0x30f190(0x7f0)] = !0x1,
                    _0x183124['resetRosRenderFlag']();
          }
          function _0x508e56(_0x59f46a, _0x3ed760) {
               const _0x105e68 = _0xc3a123;
               return 0x0 !== _0x3ed760[_0x105e68(0x704)][_0x105e68(0x72b)] && (_0x3ed760['lodRangeMode'] === _0x1a0a6e[_0x105e68(0xa9f)] ? _0x3ed760[_0x105e68(0xbd7)] / _0x59f46a['lodRangeScale'] > _0x3ed760[_0x105e68(0x1bf)] : _0x3ed760[_0x105e68(0x346)] * _0x59f46a[_0x105e68(0xd1a)] < _0x3ed760['lodRangeData']);
          }
          function _0x58a3c4(_0x88dfb6, _0x590bea, _0x45012a) {
               const _0xbe0f89 = _0xc3a123;
               for (; _0x590bea[_0xbe0f89(0x72b)];) {
                    let _0x50f855 = _0x590bea['pop']();
                    _0x50f855['parent'];
                    let _0x1290c5 = !0x1;
                    _0x508e56(_0x88dfb6, _0x50f855) && (_0x1290c5 = _0x23f347(_0x88dfb6, _0x50f855, _0x590bea, _0x45012a));
                    let _0x3b9d13 = !_0x1290c5;
                    _0x3d1a8b(_0x88dfb6, _0x50f855, _0x45012a),
                         _0x24b899(_0x88dfb6, _0x50f855, _0x45012a),
                         _0x3b9d13 && _0x1f4b65(_0x88dfb6, _0x50f855, _0x45012a),
                         _0x3d6987(_0x88dfb6, _0x50f855, _0x45012a);
               }
          }
          function _0x5ed20a(_0x717a11, _0x4e3851, _0x292de9) {
               const _0x4ac369 = _0xc3a123;
               _0x4e3851[_0x4ac369(0x72b)] = 0x0;
               for (let _0x46f7b1 = 0x0, _0x2e360c = _0x717a11[_0x4ac369(0x23b)]['length']; _0x46f7b1 < _0x2e360c; _0x46f7b1++) {
                    let _0x201eab = _0x717a11[_0x4ac369(0x23b)][_0x46f7b1];
                    _0x3413c0(_0x292de9, _0x717a11, _0x201eab),
                         _0x4e3851[_0x4ac369(0x63e)](_0x201eab);
               }
          }
          function _0x531ba8(_0x46f948, _0x26c2c3) {
               const _0xfe6ad7 = _0xc3a123;
               let _0xfb6d7e = _0x46f948[_0xfe6ad7(0x56d)]
                    , _0x5a52bc = _0xfb6d7e[_0xfe6ad7(0x72b)];
               for (let _0x67f374 = 0x0; _0x67f374 < _0x5a52bc; ++_0x67f374)
                    _0xfb6d7e[_0x67f374][_0xfe6ad7(0x4f9)](_0x46f948, _0x26c2c3);
          }
          function _0x1b5374() {
               const _0x4b304c = _0xc3a123;
               this[_0x4b304c(0xc22)] = new Cesium[(_0x4b304c(0x1e5))](),
                    this['_sentinel'] = this['_list'][_0x4b304c(0x2ef)](),
                    this['_trimTiles'] = !0x1;
          }
          _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0xc75)] = function (_0x3a4c85, _0x3c10ca) {
               const _0x1465f0 = _0xc3a123;
               let _0x2a2c86 = this[_0x1465f0(0xb96)]
                    , _0x3423fd = Cesium[_0x1465f0(0x336)](_0x2a2c86) ? _0x2a2c86[_0x1465f0(0x268)] : Cesium[_0x1465f0(0x2c4)][_0x1465f0(0x8cb)];
               this['distanceToCamera'] = this[_0x1465f0(0x267)](_0x3a4c85),
                    this[_0x1465f0(0xcc0)] = this[_0x1465f0(0xb21)](_0x3a4c85),
                    this[_0x1465f0(0xbd7)] = this['getPixel'](_0x3a4c85),
                    this['visibilityPlaneMask'] = this[_0x1465f0(0xa43)](_0x3a4c85, _0x3423fd),
                    this['visible'] = !0x0,
                    this['priorityDeferred'] = _0x4c9ef8(this, _0x3a4c85);
          }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x6da)] = function (_0x202725) {
                    const _0x2dba21 = _0xc3a123;
                    let _0x4c5850 = this
                         , _0xedc5be = this[_0x2dba21(0x9c9)];
                    if (_0xedc5be[_0x2dba21(0xb1e)] && _0xedc5be[_0x2dba21(0x833)][_0x2dba21(0x264)](_0xedc5be['id'], this[_0x2dba21(0xc35)])) {
                         let _0x3823cb = _0xedc5be['_blockCache'][_0x2dba21(0x420)](_0xedc5be['id'], this[_0x2dba21(0xc35)]);
                         return this[_0x2dba21(0xb17)] = _0x13c1fa(),
                              _0x3ec733(_0xedc5be, this, _0x3823cb),
                              !0x0;
                    }
                    let _0x4890d4 = this['contentResource'][_0x2dba21(0x432)]()
                         , _0x5bd09c = /({.*?})/g;
                    if (Cesium[_0x2dba21(0x336)](_0x202725['subdomains'])) {
                         let _0x4c393a = _0x202725[_0x2dba21(0x95b)]
                              , _0x4c334f = _0x4c393a[_0x2dba21(0x72b)]
                              , _0x533c6f = _0x4c393a[parseInt(Math['random']() * _0x4c334f)];
                         _0x4890d4[_0x2dba21(0x29f)] = _0x4890d4[_0x2dba21(0x29f)][_0x2dba21(0x6c0)](_0x5bd09c, function (_0x33e5f1, _0x34b2f2) {
                              const _0x59cc51 = _0x2dba21;
                              return _0x59cc51(0x95d) === _0x34b2f2 ? _0x533c6f : _0x33e5f1;
                         });
                    }
                    let _0xbab616 = new Cesium['Request']({
                         'throttle': !0x0,
                         'throttleByServer': !0x0,
                         'type': Cesium[_0x2dba21(0xc43)][_0x2dba21(0x384)],
                         'priorityFunction': _0x362795(this),
                         'serverKey': this['serverKey']
                    });
                    this[_0x2dba21(0x774)] = _0xbab616,
                         _0x4890d4['request'] = _0xbab616;
                    let _0x51308a = _0x4890d4['fetchArrayBuffer']();
                    if (!Cesium[_0x2dba21(0x336)](_0x51308a))
                         return !0x1;
                    this[_0x2dba21(0x853)] = _0x15a287[_0x2dba21(0x5c8)],
                         this[_0x2dba21(0xb17)] = _0x13c1fa();
                    let _0x4da948 = _0x51b187(this);
                    return _0x51308a[_0x2dba21(0x7db)](function (_0x3834ae) {
                         const _0x510261 = _0x2dba21;
                         _0x4c5850[_0x510261(0x567)]() ? _0x4da948() : _0x3ec733(_0xedc5be, _0x4c5850, _0x3834ae);
                    }, _0xfb6dc5 => {
                         const _0x3d0b16 = _0x2dba21;
                         _0xbab616[_0x3d0b16(0x4f1)] !== Cesium[_0x3d0b16(0x189)][_0x3d0b16(0x73f)] ? _0x4da948(_0xfb6dc5) : _0x4c5850[_0x3d0b16(0x853)] = _0x15a287[_0x3d0b16(0x3d8)];
                    }
                    ),
                         !0x0;
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)]['updatePriority'] = function (_0x14007d, _0x36ecff) {
                    const _0x25f204 = _0xc3a123;
                    let _0x23d4d8 = _0x14007d[_0x25f204(0xc2a)]
                         , _0x53a0ee = _0x14007d[_0x25f204(0x764)]
                         , _0xa88067 = 0x4
                         , _0x21590f = _0x2c01ad(_0x1078f7(this[_0x25f204(0x19c)], _0x23d4d8[_0x25f204(0x19c)], _0x53a0ee[_0x25f204(0x19c)]), 0x4, _0xa88067);
                    _0xa88067 = 0x8;
                    let _0x369f61 = _0x2c01ad(0x1 - _0x1078f7(this[_0x25f204(0xbd7)], _0x23d4d8[_0x25f204(0xbd7)], _0x53a0ee['pixel']), 0x4, _0xa88067);
                    _0xa88067 = 0x0;
                    let _0x16d9e3 = _0x2c01ad(_0x1078f7(this['distanceToCamera'], _0x23d4d8[_0x25f204(0x3dd)], _0x53a0ee['distance']), 0x4, _0xa88067);
                    this[_0x25f204(0x58c)] = _0x21590f + _0x369f61 + _0x16d9e3;
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x757)] = function (_0xb782cb, _0x5ca770) {
                    const _0x2467b1 = _0xc3a123;
                    this[_0x2467b1(0xc14)][_0xb782cb] = _0x5ca770;
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x398)] = function () {
                    const _0x4c1d3f = _0xc3a123;
                    for (let _0x3d1836 = 0x0, _0x5bf9fb = this[_0x4c1d3f(0xc14)][_0x4c1d3f(0x72b)]; _0x3d1836 < _0x5bf9fb; _0x3d1836++)
                         this[_0x4c1d3f(0xc14)][_0x3d1836] = !0x0;
               }
               ,
               _0x33bfc3['prototype'][_0xc3a123(0x2dc)] = function (_0x1ac789, _0x450fe1) {
                    const _0x2896df = _0xc3a123;
                    for (let _0x299999 = 0x0, _0x1ce2f1 = this[_0x2896df(0x292)]['length']; _0x299999 < _0x1ce2f1; _0x299999++)
                         if (this[_0x2896df(0xc14)][_0x299999]) {
                              let _0x133c80 = this[_0x2896df(0x292)][_0x299999];
                              for (let _0x225c10 = 0x0, _0x51c2d4 = _0x133c80[_0x2896df(0x72b)]; _0x225c10 < _0x51c2d4; _0x225c10++)
                                   _0x133c80[_0x225c10][_0x2896df(0x2dc)](_0x1ac789, _0x450fe1);
                         }
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x441)] = function () {
                    const _0x51a05f = _0xc3a123;
                    this[_0x51a05f(0x853)] = _0x15a287[_0x51a05f(0x3d8)],
                         this[_0x51a05f(0x774)] = void 0x0,
                         this[_0x51a05f(0xcb0)] = void 0x0,
                         this[_0x51a05f(0x8d4)] = void 0x0,
                         this[_0x51a05f(0xb17)] = void 0x0,
                         this[_0x51a05f(0x8d4)] = void 0x0;
                    for (let _0xed2d6 = 0x0, _0x2d3c2b = this[_0x51a05f(0x292)][_0x51a05f(0x72b)]; _0xed2d6 < _0x2d3c2b; _0xed2d6++) {
                         let _0x23f432 = this[_0x51a05f(0x292)][_0xed2d6];
                         for (let _0x4e0d15 = 0x0, _0xcd07a8 = _0x23f432[_0x51a05f(0x72b)]; _0x4e0d15 < _0xcd07a8; _0x4e0d15++)
                              _0x23f432[_0x4e0d15]['destroy']();
                    }
                    this['renderEntities'][_0x51a05f(0x72b)] = 0x0,
                         this[_0x51a05f(0xc14)][_0x51a05f(0x72b)] = 0x0,
                         this['children'][_0x51a05f(0x72b)] = 0x0,
                         this[_0x51a05f(0x94c)] = !0x1;
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x33bfc3[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x4684b5 = _0xc3a123;
                    return this[_0x4684b5(0x441)](),
                         Cesium[_0x4684b5(0x8e1)](this);
               }
               ,
               _0xdf44a7['prototype'][_0xc3a123(0xcb9)] = function (_0x3931a3, _0x5ef1ba) {
                    const _0x16aaa8 = _0xc3a123;
                    let _0x38fa82 = this[_0x16aaa8(0x43c)];
                    _0x5ed20a(_0x3931a3, _0x38fa82, _0x5ef1ba),
                         _0x58a3c4(_0x3931a3, _0x38fa82, _0x5ef1ba),
                         _0x531ba8(_0x3931a3, _0x5ef1ba);
               }
               ,
               _0x1b5374['prototype']['reset'] = function () {
                    const _0x23c01c = _0xc3a123;
                    this[_0x23c01c(0xc22)][_0x23c01c(0x3d3)](this['_list'][_0x23c01c(0x527)], this[_0x23c01c(0x54b)]);
               }
               ,
               _0x1b5374[_0xc3a123(0x2d4)][_0xc3a123(0x625)] = function (_0xa62e29) {
                    const _0x4b4492 = _0xc3a123;
                    let _0x3bb552 = _0xa62e29[_0x4b4492(0xcb0)];
                    Cesium[_0x4b4492(0x336)](_0x3bb552) && this[_0x4b4492(0xc22)][_0x4b4492(0x3d3)](this[_0x4b4492(0x54b)], _0x3bb552);
               }
               ,
               _0x1b5374[_0xc3a123(0x2d4)][_0xc3a123(0x2ef)] = function (_0x3c37f0) {
                    const _0x5b7e94 = _0xc3a123;
                    Cesium[_0x5b7e94(0x336)](_0x3c37f0[_0x5b7e94(0xcb0)]) || (_0x3c37f0[_0x5b7e94(0xcb0)] = this['_list'][_0x5b7e94(0x2ef)](_0x3c37f0));
               }
               ,
               _0x1b5374[_0xc3a123(0x2d4)]['unloadTile'] = function (_0x1b6056, _0x422369, _0x46826a) {
                    const _0x3c2411 = _0xc3a123;
                    let _0x4fcf1c = _0x422369['cacheNode'];
                    Cesium[_0x3c2411(0x336)](_0x4fcf1c) && (this[_0x3c2411(0xc22)][_0x3c2411(0xced)](_0x4fcf1c),
                         _0x422369['cacheNode'] = void 0x0,
                         _0x46826a(_0x1b6056, _0x422369));
               }
               ,
               _0x1b5374[_0xc3a123(0x2d4)][_0xc3a123(0x265)] = function (_0x471929, _0x203d4c, _0x29c39d) {
                    const _0x45b893 = _0xc3a123;
                    let _0x2f4296 = [_0x203d4c]
                         , _0x5c70b8 = [_0x203d4c];
                    for (; _0x2f4296[_0x45b893(0x72b)];) {
                         let _0x25c410 = _0x2f4296[_0x45b893(0x82c)]();
                         for (let _0x2f1972 = 0x0, _0x3c6dbb = _0x25c410[_0x45b893(0x704)]['length']; _0x2f1972 < _0x3c6dbb; _0x2f1972++) {
                              let _0xaf29ab = _0x25c410[_0x45b893(0x704)][_0x2f1972];
                              _0xaf29ab[_0x45b893(0x792)] || (_0x2f4296[_0x45b893(0x63e)](_0xaf29ab),
                                   _0x5c70b8[_0x45b893(0x63e)](_0xaf29ab));
                         }
                    }
                    for (let _0x329a14 = 0x0, _0x3e533a = _0x5c70b8['length']; _0x329a14 < _0x3e533a; _0x329a14++) {
                         let _0x223f24 = _0x5c70b8[_0x329a14];
                         this[_0x45b893(0x365)](_0x471929, _0x223f24, _0x29c39d);
                    }
               }
               ,
               _0x1b5374['prototype'][_0xc3a123(0x317)] = function (_0x4da30a, _0xd7c64f) {
                    const _0x300560 = _0xc3a123;
                    let _0x329df3 = this[_0x300560(0xb79)];
                    this['_trimTiles'] = !0x1;
                    let _0xb14364 = this[_0x300560(0xc22)]
                         , _0x5ec581 = 0x400 * _0x4da30a[_0x300560(0x1c8)] * 0x400
                         , _0xae8e31 = this[_0x300560(0x54b)]
                         , _0x4a259b = _0xb14364['head'];
                    for (; _0x4a259b && _0x4a259b !== _0xae8e31 && (_0x4da30a[_0x300560(0x8ef)] > _0x5ec581 || _0x329df3);) {
                         let _0x2d8da0 = _0x4a259b['item'];
                         _0x4a259b = _0x4a259b['next'],
                              this[_0x300560(0x365)](_0x4da30a, _0x2d8da0, _0xd7c64f);
                    }
               }
               ,
               _0x1b5374[_0xc3a123(0x2d4)][_0xc3a123(0x190)] = function (_0xec7b03, _0x4140cd) {
                    const _0xe21ce8 = _0xc3a123;
                    let _0x17f496 = this[_0xe21ce8(0xb79)];
                    this[_0xe21ce8(0xb79)] = !0x1;
                    let _0x51345a = this[_0xe21ce8(0xc22)]
                         , _0x2d9829 = 0x400 * _0xec7b03[_0xe21ce8(0x1c8)] * 0x400
                         , _0x5efb24 = this[_0xe21ce8(0x54b)]
                         , _0x233f11 = _0x51345a['head'];
                    for (; _0x233f11 && _0x233f11 !== _0x5efb24 && (_0xec7b03[_0xe21ce8(0x8ef)] > _0x2d9829 || _0x17f496);) {
                         let _0x20df55 = _0x233f11[_0xe21ce8(0x516)];
                         _0x233f11 = _0x233f11['next'],
                              _0x20df55[_0xe21ce8(0x792)] && this[_0xe21ce8(0x265)](_0xec7b03, _0x20df55, _0x4140cd);
                    }
               }
               ,
               _0x1b5374[_0xc3a123(0x2d4)][_0xc3a123(0x5bb)] = function () {
                    const _0x52f4c3 = _0xc3a123;
                    this[_0x52f4c3(0xb79)] = !0x0;
               }
               ;
          const _0x128281 = {
               'CLIP_NOTHING': 0x0,
               'CLIP_BEHIND_ANY_PLANE': 0x1,
               'CLIP_BEHIND_ALL_PLANE': 0x2,
               'ONLY_KEEP_LINE': 0x3
          };
          var _0x5db271 = Object[_0xc3a123(0xb56)](_0x128281);
          const _0x3cd59e = {
               'DisplayMode': {
                    'NONE': 0x0,
                    'FACE': 0x1,
                    'LINE': 0x2,
                    'FACE_AND_LINE': 0x3
               },
               'AnalysisRegionMode': {
                    'ARM_NONE': 0x0,
                    'ARM_ALL': 0x1,
                    'ARM_REGION': 0x2
               },
               'FilterMode': {
                    'LINEAR': 0x0,
                    'NEAREST': 0x1
               }
          };
          var _0xec7b36 = Object[_0xc3a123(0xb56)](_0x3cd59e);
          function _0x10d8d5(_0x46933d) {
               const _0x192137 = _0xc3a123;
               this[_0x192137(0x561)] = void 0x0,
                    this[_0x192137(0x350)] = void 0x0,
                    this[_0x192137(0x51c)] = void 0x0,
                    this['region'] = void 0x0,
                    this[_0x192137(0xd75)] = new Cesium[(_0x192137(0xce9))](),
                    this[_0x192137(0x63d)] = !0x1,
                    this['isUseRegion'] = !0x1,
                    this['regionUpdate'] = !0x1,
                    this[_0x192137(0xa40)] = _0xec7b36[_0x192137(0x6b0)]['ARM_NONE'],
                    this[_0x192137(0x941)] = _0x46933d[_0x192137(0x941)],
                    this[_0x192137(0x2a2)] = _0x46933d[_0x192137(0x2a2)],
                    this[_0x192137(0x517)] = _0x46933d[_0x192137(0x517)],
                    this['minHeight'] = _0x46933d[_0x192137(0xb36)],
                    this[_0x192137(0xd2c)] = _0x46933d['maxCategory'],
                    this[_0x192137(0xadc)] = _0x46933d[_0x192137(0xadc)],
                    this[_0x192137(0xa55)] = !0x0;
          }
          function _0x378706() {
               const _0x5d6ad8 = _0xc3a123;
               this[_0x5d6ad8(0x24d)] = 0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                    this[_0x5d6ad8(0x2e0)] = -0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                    this[_0x5d6ad8(0x30e)] = 0x0,
                    this['_ceiling'] = 0x0,
                    this[_0x5d6ad8(0xb3d)] = 0x1,
                    this[_0x5d6ad8(0x92d)] = !0x1,
                    this[_0x5d6ad8(0x906)] = [],
                    this[_0x5d6ad8(0x52d)] = 0x64,
                    this[_0x5d6ad8(0xa8d)] = !0x0,
                    this[_0x5d6ad8(0x3b1)] = new Cesium[(_0x5d6ad8(0x821))](0x0, 0x1, 0x1, 0x1),
                    this[_0x5d6ad8(0x224)] = _0xec7b36[_0x5d6ad8(0xc34)][_0x5d6ad8(0xa51)],
                    this[_0x5d6ad8(0xae8)] = void 0x0,
                    this['_emissionTextureUrl'] = '',
                    this[_0x5d6ad8(0x6ae)] = !0x1,
                    this['_emissionTexCoordSpeed'] = new Cesium[(_0x5d6ad8(0x1b7))](0x0, 0x0),
                    this[_0x5d6ad8(0x482)] = new Cesium['Cartesian2'](0x32, 0x32),
                    this[_0x5d6ad8(0x19e)] = [],
                    this[_0x5d6ad8(0x1cb)] = 0x0,
                    this[_0x5d6ad8(0x29d)] = new Cesium[(_0x5d6ad8(0x821))](0x1, 0x1, 0x1, 0x1),
                    this[_0x5d6ad8(0x3e4)] = _0xec7b36[_0x5d6ad8(0xbae)][_0x5d6ad8(0x9a3)],
                    this[_0x5d6ad8(0x7d3)] = Number[_0x5d6ad8(0x83f)],
                    this[_0x5d6ad8(0xb62)] = 0x0,
                    this[_0x5d6ad8(0xc5c)] = 0x0,
                    this[_0x5d6ad8(0x8d9)] = Number[_0x5d6ad8(0x83f)];
          }
          _0x10d8d5['prototype']['isDestroyed'] = function () {
               return !0x1;
          }
               ,
               _0x10d8d5[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x1b4f8b = _0xc3a123;
                    this[_0x1b4f8b(0x561)] = void 0x0,
                         this[_0x1b4f8b(0x350)] = this[_0x1b4f8b(0x350)] && !this[_0x1b4f8b(0x350)][_0x1b4f8b(0x567)]() && this[_0x1b4f8b(0x350)][_0x1b4f8b(0x9bb)](),
                         this[_0x1b4f8b(0x51c)] = this[_0x1b4f8b(0x51c)] && !this[_0x1b4f8b(0x51c)][_0x1b4f8b(0x567)]() && this['renderTexture'][_0x1b4f8b(0x9bb)]();
               }
               ,
               Object[_0xc3a123(0xcde)](_0x378706[_0xc3a123(0x2d4)], {
                    'MinVisibleValue': {
                         'get': function () {
                              const _0x3c61c2 = _0xc3a123;
                              return this[_0x3c61c2(0x2e0)];
                         },
                         'set': function (_0x37533c) {
                              const _0x240b8f = _0xc3a123;
                              this[_0x240b8f(0x2e0)] = _0x37533c;
                         }
                    },
                    'MaxVisibleValue': {
                         'get': function () {
                              const _0xa48642 = _0xc3a123;
                              return this[_0xa48642(0x24d)];
                         },
                         'set': function (_0x56b0c0) {
                              const _0x2af27b = _0xc3a123;
                              this[_0x2af27b(0x24d)] = _0x56b0c0;
                         }
                    },
                    'ColorTableMaxKey': {
                         'get': function () {
                              return this['_ceiling'];
                         },
                         'set': function (_0x7495e7) {
                              const _0x3b24df = _0xc3a123;
                              this[_0x3b24df(0x674)] = _0x7495e7;
                         }
                    },
                    'ColorTableMinKey': {
                         'get': function () {
                              const _0x1649da = _0xc3a123;
                              return this[_0x1649da(0x30e)];
                         },
                         'set': function (_0x23f3cd) {
                              const _0x4e1727 = _0xc3a123;
                              this[_0x4e1727(0x30e)] = _0x23f3cd;
                         }
                    },
                    'ColorTable': {
                         'get': function () {
                              return this['_dictColorTable'];
                         },
                         'set': function (_0x336229) {
                              const _0x341ce5 = _0xc3a123;
                              if (!Cesium[_0x341ce5(0x336)](_0x336229))
                                   return void (Cesium['defined'](this[_0x341ce5(0xae8)]) && (this[_0x341ce5(0xae8)]['destroy'](),
                                        this[_0x341ce5(0xae8)] = null));
                              this[_0x341ce5(0xae8)] = _0x336229,
                                   this[_0x341ce5(0x92d)] = !0x0;
                              let _0x1367e4 = this[_0x341ce5(0xae8)][_0x341ce5(0xcce)]();
                              if (_0x1367e4 < 0x1)
                                   return;
                              let _0x257ad = 0x0
                                   , _0x3ddcf0 = 0x0
                                   , _0x5b81dc = this[_0x341ce5(0xae8)][_0x341ce5(0x519)](0x0);
                              Cesium['defined'](_0x5b81dc) && Cesium[_0x341ce5(0x336)](_0x5b81dc[_0x341ce5(0xcf2)]) && (_0x257ad = parseFloat(_0x5b81dc[_0x341ce5(0xcf2)])),
                                   _0x5b81dc = this['_dictColorTable'][_0x341ce5(0x519)](_0x1367e4 - 0x1),
                                   Cesium[_0x341ce5(0x336)](_0x5b81dc) && Cesium[_0x341ce5(0x336)](_0x5b81dc['altitude']) && (_0x3ddcf0 = parseFloat(_0x5b81dc[_0x341ce5(0xcf2)])),
                                   this[_0x341ce5(0x674)] = Math[_0x341ce5(0x590)](_0x257ad, _0x3ddcf0),
                                   this[_0x341ce5(0x30e)] = Math[_0x341ce5(0x455)](_0x257ad, _0x3ddcf0);
                         }
                    },
                    'Opacity': {
                         'get': function () {
                              const _0x4c9f94 = _0xc3a123;
                              return this[_0x4c9f94(0xb3d)];
                         },
                         'set': function (_0x1c6028) {
                              const _0x219b25 = _0xc3a123;
                              this[_0x219b25(0xb3d)] = _0x1c6028;
                         }
                    },
                    'CoverageArea': {
                         'get': function () {
                              const _0x5e4149 = _0xc3a123;
                              return this[_0x5e4149(0x906)];
                         },
                         'set': function (_0x349e78) {
                              const _0x8407d1 = _0xc3a123;
                              if (this['_updatePolygon'] = !0x0,
                                   this['_coverageArea']['length'] = 0x0,
                                   Cesium[_0x8407d1(0x336)](_0x349e78)) {
                                   for (let _0x78efbd = 0x0; _0x78efbd < _0x349e78[_0x8407d1(0x72b)]; _0x78efbd++)
                                        this[_0x8407d1(0x906)][_0x78efbd] = _0x349e78[_0x78efbd];
                              }
                         }
                    },
                    'DisplayMode': {
                         'get': function () {
                              const _0xfdf24f = _0xc3a123;
                              return this[_0xfdf24f(0x224)];
                         },
                         'set': function (_0x3ec1fa) {
                              this['_displayMode'] = _0x3ec1fa;
                         }
                    },
                    'LineColor': {
                         'get': function () {
                              return this['_lineColor'];
                         },
                         'set': function (_0x5c3316) {
                              const _0xd76bda = _0xc3a123;
                              Cesium[_0xd76bda(0x821)][_0xd76bda(0x432)](_0x5c3316, this[_0xd76bda(0x3b1)]);
                         }
                    },
                    'LineInterval': {
                         'get': function () {
                              return this['_linesInterval'];
                         },
                         'set': function (_0x418dcc) {
                              const _0x20fc8e = _0xc3a123;
                              this[_0x20fc8e(0x52d)] = _0x418dcc;
                         }
                    },
                    'UpdateColorDictTable': {
                         'get': function () {
                              const _0x2182e9 = _0xc3a123;
                              return this[_0x2182e9(0x92d)];
                         },
                         'set': function (_0x2c0168) {
                              this['_updateColorDictTable'] = _0x2c0168;
                         }
                    },
                    'UpdatePolygonRegion': {
                         'get': function () {
                              const _0x11cefd = _0xc3a123;
                              return this[_0x11cefd(0xa8d)];
                         },
                         'set': function (_0x1771a1) {
                              const _0x5c3044 = _0xc3a123;
                              this[_0x5c3044(0xa8d)] = _0x1771a1;
                         }
                    },
                    'emissionTextureUrl': {
                         'get': function () {
                              const _0x53c26c = _0xc3a123;
                              return this[_0x53c26c(0x2c9)];
                         },
                         'set': function (_0x1fafae) {
                              const _0x8d9529 = _0xc3a123;
                              this['_emissionTextureUrl'] = _0x1fafae,
                                   this['_emissionTextureArray'] = [],
                                   this[_0x8d9529(0x19e)][_0x8d9529(0x63e)]({
                                        'url': _0x1fafae,
                                        'USpeed': this[_0x8d9529(0xd5f)]['x'],
                                        'VSpeed': this[_0x8d9529(0xd5f)]['y'],
                                        'UTiling': this[_0x8d9529(0x482)]['x'],
                                        'VTiling': this[_0x8d9529(0x482)]['y']
                                   }),
                                   this[_0x8d9529(0x6ae)] = !0x0,
                                   this[_0x8d9529(0x1cb)] = 0x0;
                         }
                    },
                    'emissionTexCoordUSpeed': {
                         'get': function () {
                              const _0x2101c1 = _0xc3a123;
                              return this[_0x2101c1(0xd5f)]['x'];
                         },
                         'set': function (_0xdb70f) {
                              const _0x2fd4af = _0xc3a123;
                              Cesium[_0x2fd4af(0x336)](this[_0x2fd4af(0x19e)]) && this[_0x2fd4af(0x19e)][_0x2fd4af(0x72b)] > 0x0 && (this['_emissionTextureArray'][0x0]['USpeed'] = _0xdb70f),
                                   this[_0x2fd4af(0xd5f)]['x'] = _0xdb70f;
                         }
                    },
                    'emissionTexCoordVSpeed': {
                         'get': function () {
                              return this['_emissionTexCoordSpeed']['y'];
                         },
                         'set': function (_0x2f0334) {
                              const _0x259b1e = _0xc3a123;
                              Cesium[_0x259b1e(0x336)](this[_0x259b1e(0x19e)]) && this['_emissionTextureArray'][_0x259b1e(0x72b)] > 0x0 && (this['_emissionTextureArray'][0x0][_0x259b1e(0x1ca)] = _0x2f0334),
                                   this[_0x259b1e(0xd5f)]['y'] = _0x2f0334;
                         }
                    },
                    'emissionTexCoordScale': {
                         'get': function () {
                              const _0x5abc69 = _0xc3a123;
                              return this[_0x5abc69(0x482)];
                         },
                         'set': function (_0x47cf5f) {
                              const _0x139b66 = _0xc3a123;
                              Cesium[_0x139b66(0x336)](this[_0x139b66(0x19e)]) && this[_0x139b66(0x19e)][_0x139b66(0x72b)] > 0x0 && (this[_0x139b66(0x19e)][0x0][_0x139b66(0x331)] = _0x47cf5f['x'],
                                   this[_0x139b66(0x19e)][0x0]['VTiling'] = _0x47cf5f['y']),
                                   this[_0x139b66(0x482)] = _0x47cf5f;
                         }
                    },
                    'emissionTextureArray': {
                         'get': function () {
                              return this['_emissionTextureArray'];
                         },
                         'set': function (_0x11f4ce) {
                              const _0x255056 = _0xc3a123;
                              this[_0x255056(0x19e)] = _0x11f4ce,
                                   this['_emissionTextureChanged'] = !0x0,
                                   this[_0x255056(0x1cb)] = 0x0;
                         }
                    },
                    'noValueColor': {
                         'get': function () {
                              const _0x3fff0b = _0xc3a123;
                              return this[_0x3fff0b(0x29d)];
                         },
                         'set': function (_0x3c3ec8) {
                              const _0x419c39 = _0xc3a123;
                              Cesium[_0x419c39(0x336)](_0x3c3ec8) && (this['_noValueColor'] = Cesium['Color'][_0x419c39(0x432)](_0x3c3ec8, this[_0x419c39(0x29d)]));
                         }
                    },
                    'filterMode': {
                         'get': function () {
                              const _0x10e697 = _0xc3a123;
                              return this[_0x10e697(0x3e4)];
                         },
                         'set': function (_0x32e5dd) {
                              const _0x95e2af = _0xc3a123;
                              this[_0x95e2af(0x3e4)] = _0x32e5dd;
                         }
                    },
                    'visibleDistanceMax': {
                         'get': function () {
                              return this['_visibleDistanceMax'];
                         },
                         'set': function (_0x3ff087) {
                              const _0x58898e = _0xc3a123;
                              this[_0x58898e(0x7d3)] = _0x3ff087;
                         }
                    },
                    'visibleDistanceMin': {
                         'get': function () {
                              const _0x4b179d = _0xc3a123;
                              return this[_0x4b179d(0xb62)];
                         },
                         'set': function (_0x2d719a) {
                              const _0x35c9b9 = _0xc3a123;
                              this[_0x35c9b9(0xb62)] = _0x2d719a;
                         }
                    },
                    'minVisibleAltitude': {
                         'get': function () {
                              const _0x389920 = _0xc3a123;
                              return this[_0x389920(0xc5c)];
                         },
                         'set': function (_0x1ff318) {
                              const _0x4be253 = _0xc3a123;
                              this[_0x4be253(0xc5c)] = _0x1ff318;
                         }
                    },
                    'maxVisibleAltitude': {
                         'get': function () {
                              const _0x56e0f4 = _0xc3a123;
                              return this[_0x56e0f4(0x8d9)];
                         },
                         'set': function (_0x983a93) {
                              this['_maxVisibleAltitude'] = _0x983a93;
                         }
                    }
               }),
               _0x378706['clone'] = function (_0x4bdf91, _0x399b48) {
                    const _0x2a7878 = _0xc3a123;
                    if (_0x4bdf91) {
                         _0x399b48 || (_0x399b48 = new _0x378706()),
                              _0x399b48[_0x2a7878(0x24d)] = _0x4bdf91[_0x2a7878(0x24d)],
                              _0x399b48['_minVisibleValue'] = _0x4bdf91['_minVisibleValue'],
                              _0x399b48[_0x2a7878(0x30e)] = _0x4bdf91[_0x2a7878(0x30e)],
                              _0x399b48[_0x2a7878(0x674)] = _0x4bdf91[_0x2a7878(0x674)],
                              _0x399b48[_0x2a7878(0xb3d)] = _0x4bdf91[_0x2a7878(0xb3d)],
                              _0x399b48[_0x2a7878(0x92d)] = _0x4bdf91[_0x2a7878(0x92d)],
                              _0x399b48[_0x2a7878(0x52d)] = _0x4bdf91['_linesInterval'],
                              _0x399b48['_updatePolygon'] = _0x4bdf91[_0x2a7878(0xa8d)],
                              _0x399b48[_0x2a7878(0x224)] = _0x4bdf91[_0x2a7878(0x224)],
                              _0x399b48[_0x2a7878(0x3b1)] = Cesium['Color'][_0x2a7878(0x432)](_0x4bdf91[_0x2a7878(0x3b1)], _0x399b48[_0x2a7878(0x3b1)]),
                              _0x399b48[_0x2a7878(0xae8)] = _0x4bdf91['_dictColorTable'],
                              _0x399b48[_0x2a7878(0xd5f)] = Cesium['Cartesian2']['clone'](_0x4bdf91[_0x2a7878(0xd5f)], _0x399b48[_0x2a7878(0xd5f)]),
                              _0x399b48[_0x2a7878(0x482)] = Cesium[_0x2a7878(0x1b7)][_0x2a7878(0x432)](_0x4bdf91[_0x2a7878(0x482)], _0x399b48['_emissionTexCoordScale']),
                              _0x399b48['_emissionTextureUrl'] = _0x4bdf91['_emissionTextureUrl'],
                              _0x399b48[_0x2a7878(0x19e)] = _0x4bdf91['_emissionTextureArray'],
                              _0x399b48[_0x2a7878(0x1cb)] = _0x4bdf91[_0x2a7878(0x1cb)],
                              _0x399b48[_0x2a7878(0x29d)] = Cesium[_0x2a7878(0x821)]['clone'](_0x4bdf91[_0x2a7878(0x29d)], _0x399b48['_noValueColor']),
                              _0x399b48[_0x2a7878(0x906)][_0x2a7878(0x72b)] = 0x0;
                         for (let _0xd9ca = 0x0; _0xd9ca < _0x4bdf91[_0x2a7878(0x906)][_0x2a7878(0x72b)]; _0xd9ca++)
                              _0x399b48['_coverageArea'][_0xd9ca] = _0x4bdf91[_0x2a7878(0x906)][_0xd9ca];
                         return _0x399b48['_textureFilterMode'] = _0x4bdf91[_0x2a7878(0x3e4)],
                              _0x399b48[_0x2a7878(0x7d3)] = _0x4bdf91[_0x2a7878(0x7d3)],
                              _0x399b48[_0x2a7878(0xb62)] = _0x4bdf91[_0x2a7878(0xb62)],
                              _0x399b48[_0x2a7878(0x8d9)] = _0x4bdf91[_0x2a7878(0x8d9)],
                              _0x399b48['_minVisibleAltitude'] = _0x4bdf91[_0x2a7878(0xc5c)],
                              _0x399b48;
                    }
               }
               ;
          let _0x3f2d85 = [];
          _0x378706[_0xc3a123(0x2d4)][_0xc3a123(0x221)] = function () {
               const _0x2dd801 = _0xc3a123;
               let _0x3e2cef = this[_0x2dd801(0xcea)];
               if (!_0x3e2cef)
                    return _0x3f2d85;
               let _0x2e4473, _0x423e93 = this[_0x2dd801(0x19e)][_0x2dd801(0x72b)];
               if (_0x3f2d85[_0x2dd801(0x72b)] != _0x423e93) {
                    for (_0x3f2d85 = [],
                         _0x2e4473 = 0x0; _0x2e4473 < _0x423e93; _0x2e4473++)
                         _0x3f2d85[_0x2dd801(0x63e)](new Cartesian4());
               }
               for (_0x2e4473 = 0x0; _0x2e4473 < _0x423e93; _0x2e4473++) {
                    let _0xb206db = this[_0x2dd801(0x19e)][_0x2e4473]
                         , _0x1da5ba = _0x3e2cef[_0x2dd801(0xa1d)][_0xb206db[_0x2dd801(0x900)]];
                    _0x1da5ba && (_0x3f2d85[_0x2e4473]['x'] = _0x1da5ba['x'],
                         _0x3f2d85[_0x2e4473]['y'] = _0x1da5ba['y'],
                         _0x3f2d85[_0x2e4473]['z'] = _0x1da5ba['x'] + _0x1da5ba[_0x2dd801(0x65e)],
                         _0x3f2d85[_0x2e4473]['w'] = _0x1da5ba['y'] + _0x1da5ba[_0x2dd801(0x48e)]);
               }
               return _0x3f2d85;
          }
               ;
          let _0x36bd18 = [];
          function _0x265d94() {
               const _0x2d966a = _0xc3a123;
               this[_0x2d966a(0xa66)] = 0x400,
                    this[_0x2d966a(0x223)] = 0x400,
                    this[_0x2d966a(0xd75)] = new Cesium[(_0x2d966a(0xce9))](),
                    this['texture'] = void 0x0,
                    this[_0x2d966a(0x2f9)] = void 0x0,
                    this['regions'] = new Cesium['AssociativeArray'](),
                    this[_0x2d966a(0x9b4)] = !0x1,
                    this[_0x2d966a(0x5d7)] = !0x1;
          }
          _0x378706['prototype'][_0xc3a123(0xa36)] = function () {
               const _0x39be53 = _0xc3a123;
               if (!this[_0x39be53(0x19e)])
                    return _0x36bd18;
               let _0x2422ba, _0x2afdd7 = this[_0x39be53(0x19e)][_0x39be53(0x72b)];
               if (_0x36bd18[_0x39be53(0x72b)] != _0x2afdd7) {
                    for (_0x36bd18 = [],
                         _0x2422ba = 0x0; _0x2422ba < _0x2afdd7; _0x2422ba++)
                         _0x36bd18[_0x39be53(0x63e)](new Cartesian4());
               }
               let _0x33adb8 = performance['now']() / 0x3e8;
               for (_0x2422ba = 0x0; _0x2422ba < _0x2afdd7; _0x2422ba++) {
                    let _0x59ef8e = this[_0x39be53(0x19e)][_0x2422ba];
                    _0x36bd18[_0x2422ba]['x'] = _0x59ef8e[_0x39be53(0x331)],
                         _0x36bd18[_0x2422ba]['y'] = _0x59ef8e[_0x39be53(0x4cd)],
                         _0x36bd18[_0x2422ba]['z'] = _0x59ef8e[_0x39be53(0x1f3)] * _0x33adb8,
                         _0x36bd18[_0x2422ba]['w'] = _0x59ef8e[_0x39be53(0x1ca)] * _0x33adb8;
               }
               return _0x36bd18;
          }
               ,
               _0x378706['prototype'][_0xc3a123(0x9bb)] = function () {
                    const _0x52df1e = _0xc3a123;
                    this[_0x52df1e(0x906)][_0x52df1e(0x72b)] = 0x0,
                         this[_0x52df1e(0xae8)] = this[_0x52df1e(0xae8)] && this[_0x52df1e(0xae8)][_0x52df1e(0x9bb)]();
               }
               ,
               _0x265d94[_0xc3a123(0x2d4)]['isDestroyed'] = function () {
                    return !0x1;
               }
               ,
               _0x265d94[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x16555f = _0xc3a123;
                    this[_0x16555f(0x350)] = this[_0x16555f(0x350)] && this['texture'][_0x16555f(0x9bb)](),
                         this['fbo'] = this['fbo'] && this[_0x16555f(0x2f9)]['destroy'](),
                         this[_0x16555f(0x893)][_0x16555f(0x6c9)]();
               }
               ;
          var _0x28a72e = '\x0aattribute\x20vec4\x20aPosition;\x0auniform\x20vec4\x20uRect;\x0a#ifdef\x20Mode_Height\x0avarying\x20float\x20vHeight;\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20vec4\x20vPos\x20=\x20aPosition;\x0a\x20\x20\x20vec2\x20bounds\x20=\x20uRect.zw\x20-\x20uRect.xy;\x0a\x20\x20\x20vPos.xy\x20=\x20(vPos.xy\x20-\x20uRect.xy)\x20/\x20bounds.xy\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20gl_Position\x20=\x20vec4(vPos.xy,\x200.5,\x201.0);\x0a#ifdef\x20Mode_Height\x0a\x20\x20\x20vHeight\x20=\x20vPos.z;\x0a#endif\x0a}'
               , _0x5d3bcf = _0xc3a123(0xa93);
          function _0x3fc847() {
               const _0x3cae2b = _0xc3a123;
               this[_0x3cae2b(0xd75)] = new Cesium[(_0x3cae2b(0xce9))](Number[_0x3cae2b(0x83f)], Number[_0x3cae2b(0x83f)], -Number['MAX_VALUE'], -Number[_0x3cae2b(0x83f)]),
                    this[_0x3cae2b(0x962)] = void 0x0,
                    this[_0x3cae2b(0x9d3)] = void 0x0,
                    this[_0x3cae2b(0x36d)] = void 0x0,
                    this[_0x3cae2b(0x990)] = void 0x0;
          }
          let _0x4afeee = new Cesium[(_0xc3a123(0x25b))]();
          function _0x953e26() {
               const _0x26ac1c = _0xc3a123;
               this[_0x26ac1c(0xa85)] = {},
                    this[_0x26ac1c(0xac2)] = new Cesium[(_0x26ac1c(0xb86))]();
          }
          _0x3fc847[_0xc3a123(0x2d4)][_0xc3a123(0x3d9)] = function (_0x153f88, _0x1c92ce) {
               const _0x180618 = _0xc3a123;
               let _0x4c4d75 = _0x153f88[_0x180618(0x732)]['position'][_0x180618(0xcd3)];
               for (let _0x1ac4d9 = 0x0, _0x358fc9 = _0x4c4d75[_0x180618(0x72b)]; _0x1ac4d9 < _0x358fc9; _0x1ac4d9 += 0x3)
                    _0x4afeee['x'] = _0x4c4d75[_0x1ac4d9],
                         _0x4afeee['y'] = _0x4c4d75[_0x1ac4d9 + 0x1],
                         _0x4afeee['z'] = _0x4c4d75[_0x1ac4d9 + 0x2],
                         Cesium[_0x180618(0xcdf)][_0x180618(0xbde)](_0x1c92ce, _0x4afeee, _0x4afeee),
                         _0x4c4d75[_0x1ac4d9] = _0x4afeee['x'],
                         _0x4c4d75[_0x1ac4d9 + 0x1] = _0x4afeee['y'],
                         _0x4c4d75[_0x1ac4d9 + 0x2] = _0x4afeee['z'];
               this[_0x180618(0x9d3)] = _0x153f88;
          }
               ,
               _0x3fc847[_0xc3a123(0x2d4)]['updateGeoBounds'] = function (_0x4e3a5b) {
                    const _0x1a2273 = _0xc3a123;
                    let _0x567a13 = _0x4e3a5b[_0x1a2273(0x732)][_0x1a2273(0x5a4)][_0x1a2273(0xcd3)]
                         , _0x50c967 = this[_0x1a2273(0xd75)];
                    for (let _0x411b02 = 0x0, _0x4ed529 = _0x567a13[_0x1a2273(0x72b)]; _0x411b02 < _0x4ed529; _0x411b02 += 0x3) {
                         let _0x51e599 = _0x567a13[_0x411b02]
                              , _0x18edf6 = _0x567a13[_0x411b02 + 0x1];
                         _0x50c967['x'] = Math[_0x1a2273(0x455)](_0x51e599, _0x50c967['x']),
                              _0x50c967['y'] = Math[_0x1a2273(0x455)](_0x18edf6, _0x50c967['y']),
                              _0x50c967['z'] = Math[_0x1a2273(0x590)](_0x51e599, _0x50c967['z']),
                              _0x50c967['w'] = Math['max'](_0x18edf6, _0x50c967['w']);
                    }
               }
               ,
               _0x3fc847[_0xc3a123(0x2d4)][_0xc3a123(0x71f)] = function (_0x2e857e, _0x4963e6) {
                    const _0x11e9e0 = _0xc3a123;
                    if (this['command'])
                         return;
                    let _0x524b48 = _0x4963e6[_0x11e9e0(0x367)](0x0)
                         , _0x3e73fc = new Cesium[(_0x11e9e0(0x2f8))]({
                              'primitiveType': Cesium[_0x11e9e0(0xa6c)][_0x11e9e0(0x415)]
                         })
                         , _0x41d5bc = {
                              'position': 0x0
                         };
                    _0x3e73fc[_0x11e9e0(0x896)] = Cesium[_0x11e9e0(0x8e5)][_0x11e9e0(0x984)]({
                         'context': _0x2e857e,
                         'geometry': this[_0x11e9e0(0x9d3)],
                         'attributeLocations': _0x41d5bc,
                         'bufferUsage': Cesium[_0x11e9e0(0xbd0)]['STATIC_DRAW'],
                         'interleave': !0x0
                    });
                    let _0x5812e8 = new Cesium[(_0x11e9e0(0x62f))]({
                         'sources': [_0x28a72e]
                    })
                         , _0x3dce11 = new Cesium[(_0x11e9e0(0x62f))]({
                              'sources': [_0x5d3bcf]
                         });
                    _0x5812e8[_0x11e9e0(0x340)][_0x11e9e0(0x63e)](_0x11e9e0(0xcc1)),
                         _0x3dce11['defines'][_0x11e9e0(0x63e)](_0x11e9e0(0xcc1)),
                         _0x3e73fc[_0x11e9e0(0x940)] = Cesium[_0x11e9e0(0xc23)]['fromCache']({
                              'context': _0x2e857e,
                              'vertexShaderSource': _0x5812e8,
                              'fragmentShaderSource': _0x3dce11,
                              'attributeLocations': _0x41d5bc
                         }),
                         _0x3e73fc[_0x11e9e0(0x28d)] = _0x4963e6,
                         _0x3e73fc[_0x11e9e0(0x54e)] = Cesium[_0x11e9e0(0x259)]['fromCache']({
                              'viewport': new Cesium['BoundingRectangle'](0x0, 0x0, _0x524b48['width'], _0x524b48[_0x11e9e0(0x48e)])
                         }),
                         this[_0x11e9e0(0x962)] = _0x3e73fc;
               }
               ,
               _0x3fc847[_0xc3a123(0x2d4)]['destroy'] = function () {
                    const _0x5d2dfd = _0xc3a123;
                    this[_0x5d2dfd(0x2b7)] && (this[_0x5d2dfd(0x2b7)][_0x5d2dfd(0x896)] = this['_command'][_0x5d2dfd(0x896)] && !this['_command'][_0x5d2dfd(0x896)][_0x5d2dfd(0x567)]() && this['_command'][_0x5d2dfd(0x896)][_0x5d2dfd(0x9bb)](),
                         this[_0x5d2dfd(0x2b7)][_0x5d2dfd(0x940)] = this[_0x5d2dfd(0x2b7)]['shaderProgram'] && !this[_0x5d2dfd(0x2b7)][_0x5d2dfd(0x940)][_0x5d2dfd(0x567)]() && this['_command'][_0x5d2dfd(0x940)][_0x5d2dfd(0x9bb)](),
                         this[_0x5d2dfd(0x2b7)] = null),
                         this[_0x5d2dfd(0x990)] = this[_0x5d2dfd(0x990)] && this['colorBuffer'][_0x5d2dfd(0x9bb)](),
                         this[_0x5d2dfd(0x36d)] = this[_0x5d2dfd(0x36d)] && this[_0x5d2dfd(0x36d)][_0x5d2dfd(0x9bb)](),
                         this[_0x5d2dfd(0x9d3)] = null,
                         this[_0x5d2dfd(0xd75)] = null;
               }
               ;
          let _0x458d65 = 0x0;
          const _0x34ca2c = 0x6400000;
          _0x953e26[_0xc3a123(0x2d4)]['set'] = function (_0x278caf, _0x112d8d, _0x2e45a7) {
               const _0x3527e1 = _0xc3a123;
               let _0x1fdfaf = _0x278caf + '_' + _0x112d8d;
               if (!this['_cache'][_0x1fdfaf])
                    for (this[_0x3527e1(0xa85)][_0x1fdfaf] = {
                         'id': _0x1fdfaf,
                         'buffer': _0x2e45a7
                    },
                         this['_queue'][_0x3527e1(0x1f0)](_0x1fdfaf),
                         _0x458d65 += _0x2e45a7[_0x3527e1(0x62b)]; _0x458d65 > _0x34ca2c;) {
                         let _0x24af34 = this['_queue']['dequeue']()
                              , _0xf465c2 = this[_0x3527e1(0xa85)][_0x24af34];
                         _0x458d65 -= _0xf465c2['buffer'][_0x3527e1(0x62b)],
                              delete this['_cache'][_0x24af34];
                    }
          }
               ,
               _0x953e26[_0xc3a123(0x2d4)][_0xc3a123(0x420)] = function (_0x5d9887, _0x517c58) {
                    const _0x2bb49e = _0xc3a123;
                    let _0x51b9d8 = _0x5d9887 + '_' + _0x517c58
                         , _0x17ef71 = this[_0x2bb49e(0xa85)][_0x51b9d8];
                    if (_0x17ef71)
                         return _0x17ef71[_0x2bb49e(0x25d)];
               }
               ,
               _0x953e26[_0xc3a123(0x2d4)][_0xc3a123(0x264)] = function (_0x42cc69, _0x27dd45) {
                    const _0x1df7d4 = _0xc3a123;
                    let _0x1ea95f = _0x42cc69 + '_' + _0x27dd45;
                    return Cesium[_0x1df7d4(0x336)](this[_0x1df7d4(0xa85)][_0x1ea95f]);
               }
               ,
               _0x953e26[_0xc3a123(0x4df)] = void 0x0,
               _0x953e26['getSingleInstance'] = function () {
                    const _0x558b60 = _0xc3a123;
                    return _0x953e26[_0x558b60(0x4df)] || (_0x953e26['_singleInstance'] = new _0x953e26()),
                         _0x953e26[_0x558b60(0x4df)];
               }
               ;
          var _0x537e7c = new Cesium[(_0xc3a123(0xcdf))](0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1);
          function _0x160299(_0x477047) {
               const _0x46193e = _0xc3a123;
               _0x477047 = Cesium[_0x46193e(0x4d9)](_0x477047, Cesium[_0x46193e(0x4d9)][_0x46193e(0x656)]),
                    Cesium[_0x46193e(0x6d5)][_0x46193e(0x336)](_0x46193e(0x65f), _0x477047[_0x46193e(0x878)]),
                    Cesium['Check']['defined'](_0x46193e(0x506), _0x477047[_0x46193e(0xd31)]),
                    this['id'] = Cesium['createGuid'](),
                    this[_0x46193e(0xca3)] = _0x477047['name'],
                    this[_0x46193e(0x878)] = _0x477047[_0x46193e(0x878)],
                    this[_0x46193e(0x86f)] = Cesium['defaultValue'](_0x477047[_0x46193e(0x767)], !0x0),
                    this['_isS3MBlock'] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0x581)], !0x1),
                    this[_0x46193e(0x67b)] = void 0x0,
                    this[_0x46193e(0xd4d)] = void 0x0,
                    this['_baseResource'] = void 0x0,
                    this[_0x46193e(0xbbd)] = new Cesium[(_0x46193e(0xcdf))](),
                    this[_0x46193e(0x576)] = new Cesium[(_0x46193e(0xcdf))](),
                    this['fileType'] = void 0x0,
                    this[_0x46193e(0x457)] = void 0x0,
                    this[_0x46193e(0x9ef)] = void 0x0,
                    this['_rootTiles'] = [],
                    this['_schuduler'] = new _0xdf44a7(),
                    this[_0x46193e(0x56d)] = [],
                    this[_0x46193e(0x3be)] = [],
                    this[_0x46193e(0x1f1)] = [],
                    this[_0x46193e(0xa85)] = new _0x1b5374(),
                    this['_vertexCompressionType'] = _0x477047[_0x46193e(0x583)],
                    this[_0x46193e(0x86a)] = -0x1,
                    this[_0x46193e(0x7b5)] = 0x0,
                    this[_0x46193e(0x764)] = {
                         'foveatedFactor': -Number[_0x46193e(0x83f)],
                         'depth': -Number[_0x46193e(0x83f)],
                         'distance': -Number[_0x46193e(0x83f)],
                         'pixel': -Number[_0x46193e(0x83f)]
                    },
                    this['_minimumPriority'] = {
                         'foveatedFactor': Number[_0x46193e(0x83f)],
                         'depth': Number[_0x46193e(0x83f)],
                         'distance': Number[_0x46193e(0x83f)],
                         'pixel': Number[_0x46193e(0x83f)]
                    },
                    this[_0x46193e(0x59f)] = _0x13c1fa(),
                    this[_0x46193e(0x299)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0x3bf)], !0x0),
                    this[_0x46193e(0x3d6)] = !0x1,
                    this['_sceneMode'] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0xb9a)], Cesium[_0x46193e(0xa7f)][_0x46193e(0xa65)]),
                    this[_0x46193e(0x5b0)] = [],
                    this[_0x46193e(0x985)] = new Cesium[(_0x46193e(0x821))](0.7, 0.7, 0x1, 0x1),
                    this[_0x46193e(0xd3d)] = new Cesium[(_0x46193e(0xc6e))](),
                    this[_0x46193e(0xb75)] = new Cesium['AssociativeArray'](),
                    this[_0x46193e(0x623)] = new Cesium[(_0x46193e(0xc6e))](),
                    this[_0x46193e(0xbd1)] = {},
                    this[_0x46193e(0x2e6)] = {},
                    this['_allObjsHide'] = !0x1,
                    this[_0x46193e(0x247)] = _0x5db271['CLIP_NOTHING'],
                    this['_enableClip'] = !0x1,
                    this[_0x46193e(0x199)] = !0x1,
                    this[_0x46193e(0x678)] = [new Cesium['Cartesian4'](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium['Cartesian4'](0x0, 0x0, 0x0, 0x0)],
                    this[_0x46193e(0x8d1)] = [new Cesium['Cartesian4'](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x0, 0x0)],
                    this['_hypsometric'] = new _0x10d8d5({}),
                    this[_0x46193e(0x253)] = new _0x265d94(),
                    this['_minCategory'] = 0x0,
                    this[_0x46193e(0x700)] = 0x0,
                    this['_minHeight'] = 0x0,
                    this['_maxHeight'] = 0x0,
                    this[_0x46193e(0x7c8)] = new Cesium[(_0x46193e(0xce9))](0x0, 0x0, 0x1, 0x1),
                    this[_0x46193e(0xa94)] = !0x1,
                    this[_0x46193e(0xc94)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0xc62)], 0x1),
                    this[_0x46193e(0x50d)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0x935)], 0x1),
                    this[_0x46193e(0xc01)] = Cesium[_0x46193e(0x4d9)](_0x477047['hue'], 0x0),
                    this[_0x46193e(0x662)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0xcf7)], 0x1),
                    this[_0x46193e(0x8d7)] = Cesium[_0x46193e(0x4d9)](_0x477047['gamma'], 0x1),
                    this[_0x46193e(0x7d3)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0x66b)], Number['MAX_VALUE']),
                    this['_visibleDistanceMin'] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0xb81)], 0x0),
                    this[_0x46193e(0xc5c)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0xcfa)], 0x0),
                    this[_0x46193e(0x8d9)] = Cesium['defaultValue'](_0x477047['maxVisibleAltitude'], Number['MAX_VALUE']),
                    this[_0x46193e(0x20a)] = Cesium[_0x46193e(0x4d9)](_0x477047['lodRangeScale'], 0x1),
                    this[_0x46193e(0x693)] = Cesium[_0x46193e(0x4d9)](_0x477047['isVisible'], !0x0),
                    this[_0x46193e(0xa48)] = Cesium[_0x46193e(0x4d9)](_0x477047[_0x46193e(0xd55)], new _0x2e1928()),
                    this[_0x46193e(0x3ba)] = !0x1,
                    this[_0x46193e(0x2a7)] = _0x477047[_0x46193e(0x2e5)],
                    this[_0x46193e(0x202)] = 0xfff,
                    this['_waterParameters'] = void 0x0,
                    this[_0x46193e(0x30a)] = void 0x0,
                    this['_edgeDistanceFalloffFactor'] = 0x0,
                    this['_edgeCurrentTotalLength'] = 0x0,
                    this[_0x46193e(0xbb4)] = 0x0,
                    this[_0x46193e(0x833)] = _0x953e26[_0x46193e(0xaa6)](),
                    this['_materialManager'] = void 0x0,
                    this[_0x46193e(0x873)] = void 0x0,
                    this[_0x46193e(0x6bb)] = Cesium[_0x46193e(0x4d9)](_0x477047['subdomainConfig'], {}),
                    this['loadConfig'](_0x477047[_0x46193e(0x29f)]),
                    this[_0x46193e(0xb95)] = {
                         'pbrMetallicRoughness': {
                              'metallicFactor': 0x0,
                              'roughnessFactor': 0x0,
                              'baseColor': new Cesium[(_0x46193e(0xce9))](0x1, 0x1, 0x1, 0x1),
                              'baseColorTextureIndex': -0x1,
                              'emissiveFactor': Cesium[_0x46193e(0x25b)][_0x46193e(0x780)],
                              'emissiveTextureIndex': -0x1,
                              'occlusionTextureIndex': -0x1,
                              'normalTextureIndex': -0x1,
                              'normalTexture': void 0x0,
                              'baseColorTexture': void 0x0
                         }
                    };
          }
          function _0x4f37a4(_0x341c70) {
               const _0x20c774 = _0xc3a123;
               let _0x5e2c0d = {}
                    , _0x496afd = _0x341c70[_0x20c774(0xc09)];
               _0x5e2c0d[_0x20c774(0xd2f)] = _0x9879e5[_0x20c774(0x7b3)](_0x496afd, _0x20c774(0xbce)),
                    _0x5e2c0d[_0x20c774(0x747)] = _0x9879e5['queryStringValue'](_0x496afd, 'FileType');
               let _0x43121b = _0x9879e5['queryFirstNode'](_0x496afd, 'WaterEffect');
               _0x5e2c0d[_0x20c774(0x96e)] = _0x9879e5[_0x20c774(0x2cd)](_0x43121b, 'AverageHeight');
               let _0x585954 = _0x9879e5[_0x20c774(0x978)](_0x43121b, _0x20c774(0x5c7));
               _0x5e2c0d['gpuProgramParameters'] = [];
               for (let _0x16b853 = 0x0, _0x5603e0 = _0x585954[_0x20c774(0x72b)]; _0x16b853 < _0x5603e0; _0x16b853++) {
                    let _0x766f01 = {
                         'gpuConstants': [],
                         'atuoConstants': []
                    }
                         , _0x454d9f = _0x585954[_0x16b853]
                         , _0x2398db = _0x9879e5[_0x20c774(0xd4c)](_0x454d9f, 'GpuConstants');
                    if (_0x2398db) {
                         let _0x5f54fd = _0x9879e5['queryNodes'](_0x2398db, _0x20c774(0xc6d));
                         for (let _0x573b28 = 0x0, _0x5a8a48 = _0x5f54fd[_0x20c774(0x72b)]; _0x573b28 < _0x5a8a48; _0x573b28++) {
                              let _0x2df42e = {}
                                   , _0x432342 = _0x5f54fd[_0x573b28];
                              _0x2df42e[_0x20c774(0x87c)] = _0x9879e5[_0x20c774(0x2cd)](_0x432342, 'ConstType'),
                                   _0x2df42e[_0x20c774(0xbb5)] = _0x9879e5[_0x20c774(0x2cd)](_0x432342, 'Index'),
                                   _0x2df42e[_0x20c774(0xca3)] = _0x9879e5['queryStringValue'](_0x432342, _0x20c774(0xc9e)),
                                   _0x2df42e[_0x20c774(0x4cf)] = _0x9879e5[_0x20c774(0x2cd)](_0x432342, _0x20c774(0x68e)),
                                   _0x2df42e[_0x20c774(0x8d5)] = _0x9879e5[_0x20c774(0x2cd)](_0x432342, _0x20c774(0x356));
                              let _0x22c5c4 = _0x9879e5[_0x20c774(0xd4c)](_0x432342, _0x20c774(0x8e9));
                              if (_0x2df42e[_0x20c774(0x756)] = [],
                                   _0x22c5c4) {
                                   let _0x3c3b1c = _0x9879e5['queryNodes'](_0x22c5c4, _0x20c774(0x362))
                                        , _0x430fb5 = 0x0;
                                   for (; _0x430fb5 < _0x2df42e[_0x20c774(0x4cf)];) {
                                        let _0x308035 = parseFloat(_0x3c3b1c[_0x430fb5][_0x20c774(0x615)]);
                                        _0x2df42e[_0x20c774(0x756)][_0x20c774(0x63e)](_0x308035),
                                             _0x430fb5++;
                                   }
                              }
                              _0x766f01[_0x20c774(0x9e4)][_0x20c774(0x63e)](_0x2df42e);
                         }
                    }
                    let _0x4104d3 = _0x9879e5[_0x20c774(0xd4c)](_0x454d9f, _0x20c774(0xc02));
                    if (_0x4104d3) {
                         let _0x3e1243 = _0x9879e5[_0x20c774(0x978)](_0x4104d3, _0x20c774(0x661));
                         for (let _0x34b921 = 0x0, _0x4db82b = _0x3e1243['length']; _0x34b921 < _0x4db82b; _0x34b921++) {
                              let _0x350340 = {}
                                   , _0x274483 = _0x3e1243[_0x34b921];
                              _0x350340[_0x20c774(0xd25)] = _0x9879e5['queryNumericValue'](_0x274483, _0x20c774(0x64a)),
                                   _0x350340[_0x20c774(0xca3)] = _0x9879e5[_0x20c774(0x7b3)](_0x274483, _0x20c774(0xc9e)),
                                   _0x350340[_0x20c774(0xd66)] = _0x9879e5[_0x20c774(0x2cd)](_0x274483, _0x20c774(0x49d)),
                                   _0x350340['elementCount'] = _0x9879e5[_0x20c774(0x2cd)](_0x274483, 'ElementCount'),
                                   _0x350340['data'] = _0x9879e5[_0x20c774(0x2cd)](_0x274483, _0x20c774(0x2de)),
                                   _0x350340[_0x20c774(0x939)] = _0x9879e5['queryNumericValue'](_0x274483, _0x20c774(0x406)),
                                   _0x350340[_0x20c774(0xd81)] = _0x9879e5[_0x20c774(0xbf8)](_0x274483, _0x20c774(0xbc0)),
                                   _0x766f01[_0x20c774(0x78a)][_0x20c774(0x63e)](_0x350340);
                         }
                    }
                    _0x5e2c0d[_0x20c774(0x6de)][_0x20c774(0x63e)](_0x766f01);
               }
               return _0x5e2c0d;
          }
          function _0x3b61ab(_0x24d87f, _0x55346c) {
               const _0x118871 = _0xc3a123;
               let _0x4d6b6f = _0x55346c[_0x118871(0xd4d)];
               if (!(_0x55346c[_0x118871(0xd4d)]['indexOf']('realspace') > -0x1))
                    return _0x24d87f;
               let _0x57367f = _0x4d6b6f[_0x118871(0x6c0)](/(.*realspace)/, '');
               return _0x4d6b6f['replace'](/\/rest\/realspace/g, '')[_0x118871(0x6c0)](_0x57367f, '') + '/rest/realspace' + _0x57367f + _0x118871(0x338) + _0x24d87f[_0x118871(0x6c0)](/^\.*/, '')[_0x118871(0x6c0)](/^\//, '')[_0x118871(0x6c0)](/\/$/, '');
          }
          function _0xa8ecc5(_0xd8d245, _0x637835) {
               const _0x4342aa = _0xc3a123;
               let _0x510d1b = _0x637835[_0x4342aa(0x37d)];
               if (!_0x510d1b || !_0x510d1b['attachFiles'])
                    return;
               let _0x59c698 = _0x510d1b[_0x4342aa(0xc33)]
                    , _0x10f9a1 = [];
               _0xd8d245[_0x4342aa(0xd4d)];
               for (let _0x3d693f = 0x0, _0xf88c55 = _0x59c698['length']; _0x3d693f < _0xf88c55; _0x3d693f++) {
                    let _0x27e0ff = _0x59c698[_0x3d693f]['attachFile'];
                    if (_0x27e0ff[_0x4342aa(0xcef)](_0x4342aa(0x946)) > 0x0) {
                         let _0xb13734 = _0x3b61ab(_0x27e0ff, _0xd8d245)
                              , _0x5b0757 = _0xd8d245[_0x4342aa(0x606)][_0x4342aa(0x9d4)]({
                                   'url': _0xb13734
                              });
                         _0x10f9a1[_0x4342aa(0x63e)](_0x5b0757[_0x4342aa(0x891)]());
                    }
               }
               _0x10f9a1[_0x4342aa(0x72b)] && Promise[_0x4342aa(0xbc6)](_0x10f9a1)[_0x4342aa(0x7db)](_0x70053e => {
                    const _0xc98894 = _0x4342aa;
                    let _0x1279f9 = [];
                    for (let _0x4b1978 = 0x0, _0x3b7a31 = _0x70053e['length']; _0x4b1978 < _0x3b7a31; _0x4b1978++) {
                         let _0x224bfd = _0x70053e[_0x4b1978];
                         if (!_0x224bfd)
                              break;
                         let _0x121751 = _0x4f37a4(_0x224bfd);
                         _0x1279f9[_0xc98894(0x63e)](_0x121751);
                    }
                    _0xd8d245[_0xc98894(0x30a)] = new Cesium['AssociativeArray'](),
                         _0xd8d245[_0xc98894(0xc56)] = {};
                    let _0x25b645 = _0x1279f9[0x0];
                    _0xd8d245[_0xc98894(0xc56)]['averageHeight'] = _0x25b645[_0xc98894(0x96e)];
                    for (let _0x3d0a3e = 0x0; _0x3d0a3e < _0x25b645['gpuProgramParameters'][_0xc98894(0x72b)]; _0x3d0a3e++) {
                         let _0x58ae32 = _0x25b645['gpuProgramParameters'][_0x3d0a3e];
                         for (let _0x157dc3 = 0x0; _0x157dc3 < _0x58ae32[_0xc98894(0x78a)][_0xc98894(0x72b)]; _0x157dc3++) {
                              let _0x99fa3d = _0x58ae32['atuoConstants'][_0x157dc3];
                              if ('timeVal' === _0x99fa3d[_0xc98894(0xca3)]) {
                                   _0xd8d245[_0xc98894(0xc56)][_0x99fa3d[_0xc98894(0xca3)]] = _0x99fa3d[_0xc98894(0x939)];
                                   break;
                              }
                         }
                         for (let _0x1b6476 = 0x0; _0x1b6476 < _0x58ae32['gpuConstants'][_0xc98894(0x72b)]; _0x1b6476++) {
                              let _0x2a71f7 = _0x58ae32['gpuConstants'][_0x1b6476]
                                   , _0x517919 = null;
                              switch (_0x2a71f7[_0xc98894(0x4cf)]) {
                                   case 0x1:
                                        _0x517919 = _0x2a71f7['arrayFloat'][0x0];
                                        break;
                                   case 0x2:
                                        _0x517919 = new Cesium[(_0xc98894(0x1b7))](),
                                             Cesium['Cartesian2'][_0xc98894(0xb04)](_0x2a71f7[_0xc98894(0x756)], 0x0, _0x517919);
                                        break;
                                   case 0x3:
                                        _0x517919 = new Cesium['Cartesian3'](),
                                             Cesium[_0xc98894(0x25b)]['unpack'](_0x2a71f7[_0xc98894(0x756)], 0x0, _0x517919);
                                        break;
                                   case 0x4:
                                        _0x517919 = new Cesium[(_0xc98894(0xce9))](),
                                             Cesium['Cartesian4'][_0xc98894(0xb04)](_0x2a71f7[_0xc98894(0x756)], 0x0, _0x517919);
                              }
                              _0x517919 && (_0xd8d245[_0xc98894(0xc56)][_0x2a71f7[_0xc98894(0xca3)]] = _0x517919);
                         }
                    }
                    _0xd8d245['fileType'] += '_Water';
               }
               )[_0x4342aa(0x719)](_0x2dea13 => {
                    const _0x3d1c77 = _0x4342aa;
                    console[_0x3d1c77(0x7bc)](_0x2dea13);
               }
               );
          }
          function _0x2c2ac2(_0x9a5297, _0x43a29a) {
               const _0x1e1de6 = _0xc3a123;
               return _0x9a5297[_0x1e1de6(0x58c)] - _0x43a29a[_0x1e1de6(0x58c)];
          }
          function _0x3fc872(_0x2b50cd) {
               const _0x5567aa = _0xc3a123;
               let _0x30ee9f = _0x2b50cd[_0x5567aa(0x56d)]
                    , _0x25ffc5 = _0x30ee9f['length'];
               _0x30ee9f[_0x5567aa(0x208)](_0x2c2ac2);
               for (let _0x222c77 = 0x0; _0x222c77 < _0x25ffc5; ++_0x222c77) {
                    _0x30ee9f[_0x222c77][_0x5567aa(0x6da)](_0x2b50cd[_0x5567aa(0x6bb)]);
               }
          }
          function _0x17efda(_0x18657d, _0x2c593e) {
               const _0x9da939 = _0xc3a123;
               let _0x3e2629 = _0x18657d[_0x9da939(0x3be)]
                    , _0x46c35f = _0x3e2629[_0x9da939(0x72b)];
               for (let _0xa8674b = 0x0; _0xa8674b < _0x46c35f; ++_0xa8674b) {
                    _0x3e2629[_0xa8674b]['update'](_0x2c593e, _0x18657d);
               }
          }
          function _0x68d278(_0xdd25f6, _0x5cad45) {
               const _0x31afac = _0xc3a123;
               let _0x1ebd7c = _0xdd25f6[_0x31afac(0x1f1)]
                    , _0x4ab5e0 = _0x1ebd7c[_0x31afac(0x72b)];
               for (let _0x1f9f4d = 0x0; _0x1f9f4d < _0x4ab5e0; _0x1f9f4d++)
                    _0x1ebd7c[_0x1f9f4d][_0x31afac(0x2dc)](_0x5cad45, _0xdd25f6);
          }
          function _0x311512(_0x523d4c, _0x21d5f5) {
               const _0xcdc294 = _0xc3a123;
               _0x21d5f5[_0xcdc294(0x441)]();
          }
          function _0x4d6ba3(_0x57a160) {
               const _0x111807 = _0xc3a123;
               _0x57a160[_0x111807(0xb1e)] ? _0x57a160[_0x111807(0xa85)]['unloadBlockTiles'](_0x57a160, _0x311512) : _0x57a160[_0x111807(0xa85)][_0x111807(0x317)](_0x57a160, _0x311512);
          }
          function _0xfcd1f8(_0x1740f5, _0x47b65d, _0x3fab21) {
               const _0x58ba4c = _0xc3a123;
               let _0x45957a = new Cesium[(_0x58ba4c(0x25b))]()
                    , _0x2d51bb = new Cesium[(_0x58ba4c(0x25b))]();
               Cesium['Cartesian3'][_0x58ba4c(0x60c)](_0x47b65d, _0x1740f5, _0x45957a),
                    Cesium[_0x58ba4c(0x25b)][_0x58ba4c(0x60c)](_0x3fab21, _0x1740f5, _0x2d51bb);
               let _0x5f3443 = new Cesium[(_0x58ba4c(0x25b))]();
               Cesium[_0x58ba4c(0x25b)][_0x58ba4c(0x765)](_0x45957a, _0x2d51bb, _0x5f3443),
                    Cesium[_0x58ba4c(0x25b)][_0x58ba4c(0x579)](_0x5f3443, _0x5f3443);
               let _0xc127ac = -Cesium[_0x58ba4c(0x25b)]['dot'](_0x5f3443, _0x1740f5);
               return new Cesium[(_0x58ba4c(0xce9))](_0x5f3443['x'], _0x5f3443['y'], _0x5f3443['z'], _0xc127ac);
          }
          function _0x4b0c8f(_0x30599c, _0x4563a6) {
               const _0x29930b = _0xc3a123;
               _0x30599c[_0x29930b(0x5a6)](_0x4563a6);
          }
          function _0x4ea134(_0x81d514) {
               const _0x4d9a0b = _0xc3a123;
               var _0x27c6ee = new Cesium[(_0x4d9a0b(0x1ac))]()
                    , _0xa7e26a = _0x27c6ee['ellipsoid']
                    , _0x289794 = new Cesium[(_0x4d9a0b(0x25b))]()
                    , _0x9b7346 = new Cesium[(_0x4d9a0b(0x6ca))]();
               return _0xa7e26a[_0x4d9a0b(0x807)](_0x81d514, _0x9b7346),
                    _0x27c6ee[_0x4d9a0b(0x488)](_0x9b7346, _0x289794),
                    Cesium['Cartesian3'][_0x4d9a0b(0xc5a)](_0x289794['z'], _0x289794['x'], _0x289794['y']);
          }
          function _0x4affa3(_0x4e7ece, _0x1f1d7d) {
               const _0xd5129e = _0xc3a123;
               _0x4e7ece['updateObjsOperation'](_0x1f1d7d[_0xd5129e(0x4bd)], _0x1f1d7d);
          }
          function _0x5ac8de(_0x51a11d, _0x3f0da5) {
               _0x51a11d['updateObjsColor'](_0x3f0da5['ids'], _0x3f0da5);
          }
          function _0x447ecd(_0x25acce, _0x3a754d) {
               const _0x5c3017 = _0xc3a123;
               _0x25acce['updateAllObjsVisible'](_0x3a754d[_0x5c3017(0x1f2)]);
          }
          function _0x41117c(_0x27b09b, _0x4e66c5) {
               _0x27b09b['flatten'](_0x4e66c5);
          }
          function _0x469e04(_0x483ca3, _0x5eec5e) {
               const _0x45741e = _0xc3a123;
               _0x483ca3[_0x45741e(0xbe7)](_0x5eec5e);
          }
          function _0x435c84(_0xe98fd, _0x44cb32) {
               const _0x2ed92a = _0xc3a123;
               _0xe98fd[_0x2ed92a(0x52e)](_0x44cb32);
          }
          function _0x3327d1(_0x228207) {
               const _0x24f0b6 = _0xc3a123;
               let _0xdebd85 = new Cesium[(_0x24f0b6(0xce9))](Number[_0x24f0b6(0x83f)], Number['MAX_VALUE'], -Number[_0x24f0b6(0x83f)], -Number[_0x24f0b6(0x83f)]);
               for (let _0xa7dd6f = 0x0; _0xa7dd6f < _0x228207[_0x24f0b6(0x72b)]; _0xa7dd6f++) {
                    const _0x736b5a = _0x228207[_0xa7dd6f][_0x24f0b6(0xd75)];
                    _0xdebd85['x'] = Math[_0x24f0b6(0x455)](_0x736b5a['x'], _0xdebd85['x']),
                         _0xdebd85['y'] = Math[_0x24f0b6(0x455)](_0x736b5a['y'], _0xdebd85['y']),
                         _0xdebd85['z'] = Math['max'](_0x736b5a['z'], _0xdebd85['z']),
                         _0xdebd85['w'] = Math[_0x24f0b6(0x590)](_0x736b5a['w'], _0xdebd85['w']);
               }
               return _0xdebd85;
          }
          function _0x94d9aa(_0x5db411, _0x32c144) {
               const _0x45b995 = _0xc3a123;
               if (!_0x5db411[_0x45b995(0x30a)])
                    return;
               let _0x677cb5 = _0x5db411[_0x45b995(0x30a)];
               void 0x0 === _0x32c144['curDis'] && (_0x32c144[_0x45b995(0x64d)] = 0x615299),
                    void 0x0 === _0x32c144[_0x45b995(0x805)] && (_0x32c144[_0x45b995(0x805)] = 0x0);
               let _0xbc46f6 = _0x32c144['camera'][_0x45b995(0xdbc)];
               for (let _0x1cdcd5 in _0x677cb5['_hash'])
                    if (_0x677cb5['_hash'][_0x45b995(0x6e8)](_0x1cdcd5)) {
                         let _0x4cd21b = _0x677cb5[_0x45b995(0x420)](_0x1cdcd5)
                              , _0x4a9746 = _0x4cd21b[_0x45b995(0x802)];
                         if (_0x32c144[_0x45b995(0x969)]['computeVisibility'](_0x4a9746) === Cesium[_0x45b995(0x449)][_0x45b995(0xd0d)])
                              continue;
                         let _0x1dd6fd = Cesium[_0x45b995(0x25b)]['distance'](_0x4a9746[_0x45b995(0xa41)], _0xbc46f6) - _0x4a9746['radius'];
                         _0x1dd6fd = _0x1dd6fd < 0.01 ? 0.01 : _0x1dd6fd,
                              _0x1dd6fd < _0x32c144['curDis'] && (_0x32c144[_0x45b995(0x64d)] = _0x1dd6fd,
                                   _0x32c144['heightOffset'] = _0x4cd21b['distance']);
                    }
          }
          Object['defineProperties'](_0x160299['prototype'], {
               'ready': {
                    'get': function () {
                         const _0xe779a7 = _0xc3a123;
                         return _0xe779a7(0xd56) === this[_0xe779a7(0x747)] ? void 0x0 !== this[_0xe779a7(0xc56)] && this['_rootTiles'][_0xe779a7(0x72b)] > 0x0 : this['_rootTiles']['length'] > 0x0;
                    }
               },
               'readyPromise': {
                    'get': function () {
                         const _0x551146 = _0xc3a123;
                         return this[_0x551146(0x59f)];
                    }
               },
               'visible': {
                    'get': function () {
                         return this['_visible'];
                    },
                    'set': function (_0x4ff151) {
                         const _0x424cdf = _0xc3a123;
                         this[_0x424cdf(0x693)] = _0x4ff151;
                    }
               },
               'show': {
                    'get': function () {
                         const _0x2bc64f = _0xc3a123;
                         return this[_0x2bc64f(0x693)];
                    },
                    'set': function (_0x35249e) {
                         const _0x5614ef = _0xc3a123;
                         this[_0x5614ef(0x693)] = _0x35249e;
                    }
               },
               'style3D': {
                    'get': function () {
                         return this['_style3D'];
                    }
               },
               'rectangle': {
                    'get': function () {
                         const _0x4367db = _0xc3a123;
                         return this[_0x4367db(0x9ef)];
                    }
               },
               'totalMemoryUsageInBytes': {
                    'get': function () {
                         const _0xa8bec5 = _0xc3a123;
                         return this[_0xa8bec5(0x7b5)];
                    },
                    'set': function (_0x3f12a8) {
                         const _0x3d8a50 = _0xc3a123;
                         this[_0x3d8a50(0x7b5)] = _0x3f12a8;
                    }
               },
               'maximumMemoryUsage': {
                    'get': function () {
                         const _0x95bd3d = _0xc3a123;
                         return this[_0x95bd3d(0x86a)];
                    },
                    'set': function (_0x5c5a7a) {
                         this['_maximumMemoryUsage'] = _0x5c5a7a;
                    }
               },
               'lodRangeScale': {
                    'get': function () {
                         return this['_lodRangeScale'];
                    },
                    'set': function (_0x469ffd) {
                         const _0x57e8ae = _0xc3a123;
                         Cesium['Check'][_0x57e8ae(0x6f5)][_0x57e8ae(0x6f6)](_0x57e8ae(0x416), _0x469ffd),
                              this['_lodRangeScale'] = _0x469ffd;
                    }
               },
               'selectedColor': {
                    'get': function () {
                         const _0x546d5f = _0xc3a123;
                         return this[_0x546d5f(0x985)];
                    },
                    'set': function (_0x1ff933) {
                         const _0x3ea4b0 = _0xc3a123;
                         Cesium[_0x3ea4b0(0x821)][_0x3ea4b0(0x432)](_0x1ff933, this[_0x3ea4b0(0x985)]);
                    }
               },
               'dataMinValue': {
                    'get': function () {
                         const _0xc0e409 = _0xc3a123;
                         return Cesium['defaultValue'](this[_0xc0e409(0xc12)], this[_0xc0e409(0x562)]);
                    }
               },
               'dataMaxValue': {
                    'get': function () {
                         const _0x293de7 = _0xc3a123;
                         return Cesium[_0x293de7(0x4d9)](this['_maxCategory'], this[_0x293de7(0x648)]);
                    }
               },
               'swipeRegion': {
                    'get': function () {
                         const _0xe5575e = _0xc3a123;
                         return new Cesium[(_0xe5575e(0xa4f))](this[_0xe5575e(0x7c8)]['x'], this['_swipeRegion']['y'], this[_0xe5575e(0x7c8)]['z'] - this[_0xe5575e(0x7c8)]['x'], this['_swipeRegion']['w'] - this['_swipeRegion']['y']);
                    },
                    'set': function (_0x39143b) {
                         const _0x2f0cbc = _0xc3a123;
                         if (_0x39143b) {
                              if (!(_0x39143b instanceof Cesium[_0x2f0cbc(0xa4f)]))
                                   throw new Cesium['DeveloperError'](_0x2f0cbc(0x75c));
                              Cesium['Cartesian4']['fromElements'](_0x39143b['x'], _0x39143b['y'], _0x39143b['x'] + _0x39143b[_0x2f0cbc(0x65e)], _0x39143b['y'] + _0x39143b[_0x2f0cbc(0x48e)], this[_0x2f0cbc(0x7c8)]);
                         }
                    }
               },
               'swipeEnabled': {
                    'get': function () {
                         const _0x27e1f8 = _0xc3a123;
                         return this[_0x27e1f8(0xa94)];
                    },
                    'set': function (_0x1ee034) {
                         const _0x30cc35 = _0xc3a123;
                         _0x1ee034 !== this[_0x30cc35(0xa94)] && (_0x1ee034 || Cesium['Cartesian4']['fromElements'](0x0, 0x0, 0x1, 0x1, this['_swipeRegion']),
                              this[_0x30cc35(0xa94)] = _0x1ee034,
                              this['_tranverseRenderEntity']({
                                   'enable': _0x1ee034
                              }, _0x435c84));
                    }
               },
               'visibleDistanceMax': {
                    'get': function () {
                         const _0x381209 = _0xc3a123;
                         return this[_0x381209(0x7d3)];
                    },
                    'set': function (_0x44e1b5) {
                         const _0x2380af = _0xc3a123;
                         Cesium[_0x2380af(0x6d5)]['typeOf'][_0x2380af(0x6f6)](_0x2380af(0x9fe), _0x44e1b5),
                              this['_visibleDistanceMax'] = _0x44e1b5;
                    }
               },
               'visibleDistanceMin': {
                    'get': function () {
                         return this['_visibleDistanceMin'];
                    },
                    'set': function (_0x32c19d) {
                         const _0x2df6d2 = _0xc3a123;
                         Cesium['Check'][_0x2df6d2(0x6f5)][_0x2df6d2(0x6f6)]('min\x20visible\x20distance', _0x32c19d),
                              this[_0x2df6d2(0xb62)] = _0x32c19d;
                    }
               },
               'minVisibleAltitude': {
                    'get': function () {
                         return this['_minVisibleAltitude'];
                    },
                    'set': function (_0xe7bb21) {
                         const _0x550b13 = _0xc3a123;
                         Cesium[_0x550b13(0x6d5)][_0x550b13(0x6f5)]['number']('min\x20visible\x20altitude', _0xe7bb21),
                              this['_minVisibleAltitude'] = _0xe7bb21;
                    }
               },
               'maxVisibleAltitude': {
                    'get': function () {
                         const _0x241d5d = _0xc3a123;
                         return this[_0x241d5d(0x8d9)];
                    },
                    'set': function (_0x323d76) {
                         const _0x601dc = _0xc3a123;
                         Cesium['Check'][_0x601dc(0x6f5)][_0x601dc(0x6f6)](_0x601dc(0x991), _0x323d76),
                              this[_0x601dc(0x8d9)] = _0x323d76;
                    }
               },
               'hypsometricSetting': {
                    'get': function () {
                         const _0x256691 = _0xc3a123;
                         return {
                              'hypsometricSetting': this[_0x256691(0x371)]['setting'],
                              'analysisMode': this[_0x256691(0x371)][_0x256691(0xa40)]
                         };
                    },
                    'set': function (_0x5c845b) {
                         const _0x47d0e1 = _0xc3a123;
                         let _0x5f3c3f = this['_hypsometric'];
                         if (!_0x5c845b || !_0x5c845b[_0x47d0e1(0x797)])
                              return _0x5f3c3f[_0x47d0e1(0x63d)] = !0x1,
                                   _0x5f3c3f[_0x47d0e1(0x561)] = _0x5f3c3f[_0x47d0e1(0x561)] && _0x5f3c3f['setting'][_0x47d0e1(0x9bb)](),
                                   void this[_0x47d0e1(0x6d0)]({
                                        'enable': !0x1
                                   }, _0x469e04);
                         _0x5f3c3f[_0x47d0e1(0xbfc)] = _0x5f3c3f[_0x47d0e1(0xbfc)] && _0x5f3c3f[_0x47d0e1(0xbfc)][_0x47d0e1(0x9bb)](),
                              _0x5f3c3f[_0x47d0e1(0x51c)] || (_0x5f3c3f['renderTexture'] = new Cesium[(_0x47d0e1(0x74d))]({
                                   'context': this[_0x47d0e1(0x878)],
                                   'width': 0x400,
                                   'height': 0x400,
                                   'pixelFormat': Cesium[_0x47d0e1(0x4e1)]['RGBA']
                              })),
                              _0x5f3c3f[_0x47d0e1(0x350)] || (_0x5f3c3f[_0x47d0e1(0x350)] = new Cesium['Texture']({
                                   'context': this[_0x47d0e1(0x878)],
                                   'width': 0x400,
                                   'height': 0x40,
                                   'pixelFormat': Cesium[_0x47d0e1(0x4e1)]['RGBA'],
                                   'flipY': !0x1
                              })),
                              _0x5f3c3f[_0x47d0e1(0xa40)] = Cesium[_0x47d0e1(0x4d9)](_0x5c845b[_0x47d0e1(0xa40)], _0x5f3c3f[_0x47d0e1(0xa40)]),
                              _0x5f3c3f[_0x47d0e1(0x561)] = _0x378706[_0x47d0e1(0x432)](_0x5c845b['hypsometricSetting'], _0x5f3c3f[_0x47d0e1(0x561)]),
                              _0x5f3c3f['setting'][_0x47d0e1(0x829)] && (_0x5f3c3f[_0x47d0e1(0x561)][_0x47d0e1(0x829)][_0x47d0e1(0x955)](),
                                   this[_0x47d0e1(0x371)][_0x47d0e1(0x350)] && this[_0x47d0e1(0x371)][_0x47d0e1(0x350)]['copyFrom']({
                                        'width': 0x400,
                                        'height': 0x40,
                                        'arrayBufferView': _0x5f3c3f[_0x47d0e1(0x561)][_0x47d0e1(0x829)][_0x47d0e1(0xc2f)]
                                   })),
                              _0x5f3c3f[_0x47d0e1(0x63d)] = _0x5f3c3f[_0x47d0e1(0xa40)] !== _0xec7b36[_0x47d0e1(0x6b0)]['ARM_NONE'],
                              this[_0x47d0e1(0x6d0)]({
                                   'enable': _0x5f3c3f[_0x47d0e1(0x63d)]
                              }, _0x469e04);
                    }
               },
               'selectEnabled': {
                    'get': function () {
                         const _0x474cb7 = _0xc3a123;
                         return this[_0x474cb7(0x299)];
                    },
                    'set': function (_0x521774) {
                         const _0x23a256 = _0xc3a123;
                         Cesium[_0x23a256(0x6d5)][_0x23a256(0x336)](_0x23a256(0x41a), _0x521774),
                              Cesium['Check'][_0x23a256(0x6f5)][_0x23a256(0x880)](_0x23a256(0x41a), _0x521774),
                              this[_0x23a256(0x299)] = _0x521774;
                    }
               },
               'subdomains': {
                    'get': function () {
                         return this['_subdomainConfig']['subdomains'];
                    },
                    'set': function (_0x224382) {
                         const _0x2b45ba = _0xc3a123;
                         if (defined(_0x224382) && !defined(_0x224382[_0x2b45ba(0x72b)]))
                              throw new DeveloperError(_0x2b45ba(0x426));
                         this[_0x2b45ba(0x6bb)]['subdomains'] = _0x224382;
                    }
               }
          }),
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x2a9)] = function (_0x2dd937) {
                    const _0x310a32 = _0xc3a123;
                    let _0x5c5bf9 = this;
                    Promise[_0x310a32(0x559)](_0x2dd937)[_0x310a32(0x7db)](function (_0x10fc26) {
                         const _0x87082b = _0x310a32;
                         let _0x46e0c4, _0x394197 = Cesium[_0x87082b(0x6e9)][_0x87082b(0x773)](_0x10fc26);
                         _0x46e0c4 = _0x394197[_0x87082b(0x5bf)](!0x0);
                         let _0x308faf = new _0x5a9ea2(_0x46e0c4);
                         return _0x308faf[_0x87082b(0x72d)] = void 0x0,
                              _0x46e0c4 = _0x308faf['toString'](),
                              _0x5c5bf9['_url'] = _0x394197[_0x87082b(0x29f)],
                              _0x5c5bf9['_basePath'] = _0x46e0c4,
                              _0x5c5bf9[_0x87082b(0x606)] = _0x394197,
                              Cesium['defined'](_0x5c5bf9['_subdomainConfig'][_0x87082b(0x95b)]) && (_0x5c5bf9[_0x87082b(0xd4d)] = _0x5c5bf9[_0x87082b(0x6bb)][_0x87082b(0x4e2)]),
                              _0x5c5bf9[_0x87082b(0x86f)] || _0x5c5bf9[_0x87082b(0xb1e)] ? _0x394197[_0x87082b(0xbc7)]() : _0x394197[_0x87082b(0x891)]();
                    })['then'](function (_0xdf4734) {
                         const _0x15e0c9 = _0x310a32;
                         if (_0x5c5bf9['_isS3MB'] || _0x5c5bf9['_isS3MBlock']) {
                              let _0x5b3d94 = _0xdf4734['extensions'];
                              _0x5c5bf9['fileType'] = _0x5b3d94[_0x15e0c9(0x326)];
                              let _0x226d8d = _0xdf4734[_0x15e0c9(0x5a4)]['x']
                                   , _0x33018a = _0xdf4734['position']['y']
                                   , _0x42e48a = _0xdf4734['position']['z']
                                   , _0x480729 = _0xdf4734[_0x15e0c9(0x5a4)][_0x15e0c9(0x823)];
                              if (_0x5c5bf9[_0x15e0c9(0xaeb)] = _0x226d8d,
                                   _0x5c5bf9[_0x15e0c9(0x5ec)] = _0x33018a,
                                   _0x5c5bf9[_0x15e0c9(0x48e)] = _0x42e48a,
                                   _0x5c5bf9[_0x15e0c9(0x938)] === Cesium['SceneMode'][_0x15e0c9(0xa65)])
                                   _0x5c5bf9[_0x15e0c9(0x457)] = Cesium[_0x15e0c9(0x25b)][_0x15e0c9(0xd78)](_0x226d8d, _0x33018a, _0x42e48a),
                                        _0x5c5bf9['modelMatrix'] = Cesium[_0x15e0c9(0xbec)][_0x15e0c9(0x7f3)](_0x5c5bf9[_0x15e0c9(0x457)]),
                                        _0x5c5bf9['invModelMatrix'] = Cesium[_0x15e0c9(0xcdf)]['inverse'](_0x5c5bf9['modelMatrix'], _0x5c5bf9[_0x15e0c9(0x576)]);
                              else {
                                   if (_0x226d8d > 0xb4 || _0x226d8d < -0xb4 || _0x33018a > 0xb4 || _0x33018a < -0xb4 || _0x15e0c9(0x186) === _0x480729) {
                                        let _0x5c7e91 = _0x226d8d
                                             , _0x455e40 = _0x33018a;
                                        _0x5c5bf9[_0x15e0c9(0x457)] = new Cesium[(_0x15e0c9(0x25b))](_0x5c7e91, _0x455e40, _0x42e48a);
                                   } else {
                                        let _0xafc35f = new Cesium[(_0x15e0c9(0x1ac))]()
                                             , _0x348349 = Cesium['Cartesian3'][_0x15e0c9(0xd78)](_0x226d8d, _0x33018a, _0x42e48a)
                                             , _0x37fbe4 = _0xafc35f[_0x15e0c9(0x34d)][_0x15e0c9(0x807)](_0x348349);
                                        _0x5c5bf9[_0x15e0c9(0x457)] = _0xafc35f['project'](_0x37fbe4);
                                   }
                                   Cesium['Matrix4'][_0x15e0c9(0xd0f)](_0x5c5bf9[_0x15e0c9(0x457)], _0x5c5bf9[_0x15e0c9(0xbbd)]),
                                        Cesium[_0x15e0c9(0xcdf)][_0x15e0c9(0x59d)](_0x537e7c, _0x5c5bf9[_0x15e0c9(0xbbd)], _0x5c5bf9[_0x15e0c9(0xbbd)]),
                                        _0x5c5bf9[_0x15e0c9(0x576)] = Cesium['Matrix4'][_0x15e0c9(0x499)](_0x5c5bf9[_0x15e0c9(0xbbd)], _0x5c5bf9[_0x15e0c9(0x576)]);
                              }
                              if (Cesium['defined'](_0xdf4734[_0x15e0c9(0x315)])) {
                                   let _0x5b06c3 = _0xdf4734['geoBounds']['left']
                                        , _0x49963d = _0xdf4734['geoBounds'][_0x15e0c9(0x7d0)]
                                        , _0x47e9ff = _0xdf4734[_0x15e0c9(0x315)][_0x15e0c9(0x688)]
                                        , _0x2ada22 = _0xdf4734[_0x15e0c9(0x315)][_0x15e0c9(0xc1a)];
                                   _0x5b06c3 > 0xb4 || _0x2ada22 > 0xb4 || _0x47e9ff > 0xb4 || _0x49963d > 0xb4 ? (_0x5b06c3 /= 0x615299,
                                        _0x2ada22 /= 0x615299,
                                        _0x47e9ff /= 0x615299,
                                        _0x49963d /= 0x615299,
                                        _0x5c5bf9[_0x15e0c9(0x9ef)] = new Cesium['Rectangle'](_0x5b06c3, _0x2ada22, _0x47e9ff, _0x49963d)) : _0x5c5bf9[_0x15e0c9(0x9ef)] = Cesium['Rectangle']['fromDegrees'](_0x5b06c3, _0x2ada22, _0x47e9ff, _0x49963d);
                              }
                              if (_0xdf4734['heightRange'] && (_0x5c5bf9[_0x15e0c9(0x562)] = _0xdf4734[_0x15e0c9(0x4f0)][_0x15e0c9(0x455)],
                                   _0x5c5bf9[_0x15e0c9(0x648)] = _0xdf4734['heightRange'][_0x15e0c9(0x590)]),
                                   _0xdf4734[_0x15e0c9(0x225)]) {
                                   let _0x255e48 = _0xdf4734[_0x15e0c9(0x225)]['range'];
                                   _0x5c5bf9[_0x15e0c9(0x834)] = _0x255e48['min'],
                                        _0x5c5bf9['_maxWValue'] = _0x255e48['max'];
                              }
                              _0x5b3d94[_0x15e0c9(0x6e8)](_0x15e0c9(0xd94)) && (_0x5c5bf9[_0x15e0c9(0x3ba)] = _0x15e0c9(0x3c7) === _0x5b3d94[_0x15e0c9(0xd94)]);
                              const _0x42db87 = _0xdf4734[_0x15e0c9(0x4fe)] || _0xdf4734['rootTiles'];
                              _0x42db87[_0x15e0c9(0x72b)] > 0x0 && (_0x15e0c9(0xa06) === Cesium['getExtensionFromUri'](_0x42db87[0x0][_0x15e0c9(0x29f)]) && (_0x5c5bf9[_0x15e0c9(0xb1e)] = !0x0));
                              for (let _0x31a4d3 = 0x0, _0x52e826 = _0x42db87[_0x15e0c9(0x72b)]; _0x31a4d3 < _0x52e826; _0x31a4d3++) {
                                   let _0x2df084 = _0x42db87[_0x31a4d3][_0x15e0c9(0x29f)]
                                        , _0x7ee404 = {
                                             'box': _0x42db87[_0x31a4d3][_0x15e0c9(0x59e)]
                                        }
                                        , _0xdc5159 = new _0x33bfc3(_0x5c5bf9, void 0x0, _0x7ee404, _0x2df084);
                                   _0xdc5159['isRootTile'] = !0x0,
                                        _0xdc5159[_0x15e0c9(0xc35)] = _0x2df084,
                                        _0x5c5bf9['_cache'][_0x15e0c9(0x2ef)](_0xdc5159),
                                        _0x5c5bf9['_rootTiles'][_0x15e0c9(0x63e)](_0xdc5159);
                              }
                              _0xa8ecc5(_0x5c5bf9, _0xdf4734);
                         } else {
                              let _0x3d9938 = _0xdf4734[_0x15e0c9(0xc09)]
                                   , _0xed0c90 = _0x3d9938[_0x15e0c9(0xa6a)];
                              _0x5c5bf9[_0x15e0c9(0x747)] = _0x9879e5[_0x15e0c9(0x7b3)](_0x3d9938, 'FileType', _0xed0c90);
                              let _0x412ac3 = _0x9879e5[_0x15e0c9(0xd4c)](_0x3d9938, _0x15e0c9(0x2c8), _0xed0c90)
                                   , _0x5820b6 = _0x9879e5[_0x15e0c9(0x2cd)](_0x412ac3, 'X', _0xed0c90)
                                   , _0x5e68fc = _0x9879e5[_0x15e0c9(0x2cd)](_0x412ac3, 'Y', _0xed0c90)
                                   , _0x403195 = _0x9879e5[_0x15e0c9(0x2cd)](_0x412ac3, 'Z', _0xed0c90);
                              _0x5c5bf9['lon'] = _0x5820b6,
                                   _0x5c5bf9[_0x15e0c9(0x5ec)] = _0x5e68fc,
                                   _0x5c5bf9[_0x15e0c9(0x48e)] = _0x403195,
                                   _0x5c5bf9[_0x15e0c9(0x457)] = Cesium['Cartesian3'][_0x15e0c9(0xd78)](_0x5820b6, _0x5e68fc, _0x403195),
                                   _0x5c5bf9['modelMatrix'] = Cesium['Transforms']['eastNorthUpToFixedFrame'](_0x5c5bf9[_0x15e0c9(0x457)]),
                                   _0x5c5bf9[_0x15e0c9(0x576)] = Cesium[_0x15e0c9(0xcdf)][_0x15e0c9(0x499)](_0x5c5bf9[_0x15e0c9(0xbbd)], _0x5c5bf9[_0x15e0c9(0x576)]);
                              let _0x200fea = _0x9879e5['queryFirstNode'](_0x3d9938, 'Bounds', _0xed0c90)
                                   , _0x28df04 = _0x9879e5[_0x15e0c9(0xd4c)](_0x3d9938, 'BoundingBox', _0xed0c90);
                              if (_0x200fea) {
                                   let _0x278232 = _0x9879e5[_0x15e0c9(0x2cd)](_0x200fea, _0x15e0c9(0x327), _0xed0c90)
                                        , _0x53d1bf = _0x9879e5['queryNumericValue'](_0x200fea, _0x15e0c9(0xc27), _0xed0c90)
                                        , _0x4bc8fb = _0x9879e5['queryNumericValue'](_0x200fea, _0x15e0c9(0xbb1), _0xed0c90)
                                        , _0x135a06 = _0x9879e5[_0x15e0c9(0x2cd)](_0x200fea, _0x15e0c9(0x321), _0xed0c90);
                                   _0x5c5bf9[_0x15e0c9(0x9ef)] = Cesium['Rectangle']['fromDegrees'](_0x278232, _0x135a06, _0x4bc8fb, _0x53d1bf);
                              } else {
                                   if (_0x28df04) {
                                        let _0x13565b = _0x9879e5[_0x15e0c9(0x2cd)](_0x28df04, _0x15e0c9(0x1f8), _0xed0c90)
                                             , _0x32cc11 = _0x9879e5[_0x15e0c9(0x2cd)](_0x28df04, _0x15e0c9(0x817), _0xed0c90);
                                        _0x9879e5[_0x15e0c9(0x2cd)](_0x28df04, _0x15e0c9(0xa68), _0xed0c90);
                                        let _0x58e5f0 = _0x9879e5[_0x15e0c9(0x2cd)](_0x28df04, _0x15e0c9(0xb66), _0xed0c90)
                                             , _0x44a1b2 = _0x9879e5[_0x15e0c9(0x2cd)](_0x28df04, _0x15e0c9(0x714), _0xed0c90);
                                        _0x9879e5['queryNumericValue'](_0x28df04, _0x15e0c9(0x778), _0xed0c90),
                                             _0x13565b = 0xb4 * Math['abs'](_0x13565b) / (0x615299 * Math['PI']),
                                             _0x32cc11 = 0xb4 * Math[_0x15e0c9(0xbd6)](_0x32cc11) / (0x615299 * Math['PI']),
                                             _0x58e5f0 = 0xb4 * Math[_0x15e0c9(0xbd6)](_0x58e5f0) / (0x615299 * Math['PI']),
                                             _0x44a1b2 = 0xb4 * Math[_0x15e0c9(0xbd6)](_0x44a1b2) / (0x615299 * Math['PI']),
                                             _0x5c5bf9[_0x15e0c9(0x9ef)] = Cesium[_0x15e0c9(0x50e)]['fromDegrees'](_0x5820b6 - _0x13565b, _0x5e68fc - _0x32cc11, _0x5820b6 + _0x58e5f0, _0x5e68fc + _0x44a1b2);
                                   }
                              }
                              let _0x5653aa = _0x9879e5[_0x15e0c9(0xd4c)](_0x3d9938, _0x15e0c9(0x7b7), _0xed0c90);
                              _0x5653aa && (_0x5c5bf9['_minHeight'] = _0x9879e5[_0x15e0c9(0x2cd)](_0x5653aa, _0x15e0c9(0x5cd), _0xed0c90),
                                   _0x5c5bf9[_0x15e0c9(0x648)] = _0x9879e5[_0x15e0c9(0x2cd)](_0x5653aa, _0x15e0c9(0x1f9), _0xed0c90));
                              let _0x338a97 = _0x9879e5[_0x15e0c9(0xd4c)](_0x3d9938, _0x15e0c9(0x93b), _0xed0c90);
                              _0x338a97 && (_0x5c5bf9[_0x15e0c9(0x3db)] = _0x9879e5[_0x15e0c9(0x2cd)](_0x338a97, _0x15e0c9(0x983), _0xed0c90),
                                   _0x5c5bf9['_minWValue'] = _0x9879e5[_0x15e0c9(0x2cd)](_0x338a97, _0x15e0c9(0xb28), _0xed0c90));
                              let _0x312da5 = _0x9879e5[_0x15e0c9(0xd4c)](_0x3d9938, 'Extensions', _0xed0c90);
                              _0x5c5bf9[_0x15e0c9(0x3ba)] = _0x9879e5[_0x15e0c9(0xbf8)](_0x312da5, _0x15e0c9(0x43e), _0xed0c90);
                              let _0x44a091 = /\\+/g
                                   , _0x31136a = _0x9879e5[_0x15e0c9(0xd4c)](_0x3d9938, _0x15e0c9(0xc8b), _0xed0c90)
                                   , _0x37b49d = _0x9879e5[_0x15e0c9(0x978)](_0x31136a, _0x15e0c9(0x8dd), _0xed0c90);
                              if (_0x37b49d['length'] > 0x0)
                                   for (let _0x293969 = 0x0, _0x5e1507 = _0x37b49d[_0x15e0c9(0x72b)]; _0x293969 < _0x5e1507; _0x293969++) {
                                        let _0x4c8cc5 = _0x37b49d[_0x293969]
                                             , _0x4e39d4 = _0x9879e5[_0x15e0c9(0x7b3)](_0x4c8cc5, 'FileName', _0xed0c90);
                                        _0x4e39d4 = _0x4e39d4['replace'](_0x44a091, '/'),
                                             _0x4e39d4 = _0x4e39d4[_0x15e0c9(0x6c0)](/(\.osgb)/gi, _0x15e0c9(0x1c7));
                                        let _0x1e4cea = _0x9879e5[_0x15e0c9(0xd4c)](_0x4c8cc5, _0x15e0c9(0xc1c), _0xed0c90)
                                             , _0x412bf3 = {
                                                  'sphere': {
                                                       'center': {
                                                            'x': 0x0,
                                                            'y': 0x0,
                                                            'z': 0x0
                                                       },
                                                       'radius': 0x615299
                                                  }
                                             };
                                        _0x1e4cea && _0x1e4cea[_0x15e0c9(0xd85)][_0x15e0c9(0x72b)] && (_0x412bf3 = {
                                             'sphere': {
                                                  'center': {
                                                       'x': _0x9879e5['queryNumericValue'](_0x1e4cea, 'CenterX', _0xed0c90),
                                                       'y': _0x9879e5[_0x15e0c9(0x2cd)](_0x1e4cea, _0x15e0c9(0x444), _0xed0c90),
                                                       'z': _0x9879e5[_0x15e0c9(0x2cd)](_0x1e4cea, _0x15e0c9(0x5c0), _0xed0c90)
                                                  },
                                                  'radius': _0x9879e5['queryNumericValue'](_0x1e4cea, 'Radius', _0xed0c90)
                                             }
                                        });
                                        let _0x3a1347 = new _0x33bfc3(_0x5c5bf9, void 0x0, _0x412bf3, _0x4e39d4);
                                        _0x3a1347['isRootTile'] = !0x0,
                                             _0x5c5bf9['_cache'][_0x15e0c9(0x2ef)](_0x3a1347),
                                             _0x5c5bf9['_rootTiles']['push'](_0x3a1347);
                                   }
                              else {
                                   let _0x2a421d = _0x9879e5['queryNodes'](_0x31136a, _0x15e0c9(0xaf8), _0xed0c90);
                                   for (let _0x485366 = 0x0, _0x1ed53a = _0x2a421d[_0x15e0c9(0x72b)]; _0x485366 < _0x1ed53a; _0x485366++) {
                                        let _0x5aab25 = _0x2a421d[_0x485366][_0x15e0c9(0x615)];
                                        _0x5aab25 = _0x5aab25['replace'](_0x44a091, '/'),
                                             _0x5aab25 = _0x5aab25[_0x15e0c9(0x6c0)](/(\.osgb)/gi, _0x15e0c9(0x1c7));
                                        let _0x4ffb68 = new _0x33bfc3(_0x5c5bf9, void 0x0, {
                                             'sphere': {
                                                  'center': {
                                                       'x': 0x0,
                                                       'y': 0x0,
                                                       'z': 0x0
                                                  },
                                                  'radius': 0x615299
                                             }
                                        }, _0x5aab25);
                                        _0x4ffb68['isRootTile'] = !0x0,
                                             _0x5c5bf9[_0x15e0c9(0xa85)]['add'](_0x4ffb68),
                                             _0x5c5bf9['_rootTiles'][_0x15e0c9(0x63e)](_0x4ffb68);
                                   }
                              }
                         }
                         _0x5c5bf9[_0x15e0c9(0x59f)][_0x15e0c9(0x559)](_0x5c5bf9);
                    }, _0x5e1df2 => {
                         const _0x4f8157 = _0x310a32;
                         _0x5c5bf9['_readyPromise'][_0x4f8157(0xa56)](_0x5e1df2);
                    }
                    );
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xce6)] = function () {
                    const _0x2d7023 = _0xc3a123;
                    this[_0x2d7023(0x5b0)][_0x2d7023(0x72b)] < 0x1 || (this[_0x2d7023(0x2b2)](this[_0x2d7023(0x5b0)], _0x2cc3e2[_0x2d7023(0x565)]),
                         this[_0x2d7023(0x5b0)][_0x2d7023(0x72b)] = 0x0);
               }
               ,
               _0x160299['prototype'][_0xc3a123(0x7e4)] = function (_0x8a505a) {
                    const _0x327d3b = _0xc3a123;
                    this[_0x327d3b(0x20a)] = _0x8a505a;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xa07)] = function (_0x28006e) {
                    const _0x525a79 = _0xc3a123;
                    Cesium[_0x525a79(0x6d5)][_0x525a79(0x336)](_0x525a79(0xda7), _0x28006e),
                         this[_0x525a79(0x299)] && (Array[_0x525a79(0x92f)](_0x28006e) || (_0x28006e = [_0x28006e]),
                              this['_multiChoose'] || this[_0x525a79(0xce6)](),
                              this[_0x525a79(0x5b0)] = this[_0x525a79(0x5b0)]['concat'](_0x28006e),
                              this[_0x525a79(0xbff)](_0x28006e, _0x2cc3e2[_0x525a79(0x565)]));
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x3b0)] = function () {
                    const _0x2d82fb = _0xc3a123;
                    return [][_0x2d82fb(0x77e)](this[_0x2d82fb(0x5b0)]);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xd9b)] = function (_0x43c1e1, _0x4780c9) {
                    const _0x15cbba = _0xc3a123;
                    Cesium['Check'][_0x15cbba(0x336)](_0x15cbba(0xc41), _0x43c1e1),
                         Cesium[_0x15cbba(0x6d5)][_0x15cbba(0x336)](_0x15cbba(0x72c), _0x4780c9),
                         Cesium[_0x15cbba(0x6d5)][_0x15cbba(0x6f5)][_0x15cbba(0xb70)](_0x15cbba(0x72c), _0x4780c9),
                         Array[_0x15cbba(0x92f)](_0x43c1e1) || (_0x43c1e1 = [_0x43c1e1]);
                    let _0x1f98cc = {};
                    for (let _0x40df93 = 0x0, _0x350c41 = _0x43c1e1[_0x15cbba(0x72b)]; _0x40df93 < _0x350c41; _0x40df93++) {
                         let _0xdd39b9 = _0x43c1e1[_0x40df93] + '';
                         Cesium[_0x15cbba(0x336)](_0xdd39b9) && (this[_0x15cbba(0x2e6)][_0xdd39b9] = _0x4780c9,
                              _0x1f98cc[_0xdd39b9] = _0x4780c9);
                    }
                    this['_updateObjsColor'](_0x1f98cc);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x1ae)] = function (_0x3787c8) {
                    const _0x54d796 = _0xc3a123;
                    Cesium['Check'][_0x54d796(0x336)](_0x54d796(0x6ce), _0x3787c8),
                         Array[_0x54d796(0x92f)](_0x3787c8) || (_0x3787c8 = [_0x3787c8]);
                    let _0xa90e3 = {};
                    for (let _0xa4b45f = 0x0, _0xee6df8 = _0x3787c8[_0x54d796(0x72b)]; _0xa4b45f < _0xee6df8; _0xa4b45f++) {
                         let _0x35d43b = _0x3787c8[_0xa4b45f];
                         Cesium[_0x54d796(0x336)](this['_objsColorList'][_0x35d43b]) && (_0xa90e3[_0x35d43b] = Cesium[_0x54d796(0x821)][_0x54d796(0x8f3)],
                              delete this[_0x54d796(0x2e6)][_0x35d43b]);
                    }
                    this[_0x54d796(0x2b2)](_0x3787c8, _0x2cc3e2[_0x54d796(0xb89)]),
                         this[_0x54d796(0x5e1)](_0xa90e3);
               }
               ,
               _0x160299['prototype']['setOnlyObjsVisible'] = function (_0x4e1388, _0x55761d) {
                    const _0xa5e7b5 = _0xc3a123;
                    if (Cesium[_0xa5e7b5(0x6d5)][_0xa5e7b5(0x336)](_0xa5e7b5(0x9de), _0x4e1388),
                         Cesium[_0xa5e7b5(0x6d5)]['typeOf']['bool'](_0xa5e7b5(0xac7), _0x55761d),
                         Array['isArray'](_0x4e1388) || (_0x4e1388 = [_0x4e1388]),
                         0x0 === _0x4e1388[_0xa5e7b5(0x72b)]) {
                         this[_0xa5e7b5(0x4f4)] = _0x55761d,
                              this['_objsVisibleList'][_0xa5e7b5(0x6c9)]();
                         let _0x354b1b = Object['keys'](this['_objsHideList'][_0xa5e7b5(0xcc3)]);
                         return this['_removeObjsOperationType'](_0x354b1b, _0x2cc3e2[_0xa5e7b5(0x3ef)]),
                              this[_0xa5e7b5(0x623)][_0xa5e7b5(0x6c9)](),
                              void this['_updateAllObjsVisible'](!_0x55761d);
                    }
                    let _0x139695 = this['_objsVisibleList']
                         , _0x18eed0 = this[_0xa5e7b5(0x623)];
                    this[_0xa5e7b5(0xbd1)],
                         _0x55761d ? (_0x4e1388[_0xa5e7b5(0x9f8)](function (_0x59c1ef) {
                              const _0x2adb6d = _0xa5e7b5;
                              _0x139695[_0x2adb6d(0x320)](_0x59c1ef, !0x0),
                                   _0x18eed0[_0x2adb6d(0xced)](_0x59c1ef);
                         }),
                              this[_0xa5e7b5(0x2b2)](_0x4e1388, _0x2cc3e2[_0xa5e7b5(0x3ef)])) : (_0x4e1388[_0xa5e7b5(0x9f8)](function (_0x2c549e) {
                                   const _0x34a7dd = _0xa5e7b5;
                                   _0x139695[_0x34a7dd(0xced)](_0x2c549e),
                                        _0x18eed0[_0x34a7dd(0x320)](_0x2c549e, !0x0);
                              }),
                                   this[_0xa5e7b5(0xbff)](_0x4e1388, _0x2cc3e2['HIDE']));
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x3df)] = function (_0x34db83, _0x44c94c) {
                    const _0x1accfe = _0xc3a123;
                    0x0 !== _0x34db83[_0x1accfe(0x72b)] ? (this[_0x1accfe(0x59a)]([], _0x44c94c),
                         this[_0x1accfe(0x59a)](_0x34db83, _0x44c94c)) : this['setOnlyObjsVisible']([], _0x44c94c);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x4e3)] = function (_0x311015, _0x540437, _0x11e853, _0x578346) {
                    const _0x226393 = _0xc3a123;
                    this[_0x226393(0x938)] === Cesium['SceneMode']['COLUMBUS_VIEW'] && (_0x311015 = _0x4ea134(_0x311015),
                         _0x540437 = _0x4ea134(_0x540437),
                         _0x11e853 = _0x4ea134(_0x11e853)),
                         this['_oriClipPlane'][0x0] = _0xfcd1f8(_0x311015, _0x540437, _0x11e853),
                         this[_0x226393(0x247)] = _0x5db271[_0x226393(0x9e6)],
                         this[_0x226393(0x199)] = !0x0,
                         this[_0x226393(0x7f9)] || this['_tranverseRenderEntity']({
                              'enable': !0x0
                         }, _0x4b0c8f),
                         this[_0x226393(0x7f9)] = !0x0;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x404)] = function (_0x284c92) {
                    const _0x28268d = _0xc3a123;
                    if (!((_0x284c92 = _0x284c92 || {})['dimensions'] && _0x284c92[_0x28268d(0x5a4)] || _0x284c92[_0x28268d(0x7cf)] && _0x284c92[_0x28268d(0x20e)]))
                         throw new Cesium[(_0x28268d(0x610))]('dimensions\x20position\x20is\x20required\x20to\x20create\x20CustomClipBox');
                    if (this[_0x28268d(0x247)] = _0x5db271[_0x28268d(0x9e6)],
                         Cesium[_0x28268d(0x336)](_0x284c92[_0x28268d(0x3e1)]))
                         switch (_0x284c92[_0x28268d(0x3e1)]) {
                              case 'clip_behind_any_plane':
                                   this[_0x28268d(0x247)] = _0x5db271[_0x28268d(0x5a0)];
                                   break;
                              case 'clip_behind_all_plane':
                                   this['_clipMode'] = _0x5db271[_0x28268d(0x9e6)];
                                   break;
                              case _0x28268d(0xccb):
                                   this[_0x28268d(0x247)] = _0x5db271[_0x28268d(0x881)];
                         }
                    if (_0x284c92[_0x28268d(0xcbb)]) {
                         let _0x3cee1d, _0x1463f8, _0x5af1d9, _0x5d7ff1 = new Cesium['Matrix4'](), _0xc380bb = _0x284c92[_0x28268d(0x5a4)];
                         _0x3cee1d = _0x284c92[_0x28268d(0xcca)] || 0x0,
                              _0x1463f8 = _0x284c92['pitch'] || 0x0,
                              _0x5af1d9 = _0x284c92[_0x28268d(0x8f0)] || 0x0;
                         let _0x455254, _0x28a2f2, _0x1471ac, _0x56812d = new Cesium['HeadingPitchRoll'](_0x3cee1d, _0x1463f8, _0x5af1d9);
                         if (this[_0x28268d(0x938)] === Cesium[_0x28268d(0xa7f)][_0x28268d(0xa65)])
                              _0x5d7ff1 = Cesium['Transforms']['headingPitchRollToFixedFrame'](_0xc380bb, _0x56812d, Cesium[_0x28268d(0x4b9)][_0x28268d(0x74e)]);
                         else {
                              _0x56812d = new Cesium[(_0x28268d(0x9ae))](_0x1463f8, -_0x5af1d9, -_0x3cee1d);
                              let _0x506942 = _0x4ea134(_0xc380bb);
                              Cesium['Matrix4'][_0x28268d(0x844)](Cesium[_0x28268d(0xcdf)][_0x28268d(0x432)](Cesium['Matrix4'][_0x28268d(0x38c)]), _0x506942, _0x5d7ff1);
                              let _0x204f51 = Cesium[_0x28268d(0x7d4)]['fromHeadingPitchRoll'](_0x56812d);
                              Cesium['Matrix4'][_0x28268d(0x5ab)](_0x5d7ff1, _0x204f51, _0x5d7ff1);
                         }
                         this[_0x28268d(0x938)] === Cesium[_0x28268d(0xa7f)][_0x28268d(0xa65)] ? (_0x455254 = 0.5 * _0x284c92[_0x28268d(0xcbb)]['x'],
                              _0x28a2f2 = 0.5 * _0x284c92[_0x28268d(0xcbb)]['y'],
                              _0x1471ac = 0.5 * _0x284c92[_0x28268d(0xcbb)]['z']) : (_0x455254 = 0.5 * _0x284c92['dimensions']['z'],
                                   _0x28a2f2 = 0.5 * _0x284c92['dimensions']['x'],
                                   _0x1471ac = 0.5 * _0x284c92[_0x28268d(0xcbb)]['y']);
                         let _0x117b0c = [];
                         _0x117b0c[0x0] = new Cesium['Cartesian4'](-_0x455254, _0x28a2f2, _0x1471ac, 0x1),
                              _0x117b0c[0x1] = new Cesium['Cartesian4'](_0x455254, _0x28a2f2, _0x1471ac, 0x1),
                              _0x117b0c[0x2] = new Cesium[(_0x28268d(0xce9))](_0x455254, -_0x28a2f2, _0x1471ac, 0x1),
                              _0x117b0c[0x3] = new Cesium[(_0x28268d(0xce9))](-_0x455254, -_0x28a2f2, _0x1471ac, 0x1),
                              _0x117b0c[0x4] = new Cesium[(_0x28268d(0xce9))](-_0x455254, _0x28a2f2, -_0x1471ac, 0x1),
                              _0x117b0c[0x5] = new Cesium[(_0x28268d(0xce9))](_0x455254, _0x28a2f2, -_0x1471ac, 0x1),
                              _0x117b0c[0x6] = new Cesium[(_0x28268d(0xce9))](_0x455254, -_0x28a2f2, -_0x1471ac, 0x1),
                              _0x117b0c[0x7] = new Cesium['Cartesian4'](-_0x455254, -_0x28a2f2, -_0x1471ac, 0x1);
                         for (let _0x48cafc = 0x0; _0x48cafc < 0x8; _0x48cafc++)
                              Cesium[_0x28268d(0xcdf)][_0x28268d(0x754)](_0x5d7ff1, _0x117b0c[_0x48cafc], _0x117b0c[_0x48cafc]);
                         this[_0x28268d(0x8d1)][0x0] = Cesium[_0x28268d(0xce9)]['clone'](_0xfcd1f8(_0x117b0c[0x0], _0x117b0c[0x1], _0x117b0c[0x2])),
                              this[_0x28268d(0x8d1)][0x1] = Cesium[_0x28268d(0xce9)][_0x28268d(0x432)](_0xfcd1f8(_0x117b0c[0x0], _0x117b0c[0x4], _0x117b0c[0x1])),
                              this[_0x28268d(0x8d1)][0x2] = Cesium[_0x28268d(0xce9)][_0x28268d(0x432)](_0xfcd1f8(_0x117b0c[0x0], _0x117b0c[0x3], _0x117b0c[0x4])),
                              this[_0x28268d(0x8d1)][0x3] = Cesium[_0x28268d(0xce9)]['clone'](_0xfcd1f8(_0x117b0c[0x6], _0x117b0c[0x2], _0x117b0c[0x5])),
                              this['_oriClipPlane'][0x4] = Cesium['Cartesian4'][_0x28268d(0x432)](_0xfcd1f8(_0x117b0c[0x6], _0x117b0c[0x7], _0x117b0c[0x2])),
                              this[_0x28268d(0x8d1)][0x5] = Cesium[_0x28268d(0xce9)][_0x28268d(0x432)](_0xfcd1f8(_0x117b0c[0x6], _0x117b0c[0x5], _0x117b0c[0x7]));
                    } else
                         for (let _0x2cc1ce = 0x0; _0x2cc1ce < _0x284c92[_0x28268d(0x7cf)][_0x28268d(0x72b)]; _0x2cc1ce++) {
                              let _0x19bde1 = _0x284c92[_0x28268d(0x7cf)][_0x2cc1ce]
                                   , _0x5991d4 = _0x284c92[_0x28268d(0x20e)][_0x2cc1ce];
                              this['_oriClipPlane'][_0x2cc1ce]['x'] = _0x5991d4['x'],
                                   this[_0x28268d(0x8d1)][_0x2cc1ce]['y'] = _0x5991d4['y'],
                                   this[_0x28268d(0x8d1)][_0x2cc1ce]['z'] = _0x5991d4['z'],
                                   this[_0x28268d(0x8d1)][_0x2cc1ce]['w'] = -Cesium[_0x28268d(0x25b)]['dot'](_0x19bde1, _0x5991d4);
                         }
                    this['_enableClip'] || this[_0x28268d(0x6d0)]({
                         'enable': !0x0
                    }, _0x4b0c8f),
                         this[_0x28268d(0x7f9)] = !0x0;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)]['clearCustomClipBox'] = function () {
                    const _0x10b358 = _0xc3a123;
                    this[_0x10b358(0x7f9)] = !0x1,
                         this[_0x10b358(0x199)] = !0x1,
                         this[_0x10b358(0x6d0)]({
                              'enable': !0x1
                         }, _0x4b0c8f);
               }
               ,
               _0x160299['prototype'][_0xc3a123(0x6d0)] = function (_0x5646f9, _0x28f296) {
                    const _0x5ad783 = _0xc3a123;
                    let _0x175fd5 = [];
                    for (let _0x4808c1 = 0x0, _0x18246a = this[_0x5ad783(0x23b)]['length']; _0x4808c1 < _0x18246a; _0x4808c1++) {
                         let _0x2d0e49 = this[_0x5ad783(0x23b)][_0x4808c1];
                         _0x175fd5['push'](_0x2d0e49);
                    }
                    for (; _0x175fd5[_0x5ad783(0x72b)];) {
                         let _0x2a662c = _0x175fd5[_0x5ad783(0x82c)]();
                         for (let _0x5b0221 = 0x0, _0x59ae63 = _0x2a662c['renderEntities'][_0x5ad783(0x72b)]; _0x5b0221 < _0x59ae63; _0x5b0221++) {
                              const _0x1d7d22 = _0x2a662c[_0x5ad783(0x292)][_0x5b0221];
                              for (let _0x2e0c1a = 0x0, _0x3ab5e4 = _0x1d7d22['length']; _0x2e0c1a < _0x3ab5e4; _0x2e0c1a++)
                                   _0x1d7d22[_0x2e0c1a][_0x5ad783(0x3b8)] && _0x28f296(_0x1d7d22[_0x2e0c1a], _0x5646f9);
                         }
                         for (let _0x15593d = 0x0, _0x2819e5 = _0x2a662c[_0x5ad783(0x704)][_0x5ad783(0x72b)]; _0x15593d < _0x2819e5; _0x15593d++)
                              _0x175fd5['push'](_0x2a662c[_0x5ad783(0x704)][_0x15593d]);
                    }
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xbcc)] = function (_0x1e696f) {
                    const _0x18e16e = _0xc3a123;
                    this[_0x18e16e(0x6d0)]({
                         'ids': _0x1e696f
                    }, _0x4affa3);
               }
               ,
               _0x160299['prototype']['_updateObjsColor'] = function (_0x10e3c5) {
                    this['_tranverseRenderEntity']({
                         'ids': _0x10e3c5
                    }, _0x5ac8de);
               }
               ,
               _0x160299['prototype'][_0xc3a123(0x8fa)] = function (_0x43106a) {
                    const _0x2dbe22 = _0xc3a123;
                    this[_0x2dbe22(0x6d0)]({
                         'isVisible': _0x43106a
                    }, _0x447ecd);
               }
               ,
               _0x160299['prototype']['_setObjsOperationType'] = function (_0x40c6ee, _0x30cbbc) {
                    const _0x428ef5 = _0xc3a123;
                    Cesium[_0x428ef5(0x6d5)]['defined'](_0x428ef5(0x3cb), _0x40c6ee),
                         Cesium[_0x428ef5(0x6d5)][_0x428ef5(0x336)]('set\x20Objs\x20Operation\x20operationType', _0x30cbbc),
                         Array[_0x428ef5(0x92f)](_0x40c6ee) || (_0x40c6ee = [_0x40c6ee]);
                    let _0x2bd10f, _0x25a5e4 = new Cesium['AssociativeArray']();
                    for (let _0xda7e75 = 0x0, _0x4482ad = _0x40c6ee['length']; _0xda7e75 < _0x4482ad; _0xda7e75++) {
                         if (_0x2bd10f = _0x40c6ee[_0xda7e75],
                              !Cesium[_0x428ef5(0x336)](_0x2bd10f))
                              continue;
                         let _0x4b0d70 = Cesium['defaultValue'](this[_0x428ef5(0xd3d)][_0x428ef5(0x420)](_0x2bd10f), 0x0);
                         _0x4b0d70 !== _0x30cbbc && (_0x4b0d70 |= _0x30cbbc,
                              this['_objsOperationList'][_0x428ef5(0x320)](_0x2bd10f, _0x4b0d70),
                              _0x25a5e4[_0x428ef5(0x320)](_0x2bd10f, _0x4b0d70));
                    }
                    _0x25a5e4[_0x428ef5(0x72b)] > 0x0 && this['_updateObjsOperation'](_0x25a5e4);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x2b2)] = function (_0x454c29, _0x34c963) {
                    const _0x727ecb = _0xc3a123;
                    Cesium[_0x727ecb(0x6d5)]['defined'](_0x727ecb(0x3cb), _0x454c29),
                         Array[_0x727ecb(0x92f)](_0x454c29) || (_0x454c29 = [_0x454c29]);
                    let _0x14091d, _0x516c0a = _0x2cc3e2[_0x727ecb(0x34a)] ^ _0x34c963, _0x25f725 = new Cesium[(_0x727ecb(0xc6e))]();
                    for (let _0x3d4f8e = 0x0, _0x3d5971 = _0x454c29[_0x727ecb(0x72b)]; _0x3d4f8e < _0x3d5971; _0x3d4f8e++) {
                         _0x14091d = _0x454c29[_0x3d4f8e];
                         let _0x2225f5 = this[_0x727ecb(0xd3d)][_0x727ecb(0x420)](_0x14091d);
                         Cesium[_0x727ecb(0x336)](_0x2225f5) && (_0x2225f5 &= _0x516c0a,
                              _0x2225f5 === _0x2cc3e2[_0x727ecb(0x3f1)] ? this[_0x727ecb(0xd3d)][_0x727ecb(0xced)](_0x14091d) : this['_objsOperationList'][_0x727ecb(0x320)](_0x14091d, _0x2225f5),
                              _0x25f725[_0x727ecb(0x320)](_0x14091d, _0x2225f5));
                    }
                    _0x25f725['length'] > 0x0 && this['_updateObjsOperation'](_0x25f725);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xa0c)] = function (_0x24c85c) {
                    const _0x248048 = _0xc3a123;
                    let _0x2f3850 = Cesium['Cartesian3'][_0x248048(0x7ac)](_0x24c85c)
                         , _0x349fb7 = new Cesium[(_0x248048(0xd92))]({
                              'polygonHierarchy': {
                                   'positions': _0x2f3850
                              },
                              'perPositionHeight': !0x0
                         })
                         , _0x46b01f = Cesium[_0x248048(0xd92)][_0x248048(0xaaf)](_0x349fb7)
                         , _0xd20b7c = new _0x3fc847();
                    return _0xd20b7c[_0x248048(0x3d9)](_0x46b01f, this[_0x248048(0x576)]),
                         _0xd20b7c[_0x248048(0x4b3)](_0x46b01f),
                         _0xd20b7c;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xd1e)] = function (_0x4722a2) {
                    const _0x351138 = _0xc3a123;
                    let _0x48ea5f = _0x4722a2[_0x351138(0xca3)]
                         , _0x336ca6 = _0x4722a2[_0x351138(0x5a4)];
                    if (!_0x48ea5f || !_0x336ca6)
                         return;
                    let _0x52b991 = this[_0x351138(0x253)]
                         , _0x15d804 = _0x52b991[_0x351138(0x893)];
                    if (_0x15d804[_0x351138(0x264)](_0x48ea5f))
                         return;
                    _0x52b991[_0x351138(0x350)] || (_0x52b991[_0x351138(0x350)] = new Cesium['Texture']({
                         'context': this[_0x351138(0x878)],
                         'width': _0x52b991[_0x351138(0xa66)],
                         'height': _0x52b991[_0x351138(0x223)],
                         'pixelFormat': Cesium[_0x351138(0x4e1)]['RGBA']
                    }));
                    let _0x27a3f4 = this[_0x351138(0xa0c)](_0x336ca6);
                    _0x15d804[_0x351138(0x320)](_0x48ea5f, _0x27a3f4),
                         _0x52b991[_0x351138(0x9b4)] = !0x0,
                         0x1 === _0x15d804['values']['length'] && this['_tranverseRenderEntity']({
                              'enable': !0x0
                         }, _0x41117c);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xc4d)] = function (_0x39edf6) {
                    const _0x54459 = _0xc3a123;
                    let _0x40d356 = this['_flattenPar'];
                    if (!_0x40d356[_0x54459(0x9b4)])
                         return;
                    _0x40d356[_0x54459(0x9b4)] = !0x1;
                    let _0x3ea3b5 = _0x40d356[_0x54459(0x893)]
                         , _0x49d0c4 = _0x3ea3b5[_0x54459(0xcd3)]['length'];
                    _0x40d356[_0x54459(0x5d7)] = _0x49d0c4 > 0x0,
                         _0x40d356['bounds'] = _0x3327d1(_0x3ea3b5[_0x54459(0xcd3)]);
                    let _0x5481af = new Cesium['ClearCommand']({
                         'color': new Cesium[(_0x54459(0x821))](0x1, 0x1, 0x1, 0x1),
                         'depth': 0x1
                    });
                    _0x40d356['texture'] || (_0x40d356[_0x54459(0x350)] = new Cesium[(_0x54459(0x74d))]({
                         'context': this['context'],
                         'width': _0x40d356[_0x54459(0xa66)],
                         'height': _0x40d356['textureHeight'],
                         'pixelFormat': Cesium['PixelFormat']['RGBA']
                    })),
                         _0x40d356['fbo'] || (_0x40d356[_0x54459(0x2f9)] = new Cesium[(_0x54459(0xb39))]({
                              'context': this[_0x54459(0x878)],
                              'colorTextures': [_0x40d356[_0x54459(0x350)]],
                              'destroyAttachments': !0x1
                         })),
                         _0x5481af[_0x54459(0x28d)] = _0x40d356[_0x54459(0x2f9)],
                         _0x5481af[_0x54459(0x54e)] = Cesium[_0x54459(0x259)][_0x54459(0x6d8)](),
                         _0x5481af[_0x54459(0x32c)](this[_0x54459(0x878)]);
                    for (let _0x41857d = 0x0; _0x41857d < _0x49d0c4; _0x41857d++) {
                         let _0x2d885b = _0x3ea3b5[_0x54459(0xcd3)][_0x41857d];
                         _0x2d885b[_0x54459(0x71f)](this[_0x54459(0x878)], _0x40d356[_0x54459(0x2f9)]),
                              _0x2d885b[_0x54459(0x962)][_0x54459(0x7b8)] = {
                                   'uRect': function () {
                                        const _0x4a1912 = _0x54459;
                                        return _0x40d356[_0x4a1912(0xd75)];
                                   }
                              },
                              _0x2d885b[_0x54459(0x962)]['execute'](this[_0x54459(0x878)]);
                    }
               }
               ,
               _0x160299[_0xc3a123(0x2d4)]['setVisibleInViewport'] = function (_0x4ed4fa, _0x5caf99) {
                    const _0x471670 = _0xc3a123;
                    if (_0x4ed4fa > 0x8)
                         throw new Cesium[(_0x471670(0x610))](_0x471670(0xb98));
                    this['_visibleViewport'] = _0x5caf99 ? 0x1 << _0x4ed4fa | this[_0x471670(0x202)] : ~(0x1 << _0x4ed4fa) & this[_0x471670(0x202)];
               }
               ,
               _0x160299[_0xc3a123(0x2d4)]['getVisibleInViewport'] = function (_0xd7795f) {
                    const _0x6262e6 = _0xc3a123;
                    if (_0xd7795f > 0x8)
                         throw new Cesium[(_0x6262e6(0x610))]('the\x20index\x20is\x200~3');
                    return 0x1 << _0xd7795f & this['_visibleViewport'];
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xd07)] = function () {
                    const _0x2c7351 = _0xc3a123;
                    0x0 !== this['_edgeCurrentCount'] ? (this[_0x2c7351(0x3a6)] = this[_0x2c7351(0xa4c)] / this[_0x2c7351(0xbb4)] * 0x28,
                         this['_edgeCurrentTotalLength'] = 0x0,
                         this[_0x2c7351(0xbb4)] = 0x0) : this[_0x2c7351(0xa4c)] = 0x0;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x1e1)] = function (_0x5ebf04, _0x4d1ee1) {
                    const _0x11ab8a = _0xc3a123;
                    this['_edgeCurrentTotalLength'] += _0x5ebf04,
                         this[_0x11ab8a(0xbb4)] += _0x4d1ee1;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0xa71)] = function (_0x1680b0) {
                    const _0x5359ee = _0xc3a123;
                    let _0x484617 = this[_0x5359ee(0x30a)]['length'];
                    return this[_0x5359ee(0x30a)][_0x5359ee(0x320)](_0x484617, _0x1680b0),
                         _0x484617;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x70e)] = function (_0x214f65) {
                    this['_waterPlanes']['remove'](_0x214f65);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)]['prePassesUpdate'] = function (_0x3f21c0) {
                    const _0x55d081 = _0xc3a123;
                    this[_0x55d081(0x3b8)] && _0x3f21c0[_0x55d081(0x9ba)] && (this[_0x55d081(0xa85)]['reset'](),
                         this[_0x55d081(0x56d)][_0x55d081(0x72b)] = 0x0,
                         this[_0x55d081(0x3be)][_0x55d081(0x72b)] = 0x0,
                         this[_0x55d081(0x1f1)]['length'] = 0x0,
                         Cesium[_0x55d081(0x336)](_0x3f21c0[_0x55d081(0x44e)]) && _0x3f21c0[_0x55d081(0x44e)][_0x55d081(0x2dc)](_0x3f21c0),
                         _0x94d9aa(this, _0x3f21c0));
               }
               ;
          let _0x551db9 = new Cesium['Matrix4']();
          function _0x57a79f(_0x4be6c3, _0x1e5b2c) {
               const _0x503f6a = _0xc3a123;
               let _0xb36d84 = _0x1e5b2c[_0x503f6a(0xc97)];
               return !(_0xb36d84['positionCartographic'][_0x503f6a(0x48e)] < _0x4be6c3[_0x503f6a(0xc5c)] || _0xb36d84[_0x503f6a(0x672)][_0x503f6a(0x48e)] > _0x4be6c3[_0x503f6a(0x8d9)]) && (!!_0x4be6c3[_0x503f6a(0xdba)](_0x1e5b2c['multiViewportIndex']) && _0x4be6c3[_0x503f6a(0xbc3)]);
          }
          function _0x2df689(_0x8ace3a, _0x3b48f5) {
               const _0x3c03a4 = _0xc3a123;
               if (_0x8ace3a[_0x3c03a4(0x7f9)]) {
                    let _0x539381 = _0x3b48f5[_0x3c03a4(0xc97)][_0x3c03a4(0xabf)];
                    Cesium[_0x3c03a4(0xcdf)]['transpose'](_0x539381, _0x551db9);
                    for (let _0x2bb719 = 0x0; _0x2bb719 < 0x6; _0x2bb719++)
                         Cesium[_0x3c03a4(0xcdf)][_0x3c03a4(0x754)](_0x551db9, _0x8ace3a[_0x3c03a4(0x8d1)][_0x2bb719], _0x8ace3a[_0x3c03a4(0x678)][_0x2bb719]);
               }
          }
          function _0x1997cd(_0x3fc064) {
               const _0x1b76aa = _0xc3a123;
               var _0x578637 = 0x0;
               Cesium['defined'](_0x3fc064['style3D']) && (_0x578637 = _0x3fc064[_0x1b76aa(0xd55)]['bottomAltitude']);
               var _0x59f6ef = _0x3fc064[_0x1b76aa(0x48e)] + _0x578637
                    , _0x4099ce = _0x3fc064[_0x1b76aa(0xaeb)]
                    , _0x9622e = _0x3fc064[_0x1b76aa(0x5ec)];
               if (_0x3fc064[_0x1b76aa(0x938)] === Cesium['SceneMode'][_0x1b76aa(0xa65)])
                    _0x3fc064[_0x1b76aa(0x457)] = Cesium['Cartesian3'][_0x1b76aa(0xd78)](_0x4099ce, _0x9622e, _0x59f6ef),
                         _0x3fc064[_0x1b76aa(0xbbd)] = Cesium[_0x1b76aa(0xbec)]['eastNorthUpToFixedFrame'](_0x3fc064['_position']),
                         _0x3fc064['invModelMatrix'] = Cesium['Matrix4'][_0x1b76aa(0x499)](_0x3fc064[_0x1b76aa(0xbbd)], _0x3fc064[_0x1b76aa(0x576)]);
               else {
                    if (_0x4099ce > 0xb4 || _0x4099ce < -0xb4 || _0x9622e > 0xb4 || _0x9622e < -0xb4) {
                         let _0x4df0a8 = _0x4099ce
                              , _0x1edc34 = _0x9622e;
                         _0x3fc064[_0x1b76aa(0x457)] = new Cesium[(_0x1b76aa(0x25b))](_0x4df0a8, _0x1edc34, _0x59f6ef);
                    } else {
                         let _0x6e5356 = new Cesium[(_0x1b76aa(0x1ac))]()
                              , _0x51472b = Cesium[_0x1b76aa(0x25b)][_0x1b76aa(0xd78)](_0x4099ce, _0x9622e, _0x59f6ef)
                              , _0x57c91c = _0x6e5356[_0x1b76aa(0x34d)][_0x1b76aa(0x807)](_0x51472b);
                         _0x3fc064[_0x1b76aa(0x457)] = _0x6e5356['project'](_0x57c91c);
                    }
                    Cesium[_0x1b76aa(0xcdf)][_0x1b76aa(0xd0f)](_0x3fc064[_0x1b76aa(0x457)], _0x3fc064[_0x1b76aa(0xbbd)]),
                         Cesium['Matrix4'][_0x1b76aa(0x59d)](_0x537e7c, _0x3fc064['modelMatrix'], _0x3fc064[_0x1b76aa(0xbbd)]),
                         _0x3fc064[_0x1b76aa(0x576)] = Cesium[_0x1b76aa(0xcdf)]['inverse'](_0x3fc064[_0x1b76aa(0xbbd)], _0x3fc064['invModelMatrix']);
               }
          }
          function _0x49415d(_0x3aa9bb, _0x4d8791) {
               const _0x292ac9 = _0xc3a123;
               var _0x341507 = _0x4d8791
                    , _0x250783 = _0x341507[_0x292ac9(0xb95)]['baseUri'];
               _0x341507[_0x292ac9(0xb95)] = _0x3aa9bb[_0x292ac9(0x1c0)],
                    _0x341507[_0x292ac9(0xb95)][_0x292ac9(0xc30)] = _0x250783,
                    _0x341507['_loadMaterialTexture'](_0x341507[_0x292ac9(0xb95)], _0x250783);
               var _0x5244b9 = _0x341507[_0x292ac9(0xb95)][_0x292ac9(0x30c)]
                    , _0x228b82 = _0x341507[_0x292ac9(0xb95)]['textureunitstates'];
               if (Cesium[_0x292ac9(0x336)](_0x5244b9[_0x292ac9(0x806)]) && (_0x341507['_PBRMaterialParams'][_0x292ac9(0x30c)][_0x292ac9(0x806)] = {
                    'thickness': 0x1,
                    'tintColor': Cesium[_0x292ac9(0xce9)]['fromElements'](0x1, 0x1, 0x1, 0x1),
                    'diffusionDistance': Cesium[_0x292ac9(0xce9)]['fromElements'](0x1, 0x1, 0x1, 0x1),
                    'transmissionFactor': 0x1
               }),
                    Cesium[_0x292ac9(0x336)](_0x5244b9[_0x292ac9(0xbba)]) && (_0x341507['_PBRMaterialParams']['pbrMetallicRoughness'][_0x292ac9(0xbba)] = {
                         'clearcoatFactor': 0x0,
                         'clearcoatRoughnessFactor': 0x0
                    }),
                    Cesium[_0x292ac9(0x336)](_0x5244b9[_0x292ac9(0xc99)]) && -0x1 !== _0x5244b9[_0x292ac9(0xc99)][_0x292ac9(0x1a8)]) {
                    var _0xab2640 = _0x250783 + _0x228b82[_0x5244b9[_0x292ac9(0xc99)]['snowNormalTextureIndex']][_0x292ac9(0x9ff)][_0x292ac9(0x29f)];
                    _0x341507[_0x292ac9(0xb95)][_0x292ac9(0x724)]++,
                         _0x2d35f0(_0x341507['context'], _0xab2640, _0x341507[_0x292ac9(0xb95)], _0x341507[_0x292ac9(0xb95)][_0x292ac9(0x30c)][_0x292ac9(0xc99)], 'snowNormalTexture');
               }
               Cesium[_0x292ac9(0x336)](_0x5244b9[_0x292ac9(0xc99)]) && -0x1 !== _0x5244b9['snowEffect']['snowMaskTextureIndex'] && (_0xab2640 = _0x250783 + _0x228b82[_0x5244b9['snowEffect'][_0x292ac9(0x1fc)]][_0x292ac9(0x9ff)][_0x292ac9(0x29f)],
                    (_0x341507[_0x292ac9(0xb95)][_0x292ac9(0x724)]++,
                         _0x2d35f0(_0x341507[_0x292ac9(0x878)], _0xab2640, _0x341507[_0x292ac9(0xb95)], _0x341507[_0x292ac9(0xb95)]['pbrMetallicRoughness']['snowEffect'], 'snowMaskTexture'))),
                    Cesium['defined'](_0x5244b9[_0x292ac9(0x605)]) && -0x1 !== _0x5244b9[_0x292ac9(0x605)]['rippleTextureIndex'] && (_0xab2640 = _0x250783 + _0x228b82[_0x5244b9[_0x292ac9(0x605)][_0x292ac9(0x32b)]][_0x292ac9(0x9ff)][_0x292ac9(0x29f)],
                         (_0x341507['_PBRMaterialParams'][_0x292ac9(0x724)]++,
                              _0x2d35f0(_0x341507[_0x292ac9(0x878)], _0xab2640, _0x341507['_PBRMaterialParams'], _0x341507[_0x292ac9(0xb95)][_0x292ac9(0x30c)][_0x292ac9(0x605)], _0x292ac9(0x9b5))));
          }
          function _0x308257(_0x24bca9, _0x4259eb) {
               const _0x583a0b = _0xc3a123;
               _0x24bca9[_0x583a0b(0x4ef)](_0x4259eb);
          }
          function _0x2d35f0(_0x9db8ed, _0x4e6b55, _0x4efa1f, _0x8ba0a9, _0x373a5f) {
               const _0x290d17 = _0xc3a123;
               var _0x15a48a = Cesium['Resource'][_0x290d17(0x773)](_0x4e6b55)[_0x290d17(0x8e6)]()[_0x290d17(0x7db)](function (_0x4fbc64) {
                    const _0xefccb4 = _0x290d17;
                    var _0x5c067b = new Cesium[(_0xefccb4(0x74d))]({
                         'context': _0x9db8ed,
                         'source': _0x4fbc64,
                         'sampler': new Cesium[(_0xefccb4(0x568))]({
                              'wrapS': Cesium[_0xefccb4(0x7a5)][_0xefccb4(0x641)],
                              'wrapT': Cesium[_0xefccb4(0x7a5)][_0xefccb4(0x641)],
                              'minificationFilter': Cesium[_0xefccb4(0x4ce)][_0xefccb4(0x650)],
                              'magnificationFilter': Cesium[_0xefccb4(0x4ce)][_0xefccb4(0x9a3)]
                         })
                    });
                    !Cesium[_0xefccb4(0x417)][_0xefccb4(0x534)](_0x5c067b['width']) || !Cesium['Math']['isPowerOfTwo'](_0x5c067b[_0xefccb4(0x48e)]) || _0x5c067b[_0xefccb4(0xcac)](Cesium['MipmapHint'][_0xefccb4(0x746)]),
                         _0x8ba0a9[_0x373a5f] = _0x5c067b,
                         _0x4efa1f[_0xefccb4(0x2f7)]++;
               }, _0x374e5b => {
                    const _0x3dc68a = _0x290d17;
                    console[_0x3dc68a(0x749)](_0x374e5b),
                         _0x4efa1f[_0x3dc68a(0x724)]--;
               }
               );
               _0x8ba0a9[_0x373a5f] = _0x15a48a;
          }
          _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x81e)] = function (_0xa431bc) {
               const _0x5af977 = _0xc3a123;
               this[_0x5af977(0x3b8)] && (_0x4d6ba3(this),
                    this[_0x5af977(0xc4d)](_0xa431bc),
                    this[_0x5af977(0xd07)](),
                    this[_0x5af977(0x873)] && this[_0x5af977(0x873)][_0x5af977(0x524)](this['id']));
          }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x4cecbb) {
                    const _0x4426ef = _0xc3a123;
                    this[_0x4426ef(0x3b8)] && _0x57a79f(this, _0x4cecbb) && (!_0x4cecbb['passes'][_0x4426ef(0x988)] || this[_0x4426ef(0x299)]) && (this['_PBRMaterialParams'][_0x4426ef(0x1f4)] && this['_updatePBRMaterial'](),
                         this['_schuduler'][_0x4426ef(0xcb9)](this, _0x4cecbb),
                         _0x3fc872(this),
                         _0x17efda(this, _0x4cecbb),
                         _0x68d278(this, _0x4cecbb),
                         _0x2df689(this, _0x4cecbb),
                         this[_0x4426ef(0xa48)]['_dirty'] && (_0x1997cd(this),
                              this[_0x4426ef(0xa48)][_0x4426ef(0x1d1)] = !0x1),
                         this[_0x4426ef(0x59c)] = _0x4cecbb);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)]['setPBRMaterialFromJSON'] = function (_0x42caf3) {
                    const _0x18f393 = _0xc3a123;
                    var _0x28faa3 = this
                         , _0xccc4ee = 'string' == typeof _0x42caf3;
                    if (_0x28faa3[_0x18f393(0xb95)][_0x18f393(0xc30)] = _0xccc4ee ? Cesium[_0x18f393(0x5bf)](_0x42caf3) : '',
                         _0xccc4ee)
                         Cesium['Resource'][_0x18f393(0x773)](_0x42caf3)[_0x18f393(0xbc7)](_0x42caf3)[_0x18f393(0x7db)](function (_0x36568e) {
                              _0x49415d(_0x36568e, _0x28faa3);
                         });
                    else
                         _0x49415d(_0x42caf3, _0x28faa3);
               }
               ,
               _0x160299[_0xc3a123(0x2d4)]['_updatePBRMaterial'] = function () {
                    const _0x4851e2 = _0xc3a123;
                    if (Cesium['defined'](this[_0x4851e2(0xb95)]) && Cesium[_0x4851e2(0x336)](this['_PBRMaterialParams'][_0x4851e2(0x724)]) && this['_PBRMaterialParams'][_0x4851e2(0x724)] === this[_0x4851e2(0xb95)]['readyTextureCount']) {
                         var _0x13902f = {
                              'enable': !0x0
                         };
                         _0x13902f[_0x4851e2(0x9c9)] = this,
                              this[_0x4851e2(0x6d0)](_0x13902f, _0x308257),
                              this['_PBRMaterialParams']['loadingTexture'] = !0x1;
                    }
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x4fa)] = function () {
                    const _0x5e237a = _0xc3a123;
                    var _0x5c18d2 = this[_0x5e237a(0xb95)]['pbrMetallicRoughness'];
                    for (var _0x565dea in _0x5c18d2)
                         _0x5c18d2[_0x5e237a(0x6e8)](_0x565dea) && _0x5c18d2[_0x565dea] instanceof Cesium[_0x5e237a(0x74d)] && _0x5c18d2[_0x565dea][_0x5e237a(0x9bb)]();
                    this[_0x5e237a(0xb95)] = {
                         'pbrMetallicRoughness': {
                              'metallicFactor': 0x0,
                              'roughnessFactor': 0x0,
                              'baseColor': new Cartesian4(0x1, 0x1, 0x1, 0x1),
                              'baseColorTextureIndex': -0x1,
                              'emissiveFactor': Cartesian3[_0x5e237a(0x780)],
                              'emissiveTextureIndex': -0x1,
                              'occlusionTextureIndex': -0x1,
                              'metallicRoughnessTextureIndex': -0x1,
                              'normalTextureIndex': -0x1,
                              'normalTexture': void 0x0,
                              'baseColorTexture': void 0x0,
                              'intensityScale': 0x1,
                              'snowEffect': void 0x0,
                              'rainEffect': void 0x0,
                              'volume': void 0x0,
                              'clearcoat': void 0x0,
                              'anisotropy': void 0x0
                         },
                         'loadingTexture': void 0x0
                    };
                    var _0x355a39 = {
                         'enable': !0x0
                    };
                    _0x355a39[_0x5e237a(0x9c9)] = this,
                         this[_0x5e237a(0x6d0)](_0x355a39, _0x308257);
               }
               ,
               _0x160299['prototype']['_loadMaterialTexture'] = function (_0x4f5e89, _0x469200) {
                    const _0x68b54b = _0xc3a123;
                    _0x4f5e89[_0x68b54b(0x1f4)] = !0x0;
                    var _0x4bcfc2 = _0x4f5e89[_0x68b54b(0x30c)]
                         , _0x3be457 = _0x4f5e89[_0x68b54b(0x85c)]
                         , _0x1f4dd8 = _0x4bcfc2[_0x68b54b(0xbe1)];
                    Cesium[_0x68b54b(0x336)](_0x4f5e89['pendingTextureCount']) || (_0x4f5e89[_0x68b54b(0x724)] = 0x0),
                         Cesium[_0x68b54b(0x336)](_0x4f5e89[_0x68b54b(0x2f7)]) || (_0x4f5e89[_0x68b54b(0x2f7)] = 0x0);
                    var _0x1f67d9 = this[_0x68b54b(0x878)]
                         , _0x2aaab0 = Cesium[_0x68b54b(0x336)](_0x469200) ? _0x469200 : this['_baseUri'] + this[_0x68b54b(0xd83)];
                    _0x1f4dd8 > -0x1 && !Cesium['defined'](_0x4bcfc2[_0x68b54b(0x8b9)]) && (_0x2d35f0(_0x1f67d9, _0x2aaab0 + _0x3be457[_0x1f4dd8][_0x68b54b(0x9ff)][_0x68b54b(0x29f)], _0x4f5e89, _0x4f5e89['pbrMetallicRoughness'], 'baseColorTexture'),
                         _0x4f5e89['pendingTextureCount']++);
                    var _0x2802ca = _0x4bcfc2[_0x68b54b(0x71d)];
                    _0x2802ca > -0x1 && !Cesium[_0x68b54b(0x336)](_0x4bcfc2[_0x68b54b(0xda3)]) && (_0x2d35f0(_0x1f67d9, _0x2aaab0 + _0x3be457[_0x2802ca][_0x68b54b(0x9ff)][_0x68b54b(0x29f)], _0x4f5e89, _0x4f5e89[_0x68b54b(0x30c)], _0x68b54b(0xda3)),
                         _0x4f5e89['pendingTextureCount']++);
                    var _0x282653 = _0x4bcfc2[_0x68b54b(0xae2)];
                    _0x282653 > -0x1 && !Cesium[_0x68b54b(0x336)](_0x4bcfc2['normalTexture']) && (_0x2d35f0(_0x1f67d9, _0x2aaab0 + _0x3be457[_0x282653]['textureunitstate']['url'], _0x4f5e89, _0x4f5e89[_0x68b54b(0x30c)], _0x68b54b(0x8a6)),
                         _0x4f5e89[_0x68b54b(0x724)]++);
                    var _0x4960e5 = _0x4bcfc2[_0x68b54b(0x8dc)];
                    _0x4960e5 > -0x1 && !Cesium['defined'](_0x4bcfc2[_0x68b54b(0x657)]) && (_0x2d35f0(_0x1f67d9, _0x2aaab0 + _0x3be457[_0x4960e5][_0x68b54b(0x9ff)]['url'], _0x4f5e89, _0x4f5e89[_0x68b54b(0x30c)], _0x68b54b(0x657)),
                         _0x4f5e89[_0x68b54b(0x724)]++);
                    var _0x2edd30 = _0x4bcfc2[_0x68b54b(0x4f5)];
                    _0x2edd30 > -0x1 && !Cesium['defined'](_0x4bcfc2[_0x68b54b(0x5c2)]) && (_0x2d35f0(_0x1f67d9, _0x2aaab0 + _0x3be457[_0x2edd30][_0x68b54b(0x9ff)][_0x68b54b(0x29f)], _0x4f5e89, _0x4f5e89[_0x68b54b(0x30c)], _0x68b54b(0x5c2)),
                         _0x4f5e89[_0x68b54b(0x724)]++);
               }
               ,
               _0x160299['prototype'][_0xc3a123(0x567)] = function () {
                    return !0x1;
               }
               ,
               _0x160299[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x232e27 = _0xc3a123;
                    return this['_cache'][_0x232e27(0xc4e)](),
                         _0x4d6ba3(this),
                         this[_0x232e27(0x23b)][_0x232e27(0x72b)] = 0x0,
                         this['_requestTiles']['length'] = 0x0,
                         this[_0x232e27(0x3be)]['length'] = 0x0,
                         this[_0x232e27(0x1f1)][_0x232e27(0x72b)] = 0x0,
                         this[_0x232e27(0x5b0)][_0x232e27(0x72b)] = 0x0,
                         this[_0x232e27(0xd3d)][_0x232e27(0x6c9)](),
                         this['_objsVisibleList'][_0x232e27(0x6c9)](),
                         this[_0x232e27(0x623)][_0x232e27(0x6c9)](),
                         this[_0x232e27(0xbd1)] = {},
                         this[_0x232e27(0x2e6)] = {},
                         this[_0x232e27(0x371)][_0x232e27(0x9bb)](),
                         this[_0x232e27(0x253)]['destroy'](),
                         Cesium[_0x232e27(0x8e1)](this);
               }
               ;
          var _0x5aa820 = function (_0x4c5094) {
               const _0x38073a = _0xc3a123;
               var _0x2177c7, _0x314280 = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, _0x3fbb6c = _0x38073a(0x1a2) == typeof Symbol && _0x38073a(0xcda) == typeof Symbol[_0x38073a(0x298)], _0x4bc2ea = Math[_0x38073a(0xc1f)], _0x59b56c = Math[_0x38073a(0x763)], _0x4eba29 = _0x38073a(0xd8e), _0x58621a = _0x4eba29 + _0x38073a(0x895), _0x35f69a = 0x5af3107a4000, _0x52b792 = 0xe, _0x853879 = 0x1fffffffffffff, _0x5dc8f3 = [0x1, 0xa, 0x64, 0x3e8, 0x2710, 0x186a0, 0xf4240, 0x989680, 0x5f5e100, 0x3b9aca00, 0x2540be400, 0x174876e800, 0xe8d4a51000, 0x9184e72a000], _0x388840 = 0x989680, _0x160e00 = 0x3b9aca00;
               function _0x891e14(_0x23000a) {
                    var _0x4f9232 = 0x0 | _0x23000a;
                    return _0x23000a > 0x0 || _0x23000a === _0x4f9232 ? _0x4f9232 : _0x4f9232 - 0x1;
               }
               function _0x60ec0(_0x1494db) {
                    const _0x1b00b7 = _0x38073a;
                    for (var _0x5e11d1, _0x43094c, _0x24675b = 0x1, _0x5096ae = _0x1494db['length'], _0x5ae3e1 = _0x1494db[0x0] + ''; _0x24675b < _0x5096ae;) {
                         for (_0x5e11d1 = _0x1494db[_0x24675b++] + '',
                              _0x43094c = _0x52b792 - _0x5e11d1[_0x1b00b7(0x72b)]; _0x43094c--; _0x5e11d1 = '0' + _0x5e11d1)
                              ;
                         _0x5ae3e1 += _0x5e11d1;
                    }
                    for (_0x5096ae = _0x5ae3e1[_0x1b00b7(0x72b)]; 0x30 === _0x5ae3e1[_0x1b00b7(0x1ad)](--_0x5096ae);)
                         ;
                    return _0x5ae3e1['slice'](0x0, _0x5096ae + 0x1 || 0x1);
               }
               function _0x287c96(_0x1cd8bc, _0x5084f8) {
                    const _0x568d45 = _0x38073a;
                    var _0x407f8a, _0x442a4e, _0x4f5e8c = _0x1cd8bc['c'], _0x23f101 = _0x5084f8['c'], _0x8721d6 = _0x1cd8bc['s'], _0x4a8a8d = _0x5084f8['s'], _0x488e84 = _0x1cd8bc['e'], _0x3d177a = _0x5084f8['e'];
                    if (!_0x8721d6 || !_0x4a8a8d)
                         return null;
                    if (_0x407f8a = _0x4f5e8c && !_0x4f5e8c[0x0],
                         _0x442a4e = _0x23f101 && !_0x23f101[0x0],
                         _0x407f8a || _0x442a4e)
                         return _0x407f8a ? _0x442a4e ? 0x0 : -_0x4a8a8d : _0x8721d6;
                    if (_0x8721d6 != _0x4a8a8d)
                         return _0x8721d6;
                    if (_0x407f8a = _0x8721d6 < 0x0,
                         _0x442a4e = _0x488e84 == _0x3d177a,
                         !_0x4f5e8c || !_0x23f101)
                         return _0x442a4e ? 0x0 : !_0x4f5e8c ^ _0x407f8a ? 0x1 : -0x1;
                    if (!_0x442a4e)
                         return _0x488e84 > _0x3d177a ^ _0x407f8a ? 0x1 : -0x1;
                    for (_0x4a8a8d = (_0x488e84 = _0x4f5e8c[_0x568d45(0x72b)]) < (_0x3d177a = _0x23f101['length']) ? _0x488e84 : _0x3d177a,
                         _0x8721d6 = 0x0; _0x8721d6 < _0x4a8a8d; _0x8721d6++)
                         if (_0x4f5e8c[_0x8721d6] != _0x23f101[_0x8721d6])
                              return _0x4f5e8c[_0x8721d6] > _0x23f101[_0x8721d6] ^ _0x407f8a ? 0x1 : -0x1;
                    return _0x488e84 == _0x3d177a ? 0x0 : _0x488e84 > _0x3d177a ^ _0x407f8a ? 0x1 : -0x1;
               }
               function _0x1ce3da(_0x165d65, _0x1ff746, _0x1e865d, _0x3858ce) {
                    const _0x19699c = _0x38073a;
                    if (_0x165d65 < _0x1ff746 || _0x165d65 > _0x1e865d || _0x165d65 !== _0x59b56c(_0x165d65))
                         throw Error(_0x4eba29 + (_0x3858ce || _0x19699c(0x18d)) + (_0x19699c(0x6f6) == typeof _0x165d65 ? _0x165d65 < _0x1ff746 || _0x165d65 > _0x1e865d ? _0x19699c(0x24f) : _0x19699c(0x77f) : _0x19699c(0x9b9)) + String(_0x165d65));
               }
               function _0x45466e(_0x4b5221) {
                    const _0x12bfc5 = _0x38073a;
                    var _0x314f1c = _0x4b5221['c'][_0x12bfc5(0x72b)] - 0x1;
                    return _0x891e14(_0x4b5221['e'] / _0x52b792) == _0x314f1c && _0x4b5221['c'][_0x314f1c] % 0x2 != 0x0;
               }
               function _0x5a57e4(_0x133ac3, _0x17b850) {
                    const _0x4de02d = _0x38073a;
                    return (_0x133ac3[_0x4de02d(0x72b)] > 0x1 ? _0x133ac3[_0x4de02d(0x318)](0x0) + '.' + _0x133ac3[_0x4de02d(0x21c)](0x1) : _0x133ac3) + (_0x17b850 < 0x0 ? 'e' : 'e+') + _0x17b850;
               }
               function _0x1da452(_0x294191, _0x50e889, _0x5d08d6) {
                    const _0x684bdf = _0x38073a;
                    var _0x3990af, _0x38574e;
                    if (_0x50e889 < 0x0) {
                         for (_0x38574e = _0x5d08d6 + '.'; ++_0x50e889; _0x38574e += _0x5d08d6)
                              ;
                         _0x294191 = _0x38574e + _0x294191;
                    } else {
                         if (++_0x50e889 > (_0x3990af = _0x294191[_0x684bdf(0x72b)])) {
                              for (_0x38574e = _0x5d08d6,
                                   _0x50e889 -= _0x3990af; --_0x50e889; _0x38574e += _0x5d08d6)
                                   ;
                              _0x294191 += _0x38574e;
                         } else
                              _0x50e889 < _0x3990af && (_0x294191 = _0x294191[_0x684bdf(0x21c)](0x0, _0x50e889) + '.' + _0x294191[_0x684bdf(0x21c)](_0x50e889));
                    }
                    return _0x294191;
               }
               return _0x2177c7 = function _0x3d28d7(_0x565ef4) {
                    const _0x6e2977 = _0x38073a;
                    var _0x395c39, _0x2a6471, _0x36e6be, _0xb2c0c9, _0x2c8304, _0x55ad3f, _0x12e58a, _0x7ef42e, _0x356390, _0x34ce0c, _0x410cca = _0x204f73[_0x6e2977(0x2d4)] = {
                         'constructor': _0x204f73,
                         'toString': null,
                         'valueOf': null
                    }, _0x1c773d = new _0x204f73(0x1), _0x5181df = 0x14, _0x16e892 = 0x4, _0x297614 = -0x7, _0x24d548 = 0x15, _0x3bc4c3 = -0x989680, _0x158464 = 0x989680, _0x51da52 = !0x1, _0xdc5fd9 = 0x1, _0x5baa7c = 0x0, _0x2f64f9 = {
                         'prefix': '',
                         'groupSize': 0x3,
                         'secondaryGroupSize': 0x0,
                         'groupSeparator': ',',
                         'decimalSeparator': '.',
                         'fractionGroupSize': 0x0,
                         'fractionGroupSeparator': '\u00a0',
                         'suffix': ''
                    }, _0x429d54 = _0x6e2977(0xc40);
                    function _0x204f73(_0x4ce22b, _0x272ecf) {
                         const _0x4c7283 = _0x6e2977;
                         var _0x7523b3, _0x583ce9, _0x470fe6, _0x7eeeeb, _0x321e54, _0x502c1a, _0x1a26b6, _0x201648, _0x3df569 = this;
                         if (!(_0x3df569 instanceof _0x204f73))
                              return new _0x204f73(_0x4ce22b, _0x272ecf);
                         if (null == _0x272ecf) {
                              if (_0x4ce22b && !0x0 === _0x4ce22b[_0x4c7283(0xd2e)])
                                   return _0x3df569['s'] = _0x4ce22b['s'],
                                        void (!_0x4ce22b['c'] || _0x4ce22b['e'] > _0x158464 ? _0x3df569['c'] = _0x3df569['e'] = null : _0x4ce22b['e'] < _0x3bc4c3 ? _0x3df569['c'] = [_0x3df569['e'] = 0x0] : (_0x3df569['e'] = _0x4ce22b['e'],
                                             _0x3df569['c'] = _0x4ce22b['c']['slice']()));
                              if ((_0x502c1a = 'number' == typeof _0x4ce22b) && 0x0 * _0x4ce22b == 0x0) {
                                   if (_0x3df569['s'] = 0x1 / _0x4ce22b < 0x0 ? (_0x4ce22b = -_0x4ce22b,
                                        -0x1) : 0x1,
                                        _0x4ce22b === ~~_0x4ce22b) {
                                        for (_0x7eeeeb = 0x0,
                                             _0x321e54 = _0x4ce22b; _0x321e54 >= 0xa; _0x321e54 /= 0xa,
                                             _0x7eeeeb++)
                                             ;
                                        return void (_0x7eeeeb > _0x158464 ? _0x3df569['c'] = _0x3df569['e'] = null : (_0x3df569['e'] = _0x7eeeeb,
                                             _0x3df569['c'] = [_0x4ce22b]));
                                   }
                                   _0x201648 = String(_0x4ce22b);
                              } else {
                                   if (!_0x314280[_0x4c7283(0xbd5)](_0x201648 = String(_0x4ce22b)))
                                        return _0x36e6be(_0x3df569, _0x201648, _0x502c1a);
                                   _0x3df569['s'] = 0x2d == _0x201648[_0x4c7283(0x1ad)](0x0) ? (_0x201648 = _0x201648['slice'](0x1),
                                        -0x1) : 0x1;
                              }
                              (_0x7eeeeb = _0x201648[_0x4c7283(0xcef)]('.')) > -0x1 && (_0x201648 = _0x201648[_0x4c7283(0x6c0)]('.', '')),
                                   (_0x321e54 = _0x201648['search'](/e/i)) > 0x0 ? (_0x7eeeeb < 0x0 && (_0x7eeeeb = _0x321e54),
                                        _0x7eeeeb += +_0x201648[_0x4c7283(0x21c)](_0x321e54 + 0x1),
                                        _0x201648 = _0x201648[_0x4c7283(0x617)](0x0, _0x321e54)) : _0x7eeeeb < 0x0 && (_0x7eeeeb = _0x201648[_0x4c7283(0x72b)]);
                         } else {
                              if (_0x1ce3da(_0x272ecf, 0x2, _0x429d54[_0x4c7283(0x72b)], _0x4c7283(0x1d5)),
                                   0xa == _0x272ecf)
                                   return _0x4b2541(_0x3df569 = new _0x204f73(_0x4ce22b), _0x5181df + _0x3df569['e'] + 0x1, _0x16e892);
                              if (_0x201648 = String(_0x4ce22b),
                                   _0x502c1a = _0x4c7283(0x6f6) == typeof _0x4ce22b) {
                                   if (0x0 * _0x4ce22b != 0x0)
                                        return _0x36e6be(_0x3df569, _0x201648, _0x502c1a, _0x272ecf);
                                   if (_0x3df569['s'] = 0x1 / _0x4ce22b < 0x0 ? (_0x201648 = _0x201648[_0x4c7283(0x21c)](0x1),
                                        -0x1) : 0x1,
                                        _0x204f73['DEBUG'] && _0x201648[_0x4c7283(0x6c0)](/^0\.0*|\./, '')['length'] > 0xf)
                                        throw Error(_0x58621a + _0x4ce22b);
                              } else
                                   _0x3df569['s'] = 0x2d === _0x201648[_0x4c7283(0x1ad)](0x0) ? (_0x201648 = _0x201648[_0x4c7283(0x21c)](0x1),
                                        -0x1) : 0x1;
                              for (_0x7523b3 = _0x429d54[_0x4c7283(0x21c)](0x0, _0x272ecf),
                                   _0x7eeeeb = _0x321e54 = 0x0,
                                   _0x1a26b6 = _0x201648[_0x4c7283(0x72b)]; _0x321e54 < _0x1a26b6; _0x321e54++)
                                   if (_0x7523b3['indexOf'](_0x583ce9 = _0x201648[_0x4c7283(0x318)](_0x321e54)) < 0x0) {
                                        if ('.' == _0x583ce9) {
                                             if (_0x321e54 > _0x7eeeeb) {
                                                  _0x7eeeeb = _0x1a26b6;
                                                  continue;
                                             }
                                        } else {
                                             if (!_0x470fe6 && (_0x201648 == _0x201648['toUpperCase']() && (_0x201648 = _0x201648[_0x4c7283(0x91c)]()) || _0x201648 == _0x201648[_0x4c7283(0x91c)]() && (_0x201648 = _0x201648[_0x4c7283(0xc17)]()))) {
                                                  _0x470fe6 = !0x0,
                                                       _0x321e54 = -0x1,
                                                       _0x7eeeeb = 0x0;
                                                  continue;
                                             }
                                        }
                                        return _0x36e6be(_0x3df569, String(_0x4ce22b), _0x502c1a, _0x272ecf);
                                   }
                              _0x502c1a = !0x1,
                                   (_0x7eeeeb = (_0x201648 = _0x2a6471(_0x201648, _0x272ecf, 0xa, _0x3df569['s']))[_0x4c7283(0xcef)]('.')) > -0x1 ? _0x201648 = _0x201648[_0x4c7283(0x6c0)]('.', '') : _0x7eeeeb = _0x201648[_0x4c7283(0x72b)];
                         }
                         for (_0x321e54 = 0x0; 0x30 === _0x201648['charCodeAt'](_0x321e54); _0x321e54++)
                              ;
                         for (_0x1a26b6 = _0x201648[_0x4c7283(0x72b)]; 0x30 === _0x201648[_0x4c7283(0x1ad)](--_0x1a26b6);)
                              ;
                         if (_0x201648 = _0x201648[_0x4c7283(0x21c)](_0x321e54, ++_0x1a26b6)) {
                              if (_0x1a26b6 -= _0x321e54,
                                   _0x502c1a && _0x204f73['DEBUG'] && _0x1a26b6 > 0xf && (_0x4ce22b > _0x853879 || _0x4ce22b !== _0x59b56c(_0x4ce22b)))
                                   throw Error(_0x58621a + _0x3df569['s'] * _0x4ce22b);
                              if ((_0x7eeeeb = _0x7eeeeb - _0x321e54 - 0x1) > _0x158464)
                                   _0x3df569['c'] = _0x3df569['e'] = null;
                              else {
                                   if (_0x7eeeeb < _0x3bc4c3)
                                        _0x3df569['c'] = [_0x3df569['e'] = 0x0];
                                   else {
                                        if (_0x3df569['e'] = _0x7eeeeb,
                                             _0x3df569['c'] = [],
                                             _0x321e54 = (_0x7eeeeb + 0x1) % _0x52b792,
                                             _0x7eeeeb < 0x0 && (_0x321e54 += _0x52b792),
                                             _0x321e54 < _0x1a26b6) {
                                             for (_0x321e54 && _0x3df569['c'][_0x4c7283(0x63e)](+_0x201648[_0x4c7283(0x21c)](0x0, _0x321e54)),
                                                  _0x1a26b6 -= _0x52b792; _0x321e54 < _0x1a26b6;)
                                                  _0x3df569['c']['push'](+_0x201648[_0x4c7283(0x21c)](_0x321e54, _0x321e54 += _0x52b792));
                                             _0x321e54 = _0x52b792 - (_0x201648 = _0x201648['slice'](_0x321e54))[_0x4c7283(0x72b)];
                                        } else
                                             _0x321e54 -= _0x1a26b6;
                                        for (; _0x321e54--; _0x201648 += '0')
                                             ;
                                        _0x3df569['c'][_0x4c7283(0x63e)](+_0x201648);
                                   }
                              }
                         } else
                              _0x3df569['c'] = [_0x3df569['e'] = 0x0];
                    }
                    function _0x53ed8b(_0x1c12c4, _0x787917, _0x3039db, _0x38526b) {
                         const _0x15fc08 = _0x6e2977;
                         var _0x58c044, _0x10ed95, _0x44a141, _0x4eb81e, _0x2e3d8a;
                         if (null == _0x3039db ? _0x3039db = _0x16e892 : _0x1ce3da(_0x3039db, 0x0, 0x8),
                              !_0x1c12c4['c'])
                              return _0x1c12c4[_0x15fc08(0x892)]();
                         if (_0x58c044 = _0x1c12c4['c'][0x0],
                              _0x44a141 = _0x1c12c4['e'],
                              null == _0x787917)
                              _0x2e3d8a = _0x60ec0(_0x1c12c4['c']),
                                   _0x2e3d8a = 0x1 == _0x38526b || 0x2 == _0x38526b && (_0x44a141 <= _0x297614 || _0x44a141 >= _0x24d548) ? _0x5a57e4(_0x2e3d8a, _0x44a141) : _0x1da452(_0x2e3d8a, _0x44a141, '0');
                         else {
                              if (_0x10ed95 = (_0x1c12c4 = _0x4b2541(new _0x204f73(_0x1c12c4), _0x787917, _0x3039db))['e'],
                                   _0x4eb81e = (_0x2e3d8a = _0x60ec0(_0x1c12c4['c']))['length'],
                                   0x1 == _0x38526b || 0x2 == _0x38526b && (_0x787917 <= _0x10ed95 || _0x10ed95 <= _0x297614)) {
                                   for (; _0x4eb81e < _0x787917; _0x2e3d8a += '0',
                                        _0x4eb81e++)
                                        ;
                                   _0x2e3d8a = _0x5a57e4(_0x2e3d8a, _0x10ed95);
                              } else {
                                   if (_0x787917 -= _0x44a141,
                                        _0x2e3d8a = _0x1da452(_0x2e3d8a, _0x10ed95, '0'),
                                        _0x10ed95 + 0x1 > _0x4eb81e) {
                                        if (--_0x787917 > 0x0) {
                                             for (_0x2e3d8a += '.'; _0x787917--; _0x2e3d8a += '0')
                                                  ;
                                        }
                                   } else {
                                        if ((_0x787917 += _0x10ed95 - _0x4eb81e) > 0x0) {
                                             for (_0x10ed95 + 0x1 == _0x4eb81e && (_0x2e3d8a += '.'); _0x787917--; _0x2e3d8a += '0')
                                                  ;
                                        }
                                   }
                              }
                         }
                         return _0x1c12c4['s'] < 0x0 && _0x58c044 ? '-' + _0x2e3d8a : _0x2e3d8a;
                    }
                    function _0x25ff76(_0x2d6d6d, _0x2cc02b) {
                         const _0x57f56d = _0x6e2977;
                         for (var _0x5d110d, _0x4427e8 = 0x1, _0x510ea2 = new _0x204f73(_0x2d6d6d[0x0]); _0x4427e8 < _0x2d6d6d[_0x57f56d(0x72b)]; _0x4427e8++) {
                              if (!(_0x5d110d = new _0x204f73(_0x2d6d6d[_0x4427e8]))['s']) {
                                   _0x510ea2 = _0x5d110d;
                                   break;
                              }
                              _0x2cc02b[_0x57f56d(0x3fa)](_0x510ea2, _0x5d110d) && (_0x510ea2 = _0x5d110d);
                         }
                         return _0x510ea2;
                    }
                    function _0x3c14bc(_0x203193, _0x1db976, _0x2fa15f) {
                         for (var _0x28d247 = 0x1, _0x261cb9 = _0x1db976['length']; !_0x1db976[--_0x261cb9]; _0x1db976['pop']())
                              ;
                         for (_0x261cb9 = _0x1db976[0x0]; _0x261cb9 >= 0xa; _0x261cb9 /= 0xa,
                              _0x28d247++)
                              ;
                         return (_0x2fa15f = _0x28d247 + _0x2fa15f * _0x52b792 - 0x1) > _0x158464 ? _0x203193['c'] = _0x203193['e'] = null : _0x2fa15f < _0x3bc4c3 ? _0x203193['c'] = [_0x203193['e'] = 0x0] : (_0x203193['e'] = _0x2fa15f,
                              _0x203193['c'] = _0x1db976),
                              _0x203193;
                    }
                    function _0x4b2541(_0xeb633f, _0x2e7ea8, _0x224d95, _0x46235a) {
                         const _0x39f4a5 = _0x6e2977;
                         var _0x50008b, _0x58d83a, _0x22c1d4, _0x25fdd6, _0x3ac561, _0x2cb4b0, _0x28d07e, _0x2f9a8e = _0xeb633f['c'], _0x233273 = _0x5dc8f3;
                         if (_0x2f9a8e) {
                              _0x1e700c: {
                                   for (_0x50008b = 0x1,
                                        _0x25fdd6 = _0x2f9a8e[0x0]; _0x25fdd6 >= 0xa; _0x25fdd6 /= 0xa,
                                        _0x50008b++)
                                        ;
                                   if ((_0x58d83a = _0x2e7ea8 - _0x50008b) < 0x0)
                                        _0x58d83a += _0x52b792,
                                             _0x22c1d4 = _0x2e7ea8,
                                             _0x28d07e = (_0x3ac561 = _0x2f9a8e[_0x2cb4b0 = 0x0]) / _0x233273[_0x50008b - _0x22c1d4 - 0x1] % 0xa | 0x0;
                                   else {
                                        if ((_0x2cb4b0 = _0x4bc2ea((_0x58d83a + 0x1) / _0x52b792)) >= _0x2f9a8e['length']) {
                                             if (!_0x46235a)
                                                  break _0x1e700c;
                                             for (; _0x2f9a8e[_0x39f4a5(0x72b)] <= _0x2cb4b0; _0x2f9a8e['push'](0x0))
                                                  ;
                                             _0x3ac561 = _0x28d07e = 0x0,
                                                  _0x50008b = 0x1,
                                                  _0x22c1d4 = (_0x58d83a %= _0x52b792) - _0x52b792 + 0x1;
                                        } else {
                                             for (_0x3ac561 = _0x25fdd6 = _0x2f9a8e[_0x2cb4b0],
                                                  _0x50008b = 0x1; _0x25fdd6 >= 0xa; _0x25fdd6 /= 0xa,
                                                  _0x50008b++)
                                                  ;
                                             _0x28d07e = (_0x22c1d4 = (_0x58d83a %= _0x52b792) - _0x52b792 + _0x50008b) < 0x0 ? 0x0 : _0x3ac561 / _0x233273[_0x50008b - _0x22c1d4 - 0x1] % 0xa | 0x0;
                                        }
                                   }
                                   if (_0x46235a = _0x46235a || _0x2e7ea8 < 0x0 || null != _0x2f9a8e[_0x2cb4b0 + 0x1] || (_0x22c1d4 < 0x0 ? _0x3ac561 : _0x3ac561 % _0x233273[_0x50008b - _0x22c1d4 - 0x1]),
                                        _0x46235a = _0x224d95 < 0x4 ? (_0x28d07e || _0x46235a) && (0x0 == _0x224d95 || _0x224d95 == (_0xeb633f['s'] < 0x0 ? 0x3 : 0x2)) : _0x28d07e > 0x5 || 0x5 == _0x28d07e && (0x4 == _0x224d95 || _0x46235a || 0x6 == _0x224d95 && (_0x58d83a > 0x0 ? _0x22c1d4 > 0x0 ? _0x3ac561 / _0x233273[_0x50008b - _0x22c1d4] : 0x0 : _0x2f9a8e[_0x2cb4b0 - 0x1]) % 0xa & 0x1 || _0x224d95 == (_0xeb633f['s'] < 0x0 ? 0x8 : 0x7)),
                                        _0x2e7ea8 < 0x1 || !_0x2f9a8e[0x0])
                                        return _0x2f9a8e[_0x39f4a5(0x72b)] = 0x0,
                                             _0x46235a ? (_0x2e7ea8 -= _0xeb633f['e'] + 0x1,
                                                  _0x2f9a8e[0x0] = _0x233273[(_0x52b792 - _0x2e7ea8 % _0x52b792) % _0x52b792],
                                                  _0xeb633f['e'] = -_0x2e7ea8 || 0x0) : _0x2f9a8e[0x0] = _0xeb633f['e'] = 0x0,
                                             _0xeb633f;
                                   if (0x0 == _0x58d83a ? (_0x2f9a8e['length'] = _0x2cb4b0,
                                        _0x25fdd6 = 0x1,
                                        _0x2cb4b0--) : (_0x2f9a8e[_0x39f4a5(0x72b)] = _0x2cb4b0 + 0x1,
                                             _0x25fdd6 = _0x233273[_0x52b792 - _0x58d83a],
                                             _0x2f9a8e[_0x2cb4b0] = _0x22c1d4 > 0x0 ? _0x59b56c(_0x3ac561 / _0x233273[_0x50008b - _0x22c1d4] % _0x233273[_0x22c1d4]) * _0x25fdd6 : 0x0),
                                        _0x46235a)
                                        for (; ;) {
                                             if (0x0 == _0x2cb4b0) {
                                                  for (_0x58d83a = 0x1,
                                                       _0x22c1d4 = _0x2f9a8e[0x0]; _0x22c1d4 >= 0xa; _0x22c1d4 /= 0xa,
                                                       _0x58d83a++)
                                                       ;
                                                  for (_0x22c1d4 = _0x2f9a8e[0x0] += _0x25fdd6,
                                                       _0x25fdd6 = 0x1; _0x22c1d4 >= 0xa; _0x22c1d4 /= 0xa,
                                                       _0x25fdd6++)
                                                       ;
                                                  _0x58d83a != _0x25fdd6 && (_0xeb633f['e']++,
                                                       _0x2f9a8e[0x0] == _0x35f69a && (_0x2f9a8e[0x0] = 0x1));
                                                  break;
                                             }
                                             if (_0x2f9a8e[_0x2cb4b0] += _0x25fdd6,
                                                  _0x2f9a8e[_0x2cb4b0] != _0x35f69a)
                                                  break;
                                             _0x2f9a8e[_0x2cb4b0--] = 0x0,
                                                  _0x25fdd6 = 0x1;
                                        }
                                   for (_0x58d83a = _0x2f9a8e[_0x39f4a5(0x72b)]; 0x0 === _0x2f9a8e[--_0x58d83a]; _0x2f9a8e[_0x39f4a5(0x82c)]())
                                        ;
                              }
                              _0xeb633f['e'] > _0x158464 ? _0xeb633f['c'] = _0xeb633f['e'] = null : _0xeb633f['e'] < _0x3bc4c3 && (_0xeb633f['c'] = [_0xeb633f['e'] = 0x0]);
                         }
                         return _0xeb633f;
                    }
                    function _0x4ba720(_0x59abed) {
                         const _0xee1dd7 = _0x6e2977;
                         var _0x302743, _0x5ee309 = _0x59abed['e'];
                         return null === _0x5ee309 ? _0x59abed[_0xee1dd7(0x892)]() : (_0x302743 = _0x60ec0(_0x59abed['c']),
                              _0x302743 = _0x5ee309 <= _0x297614 || _0x5ee309 >= _0x24d548 ? _0x5a57e4(_0x302743, _0x5ee309) : _0x1da452(_0x302743, _0x5ee309, '0'),
                              _0x59abed['s'] < 0x0 ? '-' + _0x302743 : _0x302743);
                    }
                    return _0x204f73['clone'] = _0x3d28d7,
                         _0x204f73[_0x6e2977(0x8d2)] = 0x0,
                         _0x204f73['ROUND_DOWN'] = 0x1,
                         _0x204f73['ROUND_CEIL'] = 0x2,
                         _0x204f73[_0x6e2977(0xc3a)] = 0x3,
                         _0x204f73['ROUND_HALF_UP'] = 0x4,
                         _0x204f73[_0x6e2977(0xd64)] = 0x5,
                         _0x204f73[_0x6e2977(0x401)] = 0x6,
                         _0x204f73[_0x6e2977(0x963)] = 0x7,
                         _0x204f73[_0x6e2977(0xb7e)] = 0x8,
                         _0x204f73[_0x6e2977(0x40b)] = 0x9,
                         _0x204f73[_0x6e2977(0x799)] = _0x204f73[_0x6e2977(0x320)] = function (_0x1e4f23) {
                              const _0xe29529 = _0x6e2977;
                              var _0x11e4fb, _0x307cc;
                              if (null != _0x1e4f23) {
                                   if (_0xe29529(0xb70) != typeof _0x1e4f23)
                                        throw Error(_0x4eba29 + _0xe29529(0x8fd) + _0x1e4f23);
                                   if (_0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = _0xe29529(0x911)) && (_0x1ce3da(_0x307cc = _0x1e4f23[_0x11e4fb], 0x0, _0x160e00, _0x11e4fb),
                                        _0x5181df = _0x307cc),
                                        _0x1e4f23['hasOwnProperty'](_0x11e4fb = 'ROUNDING_MODE') && (_0x1ce3da(_0x307cc = _0x1e4f23[_0x11e4fb], 0x0, 0x8, _0x11e4fb),
                                             _0x16e892 = _0x307cc),
                                        _0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = 'EXPONENTIAL_AT') && ((_0x307cc = _0x1e4f23[_0x11e4fb]) && _0x307cc['pop'] ? (_0x1ce3da(_0x307cc[0x0], -_0x160e00, 0x0, _0x11e4fb),
                                             _0x1ce3da(_0x307cc[0x1], 0x0, _0x160e00, _0x11e4fb),
                                             _0x297614 = _0x307cc[0x0],
                                             _0x24d548 = _0x307cc[0x1]) : (_0x1ce3da(_0x307cc, -_0x160e00, _0x160e00, _0x11e4fb),
                                                  _0x297614 = -(_0x24d548 = _0x307cc < 0x0 ? -_0x307cc : _0x307cc))),
                                        _0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = _0xe29529(0x92a))) {
                                        if ((_0x307cc = _0x1e4f23[_0x11e4fb]) && _0x307cc['pop'])
                                             _0x1ce3da(_0x307cc[0x0], -_0x160e00, -0x1, _0x11e4fb),
                                                  _0x1ce3da(_0x307cc[0x1], 0x1, _0x160e00, _0x11e4fb),
                                                  _0x3bc4c3 = _0x307cc[0x0],
                                                  _0x158464 = _0x307cc[0x1];
                                        else {
                                             if (_0x1ce3da(_0x307cc, -_0x160e00, _0x160e00, _0x11e4fb),
                                                  !_0x307cc)
                                                  throw Error(_0x4eba29 + _0x11e4fb + '\x20cannot\x20be\x20zero:\x20' + _0x307cc);
                                             _0x3bc4c3 = -(_0x158464 = _0x307cc < 0x0 ? -_0x307cc : _0x307cc);
                                        }
                                   }
                                   if (_0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = _0xe29529(0x4e0))) {
                                        if ((_0x307cc = _0x1e4f23[_0x11e4fb]) !== !!_0x307cc)
                                             throw Error(_0x4eba29 + _0x11e4fb + _0xe29529(0x423) + _0x307cc);
                                        if (_0x307cc) {
                                             if (_0xe29529(0x211) == typeof crypto || !crypto || !crypto[_0xe29529(0x3cd)] && !crypto[_0xe29529(0x848)])
                                                  throw _0x51da52 = !_0x307cc,
                                                  Error(_0x4eba29 + 'crypto\x20unavailable');
                                             _0x51da52 = _0x307cc;
                                        } else
                                             _0x51da52 = _0x307cc;
                                   }
                                   if (_0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = 'MODULO_MODE') && (_0x1ce3da(_0x307cc = _0x1e4f23[_0x11e4fb], 0x0, 0x9, _0x11e4fb),
                                        _0xdc5fd9 = _0x307cc),
                                        _0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = _0xe29529(0x9ab)) && (_0x1ce3da(_0x307cc = _0x1e4f23[_0x11e4fb], 0x0, _0x160e00, _0x11e4fb),
                                             _0x5baa7c = _0x307cc),
                                        _0x1e4f23['hasOwnProperty'](_0x11e4fb = _0xe29529(0x38f))) {
                                        if (_0xe29529(0xb70) != typeof (_0x307cc = _0x1e4f23[_0x11e4fb]))
                                             throw Error(_0x4eba29 + _0x11e4fb + '\x20not\x20an\x20object:\x20' + _0x307cc);
                                        _0x2f64f9 = _0x307cc;
                                   }
                                   if (_0x1e4f23[_0xe29529(0x6e8)](_0x11e4fb = _0xe29529(0xd2b))) {
                                        if (_0xe29529(0x379) != typeof (_0x307cc = _0x1e4f23[_0x11e4fb]) || /^.$|[+-.\s]|(.).*\1/[_0xe29529(0xbd5)](_0x307cc))
                                             throw Error(_0x4eba29 + _0x11e4fb + '\x20invalid:\x20' + _0x307cc);
                                        _0x429d54 = _0x307cc;
                                   }
                              }
                              return {
                                   'DECIMAL_PLACES': _0x5181df,
                                   'ROUNDING_MODE': _0x16e892,
                                   'EXPONENTIAL_AT': [_0x297614, _0x24d548],
                                   'RANGE': [_0x3bc4c3, _0x158464],
                                   'CRYPTO': _0x51da52,
                                   'MODULO_MODE': _0xdc5fd9,
                                   'POW_PRECISION': _0x5baa7c,
                                   'FORMAT': _0x2f64f9,
                                   'ALPHABET': _0x429d54
                              };
                         }
                         ,
                         _0x204f73[_0x6e2977(0xbc2)] = function (_0x5e953f) {
                              const _0x6b37a6 = _0x6e2977;
                              if (!_0x5e953f || !0x0 !== _0x5e953f['_isBigNumber'])
                                   return !0x1;
                              if (!_0x204f73[_0x6b37a6(0x93c)])
                                   return !0x0;
                              var _0x1c34b5, _0x26c4ee, _0x39e8d8 = _0x5e953f['c'], _0x2267a2 = _0x5e953f['e'], _0x346835 = _0x5e953f['s'];
                              _0x2040e4: if (_0x6b37a6(0x8da) == {}[_0x6b37a6(0x892)]['call'](_0x39e8d8)) {
                                   if ((0x1 === _0x346835 || -0x1 === _0x346835) && _0x2267a2 >= -_0x160e00 && _0x2267a2 <= _0x160e00 && _0x2267a2 === _0x59b56c(_0x2267a2)) {
                                        if (0x0 === _0x39e8d8[0x0]) {
                                             if (0x0 === _0x2267a2 && 0x1 === _0x39e8d8[_0x6b37a6(0x72b)])
                                                  return !0x0;
                                             break _0x2040e4;
                                        }
                                        if ((_0x1c34b5 = (_0x2267a2 + 0x1) % _0x52b792) < 0x1 && (_0x1c34b5 += _0x52b792),
                                             String(_0x39e8d8[0x0])[_0x6b37a6(0x72b)] == _0x1c34b5) {
                                             for (_0x1c34b5 = 0x0; _0x1c34b5 < _0x39e8d8[_0x6b37a6(0x72b)]; _0x1c34b5++)
                                                  if ((_0x26c4ee = _0x39e8d8[_0x1c34b5]) < 0x0 || _0x26c4ee >= _0x35f69a || _0x26c4ee !== _0x59b56c(_0x26c4ee))
                                                       break _0x2040e4;
                                             if (0x0 !== _0x26c4ee)
                                                  return !0x0;
                                        }
                                   }
                              } else {
                                   if (null === _0x39e8d8 && null === _0x2267a2 && (null === _0x346835 || 0x1 === _0x346835 || -0x1 === _0x346835))
                                        return !0x0;
                              }
                              throw Error(_0x4eba29 + 'Invalid\x20BigNumber:\x20' + _0x5e953f);
                         }
                         ,
                         _0x204f73[_0x6e2977(0x91f)] = _0x204f73['max'] = function () {
                              return _0x25ff76(arguments, _0x410cca['lt']);
                         }
                         ,
                         _0x204f73['minimum'] = _0x204f73[_0x6e2977(0x455)] = function () {
                              return _0x25ff76(arguments, _0x410cca['gt']);
                         }
                         ,
                         _0x204f73['random'] = (_0xb2c0c9 = 0x20000000000000,
                              _0x2c8304 = Math['random']() * _0xb2c0c9 & 0x1fffff ? function () {
                                   const _0x292c81 = _0x6e2977;
                                   return _0x59b56c(Math[_0x292c81(0x66e)]() * _0xb2c0c9);
                              }
                                   : function () {
                                        const _0x1d2854 = _0x6e2977;
                                        return 0x800000 * (0x40000000 * Math[_0x1d2854(0x66e)]() | 0x0) + (0x800000 * Math[_0x1d2854(0x66e)]() | 0x0);
                                   }
                              ,
                              function (_0x3464a8) {
                                   const _0x3c299e = _0x6e2977;
                                   var _0x22696b, _0x2d142a, _0x1d330d, _0xa712b2, _0x4c46ac, _0x396b88 = 0x0, _0x262ee2 = [], _0x2e85db = new _0x204f73(_0x1c773d);
                                   if (null == _0x3464a8 ? _0x3464a8 = _0x5181df : _0x1ce3da(_0x3464a8, 0x0, _0x160e00),
                                        _0xa712b2 = _0x4bc2ea(_0x3464a8 / _0x52b792),
                                        _0x51da52) {
                                        if (crypto[_0x3c299e(0x3cd)]) {
                                             for (_0x22696b = crypto['getRandomValues'](new Uint32Array(_0xa712b2 *= 0x2)); _0x396b88 < _0xa712b2;)
                                                  (_0x4c46ac = 0x20000 * _0x22696b[_0x396b88] + (_0x22696b[_0x396b88 + 0x1] >>> 0xb)) >= 0x1ff973cafa8000 ? (_0x2d142a = crypto[_0x3c299e(0x3cd)](new Uint32Array(0x2)),
                                                       _0x22696b[_0x396b88] = _0x2d142a[0x0],
                                                       _0x22696b[_0x396b88 + 0x1] = _0x2d142a[0x1]) : (_0x262ee2['push'](_0x4c46ac % 0x5af3107a4000),
                                                            _0x396b88 += 0x2);
                                             _0x396b88 = _0xa712b2 / 0x2;
                                        } else {
                                             if (!crypto['randomBytes'])
                                                  throw _0x51da52 = !0x1,
                                                  Error(_0x4eba29 + _0x3c299e(0xc9a));
                                             for (_0x22696b = crypto[_0x3c299e(0x848)](_0xa712b2 *= 0x7); _0x396b88 < _0xa712b2;)
                                                  (_0x4c46ac = 0x1000000000000 * (0x1f & _0x22696b[_0x396b88]) + 0x10000000000 * _0x22696b[_0x396b88 + 0x1] + 0x100000000 * _0x22696b[_0x396b88 + 0x2] + 0x1000000 * _0x22696b[_0x396b88 + 0x3] + (_0x22696b[_0x396b88 + 0x4] << 0x10) + (_0x22696b[_0x396b88 + 0x5] << 0x8) + _0x22696b[_0x396b88 + 0x6]) >= 0x1ff973cafa8000 ? crypto['randomBytes'](0x7)['copy'](_0x22696b, _0x396b88) : (_0x262ee2['push'](_0x4c46ac % 0x5af3107a4000),
                                                       _0x396b88 += 0x7);
                                             _0x396b88 = _0xa712b2 / 0x7;
                                        }
                                   }
                                   if (!_0x51da52) {
                                        for (; _0x396b88 < _0xa712b2;)
                                             (_0x4c46ac = _0x2c8304()) < 0x1ff973cafa8000 && (_0x262ee2[_0x396b88++] = _0x4c46ac % 0x5af3107a4000);
                                   }
                                   for (_0xa712b2 = _0x262ee2[--_0x396b88],
                                        _0x3464a8 %= _0x52b792,
                                        _0xa712b2 && _0x3464a8 && (_0x4c46ac = _0x5dc8f3[_0x52b792 - _0x3464a8],
                                             _0x262ee2[_0x396b88] = _0x59b56c(_0xa712b2 / _0x4c46ac) * _0x4c46ac); 0x0 === _0x262ee2[_0x396b88]; _0x262ee2['pop'](),
                                        _0x396b88--)
                                        ;
                                   if (_0x396b88 < 0x0)
                                        _0x262ee2 = [_0x1d330d = 0x0];
                                   else {
                                        for (_0x1d330d = -0x1; 0x0 === _0x262ee2[0x0]; _0x262ee2['splice'](0x0, 0x1),
                                             _0x1d330d -= _0x52b792)
                                             ;
                                        for (_0x396b88 = 0x1,
                                             _0x4c46ac = _0x262ee2[0x0]; _0x4c46ac >= 0xa; _0x4c46ac /= 0xa,
                                             _0x396b88++)
                                             ;
                                        _0x396b88 < _0x52b792 && (_0x1d330d -= _0x52b792 - _0x396b88);
                                   }
                                   return _0x2e85db['e'] = _0x1d330d,
                                        _0x2e85db['c'] = _0x262ee2,
                                        _0x2e85db;
                              }
                         ),
                         _0x204f73[_0x6e2977(0x74c)] = function () {
                              const _0xbc924c = _0x6e2977;
                              for (var _0x284f4e = 0x1, _0x25bdd3 = arguments, _0x21bf0f = new _0x204f73(_0x25bdd3[0x0]); _0x284f4e < _0x25bdd3[_0xbc924c(0x72b)];)
                                   _0x21bf0f = _0x21bf0f['plus'](_0x25bdd3[_0x284f4e++]);
                              return _0x21bf0f;
                         }
                         ,
                         _0x2a6471 = function () {
                              const _0x1971de = _0x6e2977;
                              var _0x94f121 = _0x1971de(0x5d9);
                              function _0x5e7175(_0x100047, _0x5a7aef, _0x5c3d74, _0x205760) {
                                   const _0x15ab7f = _0x1971de;
                                   for (var _0xb1e7cf, _0x12957a, _0x426e58 = [0x0], _0x538483 = 0x0, _0x543665 = _0x100047[_0x15ab7f(0x72b)]; _0x538483 < _0x543665;) {
                                        for (_0x12957a = _0x426e58['length']; _0x12957a--; _0x426e58[_0x12957a] *= _0x5a7aef)
                                             ;
                                        for (_0x426e58[0x0] += _0x205760[_0x15ab7f(0xcef)](_0x100047[_0x15ab7f(0x318)](_0x538483++)),
                                             _0xb1e7cf = 0x0; _0xb1e7cf < _0x426e58['length']; _0xb1e7cf++)
                                             _0x426e58[_0xb1e7cf] > _0x5c3d74 - 0x1 && (null == _0x426e58[_0xb1e7cf + 0x1] && (_0x426e58[_0xb1e7cf + 0x1] = 0x0),
                                                  _0x426e58[_0xb1e7cf + 0x1] += _0x426e58[_0xb1e7cf] / _0x5c3d74 | 0x0,
                                                  _0x426e58[_0xb1e7cf] %= _0x5c3d74);
                                   }
                                   return _0x426e58[_0x15ab7f(0xd24)]();
                              }
                              return function (_0x477043, _0x3d780b, _0x13b1c5, _0x40b3c5, _0x7183bb) {
                                   const _0x439fb7 = _0x1971de;
                                   var _0x49902e, _0x27f823, _0x5684db, _0x8ab754, _0x133899, _0x2d9efe, _0x5e8374, _0x130d4e, _0x22b820 = _0x477043[_0x439fb7(0xcef)]('.'), _0x4f4711 = _0x5181df, _0x209138 = _0x16e892;
                                   for (_0x22b820 >= 0x0 && (_0x8ab754 = _0x5baa7c,
                                        _0x5baa7c = 0x0,
                                        _0x477043 = _0x477043[_0x439fb7(0x6c0)]('.', ''),
                                        _0x2d9efe = (_0x130d4e = new _0x204f73(_0x3d780b))[_0x439fb7(0xd18)](_0x477043[_0x439fb7(0x72b)] - _0x22b820),
                                        _0x5baa7c = _0x8ab754,
                                        _0x130d4e['c'] = _0x5e7175(_0x1da452(_0x60ec0(_0x2d9efe['c']), _0x2d9efe['e'], '0'), 0xa, _0x13b1c5, _0x94f121),
                                        _0x130d4e['e'] = _0x130d4e['c'][_0x439fb7(0x72b)]),
                                        _0x5684db = _0x8ab754 = (_0x5e8374 = _0x5e7175(_0x477043, _0x3d780b, _0x13b1c5, _0x7183bb ? (_0x49902e = _0x429d54,
                                             _0x94f121) : (_0x49902e = _0x94f121,
                                                  _0x429d54)))['length']; 0x0 == _0x5e8374[--_0x8ab754]; _0x5e8374['pop']())
                                        ;
                                   if (!_0x5e8374[0x0])
                                        return _0x49902e[_0x439fb7(0x318)](0x0);
                                   if (_0x22b820 < 0x0 ? --_0x5684db : (_0x2d9efe['c'] = _0x5e8374,
                                        _0x2d9efe['e'] = _0x5684db,
                                        _0x2d9efe['s'] = _0x40b3c5,
                                        _0x5e8374 = (_0x2d9efe = _0x395c39(_0x2d9efe, _0x130d4e, _0x4f4711, _0x209138, _0x13b1c5))['c'],
                                        _0x133899 = _0x2d9efe['r'],
                                        _0x5684db = _0x2d9efe['e']),
                                        _0x22b820 = _0x5e8374[_0x27f823 = _0x5684db + _0x4f4711 + 0x1],
                                        _0x8ab754 = _0x13b1c5 / 0x2,
                                        _0x133899 = _0x133899 || _0x27f823 < 0x0 || null != _0x5e8374[_0x27f823 + 0x1],
                                        _0x133899 = _0x209138 < 0x4 ? (null != _0x22b820 || _0x133899) && (0x0 == _0x209138 || _0x209138 == (_0x2d9efe['s'] < 0x0 ? 0x3 : 0x2)) : _0x22b820 > _0x8ab754 || _0x22b820 == _0x8ab754 && (0x4 == _0x209138 || _0x133899 || 0x6 == _0x209138 && 0x1 & _0x5e8374[_0x27f823 - 0x1] || _0x209138 == (_0x2d9efe['s'] < 0x0 ? 0x8 : 0x7)),
                                        _0x27f823 < 0x1 || !_0x5e8374[0x0])
                                        _0x477043 = _0x133899 ? _0x1da452(_0x49902e[_0x439fb7(0x318)](0x1), -_0x4f4711, _0x49902e[_0x439fb7(0x318)](0x0)) : _0x49902e[_0x439fb7(0x318)](0x0);
                                   else {
                                        if (_0x5e8374[_0x439fb7(0x72b)] = _0x27f823,
                                             _0x133899) {
                                             for (--_0x13b1c5; ++_0x5e8374[--_0x27f823] > _0x13b1c5;)
                                                  _0x5e8374[_0x27f823] = 0x0,
                                                       _0x27f823 || (++_0x5684db,
                                                            _0x5e8374 = [0x1][_0x439fb7(0x77e)](_0x5e8374));
                                        }
                                        for (_0x8ab754 = _0x5e8374[_0x439fb7(0x72b)]; !_0x5e8374[--_0x8ab754];)
                                             ;
                                        for (_0x22b820 = 0x0,
                                             _0x477043 = ''; _0x22b820 <= _0x8ab754; _0x477043 += _0x49902e[_0x439fb7(0x318)](_0x5e8374[_0x22b820++]))
                                             ;
                                        _0x477043 = _0x1da452(_0x477043, _0x5684db, _0x49902e[_0x439fb7(0x318)](0x0));
                                   }
                                   return _0x477043;
                              }
                                   ;
                         }(),
                         _0x395c39 = function () {
                              function _0xd5591c(_0x477ff4, _0x340510, _0x50394e) {
                                   const _0x52f928 = _0x5e91;
                                   var _0x2d58d5, _0x5e2d86, _0x4c799b, _0x53e9d8, _0x3b5ff2 = 0x0, _0x74e1a1 = _0x477ff4[_0x52f928(0x72b)], _0x1896f2 = _0x340510 % _0x388840, _0x5bf80b = _0x340510 / _0x388840 | 0x0;
                                   for (_0x477ff4 = _0x477ff4[_0x52f928(0x21c)](); _0x74e1a1--;)
                                        _0x3b5ff2 = ((_0x5e2d86 = _0x1896f2 * (_0x4c799b = _0x477ff4[_0x74e1a1] % _0x388840) + (_0x2d58d5 = _0x5bf80b * _0x4c799b + (_0x53e9d8 = _0x477ff4[_0x74e1a1] / _0x388840 | 0x0) * _0x1896f2) % _0x388840 * _0x388840 + _0x3b5ff2) / _0x50394e | 0x0) + (_0x2d58d5 / _0x388840 | 0x0) + _0x5bf80b * _0x53e9d8,
                                             _0x477ff4[_0x74e1a1] = _0x5e2d86 % _0x50394e;
                                   return _0x3b5ff2 && (_0x477ff4 = [_0x3b5ff2]['concat'](_0x477ff4)),
                                        _0x477ff4;
                              }
                              function _0x215998(_0x3f60fe, _0x217455, _0x4485b2, _0x15a2d7) {
                                   var _0x1186fd, _0x52cd40;
                                   if (_0x4485b2 != _0x15a2d7)
                                        _0x52cd40 = _0x4485b2 > _0x15a2d7 ? 0x1 : -0x1;
                                   else {
                                        for (_0x1186fd = _0x52cd40 = 0x0; _0x1186fd < _0x4485b2; _0x1186fd++)
                                             if (_0x3f60fe[_0x1186fd] != _0x217455[_0x1186fd]) {
                                                  _0x52cd40 = _0x3f60fe[_0x1186fd] > _0x217455[_0x1186fd] ? 0x1 : -0x1;
                                                  break;
                                             }
                                   }
                                   return _0x52cd40;
                              }
                              function _0xe34b9f(_0x3f685a, _0x31b9af, _0x206040, _0x354581) {
                                   const _0x410a36 = _0x5e91;
                                   for (var _0x2bcbe5 = 0x0; _0x206040--;)
                                        _0x3f685a[_0x206040] -= _0x2bcbe5,
                                             _0x2bcbe5 = _0x3f685a[_0x206040] < _0x31b9af[_0x206040] ? 0x1 : 0x0,
                                             _0x3f685a[_0x206040] = _0x2bcbe5 * _0x354581 + _0x3f685a[_0x206040] - _0x31b9af[_0x206040];
                                   for (; !_0x3f685a[0x0] && _0x3f685a[_0x410a36(0x72b)] > 0x1; _0x3f685a[_0x410a36(0x3d3)](0x0, 0x1))
                                        ;
                              }
                              return function (_0x4c51a9, _0x2cb35b, _0x3b89e5, _0x1c39ff, _0xa805a8) {
                                   const _0x1b9525 = _0x5e91;
                                   var _0x2b701b, _0x3f5fea, _0x71b49b, _0x31c171, _0x2c82e4, _0x44b3ed, _0x3f0be4, _0x19fdaf, _0x3218f0, _0x30b92c, _0x5502c9, _0xfed3a5, _0x36a9e2, _0x3d98a0, _0x573551, _0x59398d, _0x1eaa96, _0x53184d = _0x4c51a9['s'] == _0x2cb35b['s'] ? 0x1 : -0x1, _0x26ad7b = _0x4c51a9['c'], _0x38ae41 = _0x2cb35b['c'];
                                   if (!(_0x26ad7b && _0x26ad7b[0x0] && _0x38ae41 && _0x38ae41[0x0]))
                                        return new _0x204f73(_0x4c51a9['s'] && _0x2cb35b['s'] && (_0x26ad7b ? !_0x38ae41 || _0x26ad7b[0x0] != _0x38ae41[0x0] : _0x38ae41) ? _0x26ad7b && 0x0 == _0x26ad7b[0x0] || !_0x38ae41 ? 0x0 * _0x53184d : _0x53184d / 0x0 : NaN);
                                   for (_0x3218f0 = (_0x19fdaf = new _0x204f73(_0x53184d))['c'] = [],
                                        _0x53184d = _0x3b89e5 + (_0x3f5fea = _0x4c51a9['e'] - _0x2cb35b['e']) + 0x1,
                                        _0xa805a8 || (_0xa805a8 = _0x35f69a,
                                             _0x3f5fea = _0x891e14(_0x4c51a9['e'] / _0x52b792) - _0x891e14(_0x2cb35b['e'] / _0x52b792),
                                             _0x53184d = _0x53184d / _0x52b792 | 0x0),
                                        _0x71b49b = 0x0; _0x38ae41[_0x71b49b] == (_0x26ad7b[_0x71b49b] || 0x0); _0x71b49b++)
                                        ;
                                   if (_0x38ae41[_0x71b49b] > (_0x26ad7b[_0x71b49b] || 0x0) && _0x3f5fea--,
                                        _0x53184d < 0x0)
                                        _0x3218f0[_0x1b9525(0x63e)](0x1),
                                             _0x31c171 = !0x0;
                                   else {
                                        for (_0x3d98a0 = _0x26ad7b['length'],
                                             _0x59398d = _0x38ae41[_0x1b9525(0x72b)],
                                             _0x71b49b = 0x0,
                                             _0x53184d += 0x2,
                                             (_0x2c82e4 = _0x59b56c(_0xa805a8 / (_0x38ae41[0x0] + 0x1))) > 0x1 && (_0x38ae41 = _0xd5591c(_0x38ae41, _0x2c82e4, _0xa805a8),
                                                  _0x26ad7b = _0xd5591c(_0x26ad7b, _0x2c82e4, _0xa805a8),
                                                  _0x59398d = _0x38ae41[_0x1b9525(0x72b)],
                                                  _0x3d98a0 = _0x26ad7b[_0x1b9525(0x72b)]),
                                             _0x36a9e2 = _0x59398d,
                                             _0x5502c9 = (_0x30b92c = _0x26ad7b[_0x1b9525(0x21c)](0x0, _0x59398d))[_0x1b9525(0x72b)]; _0x5502c9 < _0x59398d; _0x30b92c[_0x5502c9++] = 0x0)
                                             ;
                                        _0x1eaa96 = _0x38ae41['slice'](),
                                             _0x1eaa96 = [0x0][_0x1b9525(0x77e)](_0x1eaa96),
                                             _0x573551 = _0x38ae41[0x0],
                                             _0x38ae41[0x1] >= _0xa805a8 / 0x2 && _0x573551++;
                                        do {
                                             if (_0x2c82e4 = 0x0,
                                                  (_0x2b701b = _0x215998(_0x38ae41, _0x30b92c, _0x59398d, _0x5502c9)) < 0x0) {
                                                  if (_0xfed3a5 = _0x30b92c[0x0],
                                                       _0x59398d != _0x5502c9 && (_0xfed3a5 = _0xfed3a5 * _0xa805a8 + (_0x30b92c[0x1] || 0x0)),
                                                       (_0x2c82e4 = _0x59b56c(_0xfed3a5 / _0x573551)) > 0x1) {
                                                       for (_0x2c82e4 >= _0xa805a8 && (_0x2c82e4 = _0xa805a8 - 0x1),
                                                            _0x3f0be4 = (_0x44b3ed = _0xd5591c(_0x38ae41, _0x2c82e4, _0xa805a8))[_0x1b9525(0x72b)],
                                                            _0x5502c9 = _0x30b92c[_0x1b9525(0x72b)]; 0x1 == _0x215998(_0x44b3ed, _0x30b92c, _0x3f0be4, _0x5502c9);)
                                                            _0x2c82e4--,
                                                                 _0xe34b9f(_0x44b3ed, _0x59398d < _0x3f0be4 ? _0x1eaa96 : _0x38ae41, _0x3f0be4, _0xa805a8),
                                                                 _0x3f0be4 = _0x44b3ed['length'],
                                                                 _0x2b701b = 0x1;
                                                  } else
                                                       0x0 == _0x2c82e4 && (_0x2b701b = _0x2c82e4 = 0x1),
                                                            _0x3f0be4 = (_0x44b3ed = _0x38ae41['slice']())[_0x1b9525(0x72b)];
                                                  if (_0x3f0be4 < _0x5502c9 && (_0x44b3ed = [0x0][_0x1b9525(0x77e)](_0x44b3ed)),
                                                       _0xe34b9f(_0x30b92c, _0x44b3ed, _0x5502c9, _0xa805a8),
                                                       _0x5502c9 = _0x30b92c['length'],
                                                       -0x1 == _0x2b701b) {
                                                       for (; _0x215998(_0x38ae41, _0x30b92c, _0x59398d, _0x5502c9) < 0x1;)
                                                            _0x2c82e4++,
                                                                 _0xe34b9f(_0x30b92c, _0x59398d < _0x5502c9 ? _0x1eaa96 : _0x38ae41, _0x5502c9, _0xa805a8),
                                                                 _0x5502c9 = _0x30b92c[_0x1b9525(0x72b)];
                                                  }
                                             } else
                                                  0x0 === _0x2b701b && (_0x2c82e4++,
                                                       _0x30b92c = [0x0]);
                                             _0x3218f0[_0x71b49b++] = _0x2c82e4,
                                                  _0x30b92c[0x0] ? _0x30b92c[_0x5502c9++] = _0x26ad7b[_0x36a9e2] || 0x0 : (_0x30b92c = [_0x26ad7b[_0x36a9e2]],
                                                       _0x5502c9 = 0x1);
                                        } while ((_0x36a9e2++ < _0x3d98a0 || null != _0x30b92c[0x0]) && _0x53184d--);
                                        _0x31c171 = null != _0x30b92c[0x0],
                                             _0x3218f0[0x0] || _0x3218f0[_0x1b9525(0x3d3)](0x0, 0x1);
                                   }
                                   if (_0xa805a8 == _0x35f69a) {
                                        for (_0x71b49b = 0x1,
                                             _0x53184d = _0x3218f0[0x0]; _0x53184d >= 0xa; _0x53184d /= 0xa,
                                             _0x71b49b++)
                                             ;
                                        _0x4b2541(_0x19fdaf, _0x3b89e5 + (_0x19fdaf['e'] = _0x71b49b + _0x3f5fea * _0x52b792 - 0x1) + 0x1, _0x1c39ff, _0x31c171);
                                   } else
                                        _0x19fdaf['e'] = _0x3f5fea,
                                             _0x19fdaf['r'] = +_0x31c171;
                                   return _0x19fdaf;
                              }
                                   ;
                         }(),
                         _0x55ad3f = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                         _0x12e58a = /^([^.]+)\.$/,
                         _0x7ef42e = /^\.([^.]+)$/,
                         _0x356390 = /^-?(Infinity|NaN)$/,
                         _0x34ce0c = /^\s*\+(?=[\w.])|^\s+|\s+$/g,
                         _0x36e6be = function (_0x3ca13e, _0x3438b8, _0x33d591, _0x1b1ff7) {
                              const _0x1ad430 = _0x6e2977;
                              var _0x33ab30, _0x28ef7b = _0x33d591 ? _0x3438b8 : _0x3438b8[_0x1ad430(0x6c0)](_0x34ce0c, '');
                              if (_0x356390[_0x1ad430(0xbd5)](_0x28ef7b))
                                   _0x3ca13e['s'] = isNaN(_0x28ef7b) ? null : _0x28ef7b < 0x0 ? -0x1 : 0x1;
                              else {
                                   if (!_0x33d591 && (_0x28ef7b = _0x28ef7b[_0x1ad430(0x6c0)](_0x55ad3f, function (_0x2ddc28, _0x124fcd, _0x196c88) {
                                        return _0x33ab30 = 'x' == (_0x196c88 = _0x196c88['toLowerCase']()) ? 0x10 : 'b' == _0x196c88 ? 0x2 : 0x8,
                                             _0x1b1ff7 && _0x1b1ff7 != _0x33ab30 ? _0x2ddc28 : _0x124fcd;
                                   }),
                                        _0x1b1ff7 && (_0x33ab30 = _0x1b1ff7,
                                             _0x28ef7b = _0x28ef7b[_0x1ad430(0x6c0)](_0x12e58a, '$1')[_0x1ad430(0x6c0)](_0x7ef42e, _0x1ad430(0xa34))),
                                        _0x3438b8 != _0x28ef7b))
                                        return new _0x204f73(_0x28ef7b, _0x33ab30);
                                   if (_0x204f73[_0x1ad430(0x93c)])
                                        throw Error(_0x4eba29 + 'Not\x20a' + (_0x1b1ff7 ? _0x1ad430(0x82d) + _0x1b1ff7 : '') + '\x20number:\x20' + _0x3438b8);
                                   _0x3ca13e['s'] = null;
                              }
                              _0x3ca13e['c'] = _0x3ca13e['e'] = null;
                         }
                         ,
                         _0x410cca[_0x6e2977(0xc4a)] = _0x410cca[_0x6e2977(0xbd6)] = function () {
                              var _0x37750d = new _0x204f73(this);
                              return _0x37750d['s'] < 0x0 && (_0x37750d['s'] = 0x1),
                                   _0x37750d;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x9f4)] = function (_0x24ef65, _0x4b44bd) {
                              return _0x287c96(this, new _0x204f73(_0x24ef65, _0x4b44bd));
                         }
                         ,
                         _0x410cca[_0x6e2977(0x25f)] = _0x410cca['dp'] = function (_0x5ded70, _0x746aa5) {
                              var _0x2d350c, _0x57f761, _0x39f242, _0x1f553f = this;
                              if (null != _0x5ded70)
                                   return _0x1ce3da(_0x5ded70, 0x0, _0x160e00),
                                        null == _0x746aa5 ? _0x746aa5 = _0x16e892 : _0x1ce3da(_0x746aa5, 0x0, 0x8),
                                        _0x4b2541(new _0x204f73(_0x1f553f), _0x5ded70 + _0x1f553f['e'] + 0x1, _0x746aa5);
                              if (!(_0x2d350c = _0x1f553f['c']))
                                   return null;
                              if (_0x57f761 = ((_0x39f242 = _0x2d350c['length'] - 0x1) - _0x891e14(this['e'] / _0x52b792)) * _0x52b792,
                                   _0x39f242 = _0x2d350c[_0x39f242]) {
                                   for (; _0x39f242 % 0xa == 0x0; _0x39f242 /= 0xa,
                                        _0x57f761--)
                                        ;
                              }
                              return _0x57f761 < 0x0 && (_0x57f761 = 0x0),
                                   _0x57f761;
                         }
                         ,
                         _0x410cca[_0x6e2977(0xa74)] = _0x410cca[_0x6e2977(0x9e8)] = function (_0x2ab0a5, _0x4fb8ea) {
                              return _0x395c39(this, new _0x204f73(_0x2ab0a5, _0x4fb8ea), _0x5181df, _0x16e892);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x5f1)] = _0x410cca[_0x6e2977(0x6f2)] = function (_0xc4a468, _0x2ee61b) {
                              return _0x395c39(this, new _0x204f73(_0xc4a468, _0x2ee61b), 0x0, 0x1);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xa33)] = _0x410cca['pow'] = function (_0x2c2179, _0x2e5dc8) {
                              const _0x72df7b = _0x6e2977;
                              var _0x819ec1, _0x261a6c, _0x50038c, _0x58c49d, _0x1e7092, _0x5b08eb, _0x5f42e1, _0x543b67, _0x2440e8 = this;
                              if ((_0x2c2179 = new _0x204f73(_0x2c2179))['c'] && !_0x2c2179[_0x72df7b(0x4b7)]())
                                   throw Error(_0x4eba29 + _0x72df7b(0x470) + _0x4ba720(_0x2c2179));
                              if (null != _0x2e5dc8 && (_0x2e5dc8 = new _0x204f73(_0x2e5dc8)),
                                   _0x1e7092 = _0x2c2179['e'] > 0xe,
                                   !_0x2440e8['c'] || !_0x2440e8['c'][0x0] || 0x1 == _0x2440e8['c'][0x0] && !_0x2440e8['e'] && 0x1 == _0x2440e8['c']['length'] || !_0x2c2179['c'] || !_0x2c2179['c'][0x0])
                                   return _0x543b67 = new _0x204f73(Math[_0x72df7b(0xd18)](+_0x4ba720(_0x2440e8), _0x1e7092 ? 0x2 - _0x45466e(_0x2c2179) : +_0x4ba720(_0x2c2179))),
                                        _0x2e5dc8 ? _0x543b67[_0x72df7b(0x40e)](_0x2e5dc8) : _0x543b67;
                              if (_0x5b08eb = _0x2c2179['s'] < 0x0,
                                   _0x2e5dc8) {
                                   if (_0x2e5dc8['c'] ? !_0x2e5dc8['c'][0x0] : !_0x2e5dc8['s'])
                                        return new _0x204f73(NaN);
                                   (_0x261a6c = !_0x5b08eb && _0x2440e8[_0x72df7b(0x4b7)]() && _0x2e5dc8[_0x72df7b(0x4b7)]()) && (_0x2440e8 = _0x2440e8[_0x72df7b(0x40e)](_0x2e5dc8));
                              } else {
                                   if (_0x2c2179['e'] > 0x9 && (_0x2440e8['e'] > 0x0 || _0x2440e8['e'] < -0x1 || (0x0 == _0x2440e8['e'] ? _0x2440e8['c'][0x0] > 0x1 || _0x1e7092 && _0x2440e8['c'][0x1] >= 0xe4e1c00 : _0x2440e8['c'][0x0] < 0x48c273950000 || _0x1e7092 && _0x2440e8['c'][0x0] <= 0x5af301938d80)))
                                        return _0x58c49d = _0x2440e8['s'] < 0x0 && _0x45466e(_0x2c2179) ? -0x0 : 0x0,
                                             _0x2440e8['e'] > -0x1 && (_0x58c49d = 0x1 / _0x58c49d),
                                             new _0x204f73(_0x5b08eb ? 0x1 / _0x58c49d : _0x58c49d);
                                   _0x5baa7c && (_0x58c49d = _0x4bc2ea(_0x5baa7c / _0x52b792 + 0x2));
                              }
                              for (_0x1e7092 ? (_0x819ec1 = new _0x204f73(0.5),
                                   _0x5b08eb && (_0x2c2179['s'] = 0x1),
                                   _0x5f42e1 = _0x45466e(_0x2c2179)) : _0x5f42e1 = (_0x50038c = Math[_0x72df7b(0xbd6)](+_0x4ba720(_0x2c2179))) % 0x2,
                                   _0x543b67 = new _0x204f73(_0x1c773d); ;) {
                                   if (_0x5f42e1) {
                                        if (!(_0x543b67 = _0x543b67['times'](_0x2440e8))['c'])
                                             break;
                                        _0x58c49d ? _0x543b67['c'][_0x72df7b(0x72b)] > _0x58c49d && (_0x543b67['c'][_0x72df7b(0x72b)] = _0x58c49d) : _0x261a6c && (_0x543b67 = _0x543b67[_0x72df7b(0x40e)](_0x2e5dc8));
                                   }
                                   if (_0x50038c) {
                                        if (0x0 === (_0x50038c = _0x59b56c(_0x50038c / 0x2)))
                                             break;
                                        _0x5f42e1 = _0x50038c % 0x2;
                                   } else {
                                        if (_0x4b2541(_0x2c2179 = _0x2c2179[_0x72df7b(0xaad)](_0x819ec1), _0x2c2179['e'] + 0x1, 0x1),
                                             _0x2c2179['e'] > 0xe)
                                             _0x5f42e1 = _0x45466e(_0x2c2179);
                                        else {
                                             if (0x0 === (_0x50038c = +_0x4ba720(_0x2c2179)))
                                                  break;
                                             _0x5f42e1 = _0x50038c % 0x2;
                                        }
                                   }
                                   _0x2440e8 = _0x2440e8[_0x72df7b(0xaad)](_0x2440e8),
                                        _0x58c49d ? _0x2440e8['c'] && _0x2440e8['c'][_0x72df7b(0x72b)] > _0x58c49d && (_0x2440e8['c'][_0x72df7b(0x72b)] = _0x58c49d) : _0x261a6c && (_0x2440e8 = _0x2440e8['mod'](_0x2e5dc8));
                              }
                              return _0x261a6c ? _0x543b67 : (_0x5b08eb && (_0x543b67 = _0x1c773d[_0x72df7b(0x9e8)](_0x543b67)),
                                   _0x2e5dc8 ? _0x543b67['mod'](_0x2e5dc8) : _0x58c49d ? _0x4b2541(_0x543b67, _0x5baa7c, _0x16e892, undefined) : _0x543b67);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xc21)] = function (_0x3523b8) {
                              var _0x3cb90c = new _0x204f73(this);
                              return null == _0x3523b8 ? _0x3523b8 = _0x16e892 : _0x1ce3da(_0x3523b8, 0x0, 0x8),
                                   _0x4b2541(_0x3cb90c, _0x3cb90c['e'] + 0x1, _0x3523b8);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xba2)] = _0x410cca['eq'] = function (_0x4f10f4, _0x98b3dd) {
                              return 0x0 === _0x287c96(this, new _0x204f73(_0x4f10f4, _0x98b3dd));
                         }
                         ,
                         _0x410cca[_0x6e2977(0x8c3)] = function () {
                              return !!this['c'];
                         }
                         ,
                         _0x410cca[_0x6e2977(0x243)] = _0x410cca['gt'] = function (_0x222ec8, _0x35701a) {
                              return _0x287c96(this, new _0x204f73(_0x222ec8, _0x35701a)) > 0x0;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x509)] = _0x410cca[_0x6e2977(0x230)] = function (_0x834a37, _0x48c23f) {
                              return 0x1 === (_0x48c23f = _0x287c96(this, new _0x204f73(_0x834a37, _0x48c23f))) || 0x0 === _0x48c23f;
                         }
                         ,
                         _0x410cca['isInteger'] = function () {
                              const _0x317135 = _0x6e2977;
                              return !!this['c'] && _0x891e14(this['e'] / _0x52b792) > this['c'][_0x317135(0x72b)] - 0x2;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x826)] = _0x410cca['lt'] = function (_0x1f0127, _0x2ea631) {
                              return _0x287c96(this, new _0x204f73(_0x1f0127, _0x2ea631)) < 0x0;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x1be)] = _0x410cca[_0x6e2977(0x35a)] = function (_0x3d3969, _0x26a40e) {
                              return -0x1 === (_0x26a40e = _0x287c96(this, new _0x204f73(_0x3d3969, _0x26a40e))) || 0x0 === _0x26a40e;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x2a0)] = function () {
                              return !this['s'];
                         }
                         ,
                         _0x410cca['isNegative'] = function () {
                              return this['s'] < 0x0;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x921)] = function () {
                              return this['s'] > 0x0;
                         }
                         ,
                         _0x410cca['isZero'] = function () {
                              return !!this['c'] && 0x0 == this['c'][0x0];
                         }
                         ,
                         _0x410cca[_0x6e2977(0x639)] = function (_0x9f5027, _0x5812fe) {
                              const _0x351a55 = _0x6e2977;
                              var _0x41ce11, _0x101752, _0x42f4a5, _0x3d13d5, _0x5799ca = this, _0x4b61ae = _0x5799ca['s'];
                              if (_0x5812fe = (_0x9f5027 = new _0x204f73(_0x9f5027, _0x5812fe))['s'],
                                   !_0x4b61ae || !_0x5812fe)
                                   return new _0x204f73(NaN);
                              if (_0x4b61ae != _0x5812fe)
                                   return _0x9f5027['s'] = -_0x5812fe,
                                        _0x5799ca['plus'](_0x9f5027);
                              var _0x21de21 = _0x5799ca['e'] / _0x52b792
                                   , _0x1e6a63 = _0x9f5027['e'] / _0x52b792
                                   , _0x3c24bb = _0x5799ca['c']
                                   , _0x3510b9 = _0x9f5027['c'];
                              if (!_0x21de21 || !_0x1e6a63) {
                                   if (!_0x3c24bb || !_0x3510b9)
                                        return _0x3c24bb ? (_0x9f5027['s'] = -_0x5812fe,
                                             _0x9f5027) : new _0x204f73(_0x3510b9 ? _0x5799ca : NaN);
                                   if (!_0x3c24bb[0x0] || !_0x3510b9[0x0])
                                        return _0x3510b9[0x0] ? (_0x9f5027['s'] = -_0x5812fe,
                                             _0x9f5027) : new _0x204f73(_0x3c24bb[0x0] ? _0x5799ca : 0x3 == _0x16e892 ? -0x0 : 0x0);
                              }
                              if (_0x21de21 = _0x891e14(_0x21de21),
                                   _0x1e6a63 = _0x891e14(_0x1e6a63),
                                   _0x3c24bb = _0x3c24bb[_0x351a55(0x21c)](),
                                   _0x4b61ae = _0x21de21 - _0x1e6a63) {
                                   for ((_0x3d13d5 = _0x4b61ae < 0x0) ? (_0x4b61ae = -_0x4b61ae,
                                        _0x42f4a5 = _0x3c24bb) : (_0x1e6a63 = _0x21de21,
                                             _0x42f4a5 = _0x3510b9),
                                        _0x42f4a5[_0x351a55(0xd24)](),
                                        _0x5812fe = _0x4b61ae; _0x5812fe--; _0x42f4a5[_0x351a55(0x63e)](0x0))
                                        ;
                                   _0x42f4a5[_0x351a55(0xd24)]();
                              } else {
                                   for (_0x101752 = (_0x3d13d5 = (_0x4b61ae = _0x3c24bb[_0x351a55(0x72b)]) < (_0x5812fe = _0x3510b9[_0x351a55(0x72b)])) ? _0x4b61ae : _0x5812fe,
                                        _0x4b61ae = _0x5812fe = 0x0; _0x5812fe < _0x101752; _0x5812fe++)
                                        if (_0x3c24bb[_0x5812fe] != _0x3510b9[_0x5812fe]) {
                                             _0x3d13d5 = _0x3c24bb[_0x5812fe] < _0x3510b9[_0x5812fe];
                                             break;
                                        }
                              }
                              if (_0x3d13d5 && (_0x42f4a5 = _0x3c24bb,
                                   _0x3c24bb = _0x3510b9,
                                   _0x3510b9 = _0x42f4a5,
                                   _0x9f5027['s'] = -_0x9f5027['s']),
                                   (_0x5812fe = (_0x101752 = _0x3510b9[_0x351a55(0x72b)]) - (_0x41ce11 = _0x3c24bb[_0x351a55(0x72b)])) > 0x0) {
                                   for (; _0x5812fe--; _0x3c24bb[_0x41ce11++] = 0x0)
                                        ;
                              }
                              for (_0x5812fe = _0x35f69a - 0x1; _0x101752 > _0x4b61ae;) {
                                   if (_0x3c24bb[--_0x101752] < _0x3510b9[_0x101752]) {
                                        for (_0x41ce11 = _0x101752; _0x41ce11 && !_0x3c24bb[--_0x41ce11]; _0x3c24bb[_0x41ce11] = _0x5812fe)
                                             ;
                                        --_0x3c24bb[_0x41ce11],
                                             _0x3c24bb[_0x101752] += _0x35f69a;
                                   }
                                   _0x3c24bb[_0x101752] -= _0x3510b9[_0x101752];
                              }
                              for (; 0x0 == _0x3c24bb[0x0]; _0x3c24bb[_0x351a55(0x3d3)](0x0, 0x1),
                                   --_0x1e6a63)
                                   ;
                              return _0x3c24bb[0x0] ? _0x3c14bc(_0x9f5027, _0x3c24bb, _0x1e6a63) : (_0x9f5027['s'] = 0x3 == _0x16e892 ? -0x1 : 0x1,
                                   _0x9f5027['c'] = [_0x9f5027['e'] = 0x0],
                                   _0x9f5027);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x7fd)] = _0x410cca[_0x6e2977(0x40e)] = function (_0x1609de, _0x53d223) {
                              const _0x35d97c = _0x6e2977;
                              var _0x5ef427, _0x53abfd, _0x4c6707 = this;
                              return _0x1609de = new _0x204f73(_0x1609de, _0x53d223),
                                   !_0x4c6707['c'] || !_0x1609de['s'] || _0x1609de['c'] && !_0x1609de['c'][0x0] ? new _0x204f73(NaN) : !_0x1609de['c'] || _0x4c6707['c'] && !_0x4c6707['c'][0x0] ? new _0x204f73(_0x4c6707) : (0x9 == _0xdc5fd9 ? (_0x53abfd = _0x1609de['s'],
                                        _0x1609de['s'] = 0x1,
                                        _0x5ef427 = _0x395c39(_0x4c6707, _0x1609de, 0x0, 0x3),
                                        _0x1609de['s'] = _0x53abfd,
                                        _0x5ef427['s'] *= _0x53abfd) : _0x5ef427 = _0x395c39(_0x4c6707, _0x1609de, 0x0, _0xdc5fd9),
                                        (_0x1609de = _0x4c6707[_0x35d97c(0x639)](_0x5ef427['times'](_0x1609de)))['c'][0x0] || 0x1 != _0xdc5fd9 || (_0x1609de['s'] = _0x4c6707['s']),
                                        _0x1609de);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xa60)] = _0x410cca[_0x6e2977(0xaad)] = function (_0x5595ae, _0x127d7f) {
                              const _0x21d037 = _0x6e2977;
                              var _0x152a7c, _0x46fdee, _0x3daaab, _0x211a78, _0x54c597, _0x5a5774, _0x3aac58, _0x48fb85, _0x59fd50, _0x2a255c, _0x4b9766, _0x565bb7, _0x115a17, _0x15eda5, _0x557f7e, _0x3f4280 = this, _0x44a96b = _0x3f4280['c'], _0x36eec8 = (_0x5595ae = new _0x204f73(_0x5595ae, _0x127d7f))['c'];
                              if (!(_0x44a96b && _0x36eec8 && _0x44a96b[0x0] && _0x36eec8[0x0]))
                                   return !_0x3f4280['s'] || !_0x5595ae['s'] || _0x44a96b && !_0x44a96b[0x0] && !_0x36eec8 || _0x36eec8 && !_0x36eec8[0x0] && !_0x44a96b ? _0x5595ae['c'] = _0x5595ae['e'] = _0x5595ae['s'] = null : (_0x5595ae['s'] *= _0x3f4280['s'],
                                        _0x44a96b && _0x36eec8 ? (_0x5595ae['c'] = [0x0],
                                             _0x5595ae['e'] = 0x0) : _0x5595ae['c'] = _0x5595ae['e'] = null),
                                        _0x5595ae;
                              for (_0x46fdee = _0x891e14(_0x3f4280['e'] / _0x52b792) + _0x891e14(_0x5595ae['e'] / _0x52b792),
                                   _0x5595ae['s'] *= _0x3f4280['s'],
                                   (_0x3aac58 = _0x44a96b[_0x21d037(0x72b)]) < (_0x2a255c = _0x36eec8[_0x21d037(0x72b)]) && (_0x115a17 = _0x44a96b,
                                        _0x44a96b = _0x36eec8,
                                        _0x36eec8 = _0x115a17,
                                        _0x3daaab = _0x3aac58,
                                        _0x3aac58 = _0x2a255c,
                                        _0x2a255c = _0x3daaab),
                                   _0x3daaab = _0x3aac58 + _0x2a255c,
                                   _0x115a17 = []; _0x3daaab--; _0x115a17['push'](0x0))
                                   ;
                              for (_0x15eda5 = _0x35f69a,
                                   _0x557f7e = _0x388840,
                                   _0x3daaab = _0x2a255c; --_0x3daaab >= 0x0;) {
                                   for (_0x152a7c = 0x0,
                                        _0x4b9766 = _0x36eec8[_0x3daaab] % _0x557f7e,
                                        _0x565bb7 = _0x36eec8[_0x3daaab] / _0x557f7e | 0x0,
                                        _0x211a78 = _0x3daaab + (_0x54c597 = _0x3aac58); _0x211a78 > _0x3daaab;)
                                        _0x152a7c = ((_0x48fb85 = _0x4b9766 * (_0x48fb85 = _0x44a96b[--_0x54c597] % _0x557f7e) + (_0x5a5774 = _0x565bb7 * _0x48fb85 + (_0x59fd50 = _0x44a96b[_0x54c597] / _0x557f7e | 0x0) * _0x4b9766) % _0x557f7e * _0x557f7e + _0x115a17[_0x211a78] + _0x152a7c) / _0x15eda5 | 0x0) + (_0x5a5774 / _0x557f7e | 0x0) + _0x565bb7 * _0x59fd50,
                                             _0x115a17[_0x211a78--] = _0x48fb85 % _0x15eda5;
                                   _0x115a17[_0x211a78] = _0x152a7c;
                              }
                              return _0x152a7c ? ++_0x46fdee : _0x115a17[_0x21d037(0x3d3)](0x0, 0x1),
                                   _0x3c14bc(_0x5595ae, _0x115a17, _0x46fdee);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x492)] = function () {
                              var _0x51577b = new _0x204f73(this);
                              return _0x51577b['s'] = -_0x51577b['s'] || null,
                                   _0x51577b;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x98c)] = function (_0x4721d3, _0x163a99) {
                              const _0x468aa5 = _0x6e2977;
                              var _0x4d4f63, _0x218363 = this, _0x4a4acc = _0x218363['s'];
                              if (_0x163a99 = (_0x4721d3 = new _0x204f73(_0x4721d3, _0x163a99))['s'],
                                   !_0x4a4acc || !_0x163a99)
                                   return new _0x204f73(NaN);
                              if (_0x4a4acc != _0x163a99)
                                   return _0x4721d3['s'] = -_0x163a99,
                                        _0x218363[_0x468aa5(0x639)](_0x4721d3);
                              var _0x455000 = _0x218363['e'] / _0x52b792
                                   , _0x40ef05 = _0x4721d3['e'] / _0x52b792
                                   , _0x39f9ee = _0x218363['c']
                                   , _0x1216e0 = _0x4721d3['c'];
                              if (!_0x455000 || !_0x40ef05) {
                                   if (!_0x39f9ee || !_0x1216e0)
                                        return new _0x204f73(_0x4a4acc / 0x0);
                                   if (!_0x39f9ee[0x0] || !_0x1216e0[0x0])
                                        return _0x1216e0[0x0] ? _0x4721d3 : new _0x204f73(_0x39f9ee[0x0] ? _0x218363 : 0x0 * _0x4a4acc);
                              }
                              if (_0x455000 = _0x891e14(_0x455000),
                                   _0x40ef05 = _0x891e14(_0x40ef05),
                                   _0x39f9ee = _0x39f9ee[_0x468aa5(0x21c)](),
                                   _0x4a4acc = _0x455000 - _0x40ef05) {
                                   for (_0x4a4acc > 0x0 ? (_0x40ef05 = _0x455000,
                                        _0x4d4f63 = _0x1216e0) : (_0x4a4acc = -_0x4a4acc,
                                             _0x4d4f63 = _0x39f9ee),
                                        _0x4d4f63[_0x468aa5(0xd24)](); _0x4a4acc--; _0x4d4f63[_0x468aa5(0x63e)](0x0))
                                        ;
                                   _0x4d4f63['reverse']();
                              }
                              for ((_0x4a4acc = _0x39f9ee[_0x468aa5(0x72b)]) - (_0x163a99 = _0x1216e0['length']) < 0x0 && (_0x4d4f63 = _0x1216e0,
                                   _0x1216e0 = _0x39f9ee,
                                   _0x39f9ee = _0x4d4f63,
                                   _0x163a99 = _0x4a4acc),
                                   _0x4a4acc = 0x0; _0x163a99;)
                                   _0x4a4acc = (_0x39f9ee[--_0x163a99] = _0x39f9ee[_0x163a99] + _0x1216e0[_0x163a99] + _0x4a4acc) / _0x35f69a | 0x0,
                                        _0x39f9ee[_0x163a99] = _0x35f69a === _0x39f9ee[_0x163a99] ? 0x0 : _0x39f9ee[_0x163a99] % _0x35f69a;
                              return _0x4a4acc && (_0x39f9ee = [_0x4a4acc][_0x468aa5(0x77e)](_0x39f9ee),
                                   ++_0x40ef05),
                                   _0x3c14bc(_0x4721d3, _0x39f9ee, _0x40ef05);
                         }
                         ,
                         _0x410cca['precision'] = _0x410cca['sd'] = function (_0x16b289, _0x426205) {
                              const _0x248525 = _0x6e2977;
                              var _0x3790b7, _0x562c88, _0x54071e, _0x250eca = this;
                              if (null != _0x16b289 && _0x16b289 !== !!_0x16b289)
                                   return _0x1ce3da(_0x16b289, 0x1, _0x160e00),
                                        null == _0x426205 ? _0x426205 = _0x16e892 : _0x1ce3da(_0x426205, 0x0, 0x8),
                                        _0x4b2541(new _0x204f73(_0x250eca), _0x16b289, _0x426205);
                              if (!(_0x3790b7 = _0x250eca['c']))
                                   return null;
                              if (_0x562c88 = (_0x54071e = _0x3790b7[_0x248525(0x72b)] - 0x1) * _0x52b792 + 0x1,
                                   _0x54071e = _0x3790b7[_0x54071e]) {
                                   for (; _0x54071e % 0xa == 0x0; _0x54071e /= 0xa,
                                        _0x562c88--)
                                        ;
                                   for (_0x54071e = _0x3790b7[0x0]; _0x54071e >= 0xa; _0x54071e /= 0xa,
                                        _0x562c88++)
                                        ;
                              }
                              return _0x16b289 && _0x250eca['e'] + 0x1 > _0x562c88 && (_0x562c88 = _0x250eca['e'] + 0x1),
                                   _0x562c88;
                         }
                         ,
                         _0x410cca['shiftedBy'] = function (_0x19b937) {
                              const _0x2f002f = _0x6e2977;
                              return _0x1ce3da(_0x19b937, -0x1fffffffffffff, _0x853879),
                                   this[_0x2f002f(0xaad)]('1e' + _0x19b937);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x4c1)] = _0x410cca[_0x6e2977(0x21b)] = function () {
                              const _0x425698 = _0x6e2977;
                              var _0x31824f, _0x31075d, _0x2014a7, _0x5b18a1, _0x4759ee, _0x1bf4d4 = this, _0x1912e4 = _0x1bf4d4['c'], _0x257c57 = _0x1bf4d4['s'], _0x1cc24c = _0x1bf4d4['e'], _0xc962a0 = _0x5181df + 0x4, _0x4f5909 = new _0x204f73(_0x425698(0xa00));
                              if (0x1 !== _0x257c57 || !_0x1912e4 || !_0x1912e4[0x0])
                                   return new _0x204f73(!_0x257c57 || _0x257c57 < 0x0 && (!_0x1912e4 || _0x1912e4[0x0]) ? NaN : _0x1912e4 ? _0x1bf4d4 : 0x1 / 0x0);
                              if (0x0 == (_0x257c57 = Math[_0x425698(0x21b)](+_0x4ba720(_0x1bf4d4))) || _0x257c57 == 0x1 / 0x0 ? (((_0x31075d = _0x60ec0(_0x1912e4))[_0x425698(0x72b)] + _0x1cc24c) % 0x2 == 0x0 && (_0x31075d += '0'),
                                   _0x257c57 = Math[_0x425698(0x21b)](+_0x31075d),
                                   _0x1cc24c = _0x891e14((_0x1cc24c + 0x1) / 0x2) - (_0x1cc24c < 0x0 || _0x1cc24c % 0x2),
                                   _0x2014a7 = new _0x204f73(_0x31075d = _0x257c57 == 0x1 / 0x0 ? '1e' + _0x1cc24c : (_0x31075d = _0x257c57[_0x425698(0xcd8)]())['slice'](0x0, _0x31075d[_0x425698(0xcef)]('e') + 0x1) + _0x1cc24c)) : _0x2014a7 = new _0x204f73(_0x257c57 + ''),
                                   _0x2014a7['c'][0x0]) {
                                   for ((_0x257c57 = (_0x1cc24c = _0x2014a7['e']) + _0xc962a0) < 0x3 && (_0x257c57 = 0x0); ;)
                                        if (_0x4759ee = _0x2014a7,
                                             _0x2014a7 = _0x4f5909[_0x425698(0xaad)](_0x4759ee[_0x425698(0x98c)](_0x395c39(_0x1bf4d4, _0x4759ee, _0xc962a0, 0x1))),
                                             _0x60ec0(_0x4759ee['c'])[_0x425698(0x21c)](0x0, _0x257c57) === (_0x31075d = _0x60ec0(_0x2014a7['c']))[_0x425698(0x21c)](0x0, _0x257c57)) {
                                             if (_0x2014a7['e'] < _0x1cc24c && --_0x257c57,
                                                  _0x425698(0x422) != (_0x31075d = _0x31075d[_0x425698(0x21c)](_0x257c57 - 0x3, _0x257c57 + 0x1)) && (_0x5b18a1 || '4999' != _0x31075d)) {
                                                  +_0x31075d && (+_0x31075d[_0x425698(0x21c)](0x1) || '5' != _0x31075d['charAt'](0x0)) || (_0x4b2541(_0x2014a7, _0x2014a7['e'] + _0x5181df + 0x2, 0x1),
                                                       _0x31824f = !_0x2014a7[_0x425698(0xaad)](_0x2014a7)['eq'](_0x1bf4d4));
                                                  break;
                                             }
                                             if (!_0x5b18a1 && (_0x4b2541(_0x4759ee, _0x4759ee['e'] + _0x5181df + 0x2, 0x0),
                                                  _0x4759ee[_0x425698(0xaad)](_0x4759ee)['eq'](_0x1bf4d4))) {
                                                  _0x2014a7 = _0x4759ee;
                                                  break;
                                             }
                                             _0xc962a0 += 0x4,
                                                  _0x257c57 += 0x4,
                                                  _0x5b18a1 = 0x1;
                                        }
                              }
                              return _0x4b2541(_0x2014a7, _0x2014a7['e'] + _0x5181df + 0x1, _0x16e892, _0x31824f);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xcd8)] = function (_0x471b86, _0xf0c334) {
                              return null != _0x471b86 && (_0x1ce3da(_0x471b86, 0x0, _0x160e00),
                                   _0x471b86++),
                                   _0x53ed8b(this, _0x471b86, _0xf0c334, 0x1);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x703)] = function (_0x151e6f, _0x17d61c) {
                              return null != _0x151e6f && (_0x1ce3da(_0x151e6f, 0x0, _0x160e00),
                                   _0x151e6f = _0x151e6f + this['e'] + 0x1),
                                   _0x53ed8b(this, _0x151e6f, _0x17d61c);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xbca)] = function (_0x379751, _0x58efb1, _0x3578d8) {
                              const _0x49b4a8 = _0x6e2977;
                              var _0x4ee8f8, _0x1ee8f9 = this;
                              if (null == _0x3578d8)
                                   null != _0x379751 && _0x58efb1 && _0x49b4a8(0xb70) == typeof _0x58efb1 ? (_0x3578d8 = _0x58efb1,
                                        _0x58efb1 = null) : _0x379751 && _0x49b4a8(0xb70) == typeof _0x379751 ? (_0x3578d8 = _0x379751,
                                             _0x379751 = _0x58efb1 = null) : _0x3578d8 = _0x2f64f9;
                              else {
                                   if (_0x49b4a8(0xb70) != typeof _0x3578d8)
                                        throw Error(_0x4eba29 + _0x49b4a8(0x4eb) + _0x3578d8);
                              }
                              if (_0x4ee8f8 = _0x1ee8f9[_0x49b4a8(0x703)](_0x379751, _0x58efb1),
                                   _0x1ee8f9['c']) {
                                   var _0x470ac4, _0x35d40b = _0x4ee8f8['split']('.'), _0x14cf05 = +_0x3578d8[_0x49b4a8(0xdb6)], _0x18ffb9 = +_0x3578d8[_0x49b4a8(0x63c)], _0x2ff923 = _0x3578d8[_0x49b4a8(0x4e9)] || '', _0x59f74b = _0x35d40b[0x0], _0x489132 = _0x35d40b[0x1], _0x48b672 = _0x1ee8f9['s'] < 0x0, _0x427e21 = _0x48b672 ? _0x59f74b[_0x49b4a8(0x21c)](0x1) : _0x59f74b, _0x581718 = _0x427e21['length'];
                                   if (_0x18ffb9 && (_0x470ac4 = _0x14cf05,
                                        _0x14cf05 = _0x18ffb9,
                                        _0x18ffb9 = _0x470ac4,
                                        _0x581718 -= _0x470ac4),
                                        _0x14cf05 > 0x0 && _0x581718 > 0x0) {
                                        for (_0x470ac4 = _0x581718 % _0x14cf05 || _0x14cf05,
                                             _0x59f74b = _0x427e21[_0x49b4a8(0x563)](0x0, _0x470ac4); _0x470ac4 < _0x581718; _0x470ac4 += _0x14cf05)
                                             _0x59f74b += _0x2ff923 + _0x427e21[_0x49b4a8(0x563)](_0x470ac4, _0x14cf05);
                                        _0x18ffb9 > 0x0 && (_0x59f74b += _0x2ff923 + _0x427e21[_0x49b4a8(0x21c)](_0x470ac4)),
                                             _0x48b672 && (_0x59f74b = '-' + _0x59f74b);
                                   }
                                   _0x4ee8f8 = _0x489132 ? _0x59f74b + (_0x3578d8[_0x49b4a8(0xca5)] || '') + ((_0x18ffb9 = +_0x3578d8[_0x49b4a8(0x612)]) ? _0x489132[_0x49b4a8(0x6c0)](new RegExp('\x5cd{' + _0x18ffb9 + _0x49b4a8(0x875), 'g'), '$&' + (_0x3578d8[_0x49b4a8(0xda1)] || '')) : _0x489132) : _0x59f74b;
                              }
                              return (_0x3578d8[_0x49b4a8(0x9a8)] || '') + _0x4ee8f8 + (_0x3578d8[_0x49b4a8(0x7ee)] || '');
                         }
                         ,
                         _0x410cca['toFraction'] = function (_0x23e809) {
                              const _0xed1f39 = _0x6e2977;
                              var _0x33810c, _0x860f7d, _0x5120a9, _0x2f64bb, _0x2cb310, _0x4ab229, _0x177d98, _0x47626e, _0x35328b, _0x53623f, _0x9c9faa, _0x888084, _0x545657 = this, _0x5a33d8 = _0x545657['c'];
                              if (null != _0x23e809 && (!(_0x177d98 = new _0x204f73(_0x23e809))[_0xed1f39(0x4b7)]() && (_0x177d98['c'] || 0x1 !== _0x177d98['s']) || _0x177d98['lt'](_0x1c773d)))
                                   throw Error(_0x4eba29 + _0xed1f39(0x478) + (_0x177d98[_0xed1f39(0x4b7)]() ? _0xed1f39(0x443) : _0xed1f39(0x80d)) + _0x4ba720(_0x177d98));
                              if (!_0x5a33d8)
                                   return new _0x204f73(_0x545657);
                              for (_0x33810c = new _0x204f73(_0x1c773d),
                                   _0x35328b = _0x860f7d = new _0x204f73(_0x1c773d),
                                   _0x5120a9 = _0x47626e = new _0x204f73(_0x1c773d),
                                   _0x888084 = _0x60ec0(_0x5a33d8),
                                   _0x2cb310 = _0x33810c['e'] = _0x888084[_0xed1f39(0x72b)] - _0x545657['e'] - 0x1,
                                   _0x33810c['c'][0x0] = _0x5dc8f3[(_0x4ab229 = _0x2cb310 % _0x52b792) < 0x0 ? _0x52b792 + _0x4ab229 : _0x4ab229],
                                   _0x23e809 = !_0x23e809 || _0x177d98['comparedTo'](_0x33810c) > 0x0 ? _0x2cb310 > 0x0 ? _0x33810c : _0x35328b : _0x177d98,
                                   _0x4ab229 = _0x158464,
                                   _0x158464 = 0x1 / 0x0,
                                   _0x177d98 = new _0x204f73(_0x888084),
                                   _0x47626e['c'][0x0] = 0x0; _0x53623f = _0x395c39(_0x177d98, _0x33810c, 0x0, 0x1),
                                   0x1 != (_0x2f64bb = _0x860f7d[_0xed1f39(0x98c)](_0x53623f[_0xed1f39(0xaad)](_0x5120a9)))[_0xed1f39(0x9f4)](_0x23e809);)
                                   _0x860f7d = _0x5120a9,
                                        _0x5120a9 = _0x2f64bb,
                                        _0x35328b = _0x47626e[_0xed1f39(0x98c)](_0x53623f['times'](_0x2f64bb = _0x35328b)),
                                        _0x47626e = _0x2f64bb,
                                        _0x33810c = _0x177d98['minus'](_0x53623f[_0xed1f39(0xaad)](_0x2f64bb = _0x33810c)),
                                        _0x177d98 = _0x2f64bb;
                              return _0x2f64bb = _0x395c39(_0x23e809[_0xed1f39(0x639)](_0x860f7d), _0x5120a9, 0x0, 0x1),
                                   _0x47626e = _0x47626e[_0xed1f39(0x98c)](_0x2f64bb[_0xed1f39(0xaad)](_0x35328b)),
                                   _0x860f7d = _0x860f7d[_0xed1f39(0x98c)](_0x2f64bb[_0xed1f39(0xaad)](_0x5120a9)),
                                   _0x47626e['s'] = _0x35328b['s'] = _0x545657['s'],
                                   _0x9c9faa = _0x395c39(_0x35328b, _0x5120a9, _0x2cb310 *= 0x2, _0x16e892)[_0xed1f39(0x639)](_0x545657)['abs']()[_0xed1f39(0x9f4)](_0x395c39(_0x47626e, _0x860f7d, _0x2cb310, _0x16e892)[_0xed1f39(0x639)](_0x545657)['abs']()) < 0x1 ? [_0x35328b, _0x5120a9] : [_0x47626e, _0x860f7d],
                                   _0x158464 = _0x4ab229,
                                   _0x9c9faa;
                         }
                         ,
                         _0x410cca[_0x6e2977(0x9fb)] = function () {
                              return +_0x4ba720(this);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x731)] = function (_0x56a31c, _0x342764) {
                              return null != _0x56a31c && _0x1ce3da(_0x56a31c, 0x1, _0x160e00),
                                   _0x53ed8b(this, _0x56a31c, _0x342764, 0x2);
                         }
                         ,
                         _0x410cca[_0x6e2977(0x892)] = function (_0x2eecc8) {
                              const _0x25cd0a = _0x6e2977;
                              var _0x26d236, _0xb3ab7e = this, _0x37b9c7 = _0xb3ab7e['s'], _0x194ca5 = _0xb3ab7e['e'];
                              return null === _0x194ca5 ? _0x37b9c7 ? (_0x26d236 = _0x25cd0a(0x7df),
                                   _0x37b9c7 < 0x0 && (_0x26d236 = '-' + _0x26d236)) : _0x26d236 = 'NaN' : (null == _0x2eecc8 ? _0x26d236 = _0x194ca5 <= _0x297614 || _0x194ca5 >= _0x24d548 ? _0x5a57e4(_0x60ec0(_0xb3ab7e['c']), _0x194ca5) : _0x1da452(_0x60ec0(_0xb3ab7e['c']), _0x194ca5, '0') : 0xa === _0x2eecc8 ? _0x26d236 = _0x1da452(_0x60ec0((_0xb3ab7e = _0x4b2541(new _0x204f73(_0xb3ab7e), _0x5181df + _0x194ca5 + 0x1, _0x16e892))['c']), _0xb3ab7e['e'], '0') : (_0x1ce3da(_0x2eecc8, 0x2, _0x429d54[_0x25cd0a(0x72b)], 'Base'),
                                        _0x26d236 = _0x2a6471(_0x1da452(_0x60ec0(_0xb3ab7e['c']), _0x194ca5, '0'), 0xa, _0x2eecc8, _0x37b9c7, !0x0)),
                                        _0x37b9c7 < 0x0 && _0xb3ab7e['c'][0x0] && (_0x26d236 = '-' + _0x26d236)),
                                   _0x26d236;
                         }
                         ,
                         _0x410cca[_0x6e2977(0xc04)] = _0x410cca[_0x6e2977(0x353)] = function () {
                              return _0x4ba720(this);
                         }
                         ,
                         _0x410cca[_0x6e2977(0xd2e)] = !0x0,
                         _0x3fbb6c && (_0x410cca[Symbol[_0x6e2977(0xb05)]] = _0x6e2977(0xc93),
                              _0x410cca[Symbol['for'](_0x6e2977(0x7f7))] = _0x410cca[_0x6e2977(0xc04)]),
                         null != _0x565ef4 && _0x204f73[_0x6e2977(0x320)](_0x565ef4),
                         _0x204f73;
               }(),
                    _0x2177c7[_0x38073a(0x8b3)] = _0x2177c7['BigNumber'] = _0x2177c7,
                    _0x38073a(0x1a2) == typeof define && define[_0x38073a(0xcdc)] ? define(function () {
                         return _0x2177c7;
                    }) : _0x38073a(0x211) != typeof module && module['exports'] ? module[_0x38073a(0x705)] = _0x2177c7 : (_0x4c5094 || (_0x4c5094 = _0x38073a(0x211) != typeof self && self ? self : window),
                         _0x4c5094[_0x38073a(0xc93)] = _0x2177c7),
                    _0x2177c7;
          }();
          function _0x2bce7d() { }
          function _0x36c255(_0xca6405) {
               const _0x11214d = _0xc3a123;
               this[_0x11214d(0x878)] = _0xca6405,
                    this[_0x11214d(0x6fb)] = new Cesium[(_0x11214d(0x995))](),
                    this[_0x11214d(0xb92)] = new Cesium['PassState'](_0xca6405),
                    this[_0x11214d(0xb92)][_0x11214d(0xcc6)] = new Cesium[(_0x11214d(0xa4f))](),
                    this[_0x11214d(0xba4)] = _0x11214d(0xba8),
                    this[_0x11214d(0x701)] = void 0x0,
                    this[_0x11214d(0x711)] = new Cesium[(_0x11214d(0x456))](Cesium[_0x11214d(0x25b)][_0x11214d(0xcc2)], 0x615299),
                    this[_0x11214d(0x87e)] = {
                         'isSunVisible': !0x0,
                         'isMoonVisible': !0x0,
                         'isSkyAtmosphereVisible': !0x0,
                         'isSkyBoxVisible': !0x0,
                         'isGlobalVisible': !0x1,
                         'isObjectVisible': !0x0
                    },
                    this[_0x11214d(0xb92)][_0x11214d(0xa2c)] = Cesium[_0x11214d(0xd8a)][_0x11214d(0x3d0)],
                    this[_0x11214d(0x425)] = new Cesium[(_0x11214d(0x1d3))]({
                         'color': new Cesium[(_0x11214d(0x821))](0x0, 0x0, 0x0, 0x0),
                         'stencil': 0x0,
                         'depth': 0x1
                    }),
                    this[_0x11214d(0x9b4)] = !0x1;
          }
          function _0x2fa622(_0x409f85) {
               const _0x22bdcf = _0xc3a123;
               if (_0x409f85 = Cesium[_0x22bdcf(0x4d9)](_0x409f85, Cesium[_0x22bdcf(0x4d9)]['EMPTY_OBJECT']),
                    this[_0x22bdcf(0x91d)] = Cesium[_0x22bdcf(0x4d9)](_0x409f85[_0x22bdcf(0x34d)], Cesium[_0x22bdcf(0x4b9)][_0x22bdcf(0x74e)]),
                    this[_0x22bdcf(0x47e)] = Cesium[_0x22bdcf(0x4d9)](_0x409f85['numberOfLevelZeroTilesX'], 0x1),
                    this[_0x22bdcf(0x78b)] = Cesium['defaultValue'](_0x409f85[_0x22bdcf(0x2ce)], 0x1),
                    this[_0x22bdcf(0x48b)] = new Cesium[(_0x22bdcf(0x1ac))](this['_ellipsoid']),
                    Cesium[_0x22bdcf(0x336)](_0x409f85['rectangleSouthwestInMeters']) && Cesium[_0x22bdcf(0x336)](_0x409f85[_0x22bdcf(0xb16)]))
                    this[_0x22bdcf(0x9aa)] = _0x409f85[_0x22bdcf(0xadf)],
                         this[_0x22bdcf(0xc68)] = _0x409f85[_0x22bdcf(0xb16)];
               else {
                    let _0x415c40 = this['_ellipsoid']['maximumRadius'] * Math['PI'];
                    this[_0x22bdcf(0x9aa)] = new Cesium[(_0x22bdcf(0x1b7))](-_0x415c40, -_0x415c40),
                         this['_rectangleNortheastInMeters'] = new Cesium['Cartesian2'](_0x415c40, _0x415c40);
               }
               let _0xff4898 = this[_0x22bdcf(0x48b)]['unproject'](this[_0x22bdcf(0x9aa)])
                    , _0x174d88 = this['_projection']['unproject'](this[_0x22bdcf(0xc68)]);
               this['_rectangle'] = new Cesium[(_0x22bdcf(0x50e))](_0xff4898[_0x22bdcf(0xb4c)], _0xff4898['latitude'], _0x174d88['longitude'], _0x174d88[_0x22bdcf(0x400)]),
                    this[_0x22bdcf(0xaf5)] = _0x409f85['customDPI'],
                    this['_scaleDenominators'] = _0x409f85[_0x22bdcf(0x974)],
                    this[_0x22bdcf(0xb0b)] = Cesium[_0x22bdcf(0x4d9)](_0x409f85[_0x22bdcf(0x721)], 0x100),
                    this[_0x22bdcf(0xdb2)] = Cesium['defaultValue'](_0x409f85[_0x22bdcf(0x4fb)], 0x100);
          }
          function _0x50381f() {
               const _0x5723d9 = _0xc3a123;
               this[_0x5723d9(0xd0a)] = void 0x0,
                    this[_0x5723d9(0x527)] = void 0x0,
                    this[_0x5723d9(0xcce)] = 0x0;
          }
          function _0x464b24(_0x361462, _0x177a04) {
               const _0x3f11aa = _0xc3a123;
               var _0x2e7c7e = _0x177a04[_0x3f11aa(0xc6a)]
                    , _0x11cb66 = _0x177a04[_0x3f11aa(0xb06)];
               _0x177a04 === _0x361462[_0x3f11aa(0xd0a)] ? _0x361462[_0x3f11aa(0xd0a)] = _0x11cb66 : _0x2e7c7e[_0x3f11aa(0xb06)] = _0x11cb66,
                    _0x177a04 === _0x361462[_0x3f11aa(0x527)] ? _0x361462['tail'] = _0x2e7c7e : _0x11cb66[_0x3f11aa(0xc6a)] = _0x2e7c7e,
                    _0x177a04[_0x3f11aa(0xc6a)] = void 0x0,
                    _0x177a04[_0x3f11aa(0xb06)] = void 0x0,
                    --_0x361462['count'];
          }
          function _0x41efcb(_0x3937f8, _0x50fa0b, _0x35a008, _0x4e553b) {
               const _0x3cf2a9 = _0xc3a123;
               this['quadKey'] = _0x50fa0b,
                    this[_0x3cf2a9(0x1ab)] = _0x35a008,
                    this['provider'] = _0x3937f8,
                    this['promise'] = _0x4e553b;
          }
          _0x2bce7d[_0xc3a123(0x2d4)][_0xc3a123(0x5ca)] = Cesium['DeveloperError'][_0xc3a123(0xd9e)],
               _0x2bce7d[_0xc3a123(0x2d4)][_0xc3a123(0x8ee)] = Cesium[_0xc3a123(0x610)][_0xc3a123(0xd9e)],
               _0x36c255[_0xc3a123(0x2d4)] = Object[_0xc3a123(0x7e5)](_0x2bce7d[_0xc3a123(0x2d4)]),
               _0x36c255['prototype']['constructor'] = _0x2bce7d,
               _0x36c255[_0xc3a123(0x2d4)][_0xc3a123(0x5ca)] = function (_0x51f09e) {
                    const _0x413072 = _0xc3a123;
                    return this[_0x413072(0x6fb)]['update'](_0x51f09e['context'], _0x51f09e[_0x413072(0x65a)]['viewport'], _0x51f09e[_0x413072(0x980)]),
                         this[_0x413072(0xb92)][_0x413072(0x28d)] = this[_0x413072(0x6fb)][_0x413072(0xbe6)](),
                         Cesium[_0x413072(0xa4f)]['clone'](_0x51f09e['view'][_0x413072(0xcc6)], this[_0x413072(0xb92)][_0x413072(0xcc6)]),
                         this[_0x413072(0x425)][_0x413072(0x32c)](_0x51f09e[_0x413072(0x878)], this['passState']),
                         _0x51f09e[_0x413072(0xc97)][_0x413072(0xa45)](this[_0x413072(0x711)]),
                         this[_0x413072(0xb92)];
               }
               ,
               _0x36c255[_0xc3a123(0x2d4)][_0xc3a123(0x8ee)] = function (_0x44760b) {
                    const _0x5ee350 = _0xc3a123;
                    _0x44760b[_0x5ee350(0xc97)][_0x5ee350(0xaab)]();
               }
               ,
               _0x36c255[_0xc3a123(0x2d4)][_0xc3a123(0x567)] = function () {
                    const _0x48c02e = _0xc3a123;
                    return this['sceneFramebuffer'] = this[_0x48c02e(0x6fb)][_0x48c02e(0x9bb)](),
                         this[_0x48c02e(0x9b4)] = !0x1,
                         !0x1;
               }
               ,
               _0x36c255[_0xc3a123(0x2d4)][_0xc3a123(0x9bb)] = function () {
                    const _0x4dd925 = _0xc3a123;
                    return Cesium[_0x4dd925(0x8e1)](this);
               }
               ,
               Object[_0xc3a123(0xcde)](_0x2fa622[_0xc3a123(0x2d4)], {
                    'ellipsoid': {
                         'get': function () {
                              const _0x43cdc5 = _0xc3a123;
                              return this[_0x43cdc5(0x91d)];
                         }
                    },
                    'rectangle': {
                         'get': function () {
                              const _0x4ea27c = _0xc3a123;
                              return this[_0x4ea27c(0x9ef)];
                         }
                    },
                    'projection': {
                         'get': function () {
                              return this['_projection'];
                         }
                    }
               }),
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0x6a4)] = function (_0x4b4e38) {
                    const _0x1f06be = _0xc3a123;
                    return this[_0x1f06be(0x47e)] << _0x4b4e38;
               }
               ,
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0x372)] = function (_0x2c5b2e) {
                    return this['_numberOfLevelZeroTilesY'] << _0x2c5b2e;
               }
               ,
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0x663)] = function (_0x502257, _0x33b66d) {
                    const _0x4de662 = _0xc3a123;
                    let _0x1d86ef = this['_projection']
                         , _0x33c90f = _0x1d86ef['project'](Cesium[_0x4de662(0x50e)][_0x4de662(0xd50)](_0x502257))
                         , _0x169865 = _0x1d86ef[_0x4de662(0x488)](Cesium['Rectangle'][_0x4de662(0xdb0)](_0x502257));
                    return Cesium[_0x4de662(0x336)](_0x33b66d) ? (_0x33b66d[_0x4de662(0x68b)] = _0x33c90f['x'],
                         _0x33b66d[_0x4de662(0x4dc)] = _0x33c90f['y'],
                         _0x33b66d[_0x4de662(0x1b1)] = _0x169865['x'],
                         _0x33b66d['north'] = _0x169865['y'],
                         _0x33b66d) : new Cesium[(_0x4de662(0x50e))](_0x33c90f['x'], _0x33c90f['y'], _0x169865['x'], _0x169865['y']);
               }
               ,
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0x1b0)] = function (_0x5aa6d6, _0xb56d8d, _0x487804, _0x229255) {
                    const _0x2c9cff = _0xc3a123;
                    if (Cesium['defined'](this['_customDPI']) && Cesium[_0x2c9cff(0x336)](this[_0x2c9cff(0xb7a)])) {
                         let _0x5b646e = this['calculateResolution'](_0x487804)
                              , _0x18bcac = this['_rectangleSouthwestInMeters']['x'] + _0x5aa6d6 * this[_0x2c9cff(0xb0b)] * _0x5b646e['x']
                              , _0x2de48f = this[_0x2c9cff(0x9aa)]['x'] + (_0x5aa6d6 + 0x1) * this[_0x2c9cff(0xb0b)] * _0x5b646e['x']
                              , _0x2fd404 = this[_0x2c9cff(0xc68)]['y'] - _0xb56d8d * this[_0x2c9cff(0xdb2)] * _0x5b646e['y']
                              , _0x2e4418 = this[_0x2c9cff(0xc68)]['y'] - (_0xb56d8d + 0x1) * this[_0x2c9cff(0xdb2)] * _0x5b646e['y'];
                         return Cesium[_0x2c9cff(0x336)](_0x229255) ? (_0x229255[_0x2c9cff(0x68b)] = _0x18bcac,
                              _0x229255[_0x2c9cff(0x4dc)] = _0x2e4418,
                              _0x229255['east'] = _0x2de48f,
                              _0x229255[_0x2c9cff(0x463)] = _0x2fd404,
                              _0x229255) : new Cesium[(_0x2c9cff(0x50e))](_0x18bcac, _0x2e4418, _0x2de48f, _0x2fd404);
                    }
                    let _0x2550a6 = this[_0x2c9cff(0x6a4)](_0x487804)
                         , _0x5c07c6 = this[_0x2c9cff(0x372)](_0x487804)
                         , _0xb992e2 = (this[_0x2c9cff(0xc68)]['x'] - this[_0x2c9cff(0x9aa)]['x']) / _0x2550a6
                         , _0x5d7e55 = this['_rectangleSouthwestInMeters']['x'] + _0x5aa6d6 * _0xb992e2
                         , _0x4cce99 = this[_0x2c9cff(0x9aa)]['x'] + (_0x5aa6d6 + 0x1) * _0xb992e2
                         , _0x1eb065 = (this[_0x2c9cff(0xc68)]['y'] - this[_0x2c9cff(0x9aa)]['y']) / _0x5c07c6
                         , _0x46abb1 = this['_rectangleNortheastInMeters']['y'] - _0xb56d8d * _0x1eb065
                         , _0x10e095 = this[_0x2c9cff(0xc68)]['y'] - (_0xb56d8d + 0x1) * _0x1eb065;
                    return Cesium['defined'](_0x229255) ? (_0x229255[_0x2c9cff(0x68b)] = _0x5d7e55,
                         _0x229255['south'] = _0x10e095,
                         _0x229255['east'] = _0x4cce99,
                         _0x229255[_0x2c9cff(0x463)] = _0x46abb1,
                         _0x229255) : new Cesium[(_0x2c9cff(0x50e))](_0x5d7e55, _0x10e095, _0x4cce99, _0x46abb1);
               }
               ,
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0xa77)] = function (_0x3e64dc, _0x48416d, _0x172a21, _0x494ccc) {
                    const _0x24ff65 = _0xc3a123;
                    let _0x350ecc = this[_0x24ff65(0x1b0)](_0x3e64dc, _0x48416d, _0x172a21, _0x494ccc)
                         , _0x14312a = this['_projection']
                         , _0x4ae2ad = _0x14312a[_0x24ff65(0x4bf)](new Cesium['Cartesian2'](_0x350ecc[_0x24ff65(0x68b)], _0x350ecc[_0x24ff65(0x4dc)]))
                         , _0x4166b7 = _0x14312a['unproject'](new Cesium['Cartesian2'](_0x350ecc[_0x24ff65(0x1b1)], _0x350ecc[_0x24ff65(0x463)]));
                    return _0x350ecc[_0x24ff65(0x68b)] = _0x4ae2ad[_0x24ff65(0xb4c)],
                         _0x350ecc[_0x24ff65(0x4dc)] = _0x4ae2ad[_0x24ff65(0x400)],
                         _0x350ecc[_0x24ff65(0x1b1)] = _0x4166b7[_0x24ff65(0xb4c)],
                         _0x350ecc[_0x24ff65(0x463)] = _0x4166b7[_0x24ff65(0x400)],
                         _0x350ecc;
               }
               ,
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0x3e7)] = function (_0x1a1c76, _0x575d60, _0x4aa65e) {
                    const _0x5f1a6d = _0xc3a123;
                    let _0x1107dd = this[_0x5f1a6d(0x9ef)];
                    if (!Cesium[_0x5f1a6d(0x50e)][_0x5f1a6d(0x264)](_0x1107dd, _0x1a1c76))
                         return;
                    let _0x1b0aaa = this[_0x5f1a6d(0x6a4)](_0x575d60)
                         , _0x311342 = this[_0x5f1a6d(0x372)](_0x575d60)
                         , _0x103ad2 = (this[_0x5f1a6d(0xc68)]['x'] - this[_0x5f1a6d(0x9aa)]['x']) / _0x1b0aaa
                         , _0x57b16b = (this[_0x5f1a6d(0xc68)]['y'] - this[_0x5f1a6d(0x9aa)]['y']) / _0x311342;
                    if (Cesium[_0x5f1a6d(0x336)](this[_0x5f1a6d(0xaf5)]) && Cesium[_0x5f1a6d(0x336)](this[_0x5f1a6d(0xb7a)])) {
                         let _0x42f099 = this[_0x5f1a6d(0x97d)](_0x575d60);
                         _0x103ad2 = this['_tileWidth'] * _0x42f099['x'],
                              _0x57b16b = this[_0x5f1a6d(0xdb2)] * _0x42f099['y'];
                    }
                    let _0x521493 = this['_projection']['project'](_0x1a1c76)
                         , _0x2129f7 = (_0x521493['x'] - this[_0x5f1a6d(0x9aa)]['x']) / _0x103ad2 | 0x0;
                    _0x2129f7 >= _0x1b0aaa && (_0x2129f7 = _0x1b0aaa - 0x1);
                    let _0x397d31 = (this['_rectangleNortheastInMeters']['y'] - _0x521493['y']) / _0x57b16b | 0x0;
                    return _0x397d31 >= _0x311342 && (_0x397d31 = _0x311342 - 0x1),
                         Cesium[_0x5f1a6d(0x336)](_0x4aa65e) ? (_0x4aa65e['x'] = _0x2129f7,
                              _0x4aa65e['y'] = _0x397d31,
                              _0x4aa65e) : new Cesium['Cartesian2'](_0x2129f7, _0x397d31);
               }
               ,
               _0x2fa622[_0xc3a123(0x2d4)][_0xc3a123(0x97d)] = function (_0x529a1a) {
                    const _0x3d6e3e = _0xc3a123;
                    let _0x4aa4a3 = 0.0254 * this[_0x3d6e3e(0xb7a)][_0x529a1a] / this['_customDPI']['x']
                         , _0x34902b = 0.0254 * this['_scaleDenominators'][_0x529a1a] / this[_0x3d6e3e(0xaf5)]['y'];
                    return new Cesium[(_0x3d6e3e(0x1b7))](_0x4aa4a3, _0x34902b);
               }
               ,
               _0x50381f['prototype']['trim'] = function (_0x513d6b) {
                    const _0x53d945 = _0xc3a123;
                    for (var _0x15c6cf = this['tail']; this['count'] > _0x513d6b && Cesium[_0x53d945(0x336)](_0x15c6cf);) {
                         var _0x27d331 = _0x15c6cf[_0x53d945(0xc6a)];
                         _0x15c6cf['free'](),
                              _0x464b24(this, _0x15c6cf),
                              _0x15c6cf = _0x27d331;
                    }
               }
               ,
               _0x50381f[_0xc3a123(0x2d4)][_0xc3a123(0x625)] = function (_0x3757d7) {
                    const _0x42d9f5 = _0xc3a123;
                    var _0x29bcab = this[_0x42d9f5(0xd0a)];
                    if (_0x29bcab !== _0x3757d7) {
                         if (++this['count'],
                              !Cesium[_0x42d9f5(0x336)](_0x29bcab))
                              return _0x3757d7[_0x42d9f5(0xc6a)] = void 0x0,
                                   _0x3757d7[_0x42d9f5(0xb06)] = void 0x0,
                                   this[_0x42d9f5(0xd0a)] = _0x3757d7,
                                   void (this[_0x42d9f5(0x527)] = _0x3757d7);
                         (Cesium[_0x42d9f5(0x336)](_0x3757d7['previous']) || Cesium[_0x42d9f5(0x336)](_0x3757d7['next'])) && _0x464b24(this, _0x3757d7),
                              _0x3757d7[_0x42d9f5(0xc6a)] = void 0x0,
                              _0x3757d7[_0x42d9f5(0xb06)] = _0x29bcab,
                              _0x29bcab[_0x42d9f5(0xc6a)] = _0x3757d7,
                              this[_0x42d9f5(0xd0a)] = _0x3757d7;
                    }
               }
               ,
               _0x41efcb[_0xc3a123(0x2d4)][_0xc3a123(0x441)] = function () {
                    const _0x299077 = _0xc3a123;
                    delete this['provider'][_0x299077(0x79e)][this['quadKey']];
               }
               ;
          const _0x28b135 = Cesium['defined'];
          function _0x3d4b11(_0x561d68, _0x664d46) {
               const _0x29ce7b = _0xc3a123;
               let _0x44576f = _0x29ce7b(0x842)
                    , _0x330a8c = _0x664d46[_0x29ce7b(0x7d5)];
               var _0x13bae9 = _0xa8eb96(_0x9879e5[_0x29ce7b(0xd4c)](_0x330a8c, _0x29ce7b(0x923), _0x44576f), _0x29ce7b(0x96b));
               'number' == typeof _0x13bae9 && (_0x561d68[_0x29ce7b(0x885)] = !0x0,
                    _0x561d68[_0x29ce7b(0x3ed)] = _0x13bae9);
               let _0x1e513f = _0x9879e5['queryFirstNode'](_0x330a8c, _0x29ce7b(0x51d), _0x44576f)
                    , _0x298de6 = _0x9879e5[_0x29ce7b(0x2cd)](_0x1e513f, _0x29ce7b(0x327), _0x44576f)
                    , _0x24b252 = _0x9879e5[_0x29ce7b(0x2cd)](_0x1e513f, _0x29ce7b(0xbb1), _0x44576f)
                    , _0x1ddb40 = _0x9879e5[_0x29ce7b(0x2cd)](_0x1e513f, _0x29ce7b(0xc27), _0x44576f)
                    , _0x5b1b4d = _0x9879e5[_0x29ce7b(0x2cd)](_0x1e513f, 'Bottom', _0x44576f)
                    , _0x1d9340 = _0x9879e5['queryStringValue'](_0x330a8c, _0x29ce7b(0xd67), _0x44576f)
                    , _0x39e857 = _0x9879e5[_0x29ce7b(0x2cd)](_0x330a8c, _0x29ce7b(0x634), _0x44576f)
                    , _0x12b6f4 = _0x9879e5[_0x29ce7b(0x2cd)](_0x330a8c, _0x29ce7b(0x5c9), _0x44576f)
                    , _0x5796bd = _0x9879e5[_0x29ce7b(0xd4c)](_0x330a8c, 'Levels', _0x44576f)
                    , _0x2eb679 = _0x9879e5['queryNodes'](_0x5796bd, _0x29ce7b(0x51a), _0x44576f)
                    , _0x37b428 = [];
               for (let _0x3b9578 = 0x0, _0x3f63ee = _0x2eb679['length']; _0x3b9578 < _0x3f63ee; _0x3b9578++)
                    _0x37b428[_0x29ce7b(0x63e)](parseInt(_0x2eb679[_0x3b9578]['textContent'], 0xa));
               _0x561d68['_fileExtension'] = Cesium[_0x29ce7b(0x4d9)](_0x1d9340, _0x29ce7b(0x459)),
                    _0x561d68['_tileFormat'] = Cesium[_0x29ce7b(0x4d9)](_0x1d9340, _0x29ce7b(0x459)),
                    _0x561d68['_tileWidth'] = Cesium[_0x29ce7b(0x4d9)](_0x39e857, 0x100),
                    _0x561d68['_tileHeight'] = Cesium[_0x29ce7b(0x4d9)](_0x12b6f4, 0x100);
               let _0x3c72fa = _0x37b428[_0x29ce7b(0x72b)];
               _0x561d68[_0x29ce7b(0xbbe)] = Cesium[_0x29ce7b(0x4d9)](_0x37b428[0x0], 0x0),
                    _0x561d68[_0x29ce7b(0x2cb)] = Cesium[_0x29ce7b(0x4d9)](_0x561d68['_maximumLevel'], _0x37b428[_0x3c72fa - 0x1]),
                    _0x561d68[_0x29ce7b(0x916)] || (_0x561d68[_0x29ce7b(0x916)] = new Cesium[(_0x29ce7b(0x945))]());
               let _0x20777e = _0x561d68[_0x29ce7b(0x916)];
               !_0x561d68['_rectangle'] && _0x298de6 && _0x24b252 && _0x1ddb40 && _0x5b1b4d && (_0x561d68[_0x29ce7b(0x9ef)] = new Cesium['Rectangle'](Cesium[_0x29ce7b(0x417)][_0x29ce7b(0xb7f)](_0x298de6), Cesium[_0x29ce7b(0x417)]['toRadians'](_0x5b1b4d), Cesium[_0x29ce7b(0x417)][_0x29ce7b(0xb7f)](_0x24b252), Cesium['Math']['toRadians'](_0x1ddb40))),
                    _0x561d68[_0x29ce7b(0x9ef)][_0x29ce7b(0x68b)] < _0x20777e[_0x29ce7b(0x7bd)][_0x29ce7b(0x68b)] && (_0x561d68[_0x29ce7b(0x9ef)]['west'] = _0x20777e[_0x29ce7b(0x7bd)][_0x29ce7b(0x68b)]),
                    _0x561d68['_rectangle']['east'] > _0x20777e[_0x29ce7b(0x7bd)][_0x29ce7b(0x1b1)] && (_0x561d68[_0x29ce7b(0x9ef)][_0x29ce7b(0x1b1)] = _0x20777e[_0x29ce7b(0x7bd)]['east']),
                    _0x561d68[_0x29ce7b(0x9ef)]['south'] < _0x20777e[_0x29ce7b(0x7bd)][_0x29ce7b(0x4dc)] && (_0x561d68[_0x29ce7b(0x9ef)][_0x29ce7b(0x4dc)] = _0x20777e[_0x29ce7b(0x7bd)][_0x29ce7b(0x4dc)]),
                    _0x561d68[_0x29ce7b(0x9ef)][_0x29ce7b(0x463)] > _0x20777e[_0x29ce7b(0x7bd)][_0x29ce7b(0x463)] && (_0x561d68[_0x29ce7b(0x9ef)][_0x29ce7b(0x463)] = _0x20777e[_0x29ce7b(0x7bd)]['north']);
               let _0x31889c = _0x20777e['positionToTileXY'](Cesium['Rectangle'][_0x29ce7b(0xd50)](_0x561d68[_0x29ce7b(0x9ef)]), _0x561d68[_0x29ce7b(0xbbe)])
                    , _0x213744 = _0x20777e['positionToTileXY'](Cesium[_0x29ce7b(0x50e)][_0x29ce7b(0xdb0)](_0x561d68[_0x29ce7b(0x9ef)]), _0x561d68[_0x29ce7b(0xbbe)]);
               (Math[_0x29ce7b(0xbd6)](_0x213744['x'] - _0x31889c['x']) + 0x1) * (Math[_0x29ce7b(0xbd6)](_0x213744['y'] - _0x31889c['y']) + 0x1) > 0x4 && (_0x561d68['_minimumLevel'] = 0x0),
                    _0x561d68['_urlTemplate'] = _0x561d68[_0x29ce7b(0x67b)] + _0x29ce7b(0x68c),
                    _0x28b135(_0x424c59[_0x29ce7b(0x597)]) && (_0x28b135(_0x424c59[_0x29ce7b(0x597)][_0x29ce7b(0x1a1)][_0x561d68['_urlTemplate']]) ? _0x561d68[_0x29ce7b(0x927)] = _0x424c59[_0x29ce7b(0x44b)](_0x561d68[_0x29ce7b(0x927)], _0x561d68[_0x29ce7b(0x927)]) : _0x561d68['_urlTemplate'] = _0x424c59[_0x29ce7b(0x6be)](_0x561d68[_0x29ce7b(0x927)])),
                    _0x561d68[_0x29ce7b(0x5fd)] = !0x0,
                    _0x561d68[_0x29ce7b(0x59f)]['resolve'](!0x0);
          }
          function _0x13f576(_0x187114, _0x3bdcef) {
               const _0xd1de56 = _0xc3a123;
               let _0x512043 = _0x3bdcef['prjCoordSys']['coordUnit']
                    , _0x554e75 = _0x3bdcef[_0xd1de56(0xd75)]
                    , _0x447808 = _0x3bdcef['visibleScales']
                    , _0x146824 = 0x0 === _0x447808[_0xd1de56(0x72b)];
               if (_0x187114[_0xd1de56(0xc80)] = _0x512043,
                    'DEGREE' === _0x512043)
                    return _0x187114[_0xd1de56(0x916)] = new Cesium['GeographicTilingScheme'](),
                         _0x554e75[_0xd1de56(0xb37)] = Cesium[_0xd1de56(0x417)][_0xd1de56(0x55d)](_0x554e75[_0xd1de56(0xb37)], -0xb4, 0xb4),
                         _0x554e75[_0xd1de56(0xc1a)] = Cesium[_0xd1de56(0x417)][_0xd1de56(0x55d)](_0x554e75[_0xd1de56(0xc1a)], -0x5a, 0x5a),
                         _0x554e75['right'] = Cesium[_0xd1de56(0x417)][_0xd1de56(0x55d)](_0x554e75[_0xd1de56(0x688)], -0xb4, 0xb4),
                         _0x554e75['top'] = Cesium[_0xd1de56(0x417)][_0xd1de56(0x55d)](_0x554e75[_0xd1de56(0x7d0)], -0x5a, 0x5a),
                         Cesium['Math'][_0xd1de56(0xc13)](_0x554e75[_0xd1de56(0xb37)], _0x554e75[_0xd1de56(0x688)], Cesium['Math']['EPSILON7']) && (_0x554e75[_0xd1de56(0x688)] += Cesium['Math'][_0xd1de56(0xd1c)]),
                         Cesium[_0xd1de56(0x417)][_0xd1de56(0xc13)](_0x554e75['top'], _0x554e75['bottom'], Cesium[_0xd1de56(0x417)][_0xd1de56(0x518)]) && (_0x554e75[_0xd1de56(0x7d0)] += Cesium[_0xd1de56(0x417)][_0xd1de56(0xd1c)]),
                         _0x187114[_0xd1de56(0x9ef)] = Cesium[_0xd1de56(0x50e)]['fromDegrees'](_0x554e75[_0xd1de56(0xb37)], _0x554e75[_0xd1de56(0xc1a)], _0x554e75['right'], _0x554e75[_0xd1de56(0x7d0)]),
                         _0x187114['_urlTemplate'] = _0x187114[_0xd1de56(0x67b)] + 'tileImage.' + _0x187114[_0xd1de56(0x957)] + _0xd1de56(0x7dd),
                         _0x187114[_0xd1de56(0x2cb)] = Cesium[_0xd1de56(0x4d9)](_0x187114[_0xd1de56(0x2cb)], _0x187114[_0xd1de56(0x944)]['length']),
                         _0x187114['_ready'] = !0x0,
                         void _0x187114[_0xd1de56(0x59f)][_0xd1de56(0x559)](!0x0);
               let _0x26aa40 = new Cesium[(_0xd1de56(0x25b))](_0x554e75[_0xd1de56(0xb37)], _0x554e75[_0xd1de56(0xc1a)], 0x0)
                    , _0x150917 = new Cesium[(_0xd1de56(0x25b))](_0x554e75[_0xd1de56(0x688)], _0x554e75[_0xd1de56(0x7d0)], 0x0);
               if (!Cesium[_0xd1de56(0x336)](_0x187114[_0xd1de56(0x916)])) {
                    let _0x574dd3, _0x77c745, _0x2eccd4, _0x2effa6, _0x2a769a = Cesium['defined'](_0x3bdcef[_0xd1de56(0x405)]) && Cesium[_0xd1de56(0x336)](_0x3bdcef[_0xd1de56(0x405)][_0xd1de56(0xb35)]) && (_0xd1de56(0xb84) === _0x3bdcef[_0xd1de56(0x405)]['projection'][_0xd1de56(0xc8e)] || _0xd1de56(0x447) === _0x3bdcef[_0xd1de56(0x405)][_0xd1de56(0xb35)][_0xd1de56(0xc8e)]), _0x20c03c = _0x2a769a ? new Cesium['WebMercatorProjection']() : new Cesium['GeographicProjection'](), _0x10f5d3 = _0x20c03c[_0xd1de56(0x4bf)](_0x26aa40), _0x2a29a7 = _0x20c03c[_0xd1de56(0x4bf)](_0x150917), _0x4ba0ab = new Cesium['Rectangle'](_0x10f5d3[_0xd1de56(0xb4c)], _0x10f5d3[_0xd1de56(0x400)], _0x2a29a7[_0xd1de56(0xb4c)], _0x2a29a7[_0xd1de56(0x400)]);
                    if (!_0x146824) {
                         _0x2eccd4 = [],
                              _0x2effa6 = new Cesium['Cartesian2'](_0x3bdcef[_0xd1de56(0xc95)], _0x3bdcef['dpi']);
                         for (let _0x31fd47 = 0x0; _0x31fd47 < _0x447808[_0xd1de56(0x72b)]; _0x31fd47++)
                              _0x2eccd4[_0xd1de56(0x63e)](0x1 / _0x447808[_0x31fd47]);
                         let _0xce1981 = _0x447808[0x0]
                              , _0x588a23 = 0.0254 / (_0x3bdcef[_0xd1de56(0xc95)] * _0xce1981);
                         _0x574dd3 = Math[_0xd1de56(0xc1f)]((_0x150917['x'] - _0x26aa40['x']) / _0x588a23 / _0x3bdcef[_0xd1de56(0xd32)]['width']),
                              _0x77c745 = Math[_0xd1de56(0xc1f)]((_0x150917['y'] - _0x26aa40['y']) / _0x588a23 / _0x3bdcef[_0xd1de56(0xd32)]['height']),
                              _0x187114[_0xd1de56(0x944)] = _0x447808;
                    }
                    _0x187114[_0xd1de56(0x916)] = _0x2a769a ? new Cesium[(_0xd1de56(0xac4))]({
                         'numberOfLevelZeroTilesX': _0x574dd3,
                         'numberOfLevelZeroTilesY': _0x77c745,
                         'rectangleSouthwestInMeters': _0x146824 ? void 0x0 : _0x26aa40,
                         'rectangleNortheastInMeters': _0x146824 ? void 0x0 : _0x150917
                    }) : new _0x2fa622({
                         'projection': _0x20c03c,
                         'rectangleSouthwestInMeters': _0x26aa40,
                         'rectangleNortheastInMeters': _0x150917,
                         'numberOfLevelZeroTilesX': _0x574dd3,
                         'numberOfLevelZeroTilesY': _0x77c745,
                         'customDPI': _0x2effa6,
                         'scaleDenominators': _0x2eccd4
                    }),
                         _0x187114[_0xd1de56(0x9ef)] = _0x4ba0ab;
               }
               let _0x97a256 = _0x146824 ? -20037508.342789248 : _0x554e75['left']
                    , _0x4791e4 = _0x146824 ? 20037508.342789095 : _0x554e75[_0xd1de56(0x7d0)];
               _0x187114[_0xd1de56(0x927)] = _0x187114[_0xd1de56(0x67b)] + 'tileImage.' + _0x187114[_0xd1de56(0x957)] + _0xd1de56(0x525) + _0x97a256 + _0xd1de56(0x618) + _0x4791e4 + '}',
                    _0x187114[_0xd1de56(0x2cb)] = Cesium['defaultValue'](_0x187114['_maximumLevel'], _0x187114[_0xd1de56(0x944)]['length']),
                    _0x187114[_0xd1de56(0x5fd)] = !0x0,
                    _0x187114[_0xd1de56(0x59f)][_0xd1de56(0x559)](!0x0);
          }
          function _0x2dd45c(_0x5d46ca, _0x14c90c, _0x18e222, _0x50a8e1, _0x55d0ca) {
               const _0x4135cc = _0xc3a123;
               var _0x34ac79;
               if (_0x5d46ca['isTileMap']) {
                    var _0x2bdc66, _0x1a80fc = '' === _0x5d46ca[_0x4135cc(0x7aa)] ? '' : _0x4135cc(0xacb) + _0x5d46ca[_0x4135cc(0x7aa)];
                    'DEGREE' === _0x5d46ca[_0x4135cc(0xc80)] ? 0x1 === _0x5d46ca[_0x4135cc(0x8c2)] ? _0x34ac79 = _0x5d46ca['_urlTemplate']['replace'](_0x4135cc(0xb3e), '')[_0x4135cc(0x6c0)](_0x4135cc(0xcbe), _0x1a80fc)[_0x4135cc(0x6c0)](_0x4135cc(0x947), 'tileImages')[_0x4135cc(0x6c0)](_0x4135cc(0x882), '') : (_0x2bdc66 = _0x5d46ca[_0x4135cc(0x944)][_0x50a8e1 + _0x5d46ca[_0x4135cc(0x4d0)]] || _0x4dee06[_0x50a8e1],
                         _0x34ac79 = _0x5d46ca['_urlTemplate'][_0x4135cc(0x6c0)](_0x4135cc(0x8b8), _0x14c90c)['replace'](_0x4135cc(0x47c), _0x18e222)[_0x4135cc(0x6c0)](_0x4135cc(0xd90), _0x2bdc66[_0x4135cc(0x892)]())['replace']('{tileversion}', _0x1a80fc)) : _0x4135cc(0xcaf) === _0x5d46ca['_coordUnit'] && (0x1 === _0x5d46ca['packingRequest'] ? _0x34ac79 = _0x5d46ca[_0x4135cc(0x927)][_0x4135cc(0x6c0)](_0x4135cc(0xb3e), '')['replace'](_0x4135cc(0xcbe), _0x1a80fc)[_0x4135cc(0x6c0)](_0x4135cc(0x947), _0x4135cc(0xd2a))['replace'](_0x4135cc(0x882), '') : (_0x2bdc66 = _0x5d46ca[_0x4135cc(0x944)][_0x50a8e1],
                              _0x34ac79 = _0x5d46ca['_urlTemplate']['replace'](_0x4135cc(0x8b8), _0x14c90c)['replace'](_0x4135cc(0x47c), _0x18e222)[_0x4135cc(0x6c0)](_0x4135cc(0xd90), _0x2bdc66[_0x4135cc(0x892)]())[_0x4135cc(0x6c0)](_0x4135cc(0xcbe), _0x1a80fc)));
               } else
                    _0x34ac79 = _0x5d46ca[_0x4135cc(0x927)]['replace']('{x}', _0x14c90c)[_0x4135cc(0x6c0)]('{y}', _0x18e222)['replace'](_0x4135cc(0x777), _0x50a8e1)[_0x4135cc(0x6c0)](_0x4135cc(0x2f4), _0x5d46ca[_0x4135cc(0x238)]);
               if (Cesium[_0x4135cc(0x336)](_0x5d46ca[_0x4135cc(0x5a9)])) {
                    var _0x1c55d7 = _0x5d46ca[_0x4135cc(0x5a9)]
                         , _0x394af4 = _0x1c55d7[(_0x14c90c + _0x18e222 + _0x50a8e1) % _0x1c55d7['length']];
                    _0x34ac79 = _0x34ac79[_0x4135cc(0x6c0)](domainReg, function (_0x3bdb72, _0x423dcd) {
                         return '{s}' === _0x423dcd ? _0x394af4 : _0x3bdb72;
                    });
               }
               return _0x34ac79;
          }
          function _0xa8eb96(_0x2939cd, _0x39b93a) {
               const _0x4465b4 = _0xc3a123;
               if (Cesium[_0x4465b4(0x336)](_0x2939cd)) {
                    var _0x330e28 = _0x2939cd[_0x4465b4(0x855)](_0x39b93a);
                    if (null !== _0x330e28) {
                         var _0x4ba362 = parseFloat(_0x330e28);
                         return isNaN(_0x4ba362) ? void 0x0 : _0x4ba362;
                    }
               }
          }
          function _0xbc3654(_0x589805, _0x3425dc, _0x23ca03) {
               const _0x1cef7e = _0xc3a123;
               for (var _0x24527f = '', _0x171579 = _0x23ca03; _0x171579 >= 0x0; --_0x171579) {
                    var _0x389e86 = 0x1 << _0x171579
                         , _0x22a86d = 0x0;
                    Cesium[_0x1cef7e(0x682)](_0x3425dc, _0x389e86) ? Cesium[_0x1cef7e(0x682)](_0x589805, _0x389e86) && (_0x22a86d |= 0x1) : (_0x22a86d |= 0x2,
                         Cesium[_0x1cef7e(0x682)](_0x589805, _0x389e86) || (_0x22a86d |= 0x1)),
                         _0x24527f += _0x22a86d;
               }
               return _0x24527f;
          }
          function _0x3e4b17(_0x5e137e, _0x3d3a3f, _0x4d30b2, _0x16980c) {
               const _0x25c4f4 = _0xc3a123;
               var _0x4ea926 = _0x5e137e[_0x25c4f4(0x3ed)]
                    , _0x3cfe82 = Math[_0x25c4f4(0xd18)](0x2, _0x4ea926)
                    , _0x1488ee = Math[_0x25c4f4(0x763)](_0x3d3a3f / _0x3cfe82)
                    , _0x2f5804 = _0x3d3a3f % _0x3cfe82
                    , _0x377b18 = Math['floor'](_0x4d30b2 / _0x3cfe82)
                    , _0x39fe62 = _0x4d30b2 % _0x3cfe82;
               return {
                    'x': _0x1488ee,
                    'y': _0x377b18,
                    'url': _0x2dd45c(_0x5e137e, _0x1488ee, _0x377b18, _0x16980c),
                    'col': _0x2f5804,
                    'row': _0x39fe62,
                    'level': _0x16980c,
                    'blockSize': _0x3cfe82
               };
          }
          const _0x4dee06 = [1.690163571602655e-9, 3.3803271432053056e-9, 6.760654286410611e-9, 1.3521308572821242e-8, 2.7042617145642484e-8, 5.408523429128511e-8, 1.0817046858256998e-7, 2.1634093716513974e-7, 4.3268187433028044e-7, 8.653637486605571e-7, 0.0000017307274973211203, 0.0000034614549946422405, 0.0000069229099892844565, 0.000013845819978568952, 0.000027691639957137904, 0.0000553832799142758, 0.0001107665598285516, 0.0002215331196571032, 0.0004430662393142064, 0.0008861324786284128, 0.001772264957256826, 0.003544529914513652];
          function _0x36e5cd(_0x225faa) {
               const _0x5d5b50 = _0xc3a123;
               if (!(_0x225faa = Cesium[_0x5d5b50(0x4d9)](_0x225faa, {}))[_0x5d5b50(0x29f)])
                    throw new Cesium[(_0x5d5b50(0x610))](_0x5d5b50(0x7eb));
               if (this['_url'] = Cesium[_0x5d5b50(0x9cb)](_0x225faa[_0x5d5b50(0x29f)]),
                    this[_0x5d5b50(0x647)] = Cesium[_0x5d5b50(0x6e9)][_0x5d5b50(0x773)](this['_url']),
                    this[_0x5d5b50(0xda8)] = _0x225faa[_0x5d5b50(0x29f)]['indexOf'](_0x5d5b50(0x307)) > -0x1,
                    this[_0x5d5b50(0x810)] = _0x225faa[_0x5d5b50(0x29f)][_0x5d5b50(0xcef)](_0x5d5b50(0x3c4)) > -0x1,
                    !this[_0x5d5b50(0xda8)] && !this[_0x5d5b50(0x810)])
                    throw new Cesium[(_0x5d5b50(0x610))](_0x5d5b50(0x920));
               this[_0x5d5b50(0x927)] = void 0x0,
                    this[_0x5d5b50(0x8fc)] = new Cesium[(_0x5d5b50(0x31d))](),
                    this[_0x5d5b50(0x238)] = _0x5d5b50(0x459),
                    this['_tileWidth'] = 0x100,
                    this[_0x5d5b50(0xdb2)] = 0x100,
                    this[_0x5d5b50(0x957)] = Cesium[_0x5d5b50(0x4d9)](_0x225faa[_0x5d5b50(0xb47)], _0x5d5b50(0x459)),
                    this['_minimumLevel'] = Cesium['defaultValue'](_0x225faa[_0x5d5b50(0x776)], 0x0),
                    this['_maximumLevel'] = _0x225faa[_0x5d5b50(0x448)],
                    this[_0x5d5b50(0x9ef)] = void 0x0,
                    this['_tilingScheme'] = _0x225faa[_0x5d5b50(0x574)],
                    this[_0x5d5b50(0xc80)] = void 0x0,
                    this[_0x5d5b50(0x944)] = _0x4dee06,
                    this[_0x5d5b50(0x620)] = _0x225faa['tileDiscardPolicy'];
               let _0x575bf4 = Cesium[_0x5d5b50(0x4d9)](_0x225faa[_0x5d5b50(0x97c)], '');
               _0x5d5b50(0x379) == typeof _0x575bf4 && (_0x575bf4 = new Cesium[(_0x5d5b50(0x627))](_0x575bf4)),
                    this[_0x5d5b50(0x832)] = _0x575bf4,
                    this[_0x5d5b50(0x5fd)] = !0x1,
                    this[_0x5d5b50(0x59f)] = _0x13c1fa(),
                    this[_0x5d5b50(0x885)] = !0x1,
                    this[_0x5d5b50(0x833)] = {},
                    this['_blockCacheQueue'] = new _0x50381f(),
                    this[_0x5d5b50(0x865)] = 0x64,
                    this[_0x5d5b50(0x3ed)] = 0x0;
               let _0x3f747c, _0x43d962, _0x29ffca = this;
               this[_0x5d5b50(0x810)] ? (_0x3f747c = this[_0x5d5b50(0x647)][_0x5d5b50(0x9d4)]({
                    'url': _0x5d5b50(0x799)
               }),
                    _0x28b135(_0x424c59[_0x5d5b50(0x597)]) && (_0x28b135(_0x424c59[_0x5d5b50(0x597)][_0x5d5b50(0x1a1)][_0x3f747c[_0x5d5b50(0x29f)]]) ? _0x3f747c[_0x5d5b50(0x29f)] = _0x424c59[_0x5d5b50(0x44b)](_0x3f747c[_0x5d5b50(0x29f)], _0x3f747c['url']) : _0x3f747c['url'] = _0x424c59[_0x5d5b50(0x6be)](_0x3f747c[_0x5d5b50(0x29f)])),
                    _0x43d962 = _0x3f747c[_0x5d5b50(0x891)]()) : (_0x3f747c = Cesium[_0x5d5b50(0x6e9)][_0x5d5b50(0x773)](_0x225faa['url'] + _0x5d5b50(0x1d2)),
                         _0x43d962 = _0x3f747c[_0x5d5b50(0xbc7)]()),
                    _0x43d962[_0x5d5b50(0x7db)](function (_0x11b5d4) {
                         const _0x5545a6 = _0x5d5b50;
                         _0x29ffca[_0x5545a6(0x810)] ? _0x3d4b11(_0x29ffca, _0x11b5d4) : _0x29ffca['_isTileMap'] && _0x13f576(_0x29ffca, _0x11b5d4);
                    }, function (_0xd2b9bc) {
                         const _0x199669 = _0x5d5b50;
                         let _0x5d4620 = _0x199669(0x319) + _0x29ffca['_url'] + '.';
                         _0x29ffca[_0x199669(0x59f)][_0x199669(0xa56)](new Cesium[(_0x199669(0xd5c))](_0x5d4620));
                    });
          }
          Object[_0xc3a123(0xcde)](_0x36e5cd[_0xc3a123(0x2d4)], {
               'url': {
                    'get': function () {
                         const _0x3bf1a6 = _0xc3a123;
                         return this[_0x3bf1a6(0x67b)];
                    }
               },
               'tileWidth': {
                    'get': function () {
                         const _0x3314ee = _0xc3a123;
                         if (!this[_0x3314ee(0x5fd)])
                              throw new DeveloperError(_0x3314ee(0xa8e));
                         return this['_tileWidth'];
                    }
               },
               'tileHeight': {
                    'get': function () {
                         const _0x361124 = _0xc3a123;
                         if (!this[_0x361124(0x5fd)])
                              throw new DeveloperError('tileHeight\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.');
                         return this[_0x361124(0xdb2)];
                    }
               },
               'tileFormat': {
                    'get': function () {
                         const _0x2a9e68 = _0xc3a123;
                         return this[_0x2a9e68(0x957)];
                    }
               },
               'maximumLevel': {
                    'get': function () {
                         const _0x732564 = _0xc3a123;
                         if (!this[_0x732564(0x5fd)])
                              throw new DeveloperError(_0x732564(0xba0));
                         return 0x1 === this[_0x732564(0x4d0)] ? this['_maximumLevel'] : this['_maximumLevel'] - 0x1;
                    }
               },
               'minimumLevel': {
                    'get': function () {
                         const _0x3bb021 = _0xc3a123;
                         if (!this['_ready'])
                              throw new DeveloperError('minimumLevel\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.');
                         return this[_0x3bb021(0xbbe)];
                    }
               },
               'tilingScheme': {
                    'get': function () {
                         const _0x59656c = _0xc3a123;
                         if (!this[_0x59656c(0x5fd)])
                              throw new DeveloperError(_0x59656c(0xac0));
                         return this[_0x59656c(0x916)];
                    }
               },
               'rectangle': {
                    'get': function () {
                         const _0x5014ab = _0xc3a123;
                         if (!this[_0x5014ab(0x5fd)])
                              throw new DeveloperError(_0x5014ab(0x266));
                         return this[_0x5014ab(0x9ef)];
                    }
               },
               'errorEvent': {
                    'get': function () {
                         const _0x1b8f20 = _0xc3a123;
                         return this[_0x1b8f20(0x8fc)];
                    }
               },
               'ready': {
                    'get': function () {
                         const _0x491e92 = _0xc3a123;
                         return this[_0x491e92(0x5fd)];
                    }
               },
               'credit': {
                    'get': function () {
                         const _0x2012a0 = _0xc3a123;
                         return this[_0x2012a0(0x832)];
                    }
               },
               'hasAlphaChannel': {
                    'get': function () {
                         return !0x0;
                    }
               },
               'readyPromise': {
                    'get': function () {
                         const _0x2ad88f = _0xc3a123;
                         return this[_0x2ad88f(0x59f)]['promise'];
                    }
               },
               'tileDiscardPolicy': {
                    'get': function () {
                         const _0x4acf1a = _0xc3a123;
                         return this[_0x4acf1a(0x620)];
                    }
               },
               'isBlock': {
                    'get': function () {
                         const _0x575262 = _0xc3a123;
                         return this[_0x575262(0x885)];
                    }
               },
               'blockCache': {
                    'get': function () {
                         const _0x4b14f6 = _0xc3a123;
                         return this[_0x4b14f6(0x833)];
                    }
               },
               'blockCacheQueue': {
                    'get': function () {
                         const _0x59f3b8 = _0xc3a123;
                         return this[_0x59f3b8(0x30f)];
                    }
               },
               'blockCacheSize': {
                    'get': function () {
                         const _0x1e3fd4 = _0xc3a123;
                         return this[_0x1e3fd4(0x865)];
                    }
               }
          }),
               _0x36e5cd[_0xc3a123(0x2d4)]['getTileCredits'] = function (_0x5348be, _0x23facc, _0xe331) { }
               ;
          var _0x15c17f = /\.dxtz/i;
          function _0x1fa45a(_0x57e884, _0x1a1856) {
               const _0x2ab969 = _0xc3a123;
               let _0xcfc401 = Cesium['Resource'][_0x2ab969(0x773)](_0x1a1856);
               return _0x57e884[_0x2ab969(0xd5d)] ? _0xcfc401[_0x2ab969(0x8e6)]({
                    'preferBlob': !0x0,
                    'preferImageBitmap': !0x0,
                    'flipY': !0x0
               }) : _0x57e884['isBlock'] ? (_0x15c17f[_0x2ab969(0xbd5)](_0xcfc401[_0x2ab969(0x29f)]) && (_0x57e884[_0x2ab969(0x954)] = !0x0),
                    _0xcfc401['fetchArrayBuffer']()) : _0xcfc401[_0x2ab969(0x8e6)]();
          }
          _0x36e5cd['prototype'][_0xc3a123(0x305)] = function (_0x76ac38, _0x8a776e, _0x3a4c0b, _0x5467e0) {
               const _0x5e15b9 = _0xc3a123;
               if (!this['_ready'])
                    throw new Cesium[(_0x5e15b9(0x610))]('requestImage\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.');
               let _0x46d2a9;
               if (this[_0x5e15b9(0x885)]) {
                    _0x46d2a9 = this[_0x5e15b9(0x647)][_0x5e15b9(0x9d4)]({
                         'url': this[_0x5e15b9(0x927)],
                         'request': _0x5467e0,
                         'templateValues': {}
                    }),
                         _0x5467e0[_0x5e15b9(0xc8e)] = 0x5;
                    var _0x5827e2 = _0x3e4b17(this, _0x76ac38, _0x8a776e, _0x3a4c0b);
                    _0x46d2a9[_0x5e15b9(0x29f)] = _0x5827e2[_0x5e15b9(0x29f)],
                         _0x5467e0[_0x5e15b9(0xb80)] = _0x5827e2,
                         _0x5467e0[_0x5e15b9(0xc29)] = _0xbc3654(_0x5827e2['x'], _0x5827e2['y'], _0x5827e2[_0x5e15b9(0xd01)]),
                         _0x5467e0['providerName'] = this[_0x5e15b9(0x67b)];
                    var _0x353cee = this[_0x5e15b9(0x79e)][_0x5467e0[_0x5e15b9(0xc29)]];
                    if (Cesium[_0x5e15b9(0x336)](_0x353cee) && Cesium[_0x5e15b9(0x336)](_0x353cee['data']))
                         return this[_0x5e15b9(0x67d)]['touch'](_0x353cee),
                              _0x353cee['data'];
               } else {
                    if (this['_isSci3D'])
                         _0x46d2a9 = this[_0x5e15b9(0x647)][_0x5e15b9(0x9d4)]({
                              'url': this['_urlTemplate'],
                              'request': _0x5467e0,
                              'templateValues': {
                                   'x': _0x76ac38,
                                   'y': _0x8a776e,
                                   'level': _0x3a4c0b,
                                   'fileExtension': this[_0x5e15b9(0x957)]
                              }
                         });
                    else {
                         let _0x68a2af = _0x5e15b9(0x58b) === this[_0x5e15b9(0xc80)] ? this[_0x5e15b9(0x944)][_0x3a4c0b + 0x1] : this[_0x5e15b9(0x944)][_0x3a4c0b];
                         _0x46d2a9 = this[_0x5e15b9(0x647)][_0x5e15b9(0x9d4)]({
                              'url': this[_0x5e15b9(0x927)],
                              'request': _0x5467e0,
                              'templateValues': {
                                   'x': _0x76ac38,
                                   'y': _0x8a776e,
                                   'scale': _0x68a2af
                              },
                              'queryParameters': {
                                   'transparent': !0x0,
                                   'cacheEnabled': !0x0,
                                   '_cache': !0x0,
                                   'width': 0x100,
                                   'height': 0x100,
                                   'redirect': !0x1,
                                   'overlapDisplayed': !0x1
                              }
                         });
                    }
               }
               return function (_0x2175f9, _0x4ac9bf) {
                    const _0x26e985 = _0x5e15b9;
                    if (_0x2175f9['_isBlock']) {
                         var _0x39a259 = _0x2175f9[_0x26e985(0x79e)][_0x5467e0['quadKey']];
                         if (Cesium[_0x26e985(0x336)](_0x39a259))
                              return _0x39a259['promise'];
                         var _0x224c66 = _0x1fa45a(_0x2175f9, _0x4ac9bf);
                         if (!Cesium[_0x26e985(0x336)](_0x224c66))
                              return;
                         return _0x39a259 = new _0x41efcb(_0x2175f9, _0x5467e0[_0x26e985(0xc29)]),
                              _0x2175f9[_0x26e985(0x79e)][_0x5467e0[_0x26e985(0xc29)]] = _0x39a259,
                              _0x39a259['promise'] = _0x224c66,
                              _0x39a259[_0x26e985(0xa16)];
                    }
                    return _0x1fa45a(_0x2175f9, _0x4ac9bf);
               }(this, _0x46d2a9);
          }
               ,
               _0x36e5cd[_0xc3a123(0x2d4)][_0xc3a123(0x8be)] = function () { }
               ;
          const _0x11b22c = Cesium[_0xc3a123(0x336)];
          function _0x2a3b4e(_0x276da5) {
               const _0x288e20 = _0xc3a123;
               this['resource'] = _0x276da5[_0x288e20(0x1ff)],
                    this['version'] = _0x276da5[_0x288e20(0xd2f)],
                    this['isHeightmap'] = _0x276da5['isHeightmap'],
                    this[_0x288e20(0xb9c)] = _0x276da5[_0x288e20(0xb9c)],
                    this[_0x288e20(0x857)] = _0x276da5[_0x288e20(0x857)],
                    this['hasVertexNormals'] = _0x276da5['hasVertexNormals'],
                    this[_0x288e20(0x866)] = _0x276da5[_0x288e20(0x866)],
                    this[_0x288e20(0x94a)] = _0x276da5[_0x288e20(0x94a)],
                    this[_0x288e20(0x536)] = _0x276da5['availabilityLevels'],
                    this[_0x288e20(0x381)] = _0x276da5[_0x288e20(0x381)],
                    this['littleEndianExtensionSize'] = _0x276da5[_0x288e20(0x6e1)],
                    this[_0x288e20(0x381)] = _0x276da5['availabilityTilesLoaded'],
                    this['availabilityPromiseCache'] = {};
          }
          let _0x1bb688 = {
               'OCT_VERTEX_NORMALS': 0x1,
               'WATER_MASK': 0x2,
               'METADATA': 0x4
          };
          function _0x1b4e12(_0x2b88ef) {
               const _0x41dcae = _0xc3a123;
               if (!Cesium['defined'](_0x2b88ef) || !Cesium[_0x41dcae(0x336)](_0x2b88ef['url']))
                    throw new Cesium['DeveloperError']('options.url\x20is\x20required.');
               this[_0x41dcae(0x67b)] = Cesium[_0x41dcae(0x9cb)](_0x2b88ef['url']),
                    this['_isSct'] = Cesium['defaultValue'](_0x2b88ef[_0x41dcae(0x7d2)], !0x0),
                    this[_0x41dcae(0x9b1)] = 0x41,
                    this[_0x41dcae(0x34c)] = void 0x0,
                    this[_0x41dcae(0x7d8)] = !0x1,
                    this[_0x41dcae(0x2f3)] = !0x1,
                    this[_0x41dcae(0x91d)] = _0x2b88ef['ellipsoid'],
                    this[_0x41dcae(0x996)] = Cesium[_0x41dcae(0x4d9)](_0x2b88ef[_0x41dcae(0xca9)], !0x1),
                    this[_0x41dcae(0xbb9)] = Cesium[_0x41dcae(0x4d9)](_0x2b88ef['requestWaterMask'], !0x1),
                    this[_0x41dcae(0x7ec)] = Cesium[_0x41dcae(0x4d9)](_0x2b88ef[_0x41dcae(0x397)], !0x0),
                    this[_0x41dcae(0x8fc)] = new Cesium['Event']();
               let _0x4d9f42 = _0x2b88ef[_0x41dcae(0x97c)];
               'string' == typeof _0x4d9f42 && (_0x4d9f42 = new Cesium['Credit'](_0x4d9f42)),
                    this[_0x41dcae(0x832)] = _0x4d9f42,
                    this[_0x41dcae(0x573)] = _0x41dcae(0x451),
                    this[_0x41dcae(0x44f)] = void 0x0,
                    this['_ready'] = !0x1,
                    this[_0x41dcae(0x59f)] = _0x13c1fa(),
                    this[_0x41dcae(0xab6)] = void 0x0;
               let _0x298133, _0x1d1be6 = this, _0x308c39 = this['_layers'] = [], _0x240148 = [];
               function _0x2f51ed(_0x2c6104) {
                    const _0x1467d2 = _0x41dcae;
                    let _0x373cf6 = _0x2c6104[_0x1467d2(0x7d5)];
                    _0x1d1be6[_0x1467d2(0x916)] = new Cesium[(_0x1467d2(0x945))]({
                         'numberOfLevelZeroTilesX': 0x2,
                         'numberOfLevelZeroTilesY': 0x1,
                         'ellipsoid': _0x1d1be6['_ellipsoid']
                    }),
                         _0x1d1be6['_levelZeroMaximumGeometricError'] = Cesium['TerrainProvider'][_0x1467d2(0x64c)](_0x1d1be6[_0x1467d2(0x916)][_0x1467d2(0x34d)], _0x1d1be6[_0x1467d2(0x9b1)], _0x1d1be6[_0x1467d2(0x916)][_0x1467d2(0x6a4)](0x0));
                    var _0x91f6eb = _0x9879e5[_0x1467d2(0xd4c)](_0x373cf6, _0x1467d2(0x923), void 0x0);
                    _0x1d1be6[_0x1467d2(0x3ed)] = _0x9879e5['queryNumericAttribute'](_0x91f6eb, 'BlockScale', void 0x0),
                         Cesium[_0x1467d2(0x336)](_0x1d1be6[_0x1467d2(0x3ed)]) && _0x1d1be6['_blockScale'] > 0x0 && (_0x1d1be6[_0x1467d2(0x885)] = !0x0);
                    var _0x19f236 = _0x9879e5['queryStringValue'](_0x373cf6, _0x1467d2(0xd67), void 0x0);
                    _0x19f236 = _0x19f236[_0x1467d2(0x91c)](),
                         _0x1d1be6[_0x1467d2(0x791)] = _0x1467d2(0x716) === _0x19f236;
                    let _0x497ea7 = _0x9879e5[_0x1467d2(0xd4c)](_0x373cf6, 'Bounds', void 0x0)
                         , _0x42624a = _0x9879e5['queryNumericValue'](_0x497ea7, _0x1467d2(0x327), void 0x0)
                         , _0x2265c8 = _0x9879e5[_0x1467d2(0x2cd)](_0x497ea7, _0x1467d2(0xbb1), void 0x0)
                         , _0x5bae44 = _0x9879e5[_0x1467d2(0x2cd)](_0x497ea7, _0x1467d2(0x321), void 0x0)
                         , _0x224cae = _0x9879e5['queryNumericValue'](_0x497ea7, _0x1467d2(0xc27), void 0x0);
                    Cesium[_0x1467d2(0x336)](_0x42624a) && Cesium[_0x1467d2(0x336)](_0x2265c8) && Cesium[_0x1467d2(0x336)](_0x5bae44) && Cesium['defined'](_0x224cae) && (_0x1d1be6[_0x1467d2(0x9ef)] = Cesium['Rectangle'][_0x1467d2(0xd78)](_0x42624a, _0x5bae44, _0x2265c8, _0x224cae));
                    let _0x5d473b = _0x9879e5['queryFirstNode'](_0x373cf6, _0x1467d2(0x484), void 0x0)
                         , _0x12aa2f = _0x9879e5[_0x1467d2(0x6c3)](_0x5d473b, _0x1467d2(0x51a), void 0x0)
                         , _0x19a35c = [];
                    for (let _0x5c8899 = 0x0, _0x17f057 = _0x12aa2f[_0x1467d2(0x72b)]; _0x5c8899 < _0x17f057; _0x5c8899++) {
                         let _0x2f5a17 = parseInt(_0x12aa2f[_0x5c8899]['textContent']);
                         _0x19a35c[_0x1467d2(0x63e)](_0x2f5a17);
                    }
                    let _0xb07e32 = _0x19a35c[0x0]
                         , _0x1c6b32 = _0x19a35c[_0x19a35c['length'] - 0x1];
                    _0x1d1be6[_0x1467d2(0x5f2)] = _0x19a35c;
                    let _0x51a51d = _0x9879e5[_0x1467d2(0xd4c)](_0x373cf6, 'Available', void 0x0);
                    if (_0x51a51d) {
                         let _0x228852 = _0x9879e5[_0x1467d2(0x6c3)](_0x51a51d, _0x1467d2(0x8d6), void 0x0)
                              , _0x2e0ed4 = _0xb07e32 > 0x0 ? _0x19a35c[_0x1467d2(0x72b)] + 0x1 : _0x19a35c[_0x1467d2(0x72b)]
                              , _0x58e2f7 = new Array(_0x2e0ed4);
                         for (let _0x194ebb = 0x0; _0x194ebb < _0xb07e32; _0x194ebb++)
                              _0x58e2f7[_0x194ebb] = [];
                         for (let _0x457093 = 0x0, _0x4efb03 = _0x228852[_0x1467d2(0x72b)]; _0x457093 < _0x4efb03; _0x457093++) {
                              let _0x1c9441 = _0x228852[_0x457093]
                                   , _0x32fb7a = [];
                              _0x58e2f7[_0x9879e5['queryNumericAttribute'](_0x1c9441, 'level', void 0x0)] = _0x32fb7a;
                              let _0x46818d = _0x9879e5['queryChildNodes'](_0x1c9441, 'TileBounds', void 0x0);
                              for (let _0x3765bd = 0x0, _0x3c7e16 = _0x46818d['length']; _0x3765bd < _0x3c7e16; _0x3765bd++) {
                                   let _0x4668c7 = _0x46818d[_0x3765bd]
                                        , _0x3a9101 = _0x9879e5['queryNumericValue'](_0x4668c7, 'StartCol', void 0x0)
                                        , _0x462cda = _0x9879e5[_0x1467d2(0x2cd)](_0x4668c7, _0x1467d2(0x9f9), void 0x0)
                                        , _0xe1cccc = _0x9879e5[_0x1467d2(0x2cd)](_0x4668c7, _0x1467d2(0x7ab), void 0x0)
                                        , _0xaff12c = _0x9879e5[_0x1467d2(0x2cd)](_0x4668c7, _0x1467d2(0xc3e), void 0x0);
                                   _0x32fb7a['push']({
                                        'startX': _0x3a9101,
                                        'startY': _0x462cda,
                                        'endX': _0xe1cccc,
                                        'endY': _0xaff12c
                                   });
                              }
                         }
                         _0x58e2f7[0x0] = [{
                              'startX': 0x0,
                              'startY': 0x0,
                              'endX': 0x1,
                              'endY': 0x1
                         }];
                         let _0x597877 = new Cesium[(_0x1467d2(0xd27))](_0x1d1be6['_tilingScheme'], _0x1c6b32);
                         for (let _0xe421e0 = 0x0; _0xe421e0 < _0x58e2f7[_0x1467d2(0x72b)]; ++_0xe421e0) {
                              let _0x505829 = _0x58e2f7[_0xe421e0]
                                   , _0x2f65f4 = _0x1d1be6[_0x1467d2(0x916)]['getNumberOfYTilesAtLevel'](_0xe421e0);
                              if (Cesium[_0x1467d2(0x336)](_0x240148[_0xe421e0]) || (_0x240148[_0xe421e0] = []),
                                   Cesium[_0x1467d2(0x336)](_0x505829))
                                   for (let _0x2f4ca7 = 0x0; _0x2f4ca7 < _0x505829['length']; ++_0x2f4ca7) {
                                        let _0x437166 = _0x505829[_0x2f4ca7]
                                             , _0x51d648 = _0x2f65f4 - _0x437166[_0x1467d2(0x301)] - 0x1
                                             , _0x2f145f = _0x2f65f4 - _0x437166[_0x1467d2(0x200)] - 0x1;
                                        _0x240148[_0xe421e0]['push']([_0x437166['startX'], _0x51d648, _0x437166['endX'], _0x2f145f]),
                                             _0x597877[_0x1467d2(0x4c2)](_0xe421e0, _0x437166[_0x1467d2(0x1e8)], _0x51d648, _0x437166[_0x1467d2(0xbd3)], _0x2f145f);
                                   }
                         }
                         _0x1d1be6['_availability'] = _0x597877;
                    }
                    _0x308c39[_0x1467d2(0x63e)](new _0x2a3b4e({
                         'resource': _0x298133,
                         'version': _0x1467d2(0x54f),
                         'isHeightmap': !0x1,
                         'tileUrlTemplates': _0x1467d2(0x222),
                         'availability': void 0x0,
                         'hasVertexNormals': !0x1,
                         'hasWaterMask': !0x1,
                         'hasMetadata': !0x1,
                         'availabilityLevels': 0x0,
                         'availabilityTilesLoaded': !0x1,
                         'littleEndianExtensionSize': !0x0
                    }));
                    let _0x3cad0a = _0x240148[_0x1467d2(0x72b)];
                    if (_0x3cad0a > 0x0) {
                         let _0x4ccdaa = _0x1d1be6['_availability'] = new Cesium[(_0x1467d2(0xd27))](_0x1d1be6[_0x1467d2(0x916)], 0x0);
                         for (let _0x4b52af = 0x0; _0x4b52af < _0x3cad0a; ++_0x4b52af) {
                              let _0x1c3bfa = _0x240148[_0x4b52af];
                              for (let _0x52a403 = 0x0; _0x52a403 < _0x1c3bfa[_0x1467d2(0x72b)]; ++_0x52a403) {
                                   let _0x1ed13e = _0x1c3bfa[_0x52a403];
                                   _0x4ccdaa['addAvailableTileRange'](_0x4b52af, _0x1ed13e[0x0], _0x1ed13e[0x1], _0x1ed13e[0x2], _0x1ed13e[0x3]);
                              }
                         }
                    }
                    _0x1d1be6['_ready'] = !0x0,
                         _0x1d1be6[_0x1467d2(0x59f)][_0x1467d2(0x559)](!0x0);
               }
               function _0x4384cb(_0x2d5893) {
                    const _0x122a89 = _0x41dcae;
                    Cesium[_0x122a89(0x336)](_0x2d5893) && 0x194 === _0x2d5893[_0x122a89(0x83e)] && _0x2f51ed({
                         'tilejson': '2.1.0',
                         'format': _0x122a89(0x45b),
                         'version': _0x122a89(0x54f),
                         'scheme': _0x122a89(0x451),
                         'tiles': [_0x122a89(0x222)]
                    });
               }
               this[_0x41dcae(0x885)] = !0x1,
                    this['_blockCache'] = {},
                    this[_0x41dcae(0x30f)] = new _0x50381f(),
                    this[_0x41dcae(0x865)] = 0x64,
                    this[_0x41dcae(0x3ed)] = 0x0,
                    this[_0x41dcae(0x791)] = !0x1,
                    Promise[_0x41dcae(0x559)](_0x2b88ef['url'])[_0x41dcae(0x7db)](_0x497ca4 => {
                         const _0x514904 = _0x41dcae;
                         _0x298133 = Cesium[_0x514904(0x6e9)][_0x514904(0x773)](_0x497ca4),
                              _0x298133[_0x514904(0x9cb)]();
                         let _0x37c8d8 = _0x298133['getDerivedResource']({
                              'url': 'config'
                         });
                         _0x11b22c(_0x424c59[_0x514904(0x597)]) && (_0x11b22c(_0x424c59['CREDENTIAL'][_0x514904(0x1a1)][_0x37c8d8['url']]) ? _0x37c8d8[_0x514904(0x29f)] = _0x424c59[_0x514904(0x44b)](_0x37c8d8['url'], _0x37c8d8[_0x514904(0x29f)]) : _0x37c8d8[_0x514904(0x29f)] = _0x424c59[_0x514904(0x6be)](_0x37c8d8['url'])),
                              _0x37c8d8['fetchXML']()['then'](_0x2f51ed, _0x4384cb);
                    }
                         , _0x28b82b => {
                              reject(_0x28b82b);
                         }
                    );
          }
          function _0x1609b8(_0x3eb13a, _0x5bbc19, _0x46b723, _0xe446aa, _0xa6350b, _0x236aa6) {
               const _0x458796 = _0xc3a123;
               let _0x32e604 = _0x236aa6[_0x458796(0x6e1)]
                    , _0x897c3e = 0x0
                    , _0x4bd087 = 0x3 * Float64Array[_0x458796(0x385)]
                    , _0x951ab4 = 0x4 * Float64Array[_0x458796(0x385)]
                    , _0x2c6871 = 0x3 * Uint16Array[_0x458796(0x385)]
                    , _0x5732c7 = Uint16Array[_0x458796(0x385)]
                    , _0x5e1db1 = 0x3 * _0x5732c7
                    , _0x106d67 = new DataView(_0x5bbc19)
                    , _0x219bae = new Cesium['Cartesian3'](_0x106d67['getFloat64'](_0x897c3e, !0x0), _0x106d67[_0x458796(0x994)](_0x897c3e + 0x8, !0x0), _0x106d67[_0x458796(0x994)](_0x897c3e + 0x10, !0x0));
               _0x897c3e += _0x4bd087;
               let _0x17b5ef = _0x106d67['getFloat32'](_0x897c3e, !0x0);
               _0x897c3e += Float32Array['BYTES_PER_ELEMENT'];
               let _0x479cc1 = _0x106d67['getFloat32'](_0x897c3e, !0x0);
               _0x897c3e += Float32Array[_0x458796(0x385)];
               let _0x1e0be9 = new Cesium[(_0x458796(0xc1c))](new Cesium[(_0x458796(0x25b))](_0x106d67[_0x458796(0x994)](_0x897c3e, !0x0), _0x106d67['getFloat64'](_0x897c3e + 0x8, !0x0), _0x106d67['getFloat64'](_0x897c3e + 0x10, !0x0)), _0x106d67[_0x458796(0x994)](_0x897c3e + _0x4bd087, !0x0));
               _0x897c3e += _0x951ab4;
               let _0x50a638 = new Cesium[(_0x458796(0x25b))](_0x106d67[_0x458796(0x994)](_0x897c3e, !0x0), _0x106d67['getFloat64'](_0x897c3e + 0x8, !0x0), _0x106d67[_0x458796(0x994)](_0x897c3e + 0x10, !0x0));
               _0x897c3e += _0x4bd087;
               let _0x4cca63 = _0x106d67[_0x458796(0x494)](_0x897c3e, !0x0);
               _0x897c3e += Uint32Array[_0x458796(0x385)];
               let _0x4c83fe = new Uint16Array(_0x5bbc19, _0x897c3e, 0x3 * _0x4cca63);
               _0x897c3e += _0x4cca63 * _0x2c6871,
                    _0x4cca63 > 0x10000 && (_0x5732c7 = Uint32Array['BYTES_PER_ELEMENT'],
                         _0x5e1db1 = 0x3 * _0x5732c7);
               let _0xba3b4f = _0x4c83fe[_0x458796(0x4ca)](0x0, _0x4cca63)
                    , _0x92bac5 = _0x4c83fe['subarray'](_0x4cca63, 0x2 * _0x4cca63)
                    , _0x367774 = _0x4c83fe['subarray'](0x2 * _0x4cca63, 0x3 * _0x4cca63);
               Cesium[_0x458796(0xbe5)]['zigZagDeltaDecode'](_0xba3b4f, _0x92bac5, _0x367774),
                    _0x897c3e % _0x5732c7 != 0x0 && (_0x897c3e += _0x5732c7 - _0x897c3e % _0x5732c7);
               let _0x20b340 = _0x106d67[_0x458796(0x494)](_0x897c3e, !0x0);
               _0x897c3e += Uint32Array[_0x458796(0x385)];
               let _0xd6ac60 = Cesium[_0x458796(0x36b)][_0x458796(0x500)](_0x4cca63, _0x5bbc19, _0x897c3e, 0x3 * _0x20b340);
               _0x897c3e += _0x20b340 * _0x5e1db1;
               let _0x30c63c = 0x0
                    , _0x2dae36 = _0xd6ac60['length'];
               for (let _0x193d28 = 0x0; _0x193d28 < _0x2dae36; ++_0x193d28) {
                    let _0x1970ab = _0xd6ac60[_0x193d28];
                    _0xd6ac60[_0x193d28] = _0x30c63c - _0x1970ab,
                         0x0 === _0x1970ab && ++_0x30c63c;
               }
               let _0x523816 = _0x106d67['getUint32'](_0x897c3e, !0x0);
               _0x897c3e += Uint32Array[_0x458796(0x385)];
               let _0x36be9a = Cesium['IndexDatatype'][_0x458796(0x500)](_0x4cca63, _0x5bbc19, _0x897c3e, _0x523816);
               _0x897c3e += _0x523816 * _0x5732c7;
               let _0x5b0748 = _0x106d67[_0x458796(0x494)](_0x897c3e, !0x0);
               _0x897c3e += Uint32Array[_0x458796(0x385)];
               let _0x2fb4b7 = Cesium[_0x458796(0x36b)]['createTypedArrayFromArrayBuffer'](_0x4cca63, _0x5bbc19, _0x897c3e, _0x5b0748);
               _0x897c3e += _0x5b0748 * _0x5732c7;
               let _0x21db45 = _0x106d67[_0x458796(0x494)](_0x897c3e, !0x0);
               _0x897c3e += Uint32Array[_0x458796(0x385)];
               let _0x439a20 = Cesium['IndexDatatype'][_0x458796(0x500)](_0x4cca63, _0x5bbc19, _0x897c3e, _0x21db45);
               _0x897c3e += _0x21db45 * _0x5732c7;
               let _0x13269a = _0x106d67[_0x458796(0x494)](_0x897c3e, !0x0);
               _0x897c3e += Uint32Array[_0x458796(0x385)];
               let _0x549163, _0x1f8b83, _0x8d70af = Cesium['IndexDatatype'][_0x458796(0x500)](_0x4cca63, _0x5bbc19, _0x897c3e, _0x13269a);
               for (_0x897c3e += _0x13269a * _0x5732c7; _0x897c3e < _0x106d67[_0x458796(0x62b)];) {
                    let _0x269c45 = _0x106d67[_0x458796(0xb7b)](_0x897c3e, !0x0);
                    _0x897c3e += Uint8Array[_0x458796(0x385)];
                    let _0x2abbd3 = _0x106d67['getUint32'](_0x897c3e, _0x32e604);
                    if (_0x897c3e += Uint32Array['BYTES_PER_ELEMENT'],
                         _0x269c45 === _0x1bb688[_0x458796(0x7fe)] && _0x3eb13a[_0x458796(0x996)])
                         _0x549163 = new Uint8Array(_0x5bbc19, _0x897c3e, 0x2 * _0x4cca63);
                    else {
                         if (_0x269c45 === _0x1bb688['WATER_MASK'] && _0x3eb13a[_0x458796(0xbb9)])
                              _0x1f8b83 = new Uint8Array(_0x5bbc19, _0x897c3e, _0x2abbd3);
                         else {
                              if (_0x269c45 === _0x1bb688['METADATA'] && _0x3eb13a['_requestMetadata'] && !_0x3eb13a[_0x458796(0x322)]) {
                                   let _0x4c5f85 = _0x106d67[_0x458796(0x494)](_0x897c3e, !0x0);
                                   if (_0x4c5f85 > 0x0) {
                                        let _0x43b0cd = Cesium['getStringFromTypedArray'](new Uint8Array(_0x5bbc19), _0x897c3e + Uint32Array[_0x458796(0x385)], _0x4c5f85)
                                             , _0x3f07da = JSON[_0x458796(0x9bc)](_0x43b0cd)[_0x458796(0xaac)];
                                        if (Cesium['defined'](_0x3f07da))
                                             for (let _0x16474f = 0x0; _0x16474f < _0x3f07da[_0x458796(0x72b)]; ++_0x16474f) {
                                                  let _0x4518f3 = _0x46b723 + _0x16474f + 0x1
                                                       , _0x5b9495 = _0x3f07da[_0x16474f]
                                                       , _0x10f16e = _0x3eb13a['_tilingScheme'][_0x458796(0x372)](_0x4518f3);
                                                  for (let _0xd43483 = 0x0; _0xd43483 < _0x5b9495[_0x458796(0x72b)]; ++_0xd43483) {
                                                       let _0x3f936e = _0x5b9495[_0xd43483]
                                                            , _0x163005 = _0x10f16e - _0x3f936e[_0x458796(0x301)] - 0x1
                                                            , _0x5732a8 = _0x10f16e - _0x3f936e[_0x458796(0x200)] - 0x1;
                                                       _0x3eb13a[_0x458796(0x857)][_0x458796(0x4c2)](_0x4518f3, _0x3f936e['startX'], _0x163005, _0x3f936e['endX'], _0x5732a8),
                                                            _0x236aa6['availability']['addAvailableTileRange'](_0x4518f3, _0x3f936e['startX'], _0x163005, _0x3f936e[_0x458796(0xbd3)], _0x5732a8);
                                                  }
                                             }
                                   }
                                   _0x236aa6[_0x458796(0x381)][_0x458796(0x4c2)](_0x46b723, _0xe446aa, _0xa6350b, _0xe446aa, _0xa6350b);
                              }
                         }
                    }
                    _0x897c3e += _0x2abbd3;
               }
               let _0x3324e0 = 0x5 * _0x3eb13a[_0x458796(0x70b)](_0x46b723)
                    , _0xc5d2d3 = _0x3eb13a['_tilingScheme']['tileXYToRectangle'](_0xe446aa, _0xa6350b, _0x46b723)
                    , _0x4fbfe8 = Cesium['OrientedBoundingBox'][_0x458796(0xb52)](_0xc5d2d3, _0x17b5ef, _0x479cc1, _0x3eb13a[_0x458796(0x916)][_0x458796(0x34d)]);
               return new Cesium[(_0x458796(0x905))]({
                    'center': _0x219bae,
                    'minimumHeight': _0x17b5ef,
                    'maximumHeight': _0x479cc1,
                    'boundingSphere': _0x1e0be9,
                    'orientedBoundingBox': _0x4fbfe8,
                    'horizonOcclusionPoint': _0x50a638,
                    'quantizedVertices': _0x4c83fe,
                    'encodedNormals': _0x549163,
                    'indices': _0xd6ac60,
                    'westIndices': _0x36be9a,
                    'southIndices': _0x2fb4b7,
                    'eastIndices': _0x439a20,
                    'northIndices': _0x8d70af,
                    'westSkirtHeight': _0x3324e0,
                    'southSkirtHeight': _0x3324e0,
                    'eastSkirtHeight': _0x3324e0,
                    'northSkirtHeight': _0x3324e0,
                    'childTileMask': 0xf,
                    'waterMask': _0x1f8b83,
                    'credits': _0x3eb13a[_0x458796(0xab6)]
               });
          }
          function _0xf0e9b1(_0x49a100, _0x1fefcc, _0x22ac29) {
               const _0x315dae = _0xc3a123;
               for (var _0xe49080 = '', _0x312996 = _0x22ac29; _0x312996 >= 0x0; --_0x312996) {
                    var _0x57f1af = 0x1 << _0x312996
                         , _0x10d084 = 0x0;
                    Cesium[_0x315dae(0x682)](_0x1fefcc, _0x57f1af) ? Cesium['isBitSet'](_0x49a100, _0x57f1af) && (_0x10d084 |= 0x1) : (_0x10d084 |= 0x2,
                         Cesium[_0x315dae(0x682)](_0x49a100, _0x57f1af) || (_0x10d084 |= 0x1)),
                         _0xe49080 += _0x10d084;
               }
               return _0xe49080;
          }
          function _0x38a4a7(_0x3172d8, _0xcd8cce, _0x4b65c1, _0x5a7110) {
               const _0x74bde2 = _0xc3a123;
               var _0x1abd1c = Math[_0x74bde2(0x455)](_0x3172d8[_0x74bde2(0x3ed)], _0x5a7110)
                    , _0x1ecae2 = Math[_0x74bde2(0xd18)](0x2, _0x1abd1c)
                    , _0x7a1d9c = _0xcd8cce % _0x1ecae2;
               return {
                    'x': Math['floor'](_0xcd8cce / _0x1ecae2),
                    'y': Math[_0x74bde2(0x763)](_0x4b65c1 / _0x1ecae2),
                    'col': _0x7a1d9c,
                    'row': _0x4b65c1 % _0x1ecae2,
                    'level': _0x5a7110,
                    'blockSize': _0x1ecae2
               };
          }
          function _0x24eeea(_0x5227b2, _0x558c13) {
               const _0x3a18e5 = _0xc3a123;
               var _0x3cc88e = new DataView(_0x5227b2)
                    , _0x4adf77 = 0x0;
               _0x3cc88e[_0x3a18e5(0x494)](_0x4adf77, !0x0),
                    _0x4adf77 += 0x4;
               var _0x202565 = _0x3cc88e[_0x3a18e5(0x494)](_0x4adf77, !0x0);
               _0x4adf77 += 0x4;
               for (var _0x5c9671 = _0x558c13[_0x3a18e5(0x306)], _0x175f49 = _0x558c13[_0x3a18e5(0x5e4)] * _0x558c13['blockSize'] + _0x5c9671, _0x2a2e16 = 0x0, _0x26145d = 0x0, _0x5b2f65 = 0x0; _0x5b2f65 < _0x202565; _0x5b2f65++) {
                    if (_0x5b2f65 < _0x175f49)
                         _0x2a2e16 += _0x3cc88e['getUint32'](_0x4adf77, !0x0);
                    else {
                         if (_0x5b2f65 === _0x175f49) {
                              _0x26145d = _0x3cc88e[_0x3a18e5(0x494)](_0x4adf77, !0x0),
                                   _0x4adf77 += 0x4;
                              break;
                         }
                    }
                    _0x4adf77 += 0x4;
               }
               if (_0x4adf77 = 0x8 + 0x4 * _0x202565,
                    0x0 !== _0x26145d)
                    return _0x4adf77 += _0x2a2e16,
                         new Uint8Array(_0x5227b2)[_0x3a18e5(0x21c)](_0x4adf77, _0x4adf77 + _0x26145d)[_0x3a18e5(0x25d)];
          }
          function _0x56e54a(_0xd84f7f, _0x4d29e2, _0x5e7c7b, _0x5b242a, _0x537916, _0x204d1d, _0x127fc6, _0x4720dc) {
               const _0x129589 = _0xc3a123;
               var _0x5dd3c6 = _0x4720dc['x']
                    , _0x4582cc = _0x4720dc['y'];
               return _0xd84f7f[_0x129589(0x9d4)]({
                    'url': _0x4d29e2,
                    'templateValues': {
                         'version': _0x5e7c7b[_0x129589(0xd2f)],
                         'z': _0x5b242a,
                         'x': _0x5dd3c6,
                         'y': _0x4582cc
                    },
                    'headers': _0x537916,
                    'request': _0x204d1d
               })[_0x129589(0x49b)]();
          }
          function _0x25416d(_0x52f2a7, _0x8a5940, _0x576d6a, _0x2dc0b4, _0x4694a8, _0x8b9afe, _0x1de133, _0x187a0b, _0x35656d) {
               const _0x131f2c = _0xc3a123;
               function _0x1188c8(_0x2dccaa) {
                    const _0x34eda2 = _0x5e91;
                    var _0x29600b;
                    if (Cesium[_0x34eda2(0x336)](_0x2dccaa)) {
                         var _0x3d3a50 = _0x8a5940[_0x34eda2(0x79e)][_0x1de133[_0x34eda2(0xc29)]];
                         return Cesium[_0x34eda2(0x336)](_0x3d3a50[_0x34eda2(0x1ab)]) || (_0x3d3a50['data'] = _0x2dccaa),
                              _0x8a5940[_0x34eda2(0x67d)][_0x34eda2(0x625)](_0x3d3a50),
                              _0x8a5940[_0x34eda2(0x67d)][_0x34eda2(0x5bb)](_0x8a5940[_0x34eda2(0x409)]),
                              _0x29600b = _0x24eeea(_0x2dccaa, _0x1de133[_0x34eda2(0xb80)]),
                              Cesium['defined'](_0x29600b) ? (_0x29600b = _0xce368[_0x34eda2(0xcb6)](new Uint8Array(_0x29600b))['buffer'],
                                   _0x1609b8(_0x8a5940, _0x29600b, _0x4694a8, _0x576d6a, _0x2dc0b4, _0x8b9afe)) : Promise[_0x34eda2(0xa56)]();
                    }
               }
               var _0x10b92d, _0x274763 = _0x8b9afe[_0x131f2c(0x1ff)];
               _0x1de133['type'] = 0x5,
                    _0x1de133[_0x131f2c(0x6fa)] = _0x8a5940['tablename'],
                    _0x10b92d = _0x38a4a7(_0x8a5940, _0x576d6a, _0x187a0b, _0x4694a8),
                    _0x1de133[_0x131f2c(0xc29)] = _0xf0e9b1(_0x10b92d['x'], _0x10b92d['y'], _0x10b92d[_0x131f2c(0xd01)]),
                    _0x1de133['blockInfo'] = _0x10b92d;
               var _0x473298 = _0x8a5940['blockCache'][_0x1de133[_0x131f2c(0xc29)]];
               if (Cesium[_0x131f2c(0x336)](_0x473298) && Cesium[_0x131f2c(0x336)](_0x473298[_0x131f2c(0x1ab)])) {
                    _0x8a5940[_0x131f2c(0x67d)][_0x131f2c(0x625)](_0x473298);
                    var _0xebfc71 = _0x24eeea(_0x473298[_0x131f2c(0x1ab)], _0x10b92d);
                    return Cesium[_0x131f2c(0x336)](_0xebfc71) ? (_0xebfc71 = _0xce368[_0x131f2c(0xcb6)](new Uint8Array(_0xebfc71))[_0x131f2c(0x25d)],
                         _0x1609b8(_0x8a5940, _0xebfc71, _0x4694a8, _0x576d6a, _0x2dc0b4, _0x8b9afe)) : Promise['reject']();
               }
               _0x473298 = _0x8a5940[_0x131f2c(0x79e)][_0x1de133['quadKey'] || _0x4694a8 + '' + _0x576d6a + _0x2dc0b4];
               if (Cesium['defined'](_0x473298))
                    return _0x473298['promise'][_0x131f2c(0x7db)](_0x1188c8);
               var _0x21168e = _0x56e54a(_0x274763, _0x52f2a7, _0x8b9afe, _0x4694a8, _0x35656d, _0x1de133, 0x0, _0x10b92d);
               return _0x21168e ? (_0x473298 = new _0x41efcb(_0x8a5940, _0x1de133[_0x131f2c(0xc29)] || _0x4694a8 + '' + _0x576d6a + _0x2dc0b4),
                    _0x8a5940[_0x131f2c(0x79e)][_0x1de133[_0x131f2c(0xc29)]] = _0x473298,
                    _0x473298[_0x131f2c(0xa16)] = _0x21168e,
                    _0x21168e[_0x131f2c(0x7db)](_0x1188c8)) : void 0x0;
          }
          function _0x1fd4de(_0x302d3d, _0xd34413, _0x27f527, _0x1d3c31, _0x3e84cf, _0x4aaa83) {
               const _0x155fc2 = _0xc3a123;
               let _0xbf8993, _0x2e15fe = _0x302d3d[_0x155fc2(0x67b)] + _0x3e84cf[_0x155fc2(0xb9c)];
               if (_0x11b22c(_0x424c59[_0x155fc2(0x597)]) && (_0x2e15fe = _0x11b22c(_0x424c59[_0x155fc2(0x597)][_0x155fc2(0x1a1)][_0x2e15fe]) ? _0x424c59['addTokenWithKey'](_0x2e15fe, _0x2e15fe) : _0x424c59[_0x155fc2(0x6be)](_0x2e15fe)),
                    _0x302d3d[_0x155fc2(0x573)] && _0x155fc2(0x451) !== _0x302d3d['_scheme'])
                    _0xbf8993 = _0x27f527;
               else
                    _0xbf8993 = _0x302d3d[_0x155fc2(0x916)][_0x155fc2(0x372)](_0x1d3c31) - _0x27f527 - 0x1;
               let _0x677be0 = _0x2e15fe
                    , _0x4107a5 = _0x3e84cf[_0x155fc2(0x1ff)];
               _0x11b22c(_0x424c59[_0x155fc2(0x597)]) && (_0x11b22c(_0x424c59[_0x155fc2(0x597)][_0x155fc2(0x1a1)][_0x4107a5[_0x155fc2(0x29f)]]) ? _0x4107a5[_0x155fc2(0x29f)] = _0x424c59[_0x155fc2(0x44b)](_0x4107a5[_0x155fc2(0x29f)], _0x4107a5[_0x155fc2(0x29f)]) : _0x4107a5[_0x155fc2(0x29f)] = _0x424c59[_0x155fc2(0x6be)](_0x4107a5[_0x155fc2(0x29f)]));
               let _0x4fccf4 = {
                    'Accept': _0x155fc2(0xadd)
               };
               if (_0x302d3d[_0x155fc2(0x885)])
                    return _0x25416d(_0x677be0, _0x302d3d, _0xd34413, _0x27f527, _0x1d3c31, _0x3e84cf, _0x4aaa83, _0xbf8993, _0x4fccf4);
               let _0x424e8a = _0x4107a5[_0x155fc2(0x9d4)]({
                    'url': _0x677be0,
                    'templateValues': {
                         'version': _0x3e84cf[_0x155fc2(0xd2f)],
                         'z': _0x1d3c31,
                         'x': _0xd34413,
                         'y': _0xbf8993
                    },
                    'headers': _0x4fccf4,
                    'request': _0x4aaa83
               })['fetchArrayBuffer']();
               return Cesium[_0x155fc2(0x336)](_0x424e8a) ? _0x424e8a[_0x155fc2(0x7db)](function (_0x102741) {
                    const _0xb3de93 = _0x155fc2;
                    return _0x102741 = _0xce368[_0xb3de93(0xcb6)](new Uint8Array(_0x102741))[_0xb3de93(0x25d)],
                         _0x1609b8(_0x302d3d, _0x102741, _0x1d3c31, _0xd34413, _0x27f527, _0x3e84cf);
               }) : void 0x0;
          }
          Object['defineProperties'](_0x1b4e12[_0xc3a123(0x2d4)], {
               'errorEvent': {
                    'get': function () {
                         const _0x11f665 = _0xc3a123;
                         return this[_0x11f665(0x8fc)];
                    }
               },
               'credit': {
                    'get': function () {
                         const _0x5c0566 = _0xc3a123;
                         if (!this[_0x5c0566(0x5fd)])
                              throw new Cesium['DeveloperError'](_0x5c0566(0xb83));
                         return this['_credit'];
                    }
               },
               'tilingScheme': {
                    'get': function () {
                         const _0x143d6a = _0xc3a123;
                         if (!this['_ready'])
                              throw new Cesium[(_0x143d6a(0x610))](_0x143d6a(0x32a));
                         return this['_tilingScheme'];
                    }
               },
               'ready': {
                    'get': function () {
                         return this['_ready'];
                    }
               },
               'readyPromise': {
                    'get': function () {
                         const _0x3983d8 = _0xc3a123;
                         return this[_0x3983d8(0x59f)][_0x3983d8(0xa16)];
                    }
               },
               'hasWaterMask': {
                    'get': function () {
                         const _0x1c2eaf = _0xc3a123;
                         if (!this[_0x1c2eaf(0x5fd)])
                              throw new Cesium['DeveloperError'](_0x1c2eaf(0x1a7));
                         return this[_0x1c2eaf(0x7d8)] && this[_0x1c2eaf(0xbb9)];
                    }
               },
               'hasVertexNormals': {
                    'get': function () {
                         const _0x5d6fee = _0xc3a123;
                         if (!this[_0x5d6fee(0x5fd)])
                              throw new Cesium['DeveloperError']('hasVertexNormals\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.');
                         return this[_0x5d6fee(0x2f3)] && this[_0x5d6fee(0x996)];
                    }
               },
               'hasMetadata': {
                    'get': function () {
                         const _0x55b1ad = _0xc3a123;
                         if (!this[_0x55b1ad(0x5fd)])
                              throw new Cesium['DeveloperError'](_0x55b1ad(0x677));
                         return this[_0x55b1ad(0x4e6)] && this[_0x55b1ad(0x7ec)];
                    }
               },
               'requestVertexNormals': {
                    'get': function () {
                         const _0x2833d2 = _0xc3a123;
                         return this[_0x2833d2(0x996)];
                    }
               },
               'requestWaterMask': {
                    'get': function () {
                         const _0x15da68 = _0xc3a123;
                         return this[_0x15da68(0xbb9)];
                    }
               },
               'requestMetadata': {
                    'get': function () {
                         const _0x47173a = _0xc3a123;
                         return this[_0x47173a(0x7ec)];
                    }
               },
               'availability': {
                    'get': function () {
                         const _0x2029d5 = _0xc3a123;
                         if (!this[_0x2029d5(0x5fd)])
                              throw new Cesium[(_0x2029d5(0x610))](_0x2029d5(0x743));
                         return this[_0x2029d5(0x44f)];
                    }
               },
               'blockCache': {
                    'get': function () {
                         const _0x455d80 = _0xc3a123;
                         return this[_0x455d80(0x833)];
                    }
               },
               'blockCacheQueue': {
                    'get': function () {
                         return this['_blockCacheQueue'];
                    }
               },
               'blockCacheSize': {
                    'get': function () {
                         const _0x521ca1 = _0xc3a123;
                         return this[_0x521ca1(0x865)];
                    }
               }
          }),
               _0x1b4e12['prototype'][_0xc3a123(0xb4f)] = function (_0x235b5b, _0x328788, _0x587c93, _0x43e66e) {
                    const _0xc7baf7 = _0xc3a123;
                    if (!this['_ready'])
                         throw new Cesium[(_0xc7baf7(0x610))](_0xc7baf7(0x4d7));
                    if (0x0 === _0x587c93) {
                         let _0x471918 = new Uint16Array(0x3000);
                         for (let _0x4d3513 = 0x0; _0x4d3513 < 0x40; _0x4d3513++)
                              for (let _0x386ee0 = 0x0; _0x386ee0 < 0x40; _0x386ee0++)
                                   _0x471918[0x40 * _0x4d3513 + _0x386ee0] = Math[_0xc7baf7(0x763)](0x7fff * _0x4d3513 / 0x3f),
                                        _0x471918[0x1000 + 0x40 * _0x4d3513 + _0x386ee0] = Math[_0xc7baf7(0x763)](0x7fff * _0x386ee0 / 0x3f),
                                        _0x471918[0x2000 + 0x40 * _0x4d3513 + _0x386ee0] = 0x0;
                         let _0x4ae454 = new Uint16Array(0x5d06);
                         for (let _0x5d78a6 = 0x0; _0x5d78a6 < 0x3f; _0x5d78a6++)
                              for (let _0x58dbb3 = 0x0; _0x58dbb3 < 0x3f; _0x58dbb3++)
                                   _0x4ae454[0x6 * (0x3f * _0x5d78a6 + _0x58dbb3)] = 0x40 * _0x5d78a6 + _0x58dbb3,
                                        _0x4ae454[0x6 * (0x3f * _0x5d78a6 + _0x58dbb3) + 0x1] = 0x40 * (_0x5d78a6 + 0x1) + _0x58dbb3 + 0x1,
                                        _0x4ae454[0x6 * (0x3f * _0x5d78a6 + _0x58dbb3) + 0x2] = 0x40 * _0x5d78a6 + _0x58dbb3 + 0x1,
                                        _0x4ae454[0x6 * (0x3f * _0x5d78a6 + _0x58dbb3) + 0x3] = 0x40 * (_0x5d78a6 + 0x1) + _0x58dbb3,
                                        _0x4ae454[0x6 * (0x3f * _0x5d78a6 + _0x58dbb3) + 0x4] = 0x40 * (_0x5d78a6 + 0x1) + _0x58dbb3 + 0x1,
                                        _0x4ae454[0x6 * (0x3f * _0x5d78a6 + _0x58dbb3) + 0x5] = 0x40 * _0x5d78a6 + _0x58dbb3;
                         let _0x810b3 = new Uint16Array(0x0)
                              , _0x10aeb8 = new Cesium[(_0xc7baf7(0x25b))](NaN, -0x1 / 0x0, NaN)
                              , _0x37b022 = new Cesium[(_0xc7baf7(0x25b))](0x0, -3189068.5, 0x0);
                         return 0x1 === _0x235b5b && (_0x37b022['y'] = 3189068.5,
                              _0x10aeb8['y'] = 0x1 / 0x0),
                              Promise[_0xc7baf7(0x559)](new Cesium[(_0xc7baf7(0x905))]({
                                   'center': _0x37b022,
                                   'minimumHeight': 0x0,
                                   'maximumHeight': 0x0,
                                   'boundingSphere': new Cesium[(_0xc7baf7(0xc1c))](_0x37b022, 9567205.5),
                                   'horizonOcclusionPoint': _0x10aeb8,
                                   'quantizedVertices': _0x471918,
                                   'indices': _0x4ae454,
                                   'westIndices': _0x810b3,
                                   'southIndices': _0x810b3,
                                   'eastIndices': _0x810b3,
                                   'northIndices': _0x810b3,
                                   'westSkirtHeight': 0x0,
                                   'southSkirtHeight': 0x0,
                                   'eastSkirtHeight': 0x0,
                                   'northSkirtHeight': 0x0,
                                   'childTileMask': 0xf,
                                   'invalid': !0x1,
                                   'hasInvalid': !0x1
                              }));
                    }
                    let _0x15cbda, _0x1411bf = this['_layers'], _0x152675 = _0x1411bf['length'];
                    if (0x1 === _0x152675)
                         _0x15cbda = _0x1411bf[0x0];
                    else
                         for (let _0x5dbdce = 0x0; _0x5dbdce < _0x152675; ++_0x5dbdce) {
                              let _0x594f20 = _0x1411bf[_0x5dbdce];
                              if (!Cesium[_0xc7baf7(0x336)](_0x594f20[_0xc7baf7(0x857)]) || _0x594f20['availability'][_0xc7baf7(0xcb5)](_0x587c93, _0x235b5b, _0x328788)) {
                                   _0x15cbda = _0x594f20;
                                   break;
                              }
                         }
                    return Cesium[_0xc7baf7(0x336)](_0x43e66e) || (_0x43e66e = new Cesium[(_0xc7baf7(0xd8c))]({
                         'throttle': !0x1,
                         'throttleByServer': !0x1,
                         'type': Cesium['RequestType'][_0xc7baf7(0x745)]
                    })),
                         _0x1fd4de(this, _0x235b5b, _0x328788, _0x587c93, _0x15cbda, _0x43e66e);
               }
               ,
               _0x1b4e12[_0xc3a123(0x2d4)]['getLevelMaximumGeometricError'] = function (_0x3025f6) {
                    const _0x230c9b = _0xc3a123;
                    return this[_0x230c9b(0xcf9)] / (0x1 << _0x3025f6);
               }
               ;
          let _0x5f0cb3 = new Cesium['Rectangle']();
          _0x1b4e12[_0xc3a123(0x2d4)]['getTileDataAvailable'] = function (_0x9296d6, _0x952551, _0x5bcb07) {
               const _0x2b14ef = _0xc3a123;
               if (0x0 !== _0x5bcb07) {
                    if (-0x1 !== this[_0x2b14ef(0x5f2)][_0x2b14ef(0xcef)](_0x5bcb07)) {
                         let _0x4bd73c = this[_0x2b14ef(0x916)]['tileXYToRectangle'](_0x9296d6, _0x952551, _0x5bcb07)
                              , _0xf7803c = Cesium[_0x2b14ef(0x50e)][_0x2b14ef(0x7ff)](this[_0x2b14ef(0x9ef)], _0x4bd73c, _0x5f0cb3);
                         return Cesium['defined'](_0xf7803c);
                    }
                    return !0x1;
               }
               if (Cesium[_0x2b14ef(0x336)](this[_0x2b14ef(0x44f)]))
                    return !(_0x5bcb07 > this[_0x2b14ef(0x44f)][_0x2b14ef(0x2cb)]) && (!!this[_0x2b14ef(0x44f)][_0x2b14ef(0xcb5)](_0x5bcb07, _0x9296d6, _0x952551) || (this[_0x2b14ef(0x4e6)],
                         !0x1));
          }
               ,
               _0x1b4e12['prototype'][_0xc3a123(0x890)] = function (_0x34d07e, _0x201176, _0x202d95) { }
               ;
          let _0x40604c = Cesium[_0xc3a123(0xa62)]
               , _0x58e2bb = Cesium[_0xc3a123(0x336)]
               , _0x4aa760 = Cesium['RequestState']
               , _0x2c9c68 = Object[_0xc3a123(0x9d5)]({
                    'PACK': 0x4,
                    'BLOCK': 0x5,
                    'BLOCKPACK': 0x6
               }, Cesium[_0xc3a123(0xc43)]);
          var _0x568c4a = {
               'webp': _0xc3a123(0xc3c),
               'png': _0xc3a123(0xbef)
          }
               , _0x5d757a = {
                    'UNLOADED': 0x0,
                    'TRANSITIONING': 0x1,
                    'RECEIVED': 0x2,
                    'TEXTURE_LOADED': 0x3,
                    'READY': 0x4,
                    'FAILED': 0x5,
                    'INVALID': 0x6,
                    'PLACEHOLDER': 0x7,
                    'RENDERING': 0x8,
                    'RENDERED': 0x9
               }
               , _0x52cf34 = /\.dxtz/i;
          function _0x200460(_0x556a1f, _0x36dce7, _0x4681af) {
               const _0x1fef2a = _0xc3a123;
               var _0x48b17b = new DataView(_0x556a1f, _0x36dce7, _0x4681af)
                    , _0x550f2d = 0x0
                    , _0x2a0d38 = _0x48b17b[_0x1fef2a(0x494)](_0x550f2d, !0x0);
               _0x550f2d += Uint32Array[_0x1fef2a(0x385)],
                    _0x48b17b[_0x1fef2a(0x494)](_0x550f2d, !0x0),
                    _0x550f2d += Uint32Array['BYTES_PER_ELEMENT'];
               var _0xb14670 = 0x20 === _0x2a0d38 ? PixelFormat[_0x1fef2a(0x215)] : PixelFormat[_0x1fef2a(0x788)]
                    , _0x4c1924 = _0x48b17b[_0x1fef2a(0x494)](_0x550f2d, !0x0);
               _0x550f2d += Uint32Array[_0x1fef2a(0x385)];
               var _0x5e5ac1 = _0x48b17b[_0x1fef2a(0x494)](_0x550f2d, !0x0);
               _0x550f2d += Uint32Array[_0x1fef2a(0x385)],
                    _0x48b17b[_0x1fef2a(0x494)](_0x550f2d, !0x0),
                    _0x550f2d += Uint32Array[_0x1fef2a(0x385)];
               var _0x4eb360 = _0x48b17b[_0x1fef2a(0x494)](_0x550f2d, !0x0);
               _0x550f2d += Uint32Array['BYTES_PER_ELEMENT'];
               var _0x213c0a = new Uint8Array(_0x556a1f, _0x550f2d + _0x36dce7, _0x4eb360)
                    , _0x283257 = pako[_0x1fef2a(0xcb6)](_0x213c0a)['buffer']
                    , _0x5d0992 = new Uint8Array(_0x283257);
               return new CompressedTextureBuffer(_0xb14670, _0x4c1924, _0x5e5ac1, _0x5d0992);
          }
          function _0x5d1ec3(_0x4cf213, _0x217f68, _0x9e50d5) {
               const _0xd90dc6 = _0xc3a123;
               var _0x26cd18 = new DataView(_0x4cf213)
                    , _0x3ba69d = 0x0;
               _0x26cd18['getUint32'](_0x3ba69d, !0x0),
                    _0x3ba69d += 0x4;
               var _0x223197 = _0x26cd18['getUint32'](_0x3ba69d, !0x0);
               _0x3ba69d += 0x4;
               for (var _0x305428 = _0x217f68[_0xd90dc6(0x306)], _0x43a430 = _0x217f68[_0xd90dc6(0x5e4)] * _0x217f68[_0xd90dc6(0x3b2)] + _0x305428, _0x15bdde = 0x0, _0x5d6791 = 0x0, _0x2a36b9 = 0x0; _0x2a36b9 < _0x223197; _0x2a36b9++) {
                    if (_0x2a36b9 < _0x43a430)
                         _0x15bdde += _0x26cd18[_0xd90dc6(0x494)](_0x3ba69d, !0x0);
                    else {
                         if (_0x2a36b9 === _0x43a430) {
                              _0x5d6791 = _0x26cd18[_0xd90dc6(0x494)](_0x3ba69d, !0x0),
                                   _0x3ba69d += 0x4;
                              break;
                         }
                    }
                    _0x3ba69d += 0x4;
               }
               if (_0x3ba69d = 0x8 + 0x4 * _0x223197,
                    0x0 !== _0x5d6791) {
                    _0x3ba69d += _0x15bdde;
                    var _0x61289d = _0x13c1fa()
                         , _0x5a670e = _0x217f68[_0xd90dc6(0x29f)];
                    return _0x52cf34[_0xd90dc6(0xbd5)](_0x5a670e) ? _0x61289d[_0xd90dc6(0x559)](_0x200460(_0x4cf213, _0x3ba69d, _0x5d6791)) : _0x40604c({
                         'uint8Array': new Uint8Array(_0x4cf213, _0x3ba69d, _0x5d6791),
                         'format': _0x9e50d5,
                         'flipY': !0x0
                    });
               }
          }
          function _0xa2ce01(_0x1acc78, _0xb0cb7a) {
               const _0x2c8e93 = _0xc3a123
                    , _0x22fa46 = _0xb0cb7a[_0x2c8e93(0x390)]
                    , _0x1f7a4d = _0xb0cb7a;
               function _0x51bb66(_0x19e613) {
                    const _0xaafccd = _0x2c8e93;
                    if (!_0x58e2bb(_0x19e613))
                         return _0x3d456c();
                    var _0xd0087 = _0x568c4a[_0x22fa46[_0xaafccd(0x238)]]
                         , _0x19a28d = _0x22fa46[_0xaafccd(0x79e)][_0x1acc78[_0xaafccd(0x774)][_0xaafccd(0xc29)]];
                    _0x58e2bb(_0x19a28d[_0xaafccd(0x1ab)]) || (_0x19a28d[_0xaafccd(0x1ab)] = _0x19e613),
                         _0x22fa46['blockCacheQueue'][_0xaafccd(0x625)](_0x19a28d),
                         _0x22fa46[_0xaafccd(0x67d)][_0xaafccd(0x5bb)](_0x22fa46[_0xaafccd(0x409)]),
                         _0x58e2bb(_0x22fa46[_0xaafccd(0x901)]) && _0x22fa46[_0xaafccd(0x901)]['length'] > 0x0 && (_0x19e613 = decodeArrayBuffer(_0x19e613, _0x22fa46[_0xaafccd(0x901)]));
                    var _0x2ec088 = _0x5d1ec3(_0x19e613, _0x1acc78[_0xaafccd(0x774)]['blockInfo'], _0xd0087);
                    _0x58e2bb(_0x2ec088) || (_0x1acc78['state'] = _0x5d757a[_0xaafccd(0x801)]),
                         _0x2ec088[_0xaafccd(0x7db)](function (_0x250ba8) {
                              const _0x5c582b = _0xaafccd;
                              _0x1acc78['image'] = _0x250ba8,
                                   _0x1acc78[_0x5c582b(0x4f1)] = _0x5d757a[_0x5c582b(0x188)];
                         }, _0x54f232 => {
                              const _0x8be551 = _0xaafccd;
                              _0x1acc78[_0x8be551(0x4f1)] = _0x5d757a[_0x8be551(0x801)];
                         }
                         ),
                         _0x1acc78[_0xaafccd(0x774)] = void 0x0,
                         _0x58e2bb(Cesium[_0xaafccd(0x7c7)]['handleSuccess']) ? Cesium[_0xaafccd(0x7c7)][_0xaafccd(0xb34)](_0x1f7a4d[_0xaafccd(0x300)]) : _0x58e2bb(Cesium[_0xaafccd(0x7c7)]['reportSuccess']) && Cesium[_0xaafccd(0x7c7)][_0xaafccd(0x248)](_0x1f7a4d[_0xaafccd(0x300)]);
               }
               function _0x3d456c(_0x23c32f) {
                    const _0x54c9dc = _0x2c8e93;
                    if (_0x1acc78[_0x54c9dc(0x774)]['state'] === _0x4aa760[_0x54c9dc(0x73f)])
                         return _0x1acc78[_0x54c9dc(0x4f1)] = _0x5d757a[_0x54c9dc(0x3d8)],
                              void (_0x1acc78['request'] = void 0x0);
                    _0x1acc78['state'] = _0x5d757a[_0x54c9dc(0x801)],
                         _0x1acc78['request'] = void 0x0;
                    const _0x5bbd7c = _0x54c9dc(0xa39) + _0x1acc78['x'] + _0x54c9dc(0xdb9) + _0x1acc78['y'] + _0x54c9dc(0x903) + _0x1acc78[_0x54c9dc(0xd01)] + '.';
                    _0x1f7a4d['_requestImageError'] = Cesium[_0x54c9dc(0x7c7)]['handleError'](_0x1f7a4d[_0x54c9dc(0x300)], _0x22fa46, _0x22fa46[_0x54c9dc(0x8a2)], _0x5bbd7c, _0x1acc78['x'], _0x1acc78['y'], _0x1acc78['level'], _0x39da66, _0x23c32f);
               }
               function _0x39da66(_0x23fd27) {
                    const _0x24e4cd = _0x2c8e93;
                    var _0x441f63 = new Cesium[(_0x24e4cd(0xd8c))]({
                         'throttle': !0x1,
                         'throttleByServer': !0x0,
                         'type': _0x2c9c68[_0x24e4cd(0xd40)]
                    });
                    _0x441f63[_0x24e4cd(0x595)] = _0x23fd27,
                         _0x1acc78[_0x24e4cd(0x774)] = _0x441f63,
                         _0x1acc78['state'] = _0x5d757a[_0x24e4cd(0x928)];
                    var _0x285b63 = _0x22fa46[_0x24e4cd(0x305)](_0x1acc78['x'], _0x1acc78['y'], _0x1acc78[_0x24e4cd(0xd01)], _0x441f63, _0x1acc78[_0x24e4cd(0x7bd)], _0x1acc78);
                    if (!_0x58e2bb(_0x285b63))
                         return _0x1acc78['state'] = _0x5d757a[_0x24e4cd(0x3d8)],
                              void (_0x1acc78[_0x24e4cd(0x774)] = void 0x0);
                    _0x58e2bb(_0x22fa46['getTileCredits']) && (_0x1acc78[_0x24e4cd(0x6d9)] = _0x22fa46['getTileCredits'](_0x1acc78['x'], _0x1acc78['y'], _0x1acc78[_0x24e4cd(0xd01)])),
                         _0x58e2bb(_0x285b63[_0x24e4cd(0x7db)]) || (_0x285b63 = Promise['resolve'](_0x285b63)),
                         _0x285b63[_0x24e4cd(0x7db)](_0x51bb66, _0x3d456c);
               }
               _0x39da66(!0x0);
          }
          Cesium['ImageryLayer'][_0xc3a123(0x2d4)][_0xc3a123(0x3f6)] = Cesium[_0xc3a123(0x2bc)][_0xc3a123(0x2d4)][_0xc3a123(0x323)],
               Cesium['ImageryLayer'][_0xc3a123(0x2d4)][_0xc3a123(0x323)] = function (_0x2eed74) {
                    const _0x47aac1 = _0xc3a123;
                    _0x2eed74['imageryLayer'][_0x47aac1(0x8ed)][_0x47aac1(0xaa9)] ? _0xa2ce01(_0x2eed74, this) : this['hookRequestImageryFunc'](_0x2eed74);
               }
               ;
          var _0x496b2d = {};
          /**
          @license
          tween.js - https://github.com/sole/tween.js
      
          Copyright (c) 2010-2012 Tween.js authors.
      
          Easing equations Copyright (c) 2001 Robert Penner http://robertpenner.com/easing/
      
          Permission is hereby granted, free of charge, to any person obtaining a copy
          of this software and associated documentation files (the "Software"), to deal
          in the Software without restriction, including without limitation the rights
          to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
          copies of the Software, and to permit persons to whom the Software is
          furnished to do so, subject to the following conditions:
      
          The above copyright notice and this permission notice shall be included in
          all copies or substantial portions of the Software.
      
          THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
          IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
          FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
          AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
          LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
          OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
          THE SOFTWARE.
          */
          void 0x0 === Date['now'] && (Date[_0xc3a123(0x529)] = function () {
               const _0x1bb9ab = _0xc3a123;
               return new Date()[_0x1bb9ab(0xc04)]();
          }
          );
          var _0x5e7baf, _0xb59011 = _0xb59011 || (_0x5e7baf = [],
          {
               'REVISION': '13',
               'getAll': function () {
                    return _0x5e7baf;
               },
               'removeAll': function () {
                    _0x5e7baf = [];
               },
               'add': function (_0x1aba58) {
                    _0x5e7baf['push'](_0x1aba58);
               },
               'remove': function (_0x538091) {
                    const _0x4468d3 = _0xc3a123;
                    var _0x29ee2e = _0x5e7baf['indexOf'](_0x538091);
                    -0x1 !== _0x29ee2e && _0x5e7baf[_0x4468d3(0x3d3)](_0x29ee2e, 0x1);
               },
               'update': function (_0x46ff22) {
                    const _0x220f52 = _0xc3a123;
                    if (0x0 === _0x5e7baf[_0x220f52(0x72b)])
                         return !0x1;
                    var _0x55612e = 0x0;
                    for (_0x46ff22 = void 0x0 !== _0x46ff22 ? _0x46ff22 : 'undefined' != typeof window && void 0x0 !== window[_0x220f52(0x867)] && void 0x0 !== window[_0x220f52(0x867)][_0x220f52(0x529)] ? window[_0x220f52(0x867)][_0x220f52(0x529)]() : Date[_0x220f52(0x529)](); _0x55612e < _0x5e7baf[_0x220f52(0x72b)];)
                         _0x5e7baf[_0x55612e][_0x220f52(0x2dc)](_0x46ff22) ? _0x55612e++ : _0x5e7baf[_0x220f52(0x3d3)](_0x55612e, 0x1);
                    return !0x0;
               }
          });
          _0xb59011[_0xc3a123(0x3e8)] = function (_0x1ebf4b) {
               const _0x4d9926 = _0xc3a123;
               var _0x1c1456 = _0x1ebf4b
                    , _0xdeae0f = {}
                    , _0xa2ae32 = {}
                    , _0x26087a = {}
                    , _0xdb4d4e = 0x3e8
                    , _0x519d76 = 0x0
                    , _0x980dcb = !0x1
                    , _0x615947 = !0x1
                    , _0x4454e7 = 0x0
                    , _0x101194 = null
                    , _0x365a0b = _0xb59011['Easing'][_0x4d9926(0xbe2)][_0x4d9926(0x48c)]
                    , _0x494940 = _0xb59011[_0x4d9926(0x23c)][_0x4d9926(0xbe2)]
                    , _0x228fe0 = []
                    , _0x2ea6ec = null
                    , _0x5b7c82 = !0x1
                    , _0x335127 = null
                    , _0x217b62 = null
                    , _0x76b90f = null
                    , _0x399282 = 0x0
                    , _0x5194f6 = 0x0;
               for (var _0x47da51 in _0x1ebf4b)
                    _0xdeae0f[_0x47da51] = parseFloat(_0x1ebf4b[_0x47da51], 0xa);
               this['to'] = function (_0x1cceb8, _0x823429) {
                    return void 0x0 !== _0x823429 && (_0xdb4d4e = _0x823429),
                         _0xa2ae32 = _0x1cceb8,
                         this;
               }
                    ,
                    this[_0x4d9926(0x4b1)] = function (_0x4c0f0b) {
                         const _0x17c75a = _0x4d9926;
                         for (var _0xd58a2f in (_0xb59011[_0x17c75a(0x2ef)](this),
                              _0x615947 = !0x0,
                              _0x5b7c82 = !0x1,
                              _0x101194 = void 0x0 !== _0x4c0f0b ? _0x4c0f0b : _0x17c75a(0x211) != typeof window && void 0x0 !== window['performance'] && void 0x0 !== window[_0x17c75a(0x867)][_0x17c75a(0x529)] ? window[_0x17c75a(0x867)]['now']() : Date[_0x17c75a(0x529)](),
                              _0x101194 += _0x4454e7,
                              _0xa2ae32)) {
                              if (_0xa2ae32[_0xd58a2f] instanceof Array) {
                                   if (0x0 === _0xa2ae32[_0xd58a2f][_0x17c75a(0x72b)])
                                        continue;
                                   _0xa2ae32[_0xd58a2f] = [_0x1c1456[_0xd58a2f]][_0x17c75a(0x77e)](_0xa2ae32[_0xd58a2f]);
                              }
                              _0xdeae0f[_0xd58a2f] = _0x1c1456[_0xd58a2f],
                                   _0xdeae0f[_0xd58a2f] instanceof Array == !0x1 && (_0xdeae0f[_0xd58a2f] *= 0x1),
                                   _0x26087a[_0xd58a2f] = _0xdeae0f[_0xd58a2f] || 0x0;
                         }
                         return this;
                    }
                    ,
                    this['testLog'] = function () { }
                    ,
                    this['stop'] = function () {
                         const _0x314bb2 = _0x4d9926;
                         return _0x615947 ? (_0xb59011['remove'](this),
                              _0x615947 = !0x1,
                              null !== _0x76b90f && _0x76b90f[_0x314bb2(0x3fa)](_0x1c1456),
                              this[_0x314bb2(0x975)](),
                              this) : this;
                    }
                    ,
                    this[_0x4d9926(0x632)] = function () {
                         const _0x2f5164 = _0x4d9926;
                         return _0x615947 ? (_0x615947 = !0x1,
                              _0x399282 = _0x2f5164(0x211) != typeof window && void 0x0 !== window[_0x2f5164(0x867)] && void 0x0 !== window[_0x2f5164(0x867)][_0x2f5164(0x529)] ? window[_0x2f5164(0x867)][_0x2f5164(0x529)]() : Date[_0x2f5164(0x529)](),
                              this) : this;
                    }
                    ,
                    this[_0x4d9926(0xd62)] = function () {
                         const _0x311b67 = _0x4d9926;
                         return _0x615947 || (_0x615947 = !0x0,
                              _0x399282 = (_0x311b67(0x211) != typeof window && void 0x0 !== window['performance'] && void 0x0 !== window['performance'][_0x311b67(0x529)] ? window[_0x311b67(0x867)]['now']() : Date[_0x311b67(0x529)]()) - _0x399282,
                              _0x5194f6 += _0x399282),
                              this;
                    }
                    ,
                    this[_0x4d9926(0x975)] = function () {
                         const _0xcc4397 = _0x4d9926;
                         for (var _0xa0892e = 0x0, _0x3d80d2 = _0x228fe0['length']; _0xa0892e < _0x3d80d2; _0xa0892e++)
                              _0x228fe0[_0xa0892e][_0xcc4397(0x804)]();
                    }
                    ,
                    this['delay'] = function (_0x524c3f) {
                         return _0x4454e7 = _0x524c3f,
                              this;
                    }
                    ,
                    this[_0x4d9926(0xa3e)] = function (_0x5971c4) {
                         return _0x519d76 = _0x5971c4,
                              this;
                    }
                    ,
                    this['yoyo'] = function (_0x307a4e) {
                         return _0x980dcb = _0x307a4e,
                              this;
                    }
                    ,
                    this[_0x4d9926(0x9da)] = function (_0x24cb47) {
                         return _0x365a0b = _0x24cb47,
                              this;
                    }
                    ,
                    this['interpolation'] = function (_0x24d493) {
                         return _0x494940 = _0x24d493,
                              this;
                    }
                    ,
                    this[_0x4d9926(0xb03)] = function () {
                         return _0x228fe0 = arguments,
                              this;
                    }
                    ,
                    this['onStart'] = function (_0x43c3da) {
                         return _0x2ea6ec = _0x43c3da,
                              this;
                    }
                    ,
                    this[_0x4d9926(0x818)] = function (_0x149be9) {
                         return _0x335127 = _0x149be9,
                              this;
                    }
                    ,
                    this['onComplete'] = function (_0x11126e) {
                         return _0x217b62 = _0x11126e,
                              this;
                    }
                    ,
                    this['onStop'] = function (_0x103599) {
                         return _0x76b90f = _0x103599,
                              this;
                    }
                    ,
                    this[_0x4d9926(0x2dc)] = function (_0xc017f1) {
                         const _0x5ddd34 = _0x4d9926;
                         var _0x47e5b9;
                         if (_0xc017f1 < _0x101194 || !_0x615947)
                              return !0x0;
                         !0x1 === _0x5b7c82 && (null !== _0x2ea6ec && _0x2ea6ec[_0x5ddd34(0x3fa)](_0x1c1456),
                              _0x5b7c82 = !0x0);
                         var _0x2de046 = (_0xc017f1 - _0x101194 - _0x5194f6) / _0xdb4d4e
                              , _0x574ee8 = _0x365a0b(_0x2de046 = _0x2de046 > 0x1 ? 0x1 : _0x2de046);
                         for (_0x47e5b9 in _0xa2ae32) {
                              var _0x9977e3 = _0xdeae0f[_0x47e5b9] || 0x0
                                   , _0xc54fba = _0xa2ae32[_0x47e5b9];
                              _0xc54fba instanceof Array ? _0x1c1456[_0x47e5b9] = _0x494940(_0xc54fba, _0x574ee8) : ('string' == typeof _0xc54fba && (_0xc54fba = _0x9977e3 + parseFloat(_0xc54fba, 0xa)),
                                   _0x5ddd34(0x6f6) == typeof _0xc54fba && (_0x1c1456[_0x47e5b9] = _0x9977e3 + (_0xc54fba - _0x9977e3) * _0x574ee8));
                         }
                         if (null !== _0x335127 && _0x335127[_0x5ddd34(0x3fa)](_0x1c1456, _0x574ee8),
                              0x1 == _0x2de046) {
                              if (_0x5194f6 = 0x0,
                                   _0x519d76 > 0x0) {
                                   for (_0x47e5b9 in (isFinite(_0x519d76) && _0x519d76--,
                                        _0x26087a)) {
                                        if (_0x5ddd34(0x379) == typeof _0xa2ae32[_0x47e5b9] && (_0x26087a[_0x47e5b9] = _0x26087a[_0x47e5b9] + parseFloat(_0xa2ae32[_0x47e5b9], 0xa)),
                                             _0x980dcb) {
                                             var _0x44186f = _0x26087a[_0x47e5b9];
                                             _0x26087a[_0x47e5b9] = _0xa2ae32[_0x47e5b9],
                                                  _0xa2ae32[_0x47e5b9] = _0x44186f;
                                        }
                                        _0xdeae0f[_0x47e5b9] = _0x26087a[_0x47e5b9];
                                   }
                                   return _0x101194 = _0xc017f1 + _0x4454e7,
                                        !0x0;
                              }
                              null !== _0x217b62 && _0x217b62[_0x5ddd34(0x3fa)](_0x1c1456);
                              for (var _0xde6602 = 0x0, _0x4a1527 = _0x228fe0[_0x5ddd34(0x72b)]; _0xde6602 < _0x4a1527; _0xde6602++)
                                   _0x228fe0[_0xde6602]['start'](_0xc017f1);
                              return !0x1;
                         }
                         return !0x0;
                    }
                    ;
          }
               ,
               _0xb59011['Easing'] = {
                    'Linear': {
                         'None': function (_0x4b7151) {
                              return _0x4b7151;
                         }
                    },
                    'Quadratic': {
                         'In': function (_0x364225) {
                              return _0x364225 * _0x364225;
                         },
                         'Out': function (_0x329af0) {
                              return _0x329af0 * (0x2 - _0x329af0);
                         },
                         'InOut': function (_0xcdc562) {
                              return (_0xcdc562 *= 0x2) < 0x1 ? 0.5 * _0xcdc562 * _0xcdc562 : -0.5 * (--_0xcdc562 * (_0xcdc562 - 0x2) - 0x1);
                         }
                    },
                    'Cubic': {
                         'In': function (_0x229574) {
                              return _0x229574 * _0x229574 * _0x229574;
                         },
                         'Out': function (_0x153c82) {
                              return --_0x153c82 * _0x153c82 * _0x153c82 + 0x1;
                         },
                         'InOut': function (_0x20e245) {
                              return (_0x20e245 *= 0x2) < 0x1 ? 0.5 * _0x20e245 * _0x20e245 * _0x20e245 : 0.5 * ((_0x20e245 -= 0x2) * _0x20e245 * _0x20e245 + 0x2);
                         }
                    },
                    'Quartic': {
                         'In': function (_0x5076e3) {
                              return _0x5076e3 * _0x5076e3 * _0x5076e3 * _0x5076e3;
                         },
                         'Out': function (_0x11b82f) {
                              return 0x1 - _0x11b82f * _0x11b82f * _0x11b82f * _0x11b82f;
                         },
                         'InOut': function (_0x443219) {
                              return (_0x443219 *= 0x2) < 0x1 ? 0.5 * _0x443219 * _0x443219 * _0x443219 * _0x443219 : -0.5 * ((_0x443219 -= 0x2) * _0x443219 * _0x443219 * _0x443219 - 0x2);
                         }
                    },
                    'Quintic': {
                         'In': function (_0x34883f) {
                              return _0x34883f * _0x34883f * _0x34883f * _0x34883f * _0x34883f;
                         },
                         'Out': function (_0x48dbbd) {
                              return --_0x48dbbd * _0x48dbbd * _0x48dbbd * _0x48dbbd * _0x48dbbd + 0x1;
                         },
                         'InOut': function (_0x1ca5fe) {
                              return (_0x1ca5fe *= 0x2) < 0x1 ? 0.5 * _0x1ca5fe * _0x1ca5fe * _0x1ca5fe * _0x1ca5fe * _0x1ca5fe : 0.5 * ((_0x1ca5fe -= 0x2) * _0x1ca5fe * _0x1ca5fe * _0x1ca5fe * _0x1ca5fe + 0x2);
                         }
                    },
                    'Sinusoidal': {
                         'In': function (_0x3ae3fa) {
                              const _0x5e941f = _0xc3a123;
                              return 0x1 - Math[_0x5e941f(0x2c7)](_0x3ae3fa * Math['PI'] / 0x2);
                         },
                         'Out': function (_0x2ec488) {
                              const _0x2753e2 = _0xc3a123;
                              return Math[_0x2753e2(0xa86)](_0x2ec488 * Math['PI'] / 0x2);
                         },
                         'InOut': function (_0x4edc3b) {
                              return 0.5 * (0x1 - Math['cos'](Math['PI'] * _0x4edc3b));
                         }
                    },
                    'Exponential': {
                         'In': function (_0xadd07) {
                              const _0x2bd657 = _0xc3a123;
                              return 0x0 === _0xadd07 ? 0x0 : Math[_0x2bd657(0xd18)](0x400, _0xadd07 - 0x1);
                         },
                         'Out': function (_0x2e7e3c) {
                              return 0x1 === _0x2e7e3c ? 0x1 : 0x1 - Math['pow'](0x2, -0xa * _0x2e7e3c);
                         },
                         'InOut': function (_0x338bc1) {
                              return 0x0 === _0x338bc1 ? 0x0 : 0x1 === _0x338bc1 ? 0x1 : (_0x338bc1 *= 0x2) < 0x1 ? 0.5 * Math['pow'](0x400, _0x338bc1 - 0x1) : 0.5 * (0x2 - Math['pow'](0x2, -0xa * (_0x338bc1 - 0x1)));
                         }
                    },
                    'Circular': {
                         'In': function (_0x2314e8) {
                              const _0x1bde40 = _0xc3a123;
                              return 0x1 - Math[_0x1bde40(0x21b)](0x1 - _0x2314e8 * _0x2314e8);
                         },
                         'Out': function (_0x2402e5) {
                              const _0x1fe601 = _0xc3a123;
                              return Math[_0x1fe601(0x21b)](0x1 - --_0x2402e5 * _0x2402e5);
                         },
                         'InOut': function (_0x1dfa26) {
                              return (_0x1dfa26 *= 0x2) < 0x1 ? -0.5 * (Math['sqrt'](0x1 - _0x1dfa26 * _0x1dfa26) - 0x1) : 0.5 * (Math['sqrt'](0x1 - (_0x1dfa26 -= 0x2) * _0x1dfa26) + 0x1);
                         }
                    },
                    'Elastic': {
                         'In': function (_0x44a8d6) {
                              const _0x477a19 = _0xc3a123;
                              var _0x413e1c, _0x5e51cc = 0.1;
                              return 0x0 === _0x44a8d6 ? 0x0 : 0x1 === _0x44a8d6 ? 0x1 : (!_0x5e51cc || _0x5e51cc < 0x1 ? (_0x5e51cc = 0x1,
                                   _0x413e1c = 0.1) : _0x413e1c = 0.4 * Math[_0x477a19(0x49e)](0x1 / _0x5e51cc) / (0x2 * Math['PI']),
                                   -_0x5e51cc * Math['pow'](0x2, 0xa * (_0x44a8d6 -= 0x1)) * Math[_0x477a19(0xa86)]((_0x44a8d6 - _0x413e1c) * (0x2 * Math['PI']) / 0.4));
                         },
                         'Out': function (_0x24f805) {
                              const _0x341b31 = _0xc3a123;
                              var _0x36a07c, _0x4f7bb7 = 0.1;
                              return 0x0 === _0x24f805 ? 0x0 : 0x1 === _0x24f805 ? 0x1 : (!_0x4f7bb7 || _0x4f7bb7 < 0x1 ? (_0x4f7bb7 = 0x1,
                                   _0x36a07c = 0.1) : _0x36a07c = 0.4 * Math[_0x341b31(0x49e)](0x1 / _0x4f7bb7) / (0x2 * Math['PI']),
                                   _0x4f7bb7 * Math['pow'](0x2, -0xa * _0x24f805) * Math[_0x341b31(0xa86)]((_0x24f805 - _0x36a07c) * (0x2 * Math['PI']) / 0.4) + 0x1);
                         },
                         'InOut': function (_0x446199) {
                              const _0xf73f87 = _0xc3a123;
                              var _0xd7ad08, _0x2f0d18 = 0.1, _0x32cb54 = 0.4;
                              return 0x0 === _0x446199 ? 0x0 : 0x1 === _0x446199 ? 0x1 : (!_0x2f0d18 || _0x2f0d18 < 0x1 ? (_0x2f0d18 = 0x1,
                                   _0xd7ad08 = 0.1) : _0xd7ad08 = _0x32cb54 * Math[_0xf73f87(0x49e)](0x1 / _0x2f0d18) / (0x2 * Math['PI']),
                                   (_0x446199 *= 0x2) < 0x1 ? _0x2f0d18 * Math[_0xf73f87(0xd18)](0x2, 0xa * (_0x446199 -= 0x1)) * Math[_0xf73f87(0xa86)]((_0x446199 - _0xd7ad08) * (0x2 * Math['PI']) / _0x32cb54) * -0.5 : _0x2f0d18 * Math[_0xf73f87(0xd18)](0x2, -0xa * (_0x446199 -= 0x1)) * Math[_0xf73f87(0xa86)]((_0x446199 - _0xd7ad08) * (0x2 * Math['PI']) / _0x32cb54) * 0.5 + 0x1);
                         }
                    },
                    'Back': {
                         'In': function (_0x4f2950) {
                              var _0x4e9151 = 1.70158;
                              return _0x4f2950 * _0x4f2950 * ((_0x4e9151 + 0x1) * _0x4f2950 - _0x4e9151);
                         },
                         'Out': function (_0x4f270c) {
                              var _0x2d7f19 = 1.70158;
                              return --_0x4f270c * _0x4f270c * ((_0x2d7f19 + 0x1) * _0x4f270c + _0x2d7f19) + 0x1;
                         },
                         'InOut': function (_0x402146) {
                              var _0x28d4bb = 2.5949095;
                              return (_0x402146 *= 0x2) < 0x1 ? _0x402146 * _0x402146 * ((_0x28d4bb + 0x1) * _0x402146 - _0x28d4bb) * 0.5 : 0.5 * ((_0x402146 -= 0x2) * _0x402146 * ((_0x28d4bb + 0x1) * _0x402146 + _0x28d4bb) + 0x2);
                         }
                    },
                    'Bounce': {
                         'In': function (_0x47d123) {
                              const _0x4f530f = _0xc3a123;
                              return 0x1 - _0xb59011[_0x4f530f(0x194)][_0x4f530f(0x830)][_0x4f530f(0x217)](0x1 - _0x47d123);
                         },
                         'Out': function (_0x280f74) {
                              return _0x280f74 < 0x1 / 2.75 ? 7.5625 * _0x280f74 * _0x280f74 : _0x280f74 < 0x2 / 2.75 ? 7.5625 * (_0x280f74 -= 1.5 / 2.75) * _0x280f74 + 0.75 : _0x280f74 < 2.5 / 2.75 ? 7.5625 * (_0x280f74 -= 2.25 / 2.75) * _0x280f74 + 0.9375 : 7.5625 * (_0x280f74 -= 2.625 / 2.75) * _0x280f74 + 0.984375;
                         },
                         'InOut': function (_0x5a630e) {
                              const _0x488698 = _0xc3a123;
                              return _0x5a630e < 0.5 ? 0.5 * _0xb59011[_0x488698(0x194)][_0x488698(0x830)]['In'](0x2 * _0x5a630e) : 0.5 * _0xb59011[_0x488698(0x194)][_0x488698(0x830)]['Out'](0x2 * _0x5a630e - 0x1) + 0.5;
                         }
                    }
               },
               _0xb59011[_0xc3a123(0x23c)] = {
                    'Linear': function (_0x26ddaa, _0x1c8859) {
                         const _0xfffc0f = _0xc3a123;
                         var _0x3c2911 = _0x26ddaa[_0xfffc0f(0x72b)] - 0x1
                              , _0x3cd20d = _0x3c2911 * _0x1c8859
                              , _0x4d27f4 = Math['floor'](_0x3cd20d)
                              , _0x59ff77 = _0xb59011['Interpolation'][_0xfffc0f(0x3f9)][_0xfffc0f(0xbe2)];
                         return _0x1c8859 < 0x0 ? _0x59ff77(_0x26ddaa[0x0], _0x26ddaa[0x1], _0x3cd20d) : _0x1c8859 > 0x1 ? _0x59ff77(_0x26ddaa[_0x3c2911], _0x26ddaa[_0x3c2911 - 0x1], _0x3c2911 - _0x3cd20d) : _0x59ff77(_0x26ddaa[_0x4d27f4], _0x26ddaa[_0x4d27f4 + 0x1 > _0x3c2911 ? _0x3c2911 : _0x4d27f4 + 0x1], _0x3cd20d - _0x4d27f4);
                    },
                    'Bezier': function (_0x15c5c9, _0x57e0c1) {
                         const _0x3cff60 = _0xc3a123;
                         var _0x43ada9, _0x1d2a5d = 0x0, _0x59dfbd = _0x15c5c9[_0x3cff60(0x72b)] - 0x1, _0x2a6b29 = Math[_0x3cff60(0xd18)], _0x3fb453 = _0xb59011['Interpolation'][_0x3cff60(0x3f9)][_0x3cff60(0x649)];
                         for (_0x43ada9 = 0x0; _0x43ada9 <= _0x59dfbd; _0x43ada9++)
                              _0x1d2a5d += _0x2a6b29(0x1 - _0x57e0c1, _0x59dfbd - _0x43ada9) * _0x2a6b29(_0x57e0c1, _0x43ada9) * _0x15c5c9[_0x43ada9] * _0x3fb453(_0x59dfbd, _0x43ada9);
                         return _0x1d2a5d;
                    },
                    'CatmullRom': function (_0x532ecd, _0x5f0b45) {
                         const _0x2c5521 = _0xc3a123;
                         var _0x13d6be = _0x532ecd[_0x2c5521(0x72b)] - 0x1
                              , _0x414945 = _0x13d6be * _0x5f0b45
                              , _0x2d3864 = Math[_0x2c5521(0x763)](_0x414945)
                              , _0x2f4ff4 = _0xb59011[_0x2c5521(0x23c)]['Utils']['CatmullRom'];
                         return _0x532ecd[0x0] === _0x532ecd[_0x13d6be] ? (_0x5f0b45 < 0x0 && (_0x2d3864 = Math[_0x2c5521(0x763)](_0x414945 = _0x13d6be * (0x1 + _0x5f0b45))),
                              _0x2f4ff4(_0x532ecd[(_0x2d3864 - 0x1 + _0x13d6be) % _0x13d6be], _0x532ecd[_0x2d3864], _0x532ecd[(_0x2d3864 + 0x1) % _0x13d6be], _0x532ecd[(_0x2d3864 + 0x2) % _0x13d6be], _0x414945 - _0x2d3864)) : _0x5f0b45 < 0x0 ? _0x532ecd[0x0] - (_0x2f4ff4(_0x532ecd[0x0], _0x532ecd[0x0], _0x532ecd[0x1], _0x532ecd[0x1], -_0x414945) - _0x532ecd[0x0]) : _0x5f0b45 > 0x1 ? _0x532ecd[_0x13d6be] - (_0x2f4ff4(_0x532ecd[_0x13d6be], _0x532ecd[_0x13d6be], _0x532ecd[_0x13d6be - 0x1], _0x532ecd[_0x13d6be - 0x1], _0x414945 - _0x13d6be) - _0x532ecd[_0x13d6be]) : _0x2f4ff4(_0x532ecd[_0x2d3864 ? _0x2d3864 - 0x1 : 0x0], _0x532ecd[_0x2d3864], _0x532ecd[_0x13d6be < _0x2d3864 + 0x1 ? _0x13d6be : _0x2d3864 + 0x1], _0x532ecd[_0x13d6be < _0x2d3864 + 0x2 ? _0x13d6be : _0x2d3864 + 0x2], _0x414945 - _0x2d3864);
                    },
                    'Utils': {
                         'Linear': function (_0x54b77c, _0x492e6f, _0xea5ecc) {
                              return (_0x492e6f - _0x54b77c) * _0xea5ecc + _0x54b77c;
                         },
                         'Bernstein': function (_0x3653b3, _0x569dd4) {
                              const _0x5c0df4 = _0xc3a123;
                              var _0x52e557 = _0xb59011[_0x5c0df4(0x23c)][_0x5c0df4(0x3f9)][_0x5c0df4(0x37f)];
                              return _0x52e557(_0x3653b3) / _0x52e557(_0x569dd4) / _0x52e557(_0x3653b3 - _0x569dd4);
                         },
                         'Factorial': function () {
                              var _0x393c1f = [0x1];
                              return function (_0x212361) {
                                   var _0x2f6596, _0x1d287e = 0x1;
                                   if (_0x393c1f[_0x212361])
                                        return _0x393c1f[_0x212361];
                                   for (_0x2f6596 = _0x212361; _0x2f6596 > 0x1; _0x2f6596--)
                                        _0x1d287e *= _0x2f6596;
                                   return _0x393c1f[_0x212361] = _0x1d287e;
                              }
                                   ;
                         }(),
                         'CatmullRom': function (_0x1e05d9, _0x54415b, _0x3aa572, _0x341ad9, _0x592a88) {
                              var _0x45d314 = 0.5 * (_0x3aa572 - _0x1e05d9)
                                   , _0x19f592 = 0.5 * (_0x341ad9 - _0x54415b)
                                   , _0x2310e0 = _0x592a88 * _0x592a88;
                              return (0x2 * _0x54415b - 0x2 * _0x3aa572 + _0x45d314 + _0x19f592) * (_0x592a88 * _0x2310e0) + (-0x3 * _0x54415b + 0x3 * _0x3aa572 - 0x2 * _0x45d314 - _0x19f592) * _0x2310e0 + _0x45d314 * _0x592a88 + _0x54415b;
                         }
                    }
               };
          const _0x743359 = Cesium[_0xc3a123(0xa3f)]
               , _0x3940b0 = Cesium['defined'];
          let _0x3f0876 = new Cesium['Cartesian4']()
               , _0x3fe7f7 = new Cesium['Cartesian4']()
               , _0x4fd81a = new Cesium[(_0xc3a123(0xcdf))]()
               , _0x21a650 = new Cesium[(_0xc3a123(0xcdf))]();
          new Cesium[(_0xc3a123(0x25b))]();
          let _0xa49a27 = new Cesium[(_0xc3a123(0x456))](Cesium[_0xc3a123(0x25b)][_0xc3a123(0xcc2)], 0x1);
          const _0x21925a = {
               'modulePath': _0xc3a123(0x270),
               'wasmBinaryFile': _0x3b80ec(_0xc3a123(0x9c7)),
               'fallbackModulePath': './ThirdParty/draco_decoder.js'
          };
          function _0x368e77(_0x2d5ad4, _0x57f405) {
               const _0x3831e7 = _0xc3a123;
               let _0x11a31d = _0x2d5ad4[_0x3831e7(0x3dd)]
                    , _0x4cec8b = _0x2d5ad4['normal'];
               _0x57f405[0x0] = -0x2 * _0x4cec8b['x'] * _0x4cec8b['x'] + 0x1,
                    _0x57f405[0x1] = -0x2 * _0x4cec8b['y'] * _0x4cec8b['x'],
                    _0x57f405[0x2] = -0x2 * _0x4cec8b['z'] * _0x4cec8b['x'],
                    _0x57f405[0x3] = 0x0,
                    _0x57f405[0x4] = -0x2 * _0x4cec8b['x'] * _0x4cec8b['y'],
                    _0x57f405[0x5] = -0x2 * _0x4cec8b['y'] * _0x4cec8b['y'] + 0x1,
                    _0x57f405[0x6] = -0x2 * _0x4cec8b['z'] * _0x4cec8b['y'],
                    _0x57f405[0x7] = 0x0,
                    _0x57f405[0x8] = -0x2 * _0x4cec8b['x'] * _0x4cec8b['z'],
                    _0x57f405[0x9] = -0x2 * _0x4cec8b['y'] * _0x4cec8b['z'],
                    _0x57f405[0xa] = -0x2 * _0x4cec8b['z'] * _0x4cec8b['z'] + 0x1,
                    _0x57f405[0xb] = 0x0,
                    _0x57f405[0xc] = -0x2 * _0x4cec8b['x'] * _0x11a31d,
                    _0x57f405[0xd] = -0x2 * _0x4cec8b['y'] * _0x11a31d,
                    _0x57f405[0xe] = -0x2 * _0x4cec8b['z'] * _0x11a31d,
                    _0x57f405[0xf] = 0x1;
          }
          function _0x53d092(_0x2e32dd) {
               const _0x4b0569 = _0xc3a123;
               return Cesium['Resource']['createIfNeeded'](_0x2e32dd)[_0x4b0569(0xbc7)](_0x2e32dd)[_0x4b0569(0x7db)](function (_0x3f875c) {
                    const _0x554f33 = _0x4b0569;
                    if (_0x3f875c[_0x554f33(0x72b)] < 0x1)
                         return;
                    let _0x7cbb13 = _0x3f875c[0x0];
                    return {
                         'name': _0x7cbb13['name'],
                         'path': _0x7cbb13['path']
                    };
               });
          }
          function _0x15e836(_0x16663c) {
               const _0x1c4199 = _0xc3a123;
               return Cesium[_0x1c4199(0x6e9)][_0x1c4199(0x773)](_0x16663c)[_0x1c4199(0xbc7)](_0x16663c)[_0x1c4199(0x7db)](function (_0x515bb9) {
                    return _0x515bb9;
               });
          }
          function _0x58e7ba(_0x2b2033) {
               const _0x7537ae = _0xc3a123;
               let _0x200001 = _0x2b2033 + _0x7537ae(0x8ff);
               return _0x3940b0(_0x424c59[_0x7537ae(0x597)]) && (_0x200001 = _0x3940b0(_0x424c59[_0x7537ae(0x597)][_0x7537ae(0x1a1)][_0x200001]) ? _0x424c59[_0x7537ae(0x44b)](_0x2b2033, _0x200001) : _0x424c59['addToken'](_0x200001)),
                    Cesium['Resource']['createIfNeeded'](_0x200001)[_0x7537ae(0xbc7)]()[_0x7537ae(0x7db)](function (_0x2f9c7a) {
                         const _0x554d8e = _0x7537ae;
                         let _0x1531c2 = {
                              's3m': [],
                              'imagery': [],
                              's3mGroup': [],
                              'terrain': void 0x0
                         };
                         for (let _0x34177c = 0x0, _0x5e90fb = _0x2f9c7a[_0x554d8e(0x72b)]; _0x34177c < _0x5e90fb; _0x34177c++) {
                              let _0x4dfc28 = _0x2f9c7a[_0x34177c]
                                   , _0x3b1ace = _0x4dfc28[_0x554d8e(0x560)];
                              'OSGBLayer' === _0x3b1ace ? _0x1531c2['s3m'][_0x554d8e(0x63e)](_0x4dfc28) : _0x554d8e(0x5b2) === _0x3b1ace ? _0x1531c2[_0x554d8e(0x387)][_0x554d8e(0x63e)](_0x4dfc28) : 'TerrainFileLayer' === _0x3b1ace ? _0x1531c2[_0x554d8e(0x481)] = _0x4dfc28 : 'OSGBGroup' === _0x3b1ace && _0x1531c2[_0x554d8e(0xbee)][_0x554d8e(0x63e)](_0x4dfc28);
                         }
                         return _0x1531c2;
                    });
          }
          Cesium[_0xc3a123(0x6e9)]['fetchArrayBuffer']({
               'url': _0x21925a['wasmBinaryFile']
          })[_0xc3a123(0x7db)](function (_0x4fa7ea) {
               const _0x189416 = _0xc3a123;
               _0x21925a[_0x189416(0x3d4)] = _0x4fa7ea,
                    _0x2263e3(_0x21925a)[_0x189416(0x7db)](function (_0x24bf3a) {
                         window['dracoLib'] = _0x24bf3a;
                    });
          }),
               Cesium[_0xc3a123(0x616)]['prototype'][_0xc3a123(0x5dd)] = !0x1,
               Cesium[_0xc3a123(0x616)][_0xc3a123(0x2d4)][_0xc3a123(0xbe9)] = new Cesium[(_0xc3a123(0xcdf))](),
               Cesium[_0xc3a123(0x616)][_0xc3a123(0x2d4)]['enableReflection'] = function (_0x3841eb) {
                    const _0x41a15d = _0xc3a123;
                    this[_0x41a15d(0x5dd)] = !0x0,
                         _0x368e77(_0x3841eb, this['reflectMatrix']),
                         this[_0x41a15d(0x8a1)][_0x41a15d(0x439)] = !0x0,
                         this[_0x41a15d(0x8a1)]['clipPlane'] = _0x3841eb;
                    let _0x4b0e8c = Cesium[_0x41a15d(0xcdf)][_0x41a15d(0x59d)](this[_0x41a15d(0xa28)], this[_0x41a15d(0xbe9)], _0x4fd81a);
                    this[_0x41a15d(0x8a1)]['currentViewMatrix'] = _0x4b0e8c;
               }
               ,
               Cesium['Camera'][_0xc3a123(0x2d4)][_0xc3a123(0xaab)] = function () {
                    const _0x37d70c = _0xc3a123;
                    this[_0x37d70c(0x5dd)] = !0x1,
                         this['frustum'][_0x37d70c(0x439)] = !0x1;
               }
               ,
               Cesium[_0xc3a123(0x2f8)][_0xc3a123(0x2d4)][_0xc3a123(0x32c)] = function (_0x123c3d, _0x1d5fca) {
                    const _0x2af541 = _0xc3a123;
                    Cesium[_0x2af541(0x336)](_0x1d5fca) && Cesium['defined'](_0x1d5fca[_0x2af541(0xa2c)]) && this[_0x2af541(0x2e4)] === _0x1d5fca[_0x2af541(0xa2c)] || _0x123c3d['draw'](this, _0x1d5fca);
               }
               ,
               Cesium[_0xc3a123(0xcdf)][_0xc3a123(0x290)] = function (_0x48cfcf, _0x57a868, _0x1058b3) {
                    const _0x572fee = _0xc3a123;
                    Cesium['Check'][_0x572fee(0x6f5)][_0x572fee(0xb70)](_0x572fee(0x89c), _0x48cfcf),
                         Cesium[_0x572fee(0x6d5)][_0x572fee(0x6f5)][_0x572fee(0xb70)](_0x572fee(0x6b8), _0x57a868),
                         Cesium['Check']['typeOf']['object'](_0x572fee(0x9bd), _0x1058b3),
                         Cesium['Matrix4'][_0x572fee(0x499)](_0x48cfcf, _0x4fd81a),
                         Cesium[_0x572fee(0xcdf)][_0x572fee(0x836)](_0x4fd81a, _0x4fd81a),
                         _0x3f0876['x'] = _0x57a868['normal']['x'],
                         _0x3f0876['y'] = _0x57a868[_0x572fee(0x279)]['y'],
                         _0x3f0876['z'] = _0x57a868[_0x572fee(0x279)]['z'],
                         _0x3f0876['w'] = _0x57a868[_0x572fee(0x3dd)],
                         Cesium[_0x572fee(0xcdf)][_0x572fee(0x754)](_0x4fd81a, _0x3f0876, _0x3f0876),
                         _0x1058b3[_0x572fee(0x279)]['x'] = _0x3f0876['x'],
                         _0x1058b3[_0x572fee(0x279)]['y'] = _0x3f0876['y'],
                         _0x1058b3[_0x572fee(0x279)]['z'] = _0x3f0876['z'];
                    let _0x396974 = Cesium['Cartesian3'][_0x572fee(0x869)](_0x1058b3['normal']);
                    return Cesium[_0x572fee(0x25b)][_0x572fee(0x579)](_0x1058b3[_0x572fee(0x279)], _0x1058b3[_0x572fee(0x279)]),
                         _0x1058b3[_0x572fee(0x3dd)] = _0x3f0876['w'] / _0x396974,
                         _0x1058b3;
               }
               ,
               Cesium[_0xc3a123(0xa88)]['prototype'][_0xc3a123(0x958)] = Cesium[_0xc3a123(0xa88)]['prototype'][_0xc3a123(0x432)],
               Cesium[_0xc3a123(0xa88)]['prototype'][_0xc3a123(0x432)] = function (_0x32d839) {
                    const _0x435617 = _0xc3a123;
                    let _0x2bf1e9 = this[_0x435617(0x958)](_0x32d839);
                    return _0x2bf1e9[_0x435617(0x439)] = this[_0x435617(0x439)],
                         _0x2bf1e9[_0x435617(0x785)] = this[_0x435617(0x785)],
                         _0x2bf1e9[_0x435617(0x5fe)] = this[_0x435617(0x5fe)],
                         _0x2bf1e9;
               }
               ;
          const _0x91c55 = /^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)$/i
               , _0x4d64a4 = /^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)*$/i;
          function _0x47c746(_0x5f8884) {
               const _0x35162a = _0xc3a123;
               if (!_0x5f8884)
                    throw new Cesium[(_0x35162a(0x610))](_0x35162a(0x80b));
               let _0x2a0196 = _0x5f8884[_0x35162a(0xc09)]
                    , _0x3c9ad1 = _0x2a0196[_0x35162a(0xabd)]
                    , _0x2fcad2 = _0x9879e5[_0x35162a(0x7b3)](_0x2a0196, _0x35162a(0xc55), _0x3c9ad1)
                    , _0x2d6b29 = _0x9879e5[_0x35162a(0xd4c)](_0x2a0196, 'Options', _0x3c9ad1)
                    , _0xe0e968 = _0x9879e5[_0x35162a(0x7b3)](_0x2a0196, _0x35162a(0x2e1), _0x3c9ad1)
                    , _0x40c8cd = _0x9879e5[_0x35162a(0xbf8)](_0x2d6b29, _0x35162a(0x6dd), _0x3c9ad1)
                    , _0x2dd6e2 = _0x9879e5[_0x35162a(0xbf8)](_0x2d6b29, _0x35162a(0xa50), _0x3c9ad1)
                    , _0x1ebaa5 = _0x9879e5[_0x35162a(0x2cd)](_0x2d6b29, _0x35162a(0x38d), _0x3c9ad1)
                    , _0x3d490d = _0x9879e5[_0x35162a(0x2cd)](_0x2d6b29, _0x35162a(0xb85), _0x3c9ad1);
               _0x3d490d = 0x0 === _0x3d490d ? Number[_0x35162a(0x83f)] : _0x3d490d;
               let _0x276571 = _0x9879e5[_0x35162a(0x2cd)](_0x2d6b29, 'VisibleDistanceMin', _0x3c9ad1)
                    , _0x49a331 = _0x9879e5['queryNumericValue'](_0x2d6b29, _0x35162a(0xd72), _0x3c9ad1)
                    , _0x3646a4 = _0x9879e5['queryStringValue'](_0x2d6b29, _0x35162a(0x85b), _0x3c9ad1)
                    , _0xca6bbc = 0x0;
               _0x35162a(0xa96) === _0x3646a4 ? _0xca6bbc = 0x1 : _0x35162a(0x34a) === _0x3646a4 && (_0xca6bbc = 0x2);
               let _0x1fcc0b = _0x9879e5[_0x35162a(0x7b3)](_0x2a0196, 'CacheFileType', _0x3c9ad1)
                    , _0xd58860 = _0x35162a(0x52b) === _0x1fcc0b
                    , _0x25d818 = _0x35162a(0x8bb) === _0x1fcc0b
                    , _0xd85f94 = _0x35162a(0xd8b) === _0x1fcc0b
                    , _0x1dbd41 = _0x9879e5[_0x35162a(0xd4c)](_0x2a0196, _0x35162a(0x27b), _0x3c9ad1);
               if (!_0x1dbd41) {
                    let _0x477f71 = _0x9879e5[_0x35162a(0xd4c)](_0x2a0196, _0x35162a(0x254), _0x3c9ad1);
                    if (_0x477f71 && (_0x1dbd41 = _0x9879e5[_0x35162a(0xd4c)](_0x477f71, _0x35162a(0x27b), _0x3c9ad1),
                         !_0x1dbd41))
                         throw new Cesium[(_0x35162a(0x610))](_0x35162a(0x4ab) + _0x2fcad2);
               }
               let _0x2ec0e6 = _0x9879e5[_0x35162a(0x2cd)](_0x1dbd41, _0x35162a(0xc70), _0x3c9ad1)
                    , _0x1de4ae = _0x9879e5[_0x35162a(0x7b3)](_0x1dbd41, 'FillForeColor', _0x3c9ad1)
                    , _0x30803d = _0x91c55[_0x35162a(0x535)](_0x1de4ae[_0x35162a(0x91c)]())
                    , _0x40b27c = new Cesium[(_0x35162a(0x821))]();
               if (null !== _0x30803d) {
                    let _0x422998 = parseFloat(_0x30803d[0x1]);
                    _0x422998 = 0xbd === _0x422998 ? 0xff : _0x422998;
                    let _0x1e2e13 = parseFloat(_0x30803d[0x2]);
                    _0x1e2e13 = 0xeb === _0x1e2e13 ? 0xff : _0x1e2e13,
                         _0x40b27c['red'] = Cesium['Math']['clamp'](_0x422998 / 0xff, 0x0, 0x1),
                         _0x40b27c['green'] = Cesium[_0x35162a(0x417)][_0x35162a(0x55d)](_0x1e2e13 / 0xff, 0x0, 0x1),
                         _0x40b27c[_0x35162a(0x72a)] = Cesium[_0x35162a(0x417)]['clamp'](parseFloat(_0x30803d[0x3]) % 0x100 / 0xff, 0x0, 0x1),
                         _0x40b27c[_0x35162a(0x6b2)] = Cesium[_0x35162a(0x417)]['clamp'](parseFloat(_0x30803d[0x3]) % 0x10000 / 0x100 / 0xff, 0x0, 0x1);
               }
               let _0x4385a7 = _0x9879e5[_0x35162a(0xd4c)](_0x1dbd41, _0x35162a(0x95f), _0x3c9ad1)
                    , _0x30522a = new _0x2e1928();
               if (_0x4385a7) {
                    let _0x44a886 = _0x9879e5[_0x35162a(0x7b3)](_0x4385a7, _0x35162a(0x32f), _0x3c9ad1)
                         , _0x11d02c = _0x26f6a9[_0x35162a(0x8ac)];
                    _0x35162a(0x538) === _0x44a886 ? _0x11d02c = _0x26f6a9[_0x35162a(0x837)] : _0x35162a(0xdb5) === _0x44a886 && (_0x11d02c = _0x26f6a9[_0x35162a(0x2d3)]);
                    let _0x3f7537 = _0x9879e5[_0x35162a(0x2cd)](_0x4385a7, _0x35162a(0xdab), _0x3c9ad1)
                         , _0x2a6335 = _0x9879e5['queryStringValue'](_0x4385a7, _0x35162a(0xb61), _0x3c9ad1)
                         , _0x3c5639 = _0x4d64a4[_0x35162a(0x535)](_0x2a6335[_0x35162a(0x91c)]())
                         , _0xd563ee = new Cesium['Color']();
                    null !== _0x3c5639 && (_0xd563ee[_0x35162a(0x351)] = Cesium[_0x35162a(0x417)][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x1]), 0x0, 0x1),
                         _0xd563ee[_0x35162a(0x9a1)] = Cesium[_0x35162a(0x417)][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x2]), 0x0, 0x1),
                         _0xd563ee['blue'] = Cesium['Math']['clamp'](parseFloat(_0x3c5639[0x3]), 0x0, 0x1),
                         _0xd563ee[_0x35162a(0x6b2)] = Cesium['Math'][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x4]), 0x0, 0x1));
                    let _0x1575ac = _0x9879e5[_0x35162a(0x2cd)](_0x1dbd41, 'MarkerSize', _0x3c9ad1) || 0x0;
                    _0x3f7537 = Math[_0x35162a(0x590)](_0x3f7537, _0x1575ac);
                    let _0x1c69a0 = _0x9879e5[_0x35162a(0x7b3)](_0x4385a7, _0x35162a(0xa38), _0x3c9ad1);
                    _0x3c5639 = _0x4d64a4[_0x35162a(0x535)](_0x1c69a0[_0x35162a(0x91c)]());
                    let _0x5e6d41 = new Cesium['Color']();
                    null !== _0x3c5639 && (_0x5e6d41[_0x35162a(0x351)] = Cesium[_0x35162a(0x417)][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x1]), 0x0, 0x1),
                         _0x5e6d41[_0x35162a(0x9a1)] = Cesium[_0x35162a(0x417)][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x2]), 0x0, 0x1),
                         _0x5e6d41['blue'] = Cesium[_0x35162a(0x417)][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x3]), 0x0, 0x1),
                         _0x5e6d41[_0x35162a(0x6b2)] = Cesium['Math'][_0x35162a(0x55d)](parseFloat(_0x3c5639[0x4]), 0x0, 0x1));
                    let _0x3ab18f = _0x9879e5[_0x35162a(0x2cd)](_0x4385a7, _0x35162a(0x6ec), _0x3c9ad1);
                    _0x9879e5[_0x35162a(0x7b3)](_0x4385a7, _0x35162a(0x730), _0x3c9ad1);
                    let _0x47ce93 = _0x9879e5[_0x35162a(0x7b3)](_0x4385a7, 'BillboardMode', _0x3c9ad1);
                    _0x47ce93 = _0x35162a(0x262) === _0x47ce93 ? _0x102330[_0x35162a(0xdbb)] : 'FIXED_ANGLE' === _0x47ce93 ? _0x102330[_0x35162a(0x738)] : _0x102330[_0x35162a(0x48c)];
                    let _0x2c398e = Cesium['Math'][_0x35162a(0xb7f)](_0x9879e5[_0x35162a(0x2cd)](_0x4385a7, _0x35162a(0x972), _0x3c9ad1))
                         , _0x144e5f = Cesium[_0x35162a(0x417)]['toRadians'](_0x9879e5[_0x35162a(0x2cd)](_0x4385a7, _0x35162a(0x382), _0x3c9ad1))
                         , _0x35ce06 = Cesium['Math'][_0x35162a(0xb7f)](_0x9879e5['queryNumericValue'](_0x4385a7, _0x35162a(0xc11), _0x3c9ad1));
                    new Cesium[(_0x35162a(0x9ae))](_0x2c398e, _0x144e5f, _0x35ce06),
                         _0x30522a[_0x35162a(0x3de)] = _0x40b27c,
                         _0x30522a[_0x35162a(0x4aa)] = _0x3ab18f,
                         _0x30522a[_0x35162a(0x1da)] = _0x2ec0e6,
                         _0x30522a[_0x35162a(0x60a)] = _0xd563ee,
                         _0x30522a['pointSize'] = _0x3f7537,
                         _0x30522a[_0x35162a(0xbc5)] = _0x5e6d41,
                         _0x30522a[_0x35162a(0x88b)] = _0x11d02c,
                         _0x30522a['billboardMode'] = _0x47ce93;
               }
               let _0x3245d6 = _0x9879e5[_0x35162a(0x2cd)](_0x2a0196, _0x35162a(0x548), _0x3c9ad1)
                    , _0x5a5b0c = _0x9879e5[_0x35162a(0xd4c)](_0x2a0196, _0x35162a(0x7bb), _0x3c9ad1)
                    , _0x3f129d = _0x9879e5[_0x35162a(0x2cd)](_0x5a5b0c, 'Constant', _0x3c9ad1)
                    , _0x26ab17 = _0x9879e5['queryNumericValue'](_0x5a5b0c, _0x35162a(0x260), _0x3c9ad1)
                    , _0x467eba = 0x0 !== _0x3f129d && 0x0 !== _0x26ab17
                    , _0x199812 = _0x9879e5[_0x35162a(0xd4c)](_0x2a0196, _0x35162a(0x383), _0x3c9ad1);
               return {
                    'name': _0x2fcad2,
                    'groupName': _0xe0e968,
                    'isS3MB': _0xd58860,
                    'isS3MBlock': _0xd85f94,
                    'isS3M': _0x25d818,
                    'style3D': _0x30522a,
                    'selectEnable': _0x40c8cd,
                    'isVisible': _0x2dd6e2,
                    'minVisibleAltitude': _0x1ebaa5,
                    'maxVisibleAltitude': _0x3d490d,
                    'minVisibleDistance': _0x276571,
                    'maxVisibleDistance': _0x49a331,
                    'shadowType': _0xca6bbc,
                    'lodRangeScale': _0x3245d6,
                    'polygonOffset': {
                         'enabled': _0x467eba,
                         'units': _0x3f129d,
                         'factor': _0x26ab17
                    },
                    'brightness': _0x9879e5['queryNumericValue'](_0x199812, 'Brightness', _0x3c9ad1),
                    'constrast': _0x9879e5[_0x35162a(0x2cd)](_0x199812, _0x35162a(0x31f), _0x3c9ad1),
                    'hue': _0x9879e5[_0x35162a(0x2cd)](_0x199812, _0x35162a(0xaf3), _0x3c9ad1),
                    'saturation': _0x9879e5[_0x35162a(0x2cd)](_0x199812, _0x35162a(0x63f), _0x3c9ad1),
                    'gamma': _0x9879e5['queryNumericValue'](_0x199812, _0x35162a(0xc91), _0x3c9ad1)
               };
          }
          function _0x3fab90(_0x3130df) {
               const _0xae6ab8 = _0xc3a123;
               let _0x31669b = Cesium['Resource'][_0xae6ab8(0x773)](_0x3130df);
               return new Promise((_0x396683, _0x221658) => {
                    const _0x47afa1 = _0xae6ab8;
                    _0x31669b[_0x47afa1(0x891)]()[_0x47afa1(0x7db)](function (_0x2514cb) {
                         const _0x316f71 = _0x47afa1;
                         try {
                              let _0xe1e59d = _0x47c746(_0x2514cb);
                              _0x396683(_0xe1e59d);
                         } catch (_0x32add0) {
                              _0x221658(_0x316f71(0xc63) + _0x32add0);
                         }
                    }, _0x39d71f => {
                         _0x221658('fetch\x20s3m\x20layer\x20config\x20xml\x20error:' + _0x39d71f);
                    }
                    );
               }
               );
          }
          function _0x152e28(_0x409b7a, _0x57df4e, _0x3ba3ae) {
               const _0x3ffaff = _0xc3a123;
               let _0x3e2cf4 = new _0x5aa820(_0x409b7a)
                    , _0x605541 = new _0x5aa820(_0x57df4e)
                    , _0x111af5 = new _0x5aa820(0x1)
                    , _0x228b1f = new _0x5aa820(0x2)
                    , _0x2afb27 = new _0x5aa820(0x1);
               for (; _0x605541['toNumber']() > 0x0;)
                    0x0 === _0x605541[_0x3ffaff(0x40e)](_0x228b1f)[_0x3ffaff(0x9fb)]() ? (_0x605541 = _0x605541[_0x3ffaff(0xa74)](_0x228b1f),
                         _0x3e2cf4 = _0x3e2cf4[_0x3ffaff(0xa60)](_0x3e2cf4)['mod'](_0x3ba3ae)) : (_0x605541 = _0x605541[_0x3ffaff(0x639)](_0x2afb27),
                              _0x111af5 = _0x111af5[_0x3ffaff(0xa60)](_0x3e2cf4)[_0x3ffaff(0x40e)](_0x3ba3ae));
               return _0x111af5['toNumber']();
          }
          Cesium[_0xc3a123(0x588)][_0xc3a123(0x2d4)]['open'] = function (_0x2250a6, _0x2d632c) {
               const _0x716963 = _0xc3a123;
               if (_0x2250a6['indexOf']('?token') > -0x1 && _0x2250a6[_0x716963(0xcef)](_0x716963(0x46b)) > -0x1) {
                    let _0xedd7f1 = new _0x5a9ea2(_0x2250a6)
                         , _0x1cd139 = _0x743359(_0xedd7f1[_0x716963(0x72d)]);
                    _0xedd7f1[_0x716963(0x72d)] = void 0x0;
                    let _0x10703e = {};
                    _0x10703e = {
                         'rooturl': _0x2250a6 = _0xedd7f1[_0x716963(0x892)](),
                         'type': _0x716963(0xb19),
                         'value': _0x1cd139['token']
                    },
                         _0x3940b0(_0x424c59[_0x716963(0x597)]) ? _0x2250a6 in _0x424c59['CREDENTIAL']['_keymap'] || _0x424c59[_0x716963(0x597)]['addCredential']([_0x10703e]) : _0x424c59[_0x716963(0x597)] = new _0x424c59([_0x10703e]);
               }
               if ('realspace' !== _0x2250a6['slice'](-0x9))
                    throw new Cesium[(_0x716963(0x610))](_0x716963(0xbcb));
               _0x2d632c = Cesium['defaultValue'](_0x2d632c, {});
               var _0x1c059b = _0x2250a6
                    , _0x5068b0 = _0x2d632c[_0x716963(0x95b)]
                    , _0x2556d0 = Cesium[_0x716963(0x4d9)](_0x2d632c[_0x716963(0x624)], !0x0)
                    , _0x230ce3 = /({.*?})/g;
               if (Cesium['defined'](_0x5068b0))
                    _0x2250a6 = _0x2250a6['replace'](_0x230ce3, function (_0x14487d, _0x4d6ad1) {
                         const _0x1eb905 = _0x716963;
                         if (!Cesium[_0x1eb905(0x336)](_0x5068b0['length']))
                              throw new Cesium[(_0x1eb905(0x610))](_0x1eb905(0x84e));
                         if (_0x1eb905(0x95d) === _0x4d6ad1)
                              return _0x5068b0[0x0];
                    });
               else {
                    if (_0x230ce3[_0x716963(0xbd5)](_0x2250a6))
                         throw new Cesium[(_0x716963(0x610))](_0x716963(0x84e));
               }
               let _0x192c9e = _0x2250a6 + _0x716963(0x6a3);
               _0x3940b0(_0x424c59[_0x716963(0x597)]) && (_0x192c9e = _0x3940b0(_0x424c59[_0x716963(0x597)][_0x716963(0x1a1)][_0x2250a6]) ? _0x424c59[_0x716963(0x44b)](_0x2250a6, _0x192c9e) : _0x424c59[_0x716963(0x6be)](_0x192c9e));
               let _0x104ada = this
                    , _0x18a7ce = this[_0x716963(0xc97)];
               return new Promise((_0x444a59, _0xfef6e9) => {
                    const _0x4d5992 = _0x716963;
                    _0x53d092(_0x192c9e)[_0x4d5992(0x7db)](function (_0x217fb4) {
                         const _0xe15faa = _0x4d5992;
                         if (!_0x217fb4)
                              return void _0xfef6e9(_0xe15faa(0x925));
                         let _0x3c7268 = _0x217fb4[_0xe15faa(0x6c6)] + _0xe15faa(0x1d2);
                         _0x3940b0(_0x424c59['CREDENTIAL']) && (_0x3c7268 = _0x3940b0(_0x424c59[_0xe15faa(0x597)]['_keymap'][_0x2250a6]) ? _0x424c59[_0xe15faa(0x44b)](_0x2250a6, _0x3c7268) : _0x424c59[_0xe15faa(0x6be)](_0x3c7268)),
                              _0x15e836(_0x3c7268)[_0xe15faa(0x7db)](function (_0x5757dd) {
                                   const _0x3d8fa3 = _0xe15faa;
                                   let _0x59c862;
                                   'NONEARTHFLAT' === _0x5757dd[_0x3d8fa3(0x66f)] ? (_0x104ada[_0x3d8fa3(0xac9)] = Cesium['SceneMode']['COLUMBUS_VIEW'],
                                        _0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xbe4)] -= Math['PI'],
                                        _0x59c862 = new Cesium[(_0x3d8fa3(0x25b))](_0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xb4c)], _0x5757dd['camera']['latitude'], _0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xcf2)]),
                                        _0x2556d0 && _0x18a7ce[_0x3d8fa3(0xc69)]({
                                             'destination': _0x59c862,
                                             'orientation': {
                                                  'heading': _0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xcca)],
                                                  'pitch': _0x5757dd[_0x3d8fa3(0xc97)]['tilt'],
                                                  'roll': 0x0
                                             },
                                             'convert': !0x1
                                        })) : (_0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xbe4)] -= 0x5a,
                                             _0x59c862 = Cesium[_0x3d8fa3(0x25b)][_0x3d8fa3(0xd78)](_0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xb4c)], _0x5757dd[_0x3d8fa3(0xc97)]['latitude'], _0x5757dd['camera'][_0x3d8fa3(0xcf2)]),
                                             _0x2556d0 && _0x18a7ce[_0x3d8fa3(0xc69)]({
                                                  'destination': _0x59c862,
                                                  'orientation': {
                                                       'heading': Cesium[_0x3d8fa3(0x417)]['toRadians'](_0x5757dd['camera'][_0x3d8fa3(0xcca)]),
                                                       'pitch': Cesium[_0x3d8fa3(0x417)][_0x3d8fa3(0xb7f)](_0x5757dd[_0x3d8fa3(0xc97)][_0x3d8fa3(0xbe4)]),
                                                       'roll': 0x0
                                                  },
                                                  'convert': !0x1
                                             }));
                              }, _0x25d955 => {
                                   _0xfef6e9('get\x20scene\x20config\x20failed,' + _0x25d955);
                              }
                              ),
                              _0x58e7ba(_0x217fb4['path'])[_0xe15faa(0x7db)](function (_0x26023d) {
                                   const _0x241bd5 = _0xe15faa;
                                   let _0x52be9f = _0x26023d[_0x241bd5(0xc6b)]
                                        , _0x4a2875 = _0x26023d[_0x241bd5(0x387)]
                                        , _0x4272bc = _0x26023d['terrain'];
                                   _0x26023d['s3mGroup'];
                                   let _0x573fac = _0x217fb4[_0x241bd5(0x6c6)] + _0x241bd5(0xacd)
                                        , _0x7a1ca4 = [];
                                   for (let _0x4207c9 = _0x52be9f[_0x241bd5(0x72b)] - 0x1; _0x4207c9 >= 0x0; _0x4207c9--) {
                                        let _0x11d355 = _0x52be9f[_0x4207c9]
                                             , _0x1d46c2 = _0x573fac + encodeURIComponent(_0x11d355[_0x241bd5(0xca3)]) + _0x241bd5(0x396);
                                        _0x3940b0(_0x424c59[_0x241bd5(0x597)]) && (_0x1d46c2 = _0x3940b0(_0x424c59[_0x241bd5(0x597)][_0x241bd5(0x1a1)][_0x2250a6]) ? _0x424c59[_0x241bd5(0x44b)](_0x2250a6, _0x1d46c2) : _0x424c59[_0x241bd5(0x6be)](_0x1d46c2)),
                                             function (_0x3f24cd) {
                                                  const _0x220c7e = _0x241bd5;
                                                  let _0x250654 = _0x3fab90(_0x1d46c2)[_0x220c7e(0x7db)](function (_0x7308a2) {
                                                       const _0x9b76a9 = _0x220c7e;
                                                       try {
                                                            let _0x2bc31b = _0x2250a6 + '/datas/' + encodeURIComponent(_0x7308a2[_0x9b76a9(0xca3)]) + _0x9b76a9(0x58e);
                                                            return _0x7308a2[_0x9b76a9(0x41e)] = {
                                                                 'subdomains': _0x5068b0,
                                                                 'urlScheme': _0x1c059b + '/datas/' + encodeURIComponent(_0x7308a2[_0x9b76a9(0xca3)]) + '/'
                                                            },
                                                                 _0x104ada['addS3MTilesLayerByScp'](_0x2bc31b, _0x7308a2);
                                                       } catch (_0x26ea8c) {
                                                            _0xfef6e9(_0x9b76a9(0xd82) + _0x7308a2[_0x9b76a9(0xca3)] + _0x9b76a9(0xc6f) + _0x26ea8c);
                                                       }
                                                  }, _0x236793 => {
                                                       const _0x424f91 = _0x220c7e;
                                                       _0xfef6e9(_0x424f91(0xa9d) + _0x236793 + _0x424f91(0xc3b) + _0x11d355[_0x424f91(0xca3)]);
                                                  }
                                                  );
                                                  _0x7a1ca4[_0x220c7e(0x63e)](_0x250654);
                                             }();
                                   }
                                   for (var _0x5f17e6 = _0x4a2875['length'] - 0x1; _0x5f17e6 >= 0x0; _0x5f17e6--) {
                                        var _0x25b9d0 = new _0x36e5cd({
                                             'url': _0x2250a6 + '/datas/' + encodeURIComponent(_0x4a2875[_0x5f17e6][_0x241bd5(0xca3)])
                                        });
                                        try {
                                             var _0x402233 = _0x104ada['globe'][_0x241bd5(0xa76)][_0x241bd5(0x6c8)](_0x25b9d0);
                                             _0x7a1ca4['push'](_0x402233);
                                        } catch (_0x2f6bdb) {
                                             _0xfef6e9(_0x241bd5(0x294) + _0x4a2875[_0x5f17e6][_0x241bd5(0xca3)] + _0x241bd5(0xc6f) + _0x2f6bdb);
                                        }
                                   }
                                   if (Cesium['defined'](_0x4272bc)) {
                                        var _0xed516f = _0x2250a6 + '/datas/' + encodeURIComponent(_0x4272bc['name']);
                                        try {
                                             _0x104ada[_0x241bd5(0x7b9)] = new _0x1b4e12({
                                                  'url': _0xed516f,
                                                  'isSct': !0x0
                                             }),
                                                  _0x7a1ca4[_0x241bd5(0x63e)](_0x104ada[_0x241bd5(0x7b9)]);
                                        } catch (_0x3d9b8a) {
                                             _0xfef6e9(_0x241bd5(0xcf4) + _0x4272bc[_0x241bd5(0xca3)] + '\x20failed,' + _0x3d9b8a);
                                        }
                                   }
                                   Promise[_0x241bd5(0xbc6)](_0x7a1ca4)[_0x241bd5(0x7db)](_0x3af6bd => {
                                        _0x444a59(_0x3af6bd);
                                   }
                                   )['catch'](_0x5ab63d => {
                                        const _0xfaf701 = _0x241bd5;
                                        _0xfef6e9(_0xfaf701(0xcbd) + _0x5ab63d);
                                   }
                                   );
                              }, _0x3ec112 => {
                                   const _0x19fb2d = _0xe15faa;
                                   _0xfef6e9(_0x19fb2d(0xd44) + _0x3ec112);
                              }
                              );
                    }, _0x131513 => {
                         const _0x2be11e = _0x4d5992;
                         _0xfef6e9(_0x2be11e(0x9c0) + _0x131513);
                    }
                    );
               }
               );
          }
               ;
          let _0x5ba60a = {};
          function _0x2cce42(_0x116ae4) {
               const _0x4b1442 = _0xc3a123;
               let _0x26cad7 = _0x13c1fa();
               var _0x26c548 = _0x5ba60a[_0x116ae4];
               if (_0x3940b0(_0x26c548))
                    return _0x26c548['then'] ? _0x26c548 : (_0x26cad7[_0x4b1442(0x559)](_0x26c548),
                         _0x26cad7['promise']);
               let _0x34301c = _0x116ae4 + _0x4b1442(0x640);
               _0x3940b0(_0x424c59['CREDENTIAL']) && (_0x34301c = _0x3940b0(_0x424c59[_0x4b1442(0x597)][_0x4b1442(0x1a1)][_0x116ae4]) ? _0x424c59[_0x4b1442(0x44b)](_0x116ae4, _0x34301c) : _0x424c59[_0x4b1442(0x6be)](_0x34301c));
               let _0x34d225 = Cesium['Resource'][_0x4b1442(0x773)](_0x34301c);
               return _0x5ba60a[_0x116ae4] = _0x26cad7['promise'],
                    _0x34d225[_0x4b1442(0xbc7)]()[_0x4b1442(0x7db)](_0x2a83f9 => {
                         const _0x532de9 = _0x4b1442;
                         let _0x227f27 = Number(_0x2a83f9['jsessionID'])
                              , _0xd53d58 = _0x152e28(Number(_0x2a83f9[_0x532de9(0x66e)]), 0x1694ad7fce84d, 0x8f461e7bf61d5)
                              , _0x234c9b = JSON[_0x532de9(0x433)]({
                                   'jsessionID': _0x227f27[_0x532de9(0x892)](),
                                   'random': _0xd53d58[_0x532de9(0x892)]()
                              });
                         Cesium[_0x532de9(0x6e9)][_0x532de9(0xbfe)]({
                              'url': _0x34301c,
                              'data': _0x234c9b,
                              'responseType': 'json'
                         })['then'](_0x1bc7d7 => {
                              const _0x2b0f12 = _0x532de9;
                              !0x0 === _0x1bc7d7['succeed'] ? (_0x26cad7[_0x2b0f12(0x559)](_0xd53d58),
                                   _0x5ba60a[_0x116ae4] = _0xd53d58) : _0x26cad7[_0x2b0f12(0xa56)](!0x1);
                         }
                              , _0x3b14fd => {
                                   const _0x4c1778 = _0x532de9;
                                   _0x26cad7[_0x4c1778(0xa56)](_0x3b14fd);
                              }
                         );
                    }
                         , _0x4299a3 => {
                              const _0x2ddb34 = _0x4b1442;
                              _0x26cad7[_0x2ddb34(0xa56)](_0x4299a3);
                         }
                    ),
                    _0x26cad7[_0x4b1442(0xa16)];
          }
          function _0x53a620(_0x3a508b, _0x58bbae) {
               const _0x2efe63 = _0xc3a123;
               Cesium['Matrix4'][_0x2efe63(0x432)](_0x58bbae, _0x3a508b[_0x2efe63(0x7c9)]),
                    Cesium[_0x2efe63(0xcdf)][_0x2efe63(0xcba)](_0x58bbae, _0x3a508b[_0x2efe63(0x4a7)]),
                    _0x3a508b[_0x2efe63(0x2aa)] = !0x0,
                    _0x3a508b['_inverseView3DDirty'] = !0x0,
                    _0x3a508b[_0x2efe63(0x4a6)] = !0x0,
                    _0x3a508b[_0x2efe63(0x61f)] = !0x0,
                    _0x3a508b['_modelViewRelativeToEyeDirty'] = !0x0,
                    _0x3a508b[_0x2efe63(0x424)] = !0x0,
                    _0x3a508b[_0x2efe63(0x604)] = !0x0,
                    _0x3a508b[_0x2efe63(0xccc)] = !0x0,
                    _0x3a508b[_0x2efe63(0x4d1)] = !0x0,
                    _0x3a508b[_0x2efe63(0x26b)] = !0x0,
                    _0x3a508b[_0x2efe63(0xad2)] = !0x0,
                    _0x3a508b[_0x2efe63(0xd99)] = !0x0,
                    _0x3a508b[_0x2efe63(0x523)] = !0x0,
                    _0x3a508b['_inverseNormalDirty'] = !0x0,
                    _0x3a508b[_0x2efe63(0xd7f)] = !0x0,
                    _0x3a508b[_0x2efe63(0x98d)] = !0x0;
          }
          function _0x1962bf(_0x2d9630, _0x3e59c7) {
               const _0x3c0e55 = _0xc3a123;
               Cesium['Matrix4'][_0x3c0e55(0x432)](_0x3e59c7, _0x2d9630['_inverseView']),
                    Cesium['Matrix4'][_0x3c0e55(0xcba)](_0x3e59c7, _0x2d9630[_0x3c0e55(0xd14)]);
          }
          function _0x3d8910(_0x2b9ec8, _0x155b5d) {
               const _0x825704 = _0xc3a123;
               Cesium[_0x825704(0x25b)]['clone'](_0x155b5d[_0x825704(0xdbc)], _0x2b9ec8[_0x825704(0x498)]),
                    Cesium[_0x825704(0x25b)][_0x825704(0x432)](_0x155b5d[_0x825704(0xca0)], _0x2b9ec8[_0x825704(0xb88)]),
                    Cesium[_0x825704(0x25b)][_0x825704(0x432)](_0x155b5d[_0x825704(0xba7)], _0x2b9ec8[_0x825704(0xdb1)]),
                    Cesium[_0x825704(0x25b)][_0x825704(0x432)](_0x155b5d[_0x825704(0x1bc)], _0x2b9ec8['_cameraUp']);
               let _0x1b91ad = _0x155b5d[_0x825704(0x672)];
               Cesium[_0x825704(0x336)](_0x1b91ad) ? _0x2b9ec8[_0x825704(0xd1f)] = _0x1b91ad['height'] : _0x2b9ec8[_0x825704(0xd1f)] = -_0x2b9ec8[_0x825704(0x91d)][_0x825704(0xd80)],
                    _0x2b9ec8['_encodedCameraPositionMCDirty'] = !0x0;
          }
          function _0x2e5fa3(_0x1f0173, _0x2ace22) {
               const _0x526555 = _0xc3a123;
               if (!_0x1f0173[_0x526555(0x785)] || !_0x1f0173[_0x526555(0x5fe)] || !_0x1f0173[_0x526555(0x439)])
                    return;
               let _0x5473ac = _0x1f0173['currentViewMatrix'];
               Cesium['Matrix4'][_0x526555(0x290)](_0x5473ac, _0x1f0173[_0x526555(0x785)], _0xa49a27),
                    _0x3f0876['x'] = (Cesium[_0x526555(0x417)]['sign'](_0xa49a27['normal']['x']) + _0x2ace22[0x8]) / _0x2ace22[0x0],
                    _0x3f0876['y'] = (Cesium[_0x526555(0x417)]['sign'](_0xa49a27['normal']['y']) + _0x2ace22[0x9]) / _0x2ace22[0x5],
                    _0x3f0876['z'] = -0x1,
                    _0x3f0876['w'] = (0x1 + _0x2ace22[0xa]) / _0x2ace22[0xe],
                    _0x3fe7f7['x'] = _0xa49a27[_0x526555(0x279)]['x'],
                    _0x3fe7f7['y'] = _0xa49a27[_0x526555(0x279)]['y'],
                    _0x3fe7f7['z'] = _0xa49a27['normal']['z'],
                    _0x3fe7f7['w'] = _0xa49a27[_0x526555(0x3dd)],
                    Cesium[_0x526555(0xce9)][_0x526555(0xc03)](_0x3fe7f7, 0x2 / Cesium[_0x526555(0xce9)]['dot'](_0x3fe7f7, _0x3f0876), _0x3f0876),
                    _0x2ace22[0x2] = _0x3f0876['x'],
                    _0x2ace22[0x6] = _0x3f0876['y'],
                    _0x2ace22[0xa] = _0x3f0876['z'] + 0x1,
                    _0x2ace22[0xe] = _0x3f0876['w'];
          }
          function _0xe42d4d(_0x4e8c49, _0x2a1a69) {
               const _0x2ef515 = _0xc3a123;
               Cesium[_0x2ef515(0xcdf)][_0x2ef515(0x432)](_0x2a1a69, _0x4e8c49['_projection']),
                    _0x4e8c49[_0x2ef515(0x748)] = !0x0,
                    _0x4e8c49[_0x2ef515(0xccc)] = !0x0,
                    _0x4e8c49['_inverseViewProjectionDirty'] = !0x0,
                    _0x4e8c49[_0x2ef515(0x26b)] = !0x0,
                    _0x4e8c49[_0x2ef515(0xad2)] = !0x0;
          }
          function _0x2844ae(_0x1d840c, _0x1005ef) {
               const _0x575451 = _0xc3a123;
               Cesium['Matrix4'][_0x575451(0x432)](_0x1005ef, _0x1d840c[_0x575451(0xd51)]),
                    _0x1d840c['_modelViewInfiniteProjectionDirty'] = !0x0;
          }
          function _0x4d3a4e() {
               const _0x428d46 = _0xc3a123;
               return _0x428d46(0x211) != typeof performance && 'function' == typeof performance[_0x428d46(0x529)] && isFinite(performance[_0x428d46(0x529)]()) ? performance[_0x428d46(0x529)]() : Date[_0x428d46(0x529)]();
          }
          function _0x225a27(_0x16bc5d, _0x44e0c7) {
               const _0xbce2bf = _0xc3a123;
               if (null === _0x16bc5d || _0xbce2bf(0xb70) != typeof _0x16bc5d)
                    return _0x16bc5d;
               _0x44e0c7 = Cesium['defaultValue'](_0x44e0c7, !0x1);
               var _0x35e2ae = new _0x16bc5d[(_0xbce2bf(0xcc8))]();
               for (var _0x33d3f0 in _0x16bc5d)
                    if (_0x16bc5d[_0xbce2bf(0x6e8)](_0x33d3f0)) {
                         var _0x4efba5 = _0x16bc5d[_0x33d3f0];
                         _0x44e0c7 && (_0x4efba5 = _0x225a27(_0x4efba5, _0x44e0c7)),
                              _0x35e2ae[_0x33d3f0] = _0x4efba5;
                    }
               return _0x35e2ae;
          }
          function _0x5ed140(_0x4276ff, _0x267c9a, _0x3b62fc, _0x59286c, _0x2dc595, _0x7630fd, _0x42a4fd, _0xe4ac71, _0x84fade, _0x3e628d) {
               const _0x560c6c = _0xc3a123;
               this[_0x560c6c(0x96c)] = _0x4276ff,
                    this[_0x560c6c(0xa14)] = _0x267c9a,
                    this[_0x560c6c(0x59b)] = _0x225a27(_0x3b62fc),
                    this['_stopObject'] = _0x225a27(_0x59286c),
                    this[_0x560c6c(0x2b0)] = _0x2dc595,
                    this['_delay'] = _0x7630fd,
                    this['_easingFunction'] = _0x42a4fd,
                    this[_0x560c6c(0xc8f)] = _0xe4ac71,
                    this[_0x560c6c(0x5bd)] = _0x84fade,
                    this['cancel'] = _0x3e628d,
                    this['needsStart'] = !0x0,
                    this['cancelTween'] = function () {
                         const _0x24beb2 = _0x560c6c;
                         this[_0x24beb2(0x96c)]['remove'](this);
                    }
                    ;
          }
          Cesium[_0xc3a123(0x588)][_0xc3a123(0x2d4)]['addS3MTilesLayerByScp'] = function (_0x5e235a, _0x2edc08, _0x5e021c) {
               const _0x4e3504 = _0xc3a123;
               _0x2edc08 = _0x2edc08 || {};
               let _0x3c4318 = _0x5e235a['indexOf']('rest/realspace');
               if (-0x1 === _0x3c4318)
                    return Promise['reject'](!0x1);
               let _0x23d692 = _0x5e235a[_0x4e3504(0x617)](0x0, _0x3c4318 + 0xe)
                    , _0x10da51 = this;
               return _0x3940b0(_0x424c59[_0x4e3504(0x597)]) && (_0x3940b0(_0x424c59[_0x4e3504(0x597)][_0x4e3504(0x1a1)][_0x5e235a]) || (_0x5e235a = _0x424c59[_0x4e3504(0x6be)](_0x5e235a))),
                    new Promise((_0x5a44ac, _0x19fd90) => {
                         _0x2cce42(_0x23d692)['then'](_0x5420e5 => {
                              const _0x2a6341 = _0x5e91;
                              _0x2edc08[_0x2a6341(0x29f)] = _0x5e235a,
                                   _0x2edc08['context'] = _0x10da51[_0x2a6341(0x878)],
                                   _0x2edc08[_0x2a6341(0xd31)] = _0x5420e5,
                                   _0x2edc08['sceneMode'] = _0x10da51[_0x2a6341(0xa52)];
                              let _0x3f6e58 = new _0x160299(_0x2edc08);
                              _0x10da51[_0x2a6341(0xa7c)][_0x2a6341(0x2ef)](_0x3f6e58, _0x5e021c),
                                   _0x10da51[_0x2a6341(0x878)][_0x2a6341(0xd1d)] || (_0x10da51[_0x2a6341(0x878)]['reflectFramebuffer'] = new _0x36c255(_0x10da51[_0x2a6341(0x878)]),
                                        _0x10da51[_0x2a6341(0x4db)] && _0x10da51[_0x2a6341(0x4db)][_0x2a6341(0x320)](_0x2a6341(0x439), _0x10da51[_0x2a6341(0x878)]['reflectFramebuffer'])),
                                   _0x5a44ac(_0x3f6e58);
                         }
                              , _0x258005 => {
                                   _0x19fd90(_0x258005);
                              }
                         );
                    }
                    );
          }
               ,
               Cesium[_0xc3a123(0x588)][_0xc3a123(0x2d4)][_0xc3a123(0x1ec)] = Cesium[_0xc3a123(0x588)][_0xc3a123(0x2d4)]['pick'],
               Cesium['Scene'][_0xc3a123(0x2d4)][_0xc3a123(0x988)] = function (_0x512f51, _0x26aa33, _0x324bcb) {
                    const _0x5eab82 = _0xc3a123;
                    let _0x43cfd9 = this['hookPickFunc'](_0x512f51, _0x26aa33, _0x324bcb);
                    if (_0x43cfd9)
                         _0x43cfd9[_0x5eab82(0x715)] && _0x43cfd9[_0x5eab82(0x715)] instanceof _0x160299 && _0x43cfd9['primitive']['setSelection'](_0x43cfd9['id']);
                    else
                         for (let _0xcdd558 = 0x0, _0x4f40f9 = this[_0x5eab82(0xa7c)][_0x5eab82(0x72b)]; _0xcdd558 < _0x4f40f9; _0xcdd558++) {
                              let _0x1cd01a = this[_0x5eab82(0xa7c)][_0x5eab82(0x420)](_0xcdd558);
                              _0x1cd01a instanceof _0x160299 && _0x1cd01a[_0x5eab82(0xce6)]();
                         }
                    return _0x43cfd9;
               }
               ,
               Cesium['Scene']['prototype'][_0xc3a123(0x334)] = Cesium['Scene'][_0xc3a123(0x2d4)][_0xc3a123(0xc37)],
               Cesium['Scene']['prototype'][_0xc3a123(0xc37)] = function (_0x23ae0e, _0x4f7a30, _0x2bce69, _0x2944e8) {
                    const _0x1f228b = _0xc3a123;
                    let _0x1da2d0 = this[_0x1f228b(0x334)](_0x23ae0e, _0x4f7a30, _0x2bce69, _0x2944e8)
                         , _0x525622 = _0x1da2d0[0x0] && _0x1da2d0[0x0][_0x1f228b(0x715)] && _0x1da2d0[0x0]['primitive'] instanceof _0x160299
                         , _0x3eff2e = []
                         , _0x4d080c = Object[_0x1f228b(0x7e5)](null);
                    if (_0x525622) {
                         for (; _0x1da2d0 && Cesium[_0x1f228b(0x336)](_0x1da2d0[0x0]);) {
                              let _0x3b0df0 = _0x1da2d0[0x0];
                              if (_0x3eff2e[_0x1f228b(0x63e)](_0x3b0df0),
                                   _0x3b0df0['primitive'] instanceof _0x160299) {
                                   _0x3b0df0[_0x1f228b(0x715)][_0x1f228b(0x59a)]([_0x3b0df0['id']], !0x1);
                                   let _0x1f9046 = _0x3b0df0[_0x1f228b(0x715)]['id'];
                                   (_0x4d080c[_0x1f9046] = _0x4d080c[_0x1f9046] || {})[_0x1f228b(0x9c9)] = _0x3b0df0['primitive'],
                                        (_0x4d080c[_0x1f9046][_0x1f228b(0x4bd)] = _0x4d080c[_0x1f9046][_0x1f228b(0x4bd)] || [])[_0x1f228b(0x63e)](_0x3b0df0['id']);
                              }
                              _0x1da2d0 = this['hookDrillPickFunc'](_0x23ae0e, _0x4f7a30, _0x2bce69, _0x2944e8);
                         }
                         for (let _0x54092b in _0x4d080c) {
                              let _0x1b8835 = _0x4d080c[_0x54092b];
                              _0x1b8835[_0x1f228b(0x9c9)][_0x1f228b(0x59a)](_0x1b8835['ids'], !0x0);
                         }
                         return _0x3eff2e;
                    }
                    return _0x1da2d0;
               }
               ,
               Cesium[_0xc3a123(0x585)][_0xc3a123(0x2d4)]['hookUpdateFunc'] = Cesium[_0xc3a123(0x585)][_0xc3a123(0x2d4)][_0xc3a123(0x2dc)],
               Cesium[_0xc3a123(0x585)][_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x568ea3, _0x270d1a) {
                    const _0x57c282 = _0xc3a123;
                    let _0x19d3d9 = this['hookUpdateFunc'](_0x568ea3, _0x270d1a);
                    return _0x19d3d9 && _0x568ea3[_0x57c282(0xc97)]['bReflect'] && (this[_0x57c282(0x37c)] || (this[_0x57c282(0x37c)] = Cesium[_0x57c282(0x259)][_0x57c282(0x6d8)]({
                         'cull': {
                              'enabled': !0x0,
                              'face': Cesium[_0x57c282(0xacc)][_0x57c282(0xdaa)]
                         },
                         'blending': Cesium['BlendingState'][_0x57c282(0x276)],
                         'depthMask': !0x1
                    })),
                         _0x19d3d9[_0x57c282(0x54e)] = this[_0x57c282(0x37c)]),
                         _0x19d3d9;
               }
               ,
               Cesium['UniformState'][_0xc3a123(0x2d4)][_0xc3a123(0x736)] = function (_0x201cd2) {
                    const _0x2c2942 = _0xc3a123;
                    let _0x375756 = _0x201cd2['viewMatrix']
                         , _0x32e8cb = _0x201cd2[_0x2c2942(0xabf)];
                    _0x201cd2[_0x2c2942(0x5dd)] ? (Cesium['Matrix4']['multiply'](_0x375756, _0x201cd2[_0x2c2942(0xbe9)], _0x4fd81a),
                         Cesium[_0x2c2942(0xcdf)][_0x2c2942(0xbab)](_0x4fd81a, _0x21a650),
                         _0x53a620(this, _0x4fd81a),
                         _0x1962bf(this, _0x21a650)) : (_0x53a620(this, _0x375756),
                              _0x1962bf(this, _0x32e8cb)),
                         _0x3d8910(this, _0x201cd2),
                         this[_0x2c2942(0x846)]['x'] = _0x201cd2['frustum'][_0x2c2942(0x3ae)],
                         this[_0x2c2942(0x846)]['y'] = _0x201cd2[_0x2c2942(0x8a1)][_0x2c2942(0xba6)],
                         this[_0x2c2942(0x733)](_0x201cd2[_0x2c2942(0x8a1)]),
                         this[_0x2c2942(0xc51)] = this[_0x2c2942(0xa52)] !== Cesium[_0x2c2942(0xa7f)]['SCENE2D'] && _0x201cd2[_0x2c2942(0x8a1)] instanceof Cesium[_0x2c2942(0xa4a)];
               }
               ,
               Cesium[_0xc3a123(0xa32)]['prototype'][_0xc3a123(0x733)] = function (_0x52f425) {
                    const _0x48e69c = _0xc3a123;
                    let _0x18e3bb = _0x52f425[_0x48e69c(0x74a)];
                    Cesium[_0x48e69c(0xcdf)]['clone'](_0x18e3bb, _0x4fd81a),
                         _0x2e5fa3(_0x52f425, _0x4fd81a),
                         _0xe42d4d(this, _0x4fd81a),
                         Cesium[_0x48e69c(0x336)](_0x52f425[_0x48e69c(0xdac)]) && _0x2844ae(this, _0x52f425['infiniteProjectionMatrix']),
                         this[_0x48e69c(0xc18)]['x'] = _0x52f425['near'],
                         this['_currentFrustum']['y'] = _0x52f425[_0x48e69c(0xba6)],
                         this[_0x48e69c(0xb0c)] = _0x52f425['far'] - _0x52f425[_0x48e69c(0x3ae)] + 0x1,
                         this[_0x48e69c(0x29c)] = Cesium[_0x48e69c(0x417)][_0x48e69c(0xa6f)](this[_0x48e69c(0xb0c)]),
                         this[_0x48e69c(0x9e9)] = 0x1 / this['_log2FarDepthFromNearPlusOne'],
                         Cesium[_0x48e69c(0x336)](_0x52f425[_0x48e69c(0x2db)]) && (_0x52f425 = _0x52f425[_0x48e69c(0x2db)]),
                         this[_0x48e69c(0xd63)]['x'] = _0x52f425[_0x48e69c(0x7d0)],
                         this['_frustumPlanes']['y'] = _0x52f425[_0x48e69c(0xc1a)],
                         this[_0x48e69c(0xd63)]['z'] = _0x52f425[_0x48e69c(0xb37)],
                         this[_0x48e69c(0xd63)]['w'] = _0x52f425[_0x48e69c(0x688)];
               }
               ,
               Cesium[_0xc3a123(0x2ca)][_0xc3a123(0x2d4)][_0xc3a123(0x2dc)] = function (_0x485ba3) {
                    const _0x754456 = _0xc3a123;
                    var _0x37f25e = this[_0x754456(0x96c)]
                         , _0x75d6df = 0x0;
                    for (_0x485ba3 = Cesium['defined'](_0x485ba3) ? _0x485ba3 / 0.001 : _0x4d3a4e(); _0x75d6df < _0x37f25e['length'];) {
                         var _0x5298e7 = _0x37f25e[_0x75d6df]
                              , _0x35b25d = _0x5298e7['_tweenjs'];
                         _0x5298e7[_0x754456(0x3a0)] ? (_0x5298e7['needsStart'] = !0x1,
                              _0x35b25d[_0x754456(0x4b1)](_0x485ba3)) : _0x35b25d[_0x754456(0x2dc)](_0x485ba3) ? _0x75d6df++ : (_0x35b25d[_0x754456(0x804)](),
                                   _0x37f25e[_0x754456(0x3d3)](_0x75d6df, 0x1));
                    }
               }
               ,
               Cesium['TweenCollection']['prototype'][_0xc3a123(0x2ef)] = function (_0x24f4cc) {
                    const _0x2bd44c = _0xc3a123;
                    if (_0x24f4cc = Cesium[_0x2bd44c(0x4d9)](_0x24f4cc, Cesium[_0x2bd44c(0x4d9)][_0x2bd44c(0x656)]),
                         !Cesium[_0x2bd44c(0x336)](_0x24f4cc[_0x2bd44c(0x63b)]) || !Cesium[_0x2bd44c(0x336)](_0x24f4cc[_0x2bd44c(0x998)]))
                         throw new Cesium[(_0x2bd44c(0x610))](_0x2bd44c(0x9f7));
                    if (!Cesium[_0x2bd44c(0x336)](_0x24f4cc['duration']) || _0x24f4cc['duration'] < 0x0)
                         throw new Cesium[(_0x2bd44c(0x610))](_0x2bd44c(0x533));
                    if (0x0 === _0x24f4cc[_0x2bd44c(0xc39)])
                         return Cesium[_0x2bd44c(0x336)](_0x24f4cc[_0x2bd44c(0xd5b)]) && _0x24f4cc[_0x2bd44c(0xd5b)](),
                              new _0x5ed140(this);
                    var _0xd4d0f6 = _0x24f4cc[_0x2bd44c(0xc39)] / 0.001
                         , _0xcbeb86 = Cesium['defaultValue'](_0x24f4cc[_0x2bd44c(0x9b3)], 0x0)
                         , _0x48ec74 = _0xcbeb86 / 0.001
                         , _0x2e0be2 = Cesium[_0x2bd44c(0x4d9)](_0x24f4cc[_0x2bd44c(0xc4f)], Cesium[_0x2bd44c(0x4fd)][_0x2bd44c(0x631)])
                         , _0x3ff7f5 = _0x24f4cc[_0x2bd44c(0x63b)]
                         , _0x3842cf = new _0xb59011[(_0x2bd44c(0x3e8))](_0x3ff7f5);
                    _0x3842cf['to'](_0x225a27(_0x24f4cc[_0x2bd44c(0x998)]), _0xd4d0f6),
                         _0x3842cf['delay'](_0x48ec74),
                         _0x3842cf[_0x2bd44c(0x9da)](_0x2e0be2),
                         Cesium[_0x2bd44c(0x336)](_0x24f4cc[_0x2bd44c(0x2dc)]) && _0x3842cf[_0x2bd44c(0x818)](function () {
                              const _0x3e1224 = _0x2bd44c;
                              _0x24f4cc[_0x3e1224(0x2dc)](_0x3ff7f5);
                         }),
                         _0x3842cf[_0x2bd44c(0x22d)](Cesium[_0x2bd44c(0x4d9)](_0x24f4cc['complete'], null)),
                         _0x3842cf[_0x2bd44c(0xa3e)](Cesium['defaultValue'](_0x24f4cc[_0x2bd44c(0x87a)], 0x0));
                    var _0x384eb0 = new _0x5ed140(this, _0x3842cf, _0x24f4cc[_0x2bd44c(0x63b)], _0x24f4cc[_0x2bd44c(0x998)], _0x24f4cc[_0x2bd44c(0xc39)], _0xcbeb86, _0x2e0be2, _0x24f4cc[_0x2bd44c(0x2dc)], _0x24f4cc['complete'], _0x24f4cc[_0x2bd44c(0x968)]);
                    return this[_0x2bd44c(0x96c)][_0x2bd44c(0x63e)](_0x384eb0),
                         _0x384eb0;
               }
               ,
               Cesium[_0xc3a123(0x2ca)][_0xc3a123(0x2d4)][_0xc3a123(0xced)] = function (_0x483f33) {
                    const _0x148b53 = _0xc3a123;
                    if (!Cesium[_0x148b53(0x336)](_0x483f33))
                         return !0x1;
                    var _0x5dac67 = this[_0x148b53(0x96c)][_0x148b53(0xcef)](_0x483f33);
                    return -0x1 !== _0x5dac67 && (_0x483f33[_0x148b53(0xa14)][_0x148b53(0x804)](),
                         Cesium['defined'](_0x483f33[_0x148b53(0x968)]) && _0x483f33[_0x148b53(0x968)](),
                         this[_0x148b53(0x96c)]['splice'](_0x5dac67, 0x1),
                         !0x0);
               }
               ,
               Cesium['Cesium3DTileset'][_0xc3a123(0x2d4)][_0xc3a123(0xc7c)] = Cesium[_0xc3a123(0x80c)]['prototype'][_0xc3a123(0xa5e)],
               Cesium['Cesium3DTileset'][_0xc3a123(0x2d4)][_0xc3a123(0xa5e)] = function (_0x4ac1b9, _0x2ffded, _0x118038) {
                    const _0x289024 = _0xc3a123;
                    return -0x1 !== _0x4ac1b9[_0x289024(0x774)][_0x289024(0x29f)][_0x289024(0xcef)](_0x289024(0x707)) && (_0x4ac1b9[_0x289024(0x29f)] = _0x4ac1b9[_0x289024(0x29f)]['replace']('/tileset/config', _0x289024(0xb41)),
                         this[_0x289024(0x1e7)] = !0x0),
                         this['hookLoadTilesetFunc'](_0x4ac1b9, _0x2ffded, _0x118038);
               }
               ,
               Cesium[_0xc3a123(0x2fa)][_0xc3a123(0x2d4)][_0xc3a123(0xab3)] = Cesium[_0xc3a123(0x2fa)][_0xc3a123(0x2d4)][_0xc3a123(0x6da)],
               Cesium[_0xc3a123(0x2fa)]['prototype']['requestContent'] = function () {
                    const _0x11ee4b = _0xc3a123;
                    return this[_0x11ee4b(0x86e)]['isSuperMapiServer'] && (this[_0x11ee4b(0xc08)][_0x11ee4b(0x29f)] = this['_contentResource'][_0x11ee4b(0x29f)]['replace'](/\+/g, _0x11ee4b(0x3bd))),
                         this[_0x11ee4b(0xab3)]();
               }
               ,
               Cesium[_0xc3a123(0xa30)]['_sampleTerrainMostDetailedFunc'] = Cesium[_0xc3a123(0xa30)][_0xc3a123(0x51f)],
               Cesium['computeFlyToLocationForRectangle'][_0xc3a123(0x51f)] = function (_0x6c020b, _0x4fe39a) {
                    const _0x3ff84a = _0xc3a123;
                    return Cesium[_0x3ff84a(0xa30)][_0x3ff84a(0x219)](_0x6c020b, _0x4fe39a)[_0x3ff84a(0x7db)](_0xa7d244 => {
                         const _0x4269ac = _0x3ff84a;
                         let _0x34da5e = _0xa7d244;
                         return _0x34da5e[_0x4269ac(0x9f8)](_0x3e92b5 => {
                              const _0x2ad41b = _0x4269ac;
                              null == _0x3e92b5['height'] && (_0x3e92b5[_0x2ad41b(0x48e)] = 0x0);
                         }
                         ),
                              Promise['resolve'](_0x34da5e);
                    }
                    );
               }
               ;
          var _0x46a0ef = {};
          const _0x205aeb = {
               'NONE': 0x0,
               'CATMULL_ROM': 0x1
          };
          var _0xdeef2b = Object['freeze'](_0x205aeb);
          const _0x4762ff = {
               'StopPause': _0xc3a123(0x70c),
               'StopAround': 'StopAround'
          };
          var _0x31ca78 = Object[_0xc3a123(0xb56)](_0x4762ff);
          const _0x506303 = Adapter['defaultValue'];
          function _0xd96643(_0x4980c6) {
               const _0x6f6cc = _0xc3a123;
               this[_0x6f6cc(0x2b0)] = _0x506303(_0x4980c6[_0x6f6cc(0xc39)], 0xa),
                    this['_waitTime'] = _0x506303(_0x4980c6[_0x6f6cc(0x3eb)], 0x0),
                    this[_0x6f6cc(0x8a7)] = _0x4980c6[_0x6f6cc(0x72f)],
                    this['_heading'] = _0x506303(_0x4980c6[_0x6f6cc(0xcca)], 0x0),
                    this[_0x6f6cc(0x2ed)] = _0x506303(_0x4980c6[_0x6f6cc(0xbe4)], 0x0),
                    this[_0x6f6cc(0x1c1)] = _0x4980c6['stopName'],
                    this[_0x6f6cc(0xbbf)] = _0x506303(_0x4980c6[_0x6f6cc(0x23f)], 0x0),
                    this[_0x6f6cc(0xc71)] = _0x4980c6[_0x6f6cc(0x898)] || _0x31ca78[_0x6f6cc(0x70c)],
                    this[_0x6f6cc(0x1c2)] = _0x506303(_0x4980c6[_0x6f6cc(0xa73)], 0x0),
                    this['_promise'] = void 0x0,
                    this[_0x6f6cc(0xc1d)] = _0x506303(_0x4980c6[_0x6f6cc(0xbb5)], 0x0),
                    this[_0x6f6cc(0x395)] = void 0x0,
                    this[_0x6f6cc(0xd70)] = void 0x0,
                    this[_0x6f6cc(0x537)] = _0x506303(_0x4980c6['isConvert'], !0x0);
          }
          Object[_0xc3a123(0xcde)](_0xd96643[_0xc3a123(0x2d4)], {
               'duration': {
                    'get': function () {
                         return this['_duration'];
                    },
                    'set': function (_0x232f05) {
                         _0x232f05 && (this['_duration'] = _0x232f05);
                    }
               },
               'waitTime': {
                    'get': function () {
                         const _0x5c0762 = _0xc3a123;
                         return this[_0x5c0762(0x726)];
                    },
                    'set': function (_0x4b38bf) {
                         const _0x43765a = _0xc3a123;
                         _0x4b38bf && !this[_0x43765a(0x2ad)] && (this['_waitTime'] = _0x4b38bf);
                    }
               },
               'heading': {
                    'get': function () {
                         const _0x4813f8 = _0xc3a123;
                         return this[_0x4813f8(0xd48)];
                    },
                    'set': function (_0x19c92e) {
                         const _0x2c021c = _0xc3a123;
                         _0x19c92e && (this[_0x2c021c(0xd48)] = _0x19c92e);
                    }
               },
               'tilt': {
                    'get': function () {
                         const _0x5970af = _0xc3a123;
                         return this[_0x5970af(0x2ed)];
                    },
                    'set': function (_0x3637ef) {
                         const _0x5c8460 = _0xc3a123;
                         _0x3637ef && (this[_0x5c8460(0x2ed)] = _0x3637ef);
                    }
               },
               'stopName': {
                    'get': function () {
                         return this['_stopName'];
                    },
                    'set': function (_0x142ff9) {
                         const _0x5639c7 = _0xc3a123;
                         _0x142ff9 && (this[_0x5639c7(0x1c1)] = _0x142ff9);
                    }
               },
               'point': {
                    'get': function () {
                         const _0x4c3e3b = _0xc3a123;
                         return this[_0x4c3e3b(0x8a7)];
                    },
                    'set': function (_0x36fa0c) {
                         const _0x330790 = _0xc3a123;
                         this[_0x330790(0x8a7)] = _0x36fa0c;
                    }
               },
               'speed': {
                    'get': function () {
                         return this['_speed'];
                    },
                    'set': function (_0x102daf) {
                         const _0x364618 = _0xc3a123;
                         _0x102daf && (this[_0x364618(0xbbf)] = _0x102daf);
                    }
               },
               'stopPlayMode': {
                    'get': function () {
                         const _0x3c8e66 = _0xc3a123;
                         return this[_0x3c8e66(0xc71)];
                    },
                    'set': function (_0x7aa7f) {
                         _0x7aa7f && (this['_stopPlayMode'] = _0x7aa7f);
                    }
               },
               'surroundDuration': {
                    'get': function () {
                         const _0x47b342 = _0xc3a123;
                         return this[_0x47b342(0x1c2)];
                    },
                    'set': function (_0x5e0e93) {
                         const _0x2c6fab = _0xc3a123;
                         _0x5e0e93 && (this[_0x2c6fab(0x1c2)] = _0x5e0e93);
                    }
               },
               'index': {
                    'get': function () {
                         const _0x49ef2b = _0xc3a123;
                         return this[_0x49ef2b(0xc1d)];
                    }
               },
               'promise': {
                    'get': function () {
                         return this['_promise'];
                    },
                    'set': function (_0x29bf7e) {
                         const _0x5ae665 = _0xc3a123;
                         _0x29bf7e && (this[_0x5ae665(0xb77)] = _0x29bf7e);
                    }
               }
          });
          const _0x20046c = {
               'Smoothly': 0x0,
               'Directly': 0x1
          };
          var _0x5783c7 = Object['freeze'](_0x20046c);
          const _0x22b6b1 = Adapter[_0xc3a123(0x610)]
               , _0x1469f1 = Adapter[_0xc3a123(0x4fd)]
               , _0x52001a = Adapter['defined']
               , _0x96bf41 = Adapter[_0xc3a123(0x4d9)]
               , _0x104e57 = Adapter[_0xc3a123(0x25b)]
               , _0x5789a1 = {
                    'Playing': 0x0,
                    'Pause': 0x1,
                    'Stop': 0x2,
                    'Wait': 0x3
               };
          function _0x579f39(_0x2209b7) {
               const _0x5068d7 = _0xc3a123
                    , _0x261ac6 = _0x2209b7[_0x5068d7(0x2b4)]
                    , _0x4bcaba = _0x2209b7[_0x5068d7(0xa12)];
               if (!_0x261ac6)
                    throw new _0x22b6b1('scene\x20is\x20required!');
               if (!_0x4bcaba)
                    throw new _0x22b6b1(_0x5068d7(0x5a8));
               this[_0x5068d7(0x19d)] = _0x4bcaba,
                    this[_0x5068d7(0x33e)] = _0x261ac6,
                    this['_currentStopIndex'] = 0x0,
                    this[_0x5068d7(0x9f3)] = 0x0,
                    this['_currentTween'] = void 0x0,
                    this[_0x5068d7(0x8c8)] = new Adapter[(_0x5068d7(0x31d))](),
                    this['_playRate'] = 0x1,
                    this['_flyStatus'] = _0x5789a1[_0x5068d7(0x63a)],
                    this[_0x5068d7(0x73a)] = _0x5783c7['Smoothly'],
                    this[_0x5068d7(0x2d9)] = _0xdeef2b['NONE'];
          }
          function _0x866f3f(_0x3500b0, _0x58a037, _0x59c172) {
               const _0x227449 = _0xc3a123;
               _0x3500b0['_flyStatus'] = _0x5789a1[_0x227449(0x377)];
               const _0x4a0147 = _0x3500b0[_0x227449(0x33e)][_0x227449(0xc97)]
                    , _0x250d91 = _0x3500b0[_0x227449(0x19d)]['routes'][0x0]
                    , _0x5365a5 = _0x250d91['_catmullRomSpline']
                    , _0x545f54 = _0x3500b0[_0x227449(0x2d9)]
                    , _0x497547 = _0x250d91[_0x227449(0x3c9)]
                    , _0x320916 = _0x250d91[_0x227449(0xcd6)]
                    , _0x1b840e = _0x250d91[_0x227449(0x6ba)]
                    , _0x47b145 = _0x250d91[_0x227449(0x278)]
                    , _0x1c7c95 = _0x96bf41(_0x250d91[_0x227449(0x7a1)]['get'](_0x58a037), _0x250d91[_0x227449(0x7a1)][_0x227449(0x917)][_0x58a037]);
               if (!_0x1c7c95)
                    return !0x0 === _0x497547 ? (_0x58a037 = _0x250d91[_0x227449(0x7a1)][_0x227449(0x917)][0x0][_0x227449(0xbb5)],
                         _0x52001a(_0x5365a5) && (_0x5365a5[_0x227449(0x638)] = 0x0),
                         _0x3500b0[_0x227449(0x9f3)] = _0x58a037,
                         _0x3500b0[_0x227449(0x1db)] = _0x58a037,
                         void _0x866f3f(_0x3500b0, _0x58a037)) : void (_0x3500b0['_flyStatus'] = _0x5789a1[_0x227449(0x63a)]);
               if (_0x58a037 === _0x3500b0[_0x227449(0x1db)]) {
                    const _0x517cf5 = _0x52001a(_0x1c7c95['direction']) && !_0x1b840e ? {
                         'direction': _0x1c7c95[_0x227449(0x608)],
                         'up': _0x1c7c95['up']
                    } : {
                         'heading': _0x1c7c95['heading'],
                         'pitch': _0x1c7c95[_0x227449(0xbe4)],
                         'roll': 0x0
                    };
                    _0x4a0147['setView']({
                         'destination': _0x1c7c95[_0x227449(0x72f)],
                         'orientation': _0x517cf5,
                         'convert': _0x1c7c95[_0x227449(0x537)]
                    }),
                         _0x58a037++,
                         _0x866f3f(_0x3500b0, _0x58a037);
               } else {
                    if (_0x1c7c95[_0x227449(0x609)]) {
                         const _0x1427e6 = _0x52001a(_0x1c7c95[_0x227449(0x608)]) && !_0x1b840e ? {
                              'direction': _0x1c7c95[_0x227449(0x608)],
                              'up': _0x1c7c95['up']
                         } : {
                              'heading': _0x1c7c95[_0x227449(0xcca)],
                              'pitch': _0x1c7c95[_0x227449(0xbe4)],
                              'roll': 0x0
                         };
                         return _0x4a0147[_0x227449(0xc69)]({
                              'destination': _0x1c7c95[_0x227449(0x72f)],
                              'orientation': _0x1427e6,
                              'convert': _0x1c7c95[_0x227449(0x537)]
                         }),
                              void _0x1ee6a2(_0x3500b0, _0x1c7c95, _0x58a037);
                    }
                    const _0x175935 = _0x96bf41(_0x250d91['_stopCollection'][_0x227449(0x420)](_0x58a037 - 0x1), _0x250d91['_stopCollection'][_0x227449(0x420)](_0x1c7c95[_0x227449(0xd70)]));
                    _0x52001a(_0x59c172) && (_0x175935 = _0x59c172);
                    const _0x250189 = _0x175935[_0x227449(0xcf2)] < _0x1c7c95['altitude'] ? _0x175935['altitude'] : _0x1c7c95['altitude'];
                    let _0xa614b8;
                    if (_0x175935[_0x227449(0x898)] === _0x31ca78[_0x227449(0x99d)])
                         _0xa614b8 = _0x175935['surroundDuration'];
                    else {
                         if (_0x52001a(_0x59c172)) {
                              const _0x1a5d93 = _0x104e57[_0x227449(0x3dd)](_0x59c172['point'], _0x1c7c95['point']);
                              _0x175935[_0x227449(0xc39)] = _0x1a5d93 / _0x175935['speed'];
                         }
                         _0xa614b8 = _0x175935[_0x227449(0xc39)];
                    }
                    _0xa614b8 /= _0x3500b0[_0x227449(0x8d8)];
                    const _0x1ccdc1 = _0x52001a(_0x1c7c95[_0x227449(0x608)]) && !_0x1b840e ? {
                         'direction': _0x1c7c95[_0x227449(0x608)],
                         'up': _0x1c7c95['up']
                    } : {
                         'heading': _0x1c7c95['heading'],
                         'pitch': _0x1c7c95['tilt'],
                         'roll': 0x0
                    }
                         , _0x54f222 = !0x1;
                    _0x3500b0[_0x227449(0x73a)] === _0x5783c7[_0x227449(0x3f3)] && _0x52001a(_0x175935[_0x227449(0x608)]) && (_0x175935[_0x227449(0x608)],
                         _0x175935['up'],
                         _0x54f222 = !0x0),
                         _0x4a0147[_0x227449(0x676)]({
                              'convert': _0x1c7c95[_0x227449(0x537)],
                              'destination': _0x1c7c95[_0x227449(0x72f)],
                              'orientation': _0x1ccdc1,
                              'maximumHeight': _0x250189,
                              'duration': _0xa614b8,
                              'headingFree': _0x320916,
                              'pitchFree': _0x1b840e,
                              'altitudeFree': _0x47b145,
                              'directTurning': _0x54f222,
                              'catmullRomSpline': _0x5365a5,
                              'preStopIndex': _0x58a037 - 0x1,
                              'interpolationMode': _0x545f54,
                              'easingFunction': _0x1469f1['LINEAR_NONE'],
                              'complete': function () {
                                   _0x1ee6a2(_0x3500b0, _0x1c7c95, _0x58a037);
                              }
                         });
               }
          }
          let _0x11308b;
          function _0x1ee6a2(_0x51fc71, _0x1a2b28, _0x1c873) {
               const _0x1e43b0 = _0xc3a123;
               if (_0x11308b && clearTimeout(_0x11308b),
                    _0x51fc71['_dynamicCurrentStopIndex'] = _0x1a2b28[_0x1e43b0(0xc1d)],
                    _0x1c873 = _0x96bf41(_0x1a2b28[_0x1e43b0(0x395)], _0x1a2b28[_0x1e43b0(0xc1d)] + 0x1),
                    _0x51fc71['_stopArrived'][_0x1e43b0(0x92b)](_0x1a2b28),
                    _0x1a2b28[_0x1e43b0(0xa16)])
                    _0x1a2b28[_0x1e43b0(0xa16)][_0x1e43b0(0x7db)](function () {
                         const _0xa37f7e = _0x1e43b0;
                         let _0x1d3342 = _0x1a2b28[_0xa37f7e(0x3eb)];
                         _0x1d3342 > 0x0 ? setTimeout(function () {
                              _0x866f3f(_0x51fc71, _0x1c873);
                         }, 0x3e8 * _0x1d3342) : _0x866f3f(_0x51fc71, _0x1c873);
                    });
               else {
                    let _0x3b8816 = _0x1a2b28[_0x1e43b0(0x3eb)];
                    _0x3b8816 > 0x0 ? (_0x51fc71['_flyStatus'] = _0x5789a1[_0x1e43b0(0x4ba)],
                         _0x11308b = setTimeout(function () {
                              const _0x2e5bb7 = _0x1e43b0;
                              _0x51fc71[_0x2e5bb7(0xa0f)] === _0x5789a1[_0x2e5bb7(0x4ba)] && (_0x51fc71['_flyStatus'] = _0x5789a1['Playing'],
                                   _0x866f3f(_0x51fc71, _0x1c873));
                         }, 0x3e8 * _0x3b8816)) : _0x866f3f(_0x51fc71, _0x1c873);
               }
          }
          function _0x5784ba(_0x4fa63e, _0x170f06) {
               const _0x12d7db = _0xc3a123
                    , _0x3bc31b = _0x170f06[_0x12d7db(0x432)]()
                    , _0x56a38e = _0x4fa63e[_0x12d7db(0x432)]();
               _0x56a38e = Cesium[_0x12d7db(0x25b)][_0x12d7db(0x579)](_0x56a38e, _0x56a38e),
                    Math[_0x12d7db(0xbd6)](Cesium['Cartesian3'][_0x12d7db(0xd06)](_0x56a38e, _0x3bc31b)) >= 0x1 && (_0x56a38e = Math['abs'](Cesium[_0x12d7db(0x25b)][_0x12d7db(0xd06)](_0x3bc31b, Cesium[_0x12d7db(0x25b)][_0x12d7db(0xaa1)])) < 0x1 ? Cesium[_0x12d7db(0x25b)][_0x12d7db(0x432)](Cesium[_0x12d7db(0x25b)][_0x12d7db(0xaa1)], _0x56a38e) : Cesium[_0x12d7db(0x25b)]['clone'](Cesium[_0x12d7db(0x25b)][_0x12d7db(0xcc2)], _0x56a38e));
               const _0x270949 = new Cesium[(_0x12d7db(0x25b))]();
               return Cesium[_0x12d7db(0x25b)]['cross'](_0x56a38e, _0x3bc31b, _0x270949),
                    _0x270949 = Cesium['Cartesian3'][_0x12d7db(0x579)](_0x270949, _0x270949),
                    Cesium[_0x12d7db(0x25b)][_0x12d7db(0x765)](_0x3bc31b, _0x270949, _0x56a38e),
                    _0x56a38e = Cesium[_0x12d7db(0x25b)][_0x12d7db(0x579)](_0x56a38e, _0x56a38e),
                    _0x56a38e;
          }
          Object['defineProperties'](_0x579f39[_0xc3a123(0x2d4)], {
               'routes': {
                    'get': function () {
                         const _0x3b84c1 = _0xc3a123;
                         return this[_0x3b84c1(0x19d)];
                    },
                    'set': function (_0x5ad9d3) {
                         const _0x124c55 = _0xc3a123;
                         _0x5ad9d3 && (this[_0x124c55(0x19d)] = _0x5ad9d3);
                    }
               },
               'stopArrived': {
                    'get': function () {
                         const _0x529e74 = _0xc3a123;
                         return this[_0x529e74(0x8c8)];
                    }
               },
               'currentStopIndex': {
                    'get': function () {
                         const _0x335379 = _0xc3a123
                              , _0x2cec0e = this['_routes']['routes'][0x0][_0x335379(0x7a1)]['get'](this['_currentStopIndex']);
                         return _0x52001a(_0x2cec0e) || (this['_dynamicCurrentStopIndex'] = this[_0x335379(0x25c)] = this[_0x335379(0x19d)]['routes'][0x0][_0x335379(0x7a1)][_0x335379(0x917)][0x0][_0x335379(0xbb5)]),
                              this[_0x335379(0x25c)];
                    },
                    'set': function (_0x4267b8) {
                         const _0x341f9d = _0xc3a123;
                         if (_0x52001a(_0x4267b8) && 0x1 == this[_0x341f9d(0x19d)]['ready']) {
                              const _0x1cad97 = this['_routes'][_0x341f9d(0xa12)][0x0][_0x341f9d(0xb68)][_0x341f9d(0x72b)] - 0x1;
                              _0x4267b8 = (_0x4267b8 = _0x4267b8 > _0x1cad97 ? _0x1cad97 : _0x4267b8) < 0x0 ? 0x0 : _0x4267b8,
                                   this[_0x341f9d(0x25c)] = _0x4267b8;
                         }
                    }
               },
               'currentRoute': {
                    'get': function () {
                         const _0x23b827 = _0xc3a123;
                         if (this[_0x23b827(0x19d)][_0x23b827(0x3b8)])
                              return this[_0x23b827(0x19d)][_0x23b827(0xa12)][0x0];
                    }
               },
               'readyPromise': {
                    'get': function () {
                         const _0x669e05 = _0xc3a123;
                         return this[_0x669e05(0x19d)]['readyPromise'];
                    }
               },
               'playRate': {
                    'get': function () {
                         const _0x373274 = _0xc3a123;
                         return this[_0x373274(0x8d8)];
                    },
                    'set': function (_0x5e16d6) {
                         const _0x4a539e = _0xc3a123;
                         if (_0x5e16d6 && 0x0 !== _0x5e16d6 && this[_0x4a539e(0x8d8)] !== _0x5e16d6 && (this[_0x4a539e(0x8d8)] = _0x5e16d6,
                              this[_0x4a539e(0xa0f)] === _0x5789a1[_0x4a539e(0x377)])) {
                              this[_0x4a539e(0x33e)][_0x4a539e(0xc97)][_0x4a539e(0xb63)]();
                              const _0x3f94af = this[_0x4a539e(0x19d)][_0x4a539e(0xa12)][0x0][_0x4a539e(0x420)](this[_0x4a539e(0x9f3)])
                                   , _0x4744cc = new _0xd96643({});
                              for (let _0x2e3069 in _0x3f94af)
                                   _0x4744cc[_0x2e3069] = _0x3f94af[_0x2e3069];
                              _0x4744cc['point'] = this[_0x4a539e(0x33e)][_0x4a539e(0xc97)][_0x4a539e(0x457)],
                                   _0x866f3f(this, this[_0x4a539e(0x9f3)] + 0x1, _0x4744cc);
                         }
                    }
               },
               'turningMode': {
                    'get': function () {
                         const _0x1f03d7 = _0xc3a123;
                         return this[_0x1f03d7(0x73a)];
                    },
                    'set': function (_0x469b99) {
                         const _0x1ce8d3 = _0xc3a123;
                         this[_0x1ce8d3(0x73a)] = _0x469b99;
                    }
               },
               'interpolationMode': {
                    'get': function () {
                         const _0x1d3e92 = _0xc3a123;
                         return this[_0x1d3e92(0x2d9)];
                    },
                    'set': function (_0xd3c9ed) {
                         const _0x5984a0 = _0xc3a123;
                         this[_0x5984a0(0x2d9)] = _0xd3c9ed;
                    }
               }
          }),
               _0x579f39[_0xc3a123(0x2d4)][_0xc3a123(0xc79)] = function () {
                    const _0x4b3da3 = _0xc3a123;
                    if (this[_0x4b3da3(0x2dd)] && this[_0x4b3da3(0xa0f)] !== _0x5789a1[_0x4b3da3(0x377)]) {
                         if (this['_flyStatus'] === _0x5789a1[_0x4b3da3(0x477)] || this[_0x4b3da3(0xa0f)] === _0x5789a1[_0x4b3da3(0x4ba)])
                              this['_currentTween'] && this[_0x4b3da3(0x33e)]['camera'][_0x4b3da3(0x827)] ? (this[_0x4b3da3(0x6b6)][_0x4b3da3(0xa14)][_0x4b3da3(0xd62)](),
                                   this[_0x4b3da3(0xa0f)] = _0x5789a1['Playing']) : _0x866f3f(this, this[_0x4b3da3(0x9f3)] + 0x1);
                         else {
                              if (this[_0x4b3da3(0x1db)] >= this[_0x4b3da3(0x19d)][_0x4b3da3(0xa12)][0x0][_0x4b3da3(0xb68)][this[_0x4b3da3(0x19d)]['routes'][0x0][_0x4b3da3(0xb68)][_0x4b3da3(0x72b)] - 0x1][_0x4b3da3(0xbb5)])
                                   return void (this[_0x4b3da3(0xa0f)] = _0x5789a1['Stop']);
                              _0x866f3f(this, this['currentStopIndex']);
                         }
                    }
               }
               ,
               _0x579f39[_0xc3a123(0x2d4)][_0xc3a123(0x632)] = function () {
                    const _0x53f3ed = _0xc3a123;
                    this[_0x53f3ed(0xa0f)] === _0x5789a1[_0x53f3ed(0x377)] ? (this[_0x53f3ed(0x6b6)] = this[_0x53f3ed(0x33e)][_0x53f3ed(0xc97)][_0x53f3ed(0x827)],
                         this[_0x53f3ed(0x6b6)] && this[_0x53f3ed(0x6b6)][_0x53f3ed(0xa14)] && this[_0x53f3ed(0x6b6)]['_tweenjs']['pause'](),
                         this[_0x53f3ed(0xa0f)] = _0x5789a1[_0x53f3ed(0x477)]) : this['_flyStatus'] === _0x5789a1[_0x53f3ed(0x4ba)] && (this[_0x53f3ed(0xa0f)] = _0x5789a1[_0x53f3ed(0x477)]);
               }
               ,
               _0x579f39[_0xc3a123(0x2d4)][_0xc3a123(0x804)] = function () {
                    const _0x44d69c = _0xc3a123;
                    this[_0x44d69c(0x6b6)] = this[_0x44d69c(0x33e)]['tweens'][_0x44d69c(0x420)](0x0),
                         this[_0x44d69c(0x6b6)] && this[_0x44d69c(0xa0f)] !== _0x5789a1[_0x44d69c(0x63a)] ? (this[_0x44d69c(0x6b6)][_0x44d69c(0x6ee)](),
                              this[_0x44d69c(0xa0f)] = _0x5789a1[_0x44d69c(0x63a)],
                              this['_currentTween'] = void 0x0) : this[_0x44d69c(0xa0f)] === _0x5789a1[_0x44d69c(0x4ba)] && (this[_0x44d69c(0xa0f)] = _0x5789a1[_0x44d69c(0x63a)]),
                         this[_0x44d69c(0x9f3)] = this[_0x44d69c(0x25c)];
               }
               ,
               _0x579f39[_0xc3a123(0x2d4)]['viewToStop'] = function (_0x2cc129) {
                    const _0x2d8bc6 = _0xc3a123;
                    if (_0x2cc129 && this['_flyStatus'] !== _0x5789a1[_0x2d8bc6(0x377)]) {
                         const _0x35bacb = this[_0x2d8bc6(0x33e)]['camera']
                              , _0x5e97d7 = _0x52001a(_0x2cc129[_0x2d8bc6(0x608)]) ? {
                                   'direction': _0x2cc129[_0x2d8bc6(0x608)],
                                   'up': _0x2cc129['up']
                              } : {
                                   'heading': _0x2cc129[_0x2d8bc6(0xcca)],
                                   'pitch': _0x2cc129[_0x2d8bc6(0xbe4)],
                                   'roll': 0x0
                              };
                         _0x35bacb[_0x2d8bc6(0xc69)]({
                              'destination': _0x2cc129['point'],
                              'orientation': _0x5e97d7,
                              'convert': _0x2cc129[_0x2d8bc6(0x537)]
                         }),
                              this['_dynamicCurrentStopIndex'] = _0x2cc129[_0x2d8bc6(0xbb5)];
                    }
               }
               ,
               _0x579f39[_0xc3a123(0x2d4)][_0xc3a123(0xac5)] = function () {
                    const _0xd5055a = _0xc3a123;
                    return this[_0xd5055a(0x2dd)] ? this[_0xd5055a(0x2dd)]['stopCollection'] : [];
               }
               ;
          const _0x3260e6 = Adapter[_0xc3a123(0x610)]
               , _0x47bda4 = Adapter[_0xc3a123(0x25b)]
               , _0x42a82d = Adapter[_0xc3a123(0x4d9)]
               , _0x36268c = Adapter[_0xc3a123(0x336)]
               , _0x505e57 = Adapter[_0xc3a123(0x417)]
               , _0x460498 = Adapter['Transforms']
               , _0x2f8053 = Adapter[_0xc3a123(0xc6e)];
          function _0x99320b(_0x56a1b7) {
               const _0x47dbbb = _0xc3a123;
               _0x56a1b7 = _0x56a1b7 || {},
                    this[_0x47dbbb(0x7a1)] = new _0x2f8053(),
                    this[_0x47dbbb(0xbc9)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0xd04)], !0x1),
                    this[_0x47dbbb(0x46f)] = [],
                    this[_0x47dbbb(0x526)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0x3c9)], !0x1),
                    this['_isLineVisible'] = _0x42a82d(_0x56a1b7['isLineVisible'], !0x1),
                    this['_lineEntity'] = void 0x0,
                    this[_0x47dbbb(0xb30)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0x622)], ''),
                    this[_0x47dbbb(0xbbf)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0x23f)], 0x32),
                    this['_isAlongline'] = _0x42a82d(_0x56a1b7[_0x47dbbb(0xa21)], !0x1),
                    this[_0x47dbbb(0x291)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0x813)], 0x0),
                    this[_0x47dbbb(0x28a)] = !this[_0x47dbbb(0x89a)] && _0x42a82d(_0x56a1b7['isHeadingFree'], !0x1),
                    this[_0x47dbbb(0x6c1)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0x6ba)], !0x1),
                    this['_isAltitudeFree'] = _0x42a82d(_0x56a1b7['isAltitudeFree'], !0x1),
                    this['_entityCollection'] = _0x56a1b7[_0x47dbbb(0x841)],
                    this[_0x47dbbb(0x6f9)] = void 0x0,
                    this['_isCleared'] = !0x1,
                    this[_0x47dbbb(0x29e)] = _0x42a82d(_0x56a1b7[_0x47dbbb(0x702)], {}),
                    this['_removeIndex'] = [],
                    this[_0x47dbbb(0xa3c)] = [];
          }
          Object[_0xc3a123(0xcde)](_0x99320b[_0xc3a123(0x2d4)], {
               'stopCollection': {
                    'get': function () {
                         return this['_stopCollection']['values'];
                    }
               },
               'isStopVisible': {
                    'get': function () {
                         const _0x18d1e0 = _0xc3a123;
                         return this[_0x18d1e0(0xbc9)];
                    },
                    'set': function (_0x5e3afb) {
                         const _0x520c7e = _0xc3a123;
                         _0x36268c(_0x5e3afb) && _0x5e3afb !== this['_isStopVisible'] && (this[_0x520c7e(0xbc9)] = _0x5e3afb,
                              this[_0x520c7e(0x556)]());
                    }
               },
               'isFlyLoop': {
                    'get': function () {
                         return this['_isFlyLoop'];
                    },
                    'set': function (_0x2e6c60) {
                         _0x2e6c60 && (this['_isFlyLoop'] = _0x2e6c60);
                    }
               },
               'isLineVisible': {
                    'get': function () {
                         const _0xabd92a = _0xc3a123;
                         return this[_0xabd92a(0xcd5)];
                    },
                    'set': function (_0x4012ba) {
                         const _0x8ff079 = _0xc3a123;
                         _0x36268c(_0x4012ba) && _0x4012ba !== this[_0x8ff079(0xcd5)] && (this[_0x8ff079(0xcd5)] = _0x4012ba,
                              this[_0x8ff079(0x8b6)]());
                    }
               },
               'lineEntity': {
                    'get': function () {
                         const _0x341d58 = _0xc3a123;
                         return this[_0x341d58(0x388)];
                    },
                    'set': function (_0x526c5c) {
                         const _0x46654a = _0xc3a123;
                         _0x36268c(_0x526c5c) && (this[_0x46654a(0x388)] = _0x526c5c);
                    }
               },
               'routeName': {
                    'get': function () {
                         const _0x8ad0d8 = _0xc3a123;
                         return this[_0x8ad0d8(0xb30)];
                    },
                    'set': function (_0x87a172) {
                         const _0x291802 = _0xc3a123;
                         _0x87a172 && (this[_0x291802(0xb30)] = _0x87a172);
                    }
               },
               'speed': {
                    'get': function () {
                         const _0x392f5f = _0xc3a123;
                         return this[_0x392f5f(0xbbf)];
                    },
                    'set': function (_0x2bc861) {
                         const _0x449e22 = _0xc3a123;
                         if (_0x2bc861 && _0x2bc861 != this[_0x449e22(0xbbf)]) {
                              this[_0x449e22(0xbbf)] = _0x2bc861;
                              let _0x2dc7af = this[_0x449e22(0x23f)]
                                   , _0x412d09 = this['stopCollection'];
                              for (let _0x2c5264 = 0x0, _0xcd3520 = _0x412d09[_0x449e22(0x72b)]; _0x2c5264 < _0xcd3520 - 0x1; _0x2c5264++) {
                                   let _0x427524 = _0x412d09[_0x2c5264];
                                   _0x427524[_0x449e22(0xc39)] = Math[_0x449e22(0xc1f)](_0x427524['distanceToNext'] / _0x2dc7af);
                              }
                         }
                    }
               },
               'stopCount': {
                    'get': function () {
                         const _0x340b17 = _0xc3a123;
                         return this[_0x340b17(0x7a1)][_0x340b17(0x72b)];
                    }
               },
               'isAlongline': {
                    'get': function () {
                         const _0x343eab = _0xc3a123;
                         return this[_0x343eab(0x89a)];
                    },
                    'set': function (_0x163421) {
                         const _0x517e2f = _0xc3a123;
                         _0x36268c(_0x163421) && (this[_0x517e2f(0x89a)] = _0x163421);
                    }
               },
               'totalDuration': {
                    'get': function () {
                         const _0x202098 = _0xc3a123;
                         return this[_0x202098(0x291)];
                    }
               },
               'isHeadingFree': {
                    'get': function () {
                         const _0x1ffef2 = _0xc3a123;
                         return this[_0x1ffef2(0x28a)];
                    },
                    'set': function (_0x27be9e) {
                         const _0x4cd431 = _0xc3a123;
                         _0x36268c(_0x27be9e) && (this[_0x4cd431(0x28a)] = _0x27be9e);
                    }
               },
               'isTiltFree': {
                    'get': function () {
                         const _0x18c98b = _0xc3a123;
                         return this[_0x18c98b(0x6c1)];
                    },
                    'set': function (_0x337d56) {
                         _0x36268c(_0x337d56) && (this['_isTiltFree'] = _0x337d56);
                    }
               },
               'isAltitudeFree': {
                    'get': function () {
                         const _0x2c2488 = _0xc3a123;
                         return this[_0x2c2488(0x642)];
                    },
                    'set': function (_0x497ed8) {
                         const _0x1d5eb4 = _0xc3a123;
                         _0x36268c(_0x497ed8) && (this[_0x1d5eb4(0x642)] = _0x497ed8);
                    }
               }
          }),
               _0x99320b[_0xc3a123(0x2d4)][_0xc3a123(0x366)] = function () {
                    const _0x3d52ce = _0xc3a123;
                    let _0x674f8e = 0x0
                         , _0x4b57ca = [0x0]
                         , _0x4712b0 = []
                         , _0x3ab4a4 = this['_stopsInfo'][_0x3d52ce(0x89f)];
                    const _0x31feba = this[_0x3d52ce(0x29e)][_0x3d52ce(0xa6a)];
                    _0x3ab4a4 = _0x36268c(_0x3ab4a4) ? _0x3ab4a4[_0x3d52ce(0x77e)](this['_addedStops']) : this[_0x3d52ce(0xa3c)];
                    for (let _0xcdded0 = 0x0; _0xcdded0 < _0x3ab4a4[_0x3d52ce(0x72b)]; _0xcdded0++) {
                         if (this[_0x3d52ce(0x871)][_0x3d52ce(0xcef)](_0xcdded0) > -0x1)
                              continue;
                         let _0x1131d3, _0x4d5be3, _0x20a2a6, _0x3acd8d = _0x3ab4a4[_0xcdded0];
                         if (_0x3acd8d instanceof _0xd96643)
                              _0x1131d3 = _0x3acd8d;
                         else {
                              let _0x21c444 = _0x9879e5[_0x3d52ce(0xd4c)](_0x3acd8d, _0x3d52ce(0xc97), _0x31feba);
                              const _0x499e78 = _0x9879e5[_0x3d52ce(0x2cd)](_0x21c444, _0x3d52ce(0xb4c), _0x31feba)
                                   , _0x131fa2 = _0x9879e5['queryNumericValue'](_0x21c444, 'latitude', _0x31feba)
                                   , _0x5a27c3 = _0x9879e5[_0x3d52ce(0x2cd)](_0x21c444, 'altitude', _0x31feba);
                              let _0x38db95 = _0x9879e5[_0x3d52ce(0x2cd)](_0x21c444, 'heading', _0x31feba);
                              _0x38db95 = _0x505e57[_0x3d52ce(0xb7f)](_0x38db95);
                              let _0x13fd7c = _0x9879e5['queryNumericValue'](_0x21c444, _0x3d52ce(0xbe4), _0x31feba);
                              _0x13fd7c = _0x505e57['toRadians'](_0x13fd7c - 0x5a),
                                   this[_0x3d52ce(0x89a)] && !this[_0x3d52ce(0x6c1)] && (_0x13fd7c = 0x0),
                                   _0x9879e5[_0x3d52ce(0x7b3)](_0x21c444, _0x3d52ce(0xbda), _0x31feba);
                              const _0x5355d1 = _0x9879e5[_0x3d52ce(0x6e7)](_0x3acd8d, _0x3d52ce(0xca3))
                                   , _0x14dab1 = _0x9879e5[_0x3d52ce(0xab2)](_0x3acd8d, _0x3d52ce(0x23f), _0x31feba)
                                   , _0x373d3a = _0x9879e5[_0x3d52ce(0xd4c)](_0x3acd8d, _0x3d52ce(0x561), _0x31feba);
                              _0x20a2a6 = _0x9879e5[_0x3d52ce(0x7b3)](_0x373d3a, 'stopPlayMode', _0x31feba);
                              const _0x3bca33 = _0x9879e5['queryNumericValue'](_0x373d3a, _0x3d52ce(0xcc7), _0x31feba);
                              let _0x5bea9a;
                              _0x9879e5[_0x3d52ce(0x2cd)](_0x373d3a, 'angularSpeed', _0x31feba),
                                   _0x9879e5[_0x3d52ce(0xd4c)](_0x373d3a, _0x3d52ce(0x2ff), _0x31feba);
                              let _0x4bfc66 = !0x0;
                              _0x499e78 > 0xb4 || _0x131fa2 > 0xb4 ? (_0x5bea9a = new _0x47bda4(_0x499e78, _0x131fa2, _0x5a27c3),
                                   _0x4bfc66 = !0x1) : _0x5bea9a = _0x47bda4[_0x3d52ce(0xd78)](_0x499e78, _0x131fa2, _0x5a27c3),
                                   _0x4712b0[_0x3d52ce(0x63e)](_0x5bea9a);
                              let _0x372509 = this[_0x3d52ce(0xa5c)];
                              if (_0xcdded0 > 0x0 && _0x372509 > 0x0 && (_0x4d5be3 = this[_0x3d52ce(0x7a1)][_0x3d52ce(0x917)][this[_0x3d52ce(0x7a1)][_0x3d52ce(0x72b)] - 0x1],
                                   _0x4d5be3['stopPlayMode'] != _0x31ca78['StopAround'])) {
                                   const _0x1a33f2 = _0x4d5be3[_0x3d52ce(0x72f)]
                                        , _0x56ea2e = _0x47bda4[_0x3d52ce(0x3dd)](_0x1a33f2, _0x5bea9a);
                                   _0x4d5be3[_0x3d52ce(0x295)] = _0x56ea2e;
                                   let _0x3cd816, _0x453e = _0x4d5be3[_0x3d52ce(0x23f)];
                                   _0x3cd816 = 0x0 < _0x453e ? _0x453e : this[_0x3d52ce(0xbbf)],
                                        _0x4d5be3[_0x3d52ce(0xc39)] = _0x56ea2e / _0x3cd816,
                                        _0x4d5be3[_0x3d52ce(0x23f)] = _0x3cd816,
                                        _0x674f8e += _0x4d5be3['duration'],
                                        _0x4b57ca[_0x3d52ce(0x63e)](_0x674f8e);
                              }
                              _0x1131d3 = new _0xd96643({
                                   'index': _0xcdded0,
                                   'point': _0x5bea9a,
                                   'heading': _0x38db95,
                                   'tilt': _0x13fd7c,
                                   'stopName': _0x5355d1,
                                   'waitTime': _0x3bca33,
                                   'speed': _0x14dab1,
                                   'isConvert': _0x4bfc66
                              }),
                                   _0x1131d3[_0x3d52ce(0xcf2)] = _0x5a27c3;
                         }
                         if (this[_0x3d52ce(0xb8a)](_0x1131d3),
                              _0x36268c(_0x4d5be3) && (_0x4d5be3[_0x3d52ce(0x395)] = _0xcdded0,
                                   _0x1131d3[_0x3d52ce(0xd70)] = _0x4d5be3[_0x3d52ce(0xbb5)]),
                              _0x20a2a6 === _0x31ca78[_0x3d52ce(0x99d)] && stopsViesNode) {
                              const _0x368f1c = queryChildNodes(stopsViesNode, 'view', _0x31feba);
                              if (0x2 == _0x368f1c[_0x3d52ce(0x72b)]) {
                                   const _0x250ef2 = _0x368f1c[0x0]
                                        , _0x4437e2 = _0x368f1c[0x1]
                                        , _0x135bc9 = _0x9879e5['queryNumericAttribute'](_0x250ef2, _0x3d52ce(0xcca), _0x31feba)
                                        , _0x4db93a = _0x9879e5[_0x3d52ce(0xab2)](_0x4437e2, _0x3d52ce(0xcca), _0x31feba);
                                   _0x9879e5[_0x3d52ce(0xab2)](_0x250ef2, _0x3d52ce(0xbe4), _0x31feba),
                                        _0x9879e5['queryNumericAttribute'](_0x4437e2, _0x3d52ce(0xbe4), _0x31feba),
                                        _0x9879e5['queryNumericAttribute'](_0x250ef2, 'altitude', _0x31feba),
                                        _0x9879e5[_0x3d52ce(0xab2)](_0x4437e2, _0x3d52ce(0xcf2), _0x31feba);
                                   const _0x40e0a0 = _0x9879e5[_0x3d52ce(0x6e7)](_0x250ef2, 'direction', _0x31feba);
                                   _0x9879e5[_0x3d52ce(0x6e7)](_0x4437e2, _0x3d52ce(0x608), _0x31feba);
                                   let _0x19e544, _0x542926 = _0x3d52ce(0xd08) === _0x40e0a0 ? 0x1 : -0x1;
                                   _0x505e57[_0x3d52ce(0xc13)](_0x135bc9, _0x4db93a, _0x505e57['EPSILON15']) ? _0x19e544 = 0x168 : (_0x19e544 = _0x4db93a - _0x135bc9,
                                        _0x19e544 < 0x0 && 'Clockwise' === _0x40e0a0 ? _0x19e544 += 0x168 : _0x19e544 > 0x0 && 'Clockwise' !== _0x40e0a0 && (_0x19e544 = 0x168 - _0x19e544),
                                        _0x19e544 = Math[_0x3d52ce(0xbd6)](_0x19e544));
                                   const _0x1e5b59 = _0x19e544 / angularSpeed;
                                   _0x1131d3[_0x3d52ce(0xa73)] = _0x1e5b59 / 0x3,
                                        _0x1131d3[_0x3d52ce(0x898)] = _0x31ca78[_0x3d52ce(0x99d)];
                                   const _0x376de9 = _0x505e57[_0x3d52ce(0xb7f)](_0x135bc9)
                                        , _0x5e38a2 = _0x505e57['toRadians'](_0x135bc9 + _0x542926 * _0x19e544 / 0x3)
                                        , _0x1c7bb8 = _0x505e57[_0x3d52ce(0xb7f)](_0x135bc9 + _0x542926 * _0x19e544 * 0x2 / 0x3)
                                        , _0x209b39 = _0x505e57[_0x3d52ce(0xb7f)](_0x4db93a)
                                        , _0x2d8531 = new _0xd96643({
                                             'point': point,
                                             'heading': _0x376de9,
                                             'tilt': tilt,
                                             'stopName': stopName,
                                             'waitTime': waitTime,
                                             'speed': stopSpeed,
                                             'surroundDuration': _0x1e5b59 / 0x3,
                                             'stopPlayMode': _0x31ca78[_0x3d52ce(0x99d)]
                                        });
                                   _0x2d8531['_bImmediately'] = !0x0,
                                        _0x2d8531[_0x3d52ce(0x2ad)] = !0x0,
                                        this[_0x3d52ce(0xb8a)](_0x2d8531);
                                   let _0x4bd910 = new _0xd96643({
                                        'point': point,
                                        'heading': _0x5e38a2,
                                        'tilt': tilt,
                                        'stopName': stopName,
                                        'waitTime': 0x0,
                                        'speed': stopSpeed,
                                        'surroundDuration': _0x1e5b59 / 0x3,
                                        'stopPlayMode': _0x31ca78[_0x3d52ce(0x99d)]
                                   });
                                   _0x4bd910[_0x3d52ce(0x2ad)] = !0x0,
                                        this[_0x3d52ce(0xb8a)](_0x4bd910);
                                   let _0x5a4a71 = new _0xd96643({
                                        'point': point,
                                        'heading': _0x1c7bb8,
                                        'tilt': tilt,
                                        'stopName': stopName,
                                        'waitTime': 0x0,
                                        'speed': stopSpeed,
                                        'surroundDuration': _0x1e5b59 / 0x3,
                                        'stopPlayMode': _0x31ca78['StopAround']
                                   });
                                   _0x5a4a71['_isGenerated'] = !0x0,
                                        this[_0x3d52ce(0xb8a)](_0x5a4a71);
                                   let _0x28f065 = new _0xd96643({
                                        'point': point,
                                        'heading': _0x209b39,
                                        'tilt': tilt,
                                        'stopName': stopName,
                                        'waitTime': waitTime,
                                        'speed': stopSpeed
                                   });
                                   this[_0x3d52ce(0xb8a)](_0x28f065),
                                        _0x674f8e += _0x1e5b59;
                              }
                         }
                    }
                    if (this[_0x3d52ce(0x89a)]) {
                         for (let _0x3bbe85 = 0x0; _0x3bbe85 < this[_0x3d52ce(0xa5c)] - 0x1; _0x3bbe85++) {
                              let _0x176906 = this[_0x3d52ce(0xb68)][_0x3bbe85];
                              const _0x29d756 = this['stopCollection'][_0x3bbe85 + 0x1]
                                   , _0x436195 = new _0x47bda4(_0x29d756[_0x3d52ce(0x72f)]['x'] - _0x176906['point']['x'], _0x29d756[_0x3d52ce(0x72f)]['y'] - _0x176906[_0x3d52ce(0x72f)]['y'], _0x29d756[_0x3d52ce(0x72f)]['z'] - _0x176906[_0x3d52ce(0x72f)]['z']);
                              _0x47bda4[_0x3d52ce(0x579)](_0x436195, _0x436195),
                                   _0x176906[_0x3d52ce(0x608)] = _0x436195,
                                   _0x176906['up'] = _0x5784ba(_0x176906[_0x3d52ce(0x72f)], _0x436195),
                                   this[_0x3d52ce(0x6c1)] && (_0x176906[_0x3d52ce(0xcca)] = _0x460498[_0x3d52ce(0x659)](_0x176906[_0x3d52ce(0x608)], _0x176906['up']) - _0x505e57['PI']);
                         }
                         if (this[_0x3d52ce(0xa5c)] > 0x2) {
                              let _0x3e0ea7 = this[_0x3d52ce(0xb68)][this['stopCollection'][_0x3d52ce(0x72b)] - 0x1];
                              const _0x399be8 = this[_0x3d52ce(0xb68)][this[_0x3d52ce(0xb68)][_0x3d52ce(0x72b)] - 0x2];
                              _0x3e0ea7[_0x3d52ce(0x608)] = _0x399be8['direction'],
                                   _0x3e0ea7['up'] = _0x399be8['up'],
                                   this[_0x3d52ce(0x6c1)] && (_0x3e0ea7['heading'] = _0x460498[_0x3d52ce(0x659)](_0x3e0ea7[_0x3d52ce(0x608)], _0x3e0ea7['up']) - _0x505e57['PI']);
                         }
                    }
                    _0x4712b0[_0x3d52ce(0x72b)] >= 0x2 && (this['_catmullRomSpline'] = new Adapter['CatmullRomSpline']({
                         'times': _0x4b57ca,
                         'points': _0x4712b0
                    })),
                         this[_0x3d52ce(0x556)](),
                         this[_0x3d52ce(0x291)] = _0x674f8e;
               }
               ,
               _0x99320b[_0xc3a123(0x2d4)][_0xc3a123(0xb8a)] = function (_0x58a4df) {
                    const _0x2edf00 = _0xc3a123;
                    if (!_0x58a4df)
                         throw new _0x3260e6(_0x2edf00(0xb8f));
                    if (!(_0x58a4df instanceof _0xd96643))
                         throw new _0x3260e6(_0x2edf00(0x1fe));
                    if (this[_0x2edf00(0x7a1)][_0x2edf00(0x320)](_0x58a4df[_0x2edf00(0xbb5)], _0x58a4df),
                         _0x36268c(this[_0x2edf00(0xd87)]) && this[_0x2edf00(0xbc9)]) {
                         const _0x15326d = this['_entityCollection'][_0x2edf00(0x2ef)]({
                              'position': _0x58a4df['point'],
                              'billboard': {
                                   'image': _0x3b80ec('Assets/Textures/grepin.png'),
                                   'scale': 0.5
                              }
                         });
                         this[_0x2edf00(0x46f)]['push'](_0x15326d);
                    }
                    if (this[_0x2edf00(0x76e)] && this[_0x2edf00(0x7a1)]['length'] > 0x2) {
                         if (_0x36268c(this[_0x2edf00(0x6f9)])) {
                              const _0x51779e = [][_0x2edf00(0x77e)](this['_catmullRomSpline'][_0x2edf00(0xaad)]);
                              let _0x280c32 = [][_0x2edf00(0x77e)](this[_0x2edf00(0x6f9)][_0x2edf00(0xc8c)])
                                   , _0x26c098 = this['_stopCollection'][_0x2edf00(0x72b)] > 0x0 ? this[_0x2edf00(0x7a1)][_0x2edf00(0x917)][this[_0x2edf00(0x7a1)][_0x2edf00(0x72b)] - 0x2][_0x2edf00(0x2b0)] : 0x0
                                   , _0x2b44ce = _0x51779e[_0x2edf00(0x72b)] > 0x0 ? _0x51779e[_0x51779e[_0x2edf00(0x72b)] - 0x1] : 0x0;
                              _0x51779e[_0x2edf00(0x63e)](_0x2b44ce + _0x26c098),
                                   _0x280c32[_0x2edf00(0x63e)](_0x58a4df[_0x2edf00(0x72f)]),
                                   this[_0x2edf00(0x6f9)] = new Adapter[(_0x2edf00(0xb08))]({
                                        'times': _0x51779e,
                                        'points': _0x280c32
                                   });
                         } else {
                              let _0x35f10c = [0x0]
                                   , _0x3a3c4c = [this[_0x2edf00(0x7a1)]['_array'][0x0]['point']]
                                   , _0x3acb80 = 0x0;
                              for (let _0x5a69c3 = 0x1; _0x5a69c3 < this[_0x2edf00(0x7a1)]['length']; _0x5a69c3++) {
                                   let _0x3c9f97 = this[_0x2edf00(0x7a1)][_0x2edf00(0x917)][_0x5a69c3]
                                        , _0x3a5aaa = this[_0x2edf00(0x7a1)][_0x2edf00(0x917)][_0x5a69c3 - 0x1];
                                   _0x3a3c4c[_0x2edf00(0x63e)](_0x3c9f97[_0x2edf00(0x72f)]),
                                        _0x3acb80 += _0x3a5aaa['duration'],
                                        _0x35f10c[_0x2edf00(0x63e)](_0x3acb80);
                              }
                              this[_0x2edf00(0x6f9)] = new CatmullRomSpline({
                                   'times': _0x35f10c,
                                   'points': _0x3a3c4c
                              });
                         }
                    }
                    return !0x0;
               }
               ,
               _0x99320b[_0xc3a123(0x2d4)][_0xc3a123(0x495)] = function (_0x2f7af4) {
                    const _0x285b3c = _0xc3a123;
                    if (!_0x2f7af4)
                         throw new _0x3260e6(_0x285b3c(0xb8f));
                    if (!(_0x2f7af4 instanceof _0xd96643))
                         throw new _0x3260e6(_0x285b3c(0x1fe));
                    _0x2f7af4[_0x285b3c(0xd70)] = this[_0x285b3c(0x29e)][_0x285b3c(0x89f)]['length'] + this[_0x285b3c(0xa3c)]['length'] - 0x1,
                         _0x2f7af4[_0x285b3c(0xc1d)] = _0x2f7af4[_0x285b3c(0xd70)] + 0x1,
                         this[_0x285b3c(0xa3c)]['push'](_0x2f7af4),
                         this[_0x285b3c(0x6bf)](),
                         this['init'](),
                         this[_0x285b3c(0x8b6)]();
               }
               ,
               _0x99320b[_0xc3a123(0x2d4)]['removeStop'] = function (_0x2319ad) {
                    const _0x412c44 = _0xc3a123;
                    this['clear'](),
                         -0x1 === this[_0x412c44(0x871)][_0x412c44(0xcef)](_0x2319ad['index']) && this[_0x412c44(0x871)][_0x412c44(0x63e)](_0x2319ad[_0x412c44(0xbb5)]),
                         this['init'](),
                         this[_0x412c44(0x8b6)]();
               }
               ,
               _0x99320b[_0xc3a123(0x2d4)][_0xc3a123(0x8b6)] = function () {
                    const _0x5c16ce = _0xc3a123;
                    if (_0x36268c(this[_0x5c16ce(0xd87)])) {
                         if (!_0x36268c(this[_0x5c16ce(0x388)])) {
                              let _0x1c8adc = this[_0x5c16ce(0xb68)]
                                   , _0x3f2176 = _0x1c8adc[_0x5c16ce(0x72b)]
                                   , _0x598509 = [];
                              for (; _0x3f2176--;)
                                   _0x598509['push'](_0x1c8adc[_0x3f2176]['point']);
                              this['_lineEntity'] = this[_0x5c16ce(0xd87)][_0x5c16ce(0x2ef)]({
                                   'name': this[_0x5c16ce(0x622)],
                                   'polyline': {
                                        'positions': _0x598509,
                                        'width': 0x5
                                   }
                              });
                         }
                         this[_0x5c16ce(0x388)][_0x5c16ce(0xc98)] = this[_0x5c16ce(0xcd5)];
                    }
               }
               ,
               _0x99320b[_0xc3a123(0x2d4)]['setStopVisible'] = function () {
                    const _0x5874c4 = _0xc3a123;
                    if (_0x36268c(this[_0x5874c4(0xd87)])) {
                         if (0x0 === this[_0x5874c4(0x46f)][_0x5874c4(0x72b)] && this[_0x5874c4(0xbc9)]) {
                              const _0x327fa2 = this['stopCollection'];
                              let _0x3aaa60 = _0x327fa2[_0x5874c4(0x72b)];
                              for (; _0x3aaa60--;) {
                                   const _0x17bcef = _0x327fa2[_0x3aaa60];
                                   let _0x5ca5d2 = this[_0x5874c4(0xd87)][_0x5874c4(0x2ef)]({
                                        'position': _0x17bcef[_0x5874c4(0x72f)],
                                        'billboard': {
                                             'image': _0x3b80ec(_0x5874c4(0xa8f)),
                                             'scale': 0.5
                                        }
                                   });
                                   this[_0x5874c4(0x46f)][_0x5874c4(0x63e)](_0x5ca5d2);
                              }
                         }
                         for (let _0x1f402d = 0x0, _0x2abb88 = this['_stopMarkCollection']['length']; _0x1f402d < _0x2abb88; _0x1f402d++) {
                              this[_0x5874c4(0x46f)][_0x1f402d][_0x5874c4(0xc98)] = this[_0x5874c4(0xbc9)];
                         }
                    }
               }
               ,
               _0x99320b['prototype'][_0xc3a123(0x420)] = function (_0x4c695d) {
                    const _0x1f522f = _0xc3a123;
                    return void 0x0 === this[_0x1f522f(0x7a1)][_0x1f522f(0x420)](_0x4c695d) ? this[_0x1f522f(0xb68)][_0x4c695d] : this[_0x1f522f(0x7a1)][_0x1f522f(0x420)](_0x4c695d);
               }
               ,
               _0x99320b['prototype'][_0xc3a123(0x6bf)] = function () {
                    const _0x4b9454 = _0xc3a123;
                    this[_0x4b9454(0x76e)] = !0x0;
                    for (let _0x51ad22 = 0x0; _0x51ad22 < this[_0x4b9454(0x46f)]['length']; _0x51ad22++)
                         this[_0x4b9454(0xd87)][_0x4b9454(0xced)](this[_0x4b9454(0x46f)][_0x51ad22]);
                    _0x36268c(this['_lineEntity']) && (this[_0x4b9454(0xd87)]['remove'](this['_lineEntity']),
                         this['_lineEntity'] = void 0x0),
                         this[_0x4b9454(0x7a1)][_0x4b9454(0x6c9)](),
                         _0x36268c(this['_catmullRomSpline']) && (this['_catmullRomSpline'] = void 0x0);
               }
               ,
               Adapter[_0xc3a123(0x25b)];
          const _0x5705e4 = Adapter[_0xc3a123(0x610)]
               , _0x2eef6d = Adapter[_0xc3a123(0x336)];
          function _0x3516c9(_0x1b4e7b) {
               const _0x1aa0b6 = _0xc3a123;
               this[_0x1aa0b6(0xd87)] = _0x1b4e7b,
                    this[_0x1aa0b6(0x19d)] = [],
                    this['_ready'] = !0x1,
                    this[_0x1aa0b6(0x59f)] = _0x13c1fa();
          }
          function _0x48c468(_0xe1a8f, _0x3821ba) {
               const _0x4acdcc = _0xc3a123
                    , _0x47ee6a = _0xe1a8f
                    , _0x468a44 = _0x3821ba[_0x4acdcc(0xc09)]
                    , _0x46c233 = _0x468a44[_0x4acdcc(0xabd)]
                    , _0x32c7dd = _0x143ac7(_0x468a44, _0x4acdcc(0x793), _0x46c233);
               for (let _0x17d558 = 0x0, _0x4e8ccb = _0x32c7dd[_0x4acdcc(0x72b)]; _0x17d558 < _0x4e8ccb; _0x17d558++) {
                    const _0x4bd90b = _0x32c7dd[_0x17d558]
                         , _0x4933d8 = _0x143ac7(_0x4bd90b, _0x4acdcc(0x5e6), _0x46c233)
                         , _0x1002a1 = _0x1bc29f(_0x4bd90b, _0x4acdcc(0x23f))
                         , _0x4f4bf0 = _0x19b81d(_0x4bd90b, _0x4acdcc(0xca3))
                         , _0x48e06c = _0x129554(_0x4bd90b, 'showroutestop')
                         , _0x3278cf = _0x129554(_0x4bd90b, _0x4acdcc(0xb3c))
                         , _0xcc80ae = _0x129554(_0x4bd90b, _0x4acdcc(0xd4a))
                         , _0xb5b749 = _0x129554(_0x4bd90b, _0x4acdcc(0x349))
                         , _0xe4a011 = _0x129554(_0x4bd90b, _0x4acdcc(0xb0f))
                         , _0x405d8c = _0x129554(_0x4bd90b, 'tiltfree')
                         , _0x5e3647 = _0x129554(_0x4bd90b, _0x4acdcc(0x786))
                         , _0x4d269d = new _0x99320b({
                              'entityCollection': _0x47ee6a[_0x4acdcc(0xd87)],
                              'routeName': _0x4f4bf0,
                              'speed': _0x1002a1,
                              'isLineVisible': _0x3278cf,
                              'isFlyLoop': _0xcc80ae,
                              'isStopVisible': _0x48e06c,
                              'isAlongline': _0xb5b749,
                              'isHeadingFree': _0xe4a011,
                              'isTiltFree': _0x405d8c,
                              'isAltitudeFree': _0x5e3647,
                              'stopsInfo': {
                                   'stopNodes': _0x4933d8,
                                   'namespace': _0x46c233
                              }
                         });
                    _0x4d269d[_0x4acdcc(0x366)](),
                         _0x47ee6a[_0x4acdcc(0xc9b)](_0x4d269d),
                         _0x47ee6a[_0x4acdcc(0x5fd)] = !0x0;
               }
               _0x47ee6a[_0x4acdcc(0x59f)]['resolve']();
          }
          function _0x1bc29f(_0x2b7d99, _0x4a3ade) {
               const _0x38c1cc = _0xc3a123;
               if (!_0x2eef6d(_0x2b7d99))
                    return;
               let _0x41c5e6 = _0x2b7d99[_0x38c1cc(0x855)](_0x4a3ade);
               if (null !== _0x41c5e6) {
                    const _0x1412f1 = parseFloat(_0x41c5e6);
                    return isNaN(_0x1412f1) ? void 0x0 : _0x1412f1;
               }
          }
          function _0x19b81d(_0x36a86e, _0x8b73ce) {
               if (!_0x2eef6d(_0x36a86e))
                    return;
               let _0x1f41bb = _0x36a86e['getAttribute'](_0x8b73ce);
               return null !== _0x1f41bb ? _0x1f41bb : void 0x0;
          }
          function _0x129554(_0xf75ea, _0x40fc42) {
               const _0x19b030 = _0xc3a123;
               if (!_0x2eef6d(_0xf75ea))
                    return;
               let _0x1cd23f = _0xf75ea[_0x19b030(0x855)](_0x40fc42);
               return _0x1cd23f = _0x1cd23f[_0x19b030(0x91c)](),
                    'false' !== _0x1cd23f && (_0x19b030(0xd0c) === _0x1cd23f || void 0x0);
          }
          function _0x143ac7(_0x16ade3, _0x1693d6, _0x5f562d) {
               const _0x477ed5 = _0xc3a123;
               if (!_0x2eef6d(_0x16ade3))
                    return [];
               let _0x4c7a27 = []
                    , _0x5458da = _0x16ade3['childNodes']
                    , _0x143e98 = _0x5458da[_0x477ed5(0x72b)];
               for (let _0x429e60 = 0x0; _0x429e60 < _0x143e98; _0x429e60++) {
                    let _0x4404a2 = _0x5458da[_0x429e60];
                    _0x4404a2[_0x477ed5(0x28f)] === _0x1693d6 && -0x1 !== _0x5f562d['indexOf'](_0x4404a2[_0x477ed5(0xabd)]) && _0x4c7a27[_0x477ed5(0x63e)](_0x4404a2);
               }
               return _0x4c7a27;
          }
          Object[_0xc3a123(0xcde)](_0x3516c9[_0xc3a123(0x2d4)], {
               'routes': {
                    'get': function () {
                         const _0x47a253 = _0xc3a123;
                         return this[_0x47a253(0x19d)];
                    }
               },
               'ready': {
                    'get': function () {
                         const _0x2cb862 = _0xc3a123;
                         return this[_0x2cb862(0x5fd)];
                    }
               },
               'readyPromise': {
                    'get': function () {
                         const _0x36dee6 = _0xc3a123;
                         return this['_readyPromise'][_0x36dee6(0xa16)];
                    }
               }
          }),
               _0x3516c9[_0xc3a123(0x2d4)][_0xc3a123(0xc9b)] = function (_0x358d02) {
                    const _0x24cd2a = _0xc3a123;
                    if (_0x358d02 && (this[_0x24cd2a(0x19d)][_0x24cd2a(0x63e)](_0x358d02),
                         _0x358d02[_0x24cd2a(0xad4)] && _0x2eef6d(this['_entityCollection']))) {
                         const _0x4e1a8c = _0x358d02[_0x24cd2a(0xb68)];
                         let _0x2a7c7b = _0x4e1a8c[_0x24cd2a(0x72b)]
                              , _0x29a8a4 = [];
                         for (; _0x2a7c7b--;)
                              _0x29a8a4[_0x24cd2a(0x63e)](_0x4e1a8c[_0x2a7c7b][_0x24cd2a(0x72f)]);
                         _0x358d02[_0x24cd2a(0x479)] = this[_0x24cd2a(0xd87)][_0x24cd2a(0x2ef)]({
                              'name': _0x358d02['routeName'],
                              'polyline': {
                                   'positions': _0x29a8a4,
                                   'width': 0x5
                              }
                         });
                    }
               }
               ,
               _0x3516c9[_0xc3a123(0x2d4)][_0xc3a123(0x420)] = function (_0x51dc1c) {
                    const _0x13537d = _0xc3a123;
                    return this[_0x13537d(0x19d)][_0x51dc1c];
               }
               ,
               _0x3516c9[_0xc3a123(0x2d4)][_0xc3a123(0xa1a)] = function (_0x25ebd8) {
                    const _0x1a64c7 = _0xc3a123
                         , _0x25dbd1 = this;
                    Promise['resolve'](_0x25ebd8)[_0x1a64c7(0x7db)](_0x459a7f => Cesium[_0x1a64c7(0x6e9)][_0x1a64c7(0x773)](_0x459a7f)[_0x1a64c7(0x891)]())[_0x1a64c7(0x7db)](_0x190e5e => {
                         _0x48c468(_0x25dbd1, _0x190e5e);
                    }
                    );
               }
               ,
               _0x3516c9[_0xc3a123(0x2d4)]['fromXML'] = function (_0x407a07) {
                    const _0x14562c = _0xc3a123;
                    if (!_0x2eef6d(_0x407a07))
                         throw new _0x5705e4(_0x14562c(0x1b4));
                    const _0x4a1293 = new DOMParser()[_0x14562c(0x9a9)](_0x407a07, _0x14562c(0x727));
                    try {
                         _0x48c468(this, _0x4a1293);
                    } catch (_0x4fa110) {
                         throw new _0x5705e4(_0x4fa110);
                    }
               }
               ;
          const _0x394ee3 = {
               'Space': 0x0,
               'Ground': 0x1,
               'S3mModel': 0x2,
               'Raster': 0x3
          };
          var _0x61a61 = Object[_0xc3a123(0xb56)](_0x394ee3);
          const _0x601fba = {
               'Point': 0x0,
               'Line': 0x1,
               'Polygon': 0x2
          };
          var _0x3e6038 = Object[_0xc3a123(0xb56)](_0x601fba);
          let _0x2000bb = function (_0x22ea31, _0x447101, _0xc7168e) {
               const _0x3824d9 = _0xc3a123;
               if (!_0x22ea31 || void 0x0 === _0x447101)
                    throw new Cesium[(_0x3824d9(0x610))](_0x3824d9(0xac8));
               this[_0x3824d9(0xd65)] = new Cesium[(_0x3824d9(0x9cd))](_0x22ea31['scene'][_0x3824d9(0xda5)]),
                    this[_0x3824d9(0xd32)] = _0x22ea31,
                    this[_0x3824d9(0xac9)] = _0x447101,
                    this[_0x3824d9(0x229)] = Cesium['defaultValue'](_0xc7168e, _0x61a61[_0x3824d9(0xdb4)]),
                    this[_0x3824d9(0x2c5)] = !0x1,
                    this[_0x3824d9(0x614)] = !0x1,
                    this['_drawEvt'] = new Cesium[(_0x3824d9(0x31d))](),
                    this[_0x3824d9(0x1a5)] = new Cesium[(_0x3824d9(0x31d))](),
                    this[_0x3824d9(0x9cc)] = new Cesium[(_0x3824d9(0x31d))](),
                    this['polylines'] = void 0x0,
                    this[_0x3824d9(0xbd2)] = void 0x0,
                    this['polygon'] = void 0x0,
                    this['points'] = void 0x0,
                    this['point'] = void 0x0;
          };
          function _0xf12cb7(_0x299cdf, _0x3ed481) {
               const _0x29eebd = _0xc3a123;
               let _0x110446 = _0x3ed481;
               if (_0x110446 && _0x110446[_0x29eebd(0x614)]) {
                    let _0x1e9ac8 = _0x110446[_0x29eebd(0xd32)][_0x29eebd(0x2b4)];
                    if (!_0x1e9ac8['pickPositionSupported'])
                         return void console[_0x29eebd(0x7bc)](_0x29eebd(0x374));
                    let _0x2eb1a8 = _0x1e9ac8['pickPosition'](_0x299cdf['position']);
                    if (_0x2eb1a8) {
                         if (_0x110446[_0x29eebd(0x2c5)]) {
                              let _0x45d756 = new Cesium[(_0x29eebd(0x1b7))](_0x299cdf[_0x29eebd(0x5a4)]['x'], _0x299cdf[_0x29eebd(0x5a4)]['y']);
                              switch (_0x110446['mode']) {
                                   case _0x3e6038['Line']:
                                        _0x10afbf(_0x45d756, _0x110446, !0x0);
                                        break;
                                   case _0x3e6038[_0x29eebd(0x2d1)]:
                                        _0x4ff470(_0x45d756, _0x110446, !0x0);
                              }
                         } else
                              switch (_0x110446[_0x29eebd(0x2c5)] = !0x0,
                              _0x110446[_0x29eebd(0xac9)]) {
                                   case _0x3e6038['Point']:
                                        _0x141c64(_0x2eb1a8, _0x110446);
                                        break;
                                   case _0x3e6038[_0x29eebd(0xc10)]:
                                        _0x39f174(_0x2eb1a8, _0x110446);
                                        break;
                                   case _0x3e6038['Polygon']:
                                        _0x4410dc(_0x2eb1a8, _0x110446);
                              }
                    }
               }
          }
          function _0x141c64(_0x9689bf, _0x152f41) {
               const _0xb0dec4 = _0xc3a123;
               let _0x1e1212 = _0x152f41;
               _0x1e1212[_0xb0dec4(0xc8c)] ? _0x1e1212['point']['position'] = _0x9689bf : (_0x1e1212[_0xb0dec4(0xc8c)] = new Cesium[(_0xb0dec4(0x269))](),
                    _0x1e1212[_0xb0dec4(0x72f)] = _0x1e1212[_0xb0dec4(0xc8c)]['add']({
                         'position': _0x9689bf,
                         'pixelSize': 0xa,
                         'color': Cesium[_0xb0dec4(0x821)]['WHITE']
                    }),
                    _0x1e1212[_0xb0dec4(0xd32)][_0xb0dec4(0x2b4)][_0xb0dec4(0xa7c)][_0xb0dec4(0x2ef)](_0x1e1212['points'])),
                    _0x1e1212[_0xb0dec4(0x9eb)](),
                    _0x1e1212[_0xb0dec4(0x2bb)]['raiseEvent']({
                         'object': _0x1e1212[_0xb0dec4(0x72f)]
                    });
          }
          function _0x39f174(_0x32cccc, _0x45be4d) {
               const _0x54b10b = _0xc3a123;
               let _0x3dc19b = _0x45be4d;
               _0x3dc19b[_0x54b10b(0x19f)] ? (_0x3dc19b[_0x54b10b(0xbd2)][_0x54b10b(0xc98)] = !0x0,
                    _0x3dc19b[_0x54b10b(0xbd2)][_0x54b10b(0xd59)] = [_0x32cccc, _0x32cccc]) : (_0x3dc19b[_0x54b10b(0x19f)] = new Cesium['PolylineCollection'](),
                         _0x3dc19b[_0x54b10b(0xbd2)] = _0x3dc19b['polylines'][_0x54b10b(0x2ef)]({
                              'width': 0x2,
                              'positions': [_0x32cccc, _0x32cccc],
                              'material': Cesium[_0x54b10b(0x32d)][_0x54b10b(0x361)](Cesium['Material']['ColorType'], {
                                   'color': Cesium['Color'][_0x54b10b(0xab8)](_0x54b10b(0x668))
                              })
                         }),
                         _0x3dc19b[_0x54b10b(0xd32)][_0x54b10b(0x2b4)][_0x54b10b(0xa7c)]['add'](_0x3dc19b[_0x54b10b(0x19f)]));
          }
          function _0x4410dc(_0x4b0dc6, _0x3c6826) {
               const _0x53633e = _0xc3a123;
               let _0x387df1 = _0x3c6826;
               _0x387df1[_0x53633e(0x19f)] ? (_0x387df1[_0x53633e(0xbd2)][_0x53633e(0xc98)] = !0x0,
                    _0x387df1[_0x53633e(0xbd2)][_0x53633e(0xd59)] = [_0x4b0dc6, _0x4b0dc6],
                    _0x387df1[_0x53633e(0x90a)] && (_0x387df1[_0x53633e(0x90a)][_0x53633e(0xc98)] = !0x1)) : (_0x387df1[_0x53633e(0x19f)] = new Cesium['PolylineCollection'](),
                         _0x387df1[_0x53633e(0xbd2)] = _0x387df1['polylines']['add']({
                              'id': _0x53633e(0xb27) + Math[_0x53633e(0x66e)](),
                              'width': 0x2,
                              'positions': [_0x4b0dc6, _0x4b0dc6],
                              'material': Cesium['Material']['fromType'](Cesium[_0x53633e(0x32d)][_0x53633e(0x437)], {
                                   'color': Cesium['Color']['fromCssColorString'](_0x53633e(0x668))
                              }),
                              'loop': !0x0
                         }),
                         _0x387df1[_0x53633e(0xd32)][_0x53633e(0x2b4)][_0x53633e(0xa7c)]['add'](_0x387df1['polylines']));
          }
          function _0x544d45(_0x52d83c, _0x3453bb) {
               const _0x2b0b6d = _0xc3a123;
               let _0x23f2a7 = _0x3453bb;
               if (_0x23f2a7 && _0x23f2a7[_0x2b0b6d(0x614)] && _0x23f2a7[_0x2b0b6d(0x2c5)]) {
                    let _0x25357d = new Cesium[(_0x2b0b6d(0x1b7))](_0x52d83c[_0x2b0b6d(0x971)]['x'], _0x52d83c[_0x2b0b6d(0x971)]['y']);
                    switch (_0x23f2a7[_0x2b0b6d(0xac9)]) {
                         case _0x3e6038[_0x2b0b6d(0xc10)]:
                              _0x10afbf(_0x25357d, _0x23f2a7, !0x1);
                              break;
                         case _0x3e6038[_0x2b0b6d(0x2d1)]:
                              _0x4ff470(_0x25357d, _0x23f2a7, !0x1);
                    }
               }
               _0x23f2a7[_0x2b0b6d(0x9cc)][_0x2b0b6d(0x92b)](new Cesium[(_0x2b0b6d(0x1b7))](_0x52d83c['endPosition']['x'], _0x52d83c['endPosition']['y']));
          }
          function _0x10afbf(_0x57cda4, _0x3c43fa, _0x2bd552) {
               const _0x5e417e = _0xc3a123;
               let _0x44827f = _0x3c43fa
                    , _0x214145 = _0x44827f[_0x5e417e(0xd32)][_0x5e417e(0x2b4)][_0x5e417e(0x41f)](_0x57cda4);
               if (!_0x214145)
                    return;
               let _0x544f8e = _0x44827f[_0x5e417e(0xbd2)][_0x5e417e(0xd59)]
                    , _0xd3a101 = _0x544f8e[_0x5e417e(0x72b)];
               _0x2bd552 ? _0x544f8e[_0xd3a101] = _0x214145 : _0x544f8e[_0xd3a101 - 0x1] = _0x214145,
                    _0x44827f[_0x5e417e(0xbd2)][_0x5e417e(0xd59)] = _0x544f8e;
          }
          function _0x4ff470(_0x46ee34, _0x5e7f33, _0x18ce7d) {
               const _0xd91f64 = _0xc3a123;
               let _0x229ebc = _0x5e7f33
                    , _0x11ee2b = _0x229ebc[_0xd91f64(0xd32)][_0xd91f64(0x2b4)][_0xd91f64(0x41f)](_0x46ee34);
               if (!_0x11ee2b)
                    return;
               let _0xb3c576 = _0x229ebc[_0xd91f64(0xbd2)]['positions']
                    , _0x4ad7f3 = _0xb3c576[_0xd91f64(0x72b)];
               _0x18ce7d ? _0xb3c576[_0x4ad7f3] = _0x11ee2b : _0xb3c576[_0x4ad7f3 - 0x1] = _0x11ee2b,
                    _0x229ebc['polyline']['positions'] = _0xb3c576;
          }
          function _0x488215(_0x438dfc, _0x211900) {
               const _0x3f235a = _0xc3a123;
               let _0x227517 = _0x211900;
               if (_0x227517 && _0x227517[_0x3f235a(0x614)] && _0x227517[_0x3f235a(0x2c5)]) {
                    if (_0x227517[_0x3f235a(0x9eb)](),
                         !_0x227517[_0x3f235a(0xbd2)])
                         return;
                    if (_0x227517['polyline']['positions'] = _0x227517['polyline'][_0x3f235a(0xd59)][_0x3f235a(0x21c)](0x0, _0x227517['polyline'][_0x3f235a(0xd59)][_0x3f235a(0x72b)] - 0x1),
                         _0x227517[_0x3f235a(0xac9)] === _0x3e6038['Polygon']) {
                         if (_0x227517[_0x3f235a(0xbd2)][_0x3f235a(0xd59)][_0x3f235a(0x72b)] < 0x3)
                              return void (_0x227517[_0x3f235a(0xbd2)][_0x3f235a(0xd59)][_0x3f235a(0x72b)] = 0x0);
                         let _0x5b0aeb = [][_0x3f235a(0x77e)](_0x227517['polyline'][_0x3f235a(0xd59)]);
                         _0x227517['polygon'] || (_0x227517[_0x3f235a(0x90a)] = _0x227517[_0x3f235a(0xd32)]['entities'][_0x3f235a(0x2ef)]({
                              'polygon': {
                                   'hierarchy': {
                                        'positions': _0x5b0aeb
                                   },
                                   'material': Cesium[_0x3f235a(0x821)][_0x3f235a(0x4c6)][_0x3f235a(0x665)](0.5),
                                   'perPositionHeight': _0x61a61[_0x3f235a(0xdb4)] === _0x227517['_clampMode']
                              }
                         })),
                              _0x227517[_0x3f235a(0x90a)][_0x3f235a(0x90a)][_0x3f235a(0x4ea)] = _0x5b0aeb,
                              _0x227517[_0x3f235a(0x90a)][_0x3f235a(0xd59)] = _0x5b0aeb,
                              _0x227517['polygon'][_0x3f235a(0xc98)] = !0x0,
                              _0x227517[_0x3f235a(0x2bb)][_0x3f235a(0x92b)]({
                                   'object': _0x227517[_0x3f235a(0x90a)]
                              });
                    } else {
                         if (_0x227517[_0x3f235a(0xac9)] === _0x3e6038[_0x3f235a(0xc10)]) {
                              let _0xe8a585 = [];
                              for (let _0x44b573 = 0x0, _0x3ba132 = _0x227517[_0x3f235a(0xbd2)]['positions'][_0x3f235a(0x72b)]; _0x44b573 < _0x3ba132; _0x44b573++)
                                   _0xe8a585[_0x3f235a(0x63e)](Cesium['Cartesian3']['clone'](_0x227517['polyline'][_0x3f235a(0xd59)][_0x44b573]));
                              _0x227517[_0x3f235a(0x229)] !== _0x61a61[_0x3f235a(0x5e8)] && _0x227517[_0x3f235a(0x229)] !== _0x61a61[_0x3f235a(0x854)] || (_0x227517['clampToGroundPolylines'] || (_0x227517[_0x3f235a(0xa27)] = []),
                                   _0x227517[_0x3f235a(0xa27)]['push'](_0x227517[_0x3f235a(0xd32)]['entities']['add']({
                                        'polyline': {
                                             'positions': _0xe8a585,
                                             'width': 0x5,
                                             'material': Cesium[_0x3f235a(0x821)]['fromCssColorString'](_0x3f235a(0x668)),
                                             'clampToGround': !0x0
                                        }
                                   })),
                                   _0x227517[_0x3f235a(0xbd2)][_0x3f235a(0xc98)] = !0x1),
                                   _0x227517[_0x3f235a(0x2bb)]['raiseEvent']({
                                        'object': _0x227517['polyline']
                                   });
                         }
                    }
               }
          }
          Object['defineProperties'](_0x2000bb[_0xc3a123(0x2d4)], {
               'drawEvt': {
                    'get': function () {
                         const _0x268e19 = _0xc3a123;
                         return this[_0x268e19(0xdb8)];
                    }
               },
               'activeEvt': {
                    'get': function () {
                         const _0x406884 = _0xc3a123;
                         return this[_0x406884(0x1a5)];
                    }
               }
          }),
               _0x2000bb[_0xc3a123(0x2d4)][_0xc3a123(0x258)] = function () {
                    const _0x56c2c0 = _0xc3a123;
                    if (!0x0 === this[_0x56c2c0(0x614)])
                         return;
                    this['active'] = !0x0;
                    let _0x3f304d = this;
                    this[_0x56c2c0(0xd65)]['setInputAction'](function (_0x1641f7) {
                         _0xf12cb7(_0x1641f7, _0x3f304d);
                    }, Cesium[_0x56c2c0(0xad7)]['LEFT_CLICK']),
                         this[_0x56c2c0(0xd65)][_0x56c2c0(0x75b)](function (_0x2f01d6) {
                              _0x544d45(_0x2f01d6, _0x3f304d);
                         }, Cesium[_0x56c2c0(0xad7)][_0x56c2c0(0xaf0)]),
                         this['handler'][_0x56c2c0(0x75b)](function (_0xa1e08c) {
                              _0x488215(_0xa1e08c, _0x3f304d);
                         }, Cesium[_0x56c2c0(0xad7)][_0x56c2c0(0x9a6)]),
                         this[_0x56c2c0(0x2cf)][_0x56c2c0(0x92b)](!0x0);
               }
               ,
               _0x2000bb[_0xc3a123(0x2d4)][_0xc3a123(0x9eb)] = function () {
                    const _0x4e50a3 = _0xc3a123;
                    this[_0x4e50a3(0x614)] = !0x1,
                         this[_0x4e50a3(0x2c5)] = !0x1,
                         this[_0x4e50a3(0xd65)][_0x4e50a3(0xc78)](Cesium[_0x4e50a3(0xad7)][_0x4e50a3(0x816)]),
                         this[_0x4e50a3(0xd65)]['removeInputAction'](Cesium[_0x4e50a3(0xad7)][_0x4e50a3(0xaf0)]),
                         this['handler'][_0x4e50a3(0xc78)](Cesium[_0x4e50a3(0xad7)][_0x4e50a3(0x9a6)]),
                         this[_0x4e50a3(0x2cf)][_0x4e50a3(0x92b)](!0x1);
               }
               ,
               _0x2000bb[_0xc3a123(0x2d4)][_0xc3a123(0x6bf)] = function () {
                    const _0x479ad0 = _0xc3a123;
                    this[_0x479ad0(0x9eb)](),
                         this[_0x479ad0(0x19f)] && (this[_0x479ad0(0x19f)][_0x479ad0(0x6c9)](),
                              this['viewer'][_0x479ad0(0x2b4)]['primitives'][_0x479ad0(0xced)](this[_0x479ad0(0x19f)]),
                              this[_0x479ad0(0x19f)] = void 0x0),
                         this[_0x479ad0(0x90a)] && (this['viewer'][_0x479ad0(0x782)][_0x479ad0(0xced)](this['polygon']),
                              this[_0x479ad0(0x90a)] = void 0x0),
                         this[_0x479ad0(0xc8c)] && (this['points'][_0x479ad0(0x6c9)](),
                              this[_0x479ad0(0xd32)][_0x479ad0(0x2b4)][_0x479ad0(0xa7c)][_0x479ad0(0xced)](this[_0x479ad0(0xc8c)]),
                              this[_0x479ad0(0xc8c)] = void 0x0);
               }
               ;
          var _0x2a25c1 = _0xc3a123(0xd89)
               , _0xf78a91 = _0xc3a123(0xc59)
               , _0x113557 = function (_0x382209, _0x4bffee) {
                    const _0x8d6f5b = _0xc3a123;
                    if (!Adapter[_0x8d6f5b(0x336)](_0x382209) || !Adapter[_0x8d6f5b(0x336)](_0x4bffee))
                         throw new Adapter[(_0x8d6f5b(0x610))](_0x8d6f5b(0x587));
                    this['handler'] = new Adapter[(_0x8d6f5b(0x9cd))](_0x382209['canvas']),
                         this[_0x8d6f5b(0x2b4)] = _0x382209,
                         this['active'] = !0x1,
                         this[_0x8d6f5b(0x960)] = Adapter[_0x8d6f5b(0x821)][_0x8d6f5b(0x1cd)],
                         this[_0x8d6f5b(0xc61)] = Adapter[_0x8d6f5b(0x821)][_0x8d6f5b(0x664)],
                         this[_0x8d6f5b(0xab9)](_0x4bffee),
                         this['_editZ'] = !0x1,
                         this[_0x8d6f5b(0x569)] = new Adapter[(_0x8d6f5b(0x31d))]();
               };
          function _0x9ff85e(_0x3c913a, _0x4e3b99) {
               const _0x2dce07 = _0xc3a123;
               var _0x50ebed = _0x3c913a[_0x2dce07(0x988)](_0x4e3b99[_0x2dce07(0x5a4)]);
               if (Adapter['defined'](_0x50ebed) && (Adapter['defaultValue'](_0x50ebed['id'], _0x50ebed[_0x2dce07(0x715)]['id']),
                    Adapter['defined'](_0x50ebed[_0x2dce07(0x715)])))
                    return _0x50ebed;
          }
          function _0x439ac0(_0x1340b8, _0x5585b4) {
               const _0x59455e = _0xc3a123;
               var _0x3b65b1 = _0x5585b4;
               if (_0x3b65b1 && _0x3b65b1[_0x59455e(0x614)]) {
                    var _0x811059 = _0x9ff85e(_0x3b65b1['scene'], _0x1340b8);
                    if (Adapter['defined'](_0x811059)) {
                         var _0x5a4703 = _0x811059['id'];
                         if (!Adapter[_0x59455e(0x336)](_0x5a4703))
                              return;
                         var _0x3fd2fe = [];
                         if (_0x59455e(0x379) == typeof _0x5a4703 && (_0x3fd2fe = _0x5a4703[_0x59455e(0x39b)]('_')),
                              0x2 == _0x3fd2fe['length']) {
                              if (_0x3fd2fe[0x0] === _0x2a25c1)
                                   _0x3b65b1[_0x59455e(0xb59)] = parseInt(_0x3fd2fe[0x1]),
                                        _0x3b65b1[_0x59455e(0x6c2)] = _0x811059[_0x59455e(0x715)],
                                        _0x3b65b1[_0x59455e(0x6c2)]['Color'] = _0x3b65b1[_0x59455e(0xc61)],
                                        _0x3b65b1[_0x59455e(0x2b4)]['_screenSpaceCameraController']['enableRotate'] = !0x1,
                                        _0x3b65b1[_0x59455e(0x2b4)]['_screenSpaceCameraController'][_0x59455e(0x7ae)] = !0x1;
                              else {
                                   if (_0x3fd2fe[0x0] === _0xf78a91) {
                                        var _0x4e8d98 = parseInt(_0x3fd2fe[0x1])
                                             , _0x135416 = _0x3b65b1[_0x59455e(0x94f)][_0x4e8d98];
                                        (_0x75804a = _0x3b65b1[_0x59455e(0x7dc)])[_0x59455e(0x3d3)](_0x4e8d98 + 0x1, 0x0, _0x135416);
                                        var _0xbd6565 = _0x3b65b1[_0x59455e(0x6af)];
                                        Adapter['defined'](_0xbd6565) && (_0xbd6565['positions'] = new Adapter[(_0x59455e(0xd03))](function () {
                                             return _0x75804a;
                                        }
                                             , !0x1));
                                        var _0x24d08c = _0x3b65b1[_0x59455e(0xc47)];
                                        if (Adapter[_0x59455e(0x336)](_0x24d08c)) {
                                             var _0x53caa8 = new Adapter[(_0x59455e(0xd03))](function () {
                                                  return _0x75804a;
                                             }
                                                  , !0x1)
                                                  , _0x75804a = _0x24d08c['hierarchy'][_0x59455e(0x2a3)](0x0);
                                             Array['isArray'](_0x75804a) ? _0x24d08c[_0x59455e(0x4ea)] = _0x53caa8 : _0x24d08c[_0x59455e(0x4ea)]['positions'] = _0x53caa8;
                                        }
                                        _0x3b65b1[_0x59455e(0x78c)](),
                                             _0x3b65b1[_0x59455e(0x7a8)]();
                                   }
                              }
                         }
                    } else
                         _0x5585b4['clear']();
               }
          }
          function _0x48eb48(_0x5af8b4, _0x41ab1e) {
               const _0x4c4738 = _0xc3a123;
               var _0x1f90de = _0x41ab1e;
               _0x1f90de && _0x1f90de[_0x4c4738(0x614)] && (_0x1f90de[_0x4c4738(0xb59)] = -0x1,
                    Adapter[_0x4c4738(0x336)](_0x1f90de[_0x4c4738(0x6c2)]) && (_0x1f90de[_0x4c4738(0x6c2)][_0x4c4738(0x821)] = _0x1f90de['referencePointColor'],
                         _0x1f90de['_editPoint'] = void 0x0),
                    _0x1f90de[_0x4c4738(0x2b4)][_0x4c4738(0xa91)][_0x4c4738(0x487)] = !0x0,
                    _0x1f90de[_0x4c4738(0x2b4)][_0x4c4738(0xa91)][_0x4c4738(0x7ae)] = !0x0,
                    _0x1f90de[_0x4c4738(0x569)][_0x4c4738(0x92b)](_0x1f90de[_0x4c4738(0x7dc)]));
          }
          function _0x58b803(_0x81227b, _0x3eadf2) {
               const _0x389e68 = _0xc3a123;
               var _0x2b9db9 = _0x3eadf2;
               if (_0x2b9db9 && _0x2b9db9[_0x389e68(0x614)] && _0x2b9db9[_0x389e68(0xb59)] > -0x1 && _0x2b9db9['scene'][_0x389e68(0xa91)][_0x389e68(0x1ea)][_0x389e68(0xb02)][0x0]) {
                    var _0x387825, _0x1d63ff = new Adapter[(_0x389e68(0x1b7))](_0x81227b[_0x389e68(0x971)]['x'], _0x81227b[_0x389e68(0x971)]['y']), _0x5e0ab6 = _0x2b9db9[_0x389e68(0x6af)], _0x4b4b6d = _0x2b9db9['_polygon'], _0x32d389 = !0x0;
                    if (Adapter[_0x389e68(0x336)](_0x5e0ab6) && (_0x32d389 = _0x5e0ab6['clampToGround']),
                         Adapter[_0x389e68(0x336)](_0x4b4b6d) && (_0x32d389 = !_0x4b4b6d[_0x389e68(0xb49)]),
                         Adapter['defined'](_0x32d389) && _0x32d389['_value'])
                         _0x387825 = _0x2b9db9['scene'][_0x389e68(0x41f)](_0x1d63ff);
                    else {
                         if (_0x2b9db9['_editZ']) {
                              var _0x519cbf = _0x2b9db9[_0x389e68(0x2b4)]['camera'][_0x389e68(0x5da)](_0x1d63ff)
                                   , _0x250222 = _0x2b9db9['scene'][_0x389e68(0xc97)]['getPickRay'](new Adapter[(_0x389e68(0x1b7))](_0x1d63ff['x'] + 0x5, _0x1d63ff['y']))
                                   , _0x1b3c64 = Adapter[_0x389e68(0x25b)][_0x389e68(0x765)](_0x519cbf['direction'], _0x250222[_0x389e68(0x608)], new Adapter[(_0x389e68(0x25b))]())
                                   , _0x1c3e65 = Adapter[_0x389e68(0x25b)][_0x389e68(0x579)](_0x1b3c64, new Adapter[(_0x389e68(0x25b))]());
                              if (_0x2b9db9[_0x389e68(0x2b4)][_0x389e68(0xac9)] === Adapter[_0x389e68(0xa7f)][_0x389e68(0x1b2)]) {
                                   var _0x2f87bd = Adapter[_0x389e68(0x456)][_0x389e68(0xbbb)](_0x2b9db9[_0x389e68(0x2b4)][_0x389e68(0xc97)][_0x389e68(0xdbc)], _0x1c3e65)
                                        , _0xc5b20 = Adapter[_0x389e68(0xbec)]['convertToColumbusCartesian'](_0x2b9db9[_0x389e68(0x6c2)][_0x389e68(0x5a4)]);
                                   _0xc5b20['x'] = 0.1;
                                   var _0x525152 = new Adapter[(_0x389e68(0x1b9))](_0xc5b20, Adapter[_0x389e68(0x25b)][_0x389e68(0x94e)])
                                        , _0xf79b09 = Adapter[_0x389e68(0x501)][_0x389e68(0x5a1)](_0x525152, _0x2f87bd);
                                   Adapter[_0x389e68(0x336)](_0xf79b09) && (_0x387825 = Adapter[_0x389e68(0xbec)][_0x389e68(0x630)](_0xf79b09));
                              } else
                                   _0x2f87bd = Adapter[_0x389e68(0x456)][_0x389e68(0xbbb)](_0x2b9db9['scene']['camera'][_0x389e68(0x5a4)], _0x1c3e65),
                                        _0x525152 = new Adapter['Ray'](Adapter[_0x389e68(0x25b)]['ZERO'], _0x2b9db9['_editPoint'][_0x389e68(0x5a4)]),
                                        _0x387825 = Adapter['IntersectionTests'][_0x389e68(0x5a1)](_0x525152, _0x2f87bd);
                         } else {
                              _0x525152 = _0x2b9db9[_0x389e68(0x2b4)][_0x389e68(0xc97)][_0x389e68(0x5da)](_0x1d63ff);
                              if (_0x2b9db9[_0x389e68(0x2b4)][_0x389e68(0xac9)] === Adapter[_0x389e68(0xa7f)][_0x389e68(0x1b2)]) {
                                   var _0x3dcceb = Adapter['Transforms'][_0x389e68(0x636)](_0x2b9db9[_0x389e68(0x6c2)][_0x389e68(0x5a4)])
                                        , _0x48707e = Adapter[_0x389e68(0x456)]['fromPointNormal'](_0x3dcceb, Adapter[_0x389e68(0x25b)]['UNIT_X']);
                                   _0xf79b09 = Adapter[_0x389e68(0x501)][_0x389e68(0x5a1)](_0x525152, _0x48707e),
                                        _0x387825 = Adapter[_0x389e68(0xbec)][_0x389e68(0x630)](_0xf79b09);
                              } else {
                                   var _0x31de75 = new Adapter[(_0x389e68(0xc1c))](Adapter[_0x389e68(0x25b)][_0x389e68(0x780)], Adapter[_0x389e68(0x25b)]['distance'](_0x2b9db9[_0x389e68(0x6c2)]['position'], Adapter[_0x389e68(0x25b)][_0x389e68(0x780)]))
                                        , _0x1f886d = Adapter[_0x389e68(0x501)][_0x389e68(0xac1)](_0x525152, _0x31de75);
                                   _0x387825 = Adapter[_0x389e68(0x1b9)][_0x389e68(0xd00)](_0x525152, _0x1f886d[_0x389e68(0x4b1)]);
                              }
                         }
                    }
                    if (!Adapter[_0x389e68(0x336)](_0x387825))
                         return;
                    _0x2b9db9[_0x389e68(0x6c2)][_0x389e68(0x5a4)] = _0x387825;
                    var _0x560fcd = _0x2b9db9['_positions'];
                    _0x560fcd[_0x2b9db9[_0x389e68(0xb59)]] = _0x387825,
                         Adapter[_0x389e68(0x336)](_0x5e0ab6) && (_0x5e0ab6['positions'] = new Adapter[(_0x389e68(0xd03))](function () {
                              return _0x560fcd;
                         }
                              , !0x1)),
                         Adapter[_0x389e68(0x336)](_0x4b4b6d) && (_0x4b4b6d[_0x389e68(0x4ea)] = new Adapter[(_0x389e68(0xd03))](function () {
                              return {
                                   'positions': _0x560fcd,
                                   'holes': []
                              };
                         }
                              , !0x1)),
                         _0x2b9db9[_0x389e68(0x7a8)]();
               }
          }
          function _0x59309e(_0x12d0b8, _0x60556d) {
               const _0x3e0e12 = _0xc3a123;
               var _0x279321 = _0x60556d;
               if (_0x279321 && _0x279321[_0x3e0e12(0x614)]) {
                    var _0x1dfc81 = _0x9ff85e(_0x279321[_0x3e0e12(0x2b4)], _0x12d0b8);
                    if (Adapter[_0x3e0e12(0x336)](_0x1dfc81)) {
                         var _0x2beb8d = _0x1dfc81['id'];
                         if (!Adapter[_0x3e0e12(0x336)](_0x2beb8d))
                              return;
                         var _0x555cba = [];
                         if (_0x3e0e12(0x379) == typeof _0x2beb8d && (_0x555cba = _0x2beb8d['split']('_')),
                              0x2 == _0x555cba['length'] && _0x555cba[0x0] === _0x2a25c1) {
                              var _0x396458 = parseInt(_0x555cba[0x1])
                                   , _0x5b39ba = _0x279321[_0x3e0e12(0x7dc)];
                              _0x5b39ba[_0x3e0e12(0x3d3)](_0x396458, 0x1);
                              var _0x272149 = _0x279321[_0x3e0e12(0x6af)];
                              Adapter['defined'](_0x272149) && (_0x272149['positions'] = new Adapter['CallbackProperty'](function () {
                                   return _0x5b39ba;
                              }
                                   , !0x1));
                              var _0x5c1154 = _0x279321[_0x3e0e12(0xc47)];
                              Adapter['defined'](_0x5c1154) && (_0x5c1154[_0x3e0e12(0x4ea)] = new Adapter['CallbackProperty'](function () {
                                   return _0x5b39ba;
                              }
                                   , !0x1)),
                                   _0x279321[_0x3e0e12(0x78c)](),
                                   _0x279321['refreshReferenceAddPoint']();
                         }
                    }
               }
          }
          Object[_0xc3a123(0xcde)](_0x113557[_0xc3a123(0x2d4)], {
               'isEditZ': {
                    'get': function () {
                         const _0x498894 = _0xc3a123;
                         return this[_0x498894(0x3ca)];
                    },
                    'set': function (_0x5a15f2) {
                         this['_editZ'] = _0x5a15f2;
                    }
               },
               'changedEvt': {
                    'get': function () {
                         const _0x4028e6 = _0xc3a123;
                         return this[_0x4028e6(0x569)];
                    }
               }
          }),
               _0x113557[_0xc3a123(0x2d4)][_0xc3a123(0xab9)] = function (_0x2b75b9) {
                    const _0x1de235 = _0xc3a123;
                    if (Adapter[_0x1de235(0x336)](_0x2b75b9[_0x1de235(0xc47)]) || Adapter[_0x1de235(0x336)](_0x2b75b9[_0x1de235(0x6af)])) {
                         if (this[_0x1de235(0x6bf)](),
                              this[_0x1de235(0x4d2)] = _0x2b75b9,
                              this[_0x1de235(0xc47)] = _0x2b75b9[_0x1de235(0xc47)],
                              Adapter['defined'](this[_0x1de235(0xc47)])) {
                              var _0x54af3b = this[_0x1de235(0xc47)][_0x1de235(0x4ea)][_0x1de235(0x2a3)](0x0);
                              if (!Array['isArray'](_0x54af3b)) {
                                   if (!Array[_0x1de235(0x92f)](_0x54af3b[_0x1de235(0xd59)]))
                                        throw new Adapter[(_0x1de235(0x610))](_0x1de235(0x4d3));
                                   _0x54af3b = _0x54af3b[_0x1de235(0xd59)];
                              }
                              this[_0x1de235(0x7dc)] = _0x54af3b;
                         }
                         this[_0x1de235(0x6af)] = _0x2b75b9[_0x1de235(0x6af)],
                              Adapter[_0x1de235(0x336)](this['_polyline']) && (this[_0x1de235(0x7dc)] = this[_0x1de235(0x6af)][_0x1de235(0xd59)][_0x1de235(0x2a3)](0x0)),
                              this[_0x1de235(0xad1)] = this['scene']['primitives'][_0x1de235(0x2ef)](new Adapter[(_0x1de235(0x8d3))]({
                                   'depthTestEnable': !0x1
                              }));
                         for (var _0x13ba13 = 0x0; _0x13ba13 < this['_positions'][_0x1de235(0x72b)]; _0x13ba13++)
                              this[_0x1de235(0xad1)][_0x1de235(0x2ef)]({
                                   'id': _0x2a25c1 + '_' + _0x13ba13,
                                   'position': this[_0x1de235(0x7dc)][_0x13ba13],
                                   'image': _0x3b80ec(_0x1de235(0xbb6))
                              });
                         this[_0x1de235(0xb59)] = -0x1,
                              this[_0x1de235(0x6c2)] = void 0x0,
                              this[_0x1de235(0x94f)] = [],
                              this[_0x1de235(0x858)] = this[_0x1de235(0x2b4)][_0x1de235(0xa7c)][_0x1de235(0x2ef)](new Adapter[(_0x1de235(0x8d3))]({
                                   'depthTestEnable': !0x1
                              }));
                         for (_0x13ba13 = 0x0; _0x13ba13 < this[_0x1de235(0x7dc)][_0x1de235(0x72b)] - 0x1; _0x13ba13++) {
                              var _0x263d07 = new Adapter[(_0x1de235(0x25b))]();
                              Adapter['Cartesian3']['add'](this['_positions'][_0x13ba13], this[_0x1de235(0x7dc)][_0x13ba13 + 0x1], _0x263d07),
                                   Adapter[_0x1de235(0x25b)][_0x1de235(0xc03)](_0x263d07, 0.5, _0x263d07),
                                   this[_0x1de235(0x94f)][_0x1de235(0x63e)](_0x263d07);
                         }
                         Adapter[_0x1de235(0x336)](this[_0x1de235(0xc47)]) && (_0x263d07 = new Adapter[(_0x1de235(0x25b))](),
                              (Adapter[_0x1de235(0x25b)][_0x1de235(0x2ef)](this[_0x1de235(0x7dc)][0x0], this[_0x1de235(0x7dc)][this['_positions']['length'] - 0x1], _0x263d07),
                                   Adapter[_0x1de235(0x25b)]['multiplyByScalar'](_0x263d07, 0.5, _0x263d07),
                                   this['_addPositions']['push'](_0x263d07)));
                         for (_0x13ba13 = 0x0; _0x13ba13 < this['_addPositions'][_0x1de235(0x72b)]; _0x13ba13++)
                              this[_0x1de235(0x858)][_0x1de235(0x2ef)]({
                                   'id': _0xf78a91 + '_' + _0x13ba13,
                                   'position': this['_addPositions'][_0x13ba13],
                                   'image': _0x3b80ec(_0x1de235(0x7ba))
                              });
                         this[_0x1de235(0x258)]();
                    }
               }
               ,
               _0x113557[_0xc3a123(0x2d4)]['activate'] = function () {
                    const _0x12f150 = _0xc3a123;
                    if (0x1 != this['active']) {
                         this[_0x12f150(0x614)] = !0x0;
                         var _0x459d22 = this;
                         this[_0x12f150(0xd65)][_0x12f150(0x75b)](function (_0x2ac94b) {
                              _0x439ac0(_0x2ac94b, _0x459d22);
                         }, Adapter[_0x12f150(0xad7)][_0x12f150(0x352)]),
                              this[_0x12f150(0xd65)][_0x12f150(0x75b)](function (_0x56f9be) {
                                   _0x48eb48(_0x56f9be, _0x459d22);
                              }, Adapter[_0x12f150(0xad7)]['LEFT_UP']),
                              this[_0x12f150(0xd65)][_0x12f150(0x75b)](function (_0x485ff7) {
                                   _0x58b803(_0x485ff7, _0x459d22);
                              }, Adapter[_0x12f150(0xad7)]['MOUSE_MOVE']),
                              this[_0x12f150(0xd65)][_0x12f150(0x75b)](function (_0x4eb988) {
                                   _0x59309e(_0x4eb988, _0x459d22);
                              }, Adapter['ScreenSpaceEventType']['RIGHT_CLICK']);
                    }
               }
               ,
               _0x113557['prototype'][_0xc3a123(0x9eb)] = function () {
                    const _0x139d2a = _0xc3a123;
                    this['active'] = !0x1,
                         this[_0x139d2a(0xd65)][_0x139d2a(0xc78)](Adapter[_0x139d2a(0xad7)][_0x139d2a(0x352)]),
                         this[_0x139d2a(0xd65)]['removeInputAction'](Adapter[_0x139d2a(0xad7)]['LEFT_UP']),
                         this[_0x139d2a(0xd65)][_0x139d2a(0xc78)](Adapter[_0x139d2a(0xad7)][_0x139d2a(0xaf0)]),
                         this[_0x139d2a(0xd65)]['removeInputAction'](Adapter[_0x139d2a(0xad7)][_0x139d2a(0x9a6)]);
               }
               ,
               _0x113557['prototype']['clear'] = function () {
                    const _0x27891d = _0xc3a123;
                    this[_0x27891d(0x9eb)](),
                         Adapter[_0x27891d(0x336)](this[_0x27891d(0xad1)]) && this['_editPoints'][_0x27891d(0x6c9)](),
                         Adapter[_0x27891d(0x336)](this[_0x27891d(0xb59)]) && (this['_editPointIndex'] = -0x1),
                         Adapter[_0x27891d(0x336)](this[_0x27891d(0x6c2)]) && (this[_0x27891d(0x6c2)] = void 0x0),
                         Adapter[_0x27891d(0x336)](this[_0x27891d(0x4d2)]) && (this['_editObject'] = void 0x0),
                         Adapter['defined'](this[_0x27891d(0xc47)]) && (this[_0x27891d(0xc47)] = void 0x0),
                         Adapter[_0x27891d(0x336)](this[_0x27891d(0x6af)]) && (this['_polyline'] = void 0x0),
                         Adapter[_0x27891d(0x336)](this[_0x27891d(0x858)]) && this[_0x27891d(0x858)][_0x27891d(0x6c9)](),
                         Adapter['defined'](this[_0x27891d(0x94f)]) && (this[_0x27891d(0x94f)][_0x27891d(0x72b)] = 0x0),
                         Adapter['defined'](this[_0x27891d(0x7dc)]) && (this[_0x27891d(0x7dc)] = void 0x0);
               }
               ,
               _0x113557[_0xc3a123(0x2d4)][_0xc3a123(0x78c)] = function () {
                    const _0x46432e = _0xc3a123;
                    Adapter[_0x46432e(0x336)](this['_editPoints']) && this['_editPoints'][_0x46432e(0x6c9)](),
                         this[_0x46432e(0xad1)] = this['scene']['primitives'][_0x46432e(0x2ef)](new Adapter[(_0x46432e(0x8d3))]({
                              'depthTestEnable': !0x1
                         }));
                    for (var _0xd37032 = 0x0; _0xd37032 < this[_0x46432e(0x7dc)][_0x46432e(0x72b)]; _0xd37032++)
                         this[_0x46432e(0xad1)][_0x46432e(0x2ef)]({
                              'id': _0x2a25c1 + '_' + _0xd37032,
                              'position': this[_0x46432e(0x7dc)][_0xd37032],
                              'image': _0x3b80ec(_0x46432e(0xbb6))
                         });
                    Adapter['defined'](this['_editPointIndex']) && (this[_0x46432e(0xb59)] = -0x1),
                         Adapter['defined'](this['_editPoint']) && (this[_0x46432e(0x6c2)] = void 0x0);
               }
               ,
               _0x113557[_0xc3a123(0x2d4)][_0xc3a123(0x7a8)] = function () {
                    const _0x365269 = _0xc3a123;
                    Adapter[_0x365269(0x336)](this[_0x365269(0x858)]) && this[_0x365269(0x858)][_0x365269(0x6c9)](),
                         this[_0x365269(0x94f)] = [],
                         this[_0x365269(0x858)] = this['scene'][_0x365269(0xa7c)][_0x365269(0x2ef)](new Adapter[(_0x365269(0x8d3))]({
                              'depthTestEnable': !0x1
                         }));
                    for (var _0x482ed2 = 0x0; _0x482ed2 < this[_0x365269(0x7dc)][_0x365269(0x72b)] - 0x1; _0x482ed2++) {
                         var _0x56c2b0 = new Adapter['Cartesian3']();
                         Adapter[_0x365269(0x25b)]['add'](this[_0x365269(0x7dc)][_0x482ed2], this[_0x365269(0x7dc)][_0x482ed2 + 0x1], _0x56c2b0),
                              Adapter[_0x365269(0x25b)]['multiplyByScalar'](_0x56c2b0, 0.5, _0x56c2b0),
                              this[_0x365269(0x94f)]['push'](_0x56c2b0);
                    }
                    Adapter[_0x365269(0x336)](this[_0x365269(0xc47)]) && (_0x56c2b0 = new Adapter['Cartesian3'](),
                         (Adapter['Cartesian3'][_0x365269(0x2ef)](this['_positions'][0x0], this[_0x365269(0x7dc)][this[_0x365269(0x7dc)][_0x365269(0x72b)] - 0x1], _0x56c2b0),
                              Adapter[_0x365269(0x25b)][_0x365269(0xc03)](_0x56c2b0, 0.5, _0x56c2b0),
                              this[_0x365269(0x94f)][_0x365269(0x63e)](_0x56c2b0)));
                    for (_0x482ed2 = 0x0; _0x482ed2 < this[_0x365269(0x94f)][_0x365269(0x72b)]; _0x482ed2++)
                         this[_0x365269(0x858)][_0x365269(0x2ef)]({
                              'position': this[_0x365269(0x94f)][_0x482ed2],
                              'id': _0xf78a91 + '_' + _0x482ed2,
                              'image': _0x3b80ec('Assets/Textures/middle-edit.png')
                         });
               }
               ;
          var _0x12c218 = {
               'OCCLUDED': 0x0,
               'OCCLUDED_TRANSLUCENT': 0x1,
               'NON_OCCLUDED': 0x2
          }
               , _0x9f6196 = Object['freeze'](_0x12c218);
          const _0x394cc7 = {
               'Distance': 0x0,
               'Area': 0x1,
               'DVH': 0x2
          };
          var _0x1a5452 = Object[_0xc3a123(0xb56)](_0x394cc7);
          function _0xdb601d(_0x142e01, _0x1aa101, _0x4e3913, _0x478ab7) {
               const _0x36659d = _0xc3a123;
               if (!_0x142e01 || !Adapter[_0x36659d(0x336)](_0x1aa101))
                    throw new Adapter['DeveloperError'](_0x36659d(0xac8));
               this['handler'] = new Adapter['ScreenSpaceEventHandler'](_0x142e01[_0x36659d(0x2b4)][_0x36659d(0xda5)]),
                    this[_0x36659d(0xd32)] = _0x142e01,
                    this[_0x36659d(0x229)] = Adapter[_0x36659d(0x4d9)](_0x4e3913, _0x61a61[_0x36659d(0xdb4)]),
                    this['mode'] = _0x1aa101,
                    this[_0x36659d(0x2c5)] = !0x1,
                    this[_0x36659d(0x614)] = !0x1,
                    this[_0x36659d(0x3ec)] = [],
                    this['_areaLabel'] = void 0x0,
                    this[_0x36659d(0x18c)] = void 0x0,
                    this[_0x36659d(0x5cb)] = void 0x0,
                    this[_0x36659d(0xc0a)] = void 0x0,
                    this[_0x36659d(0xb2c)] = new Adapter[(_0x36659d(0x31d))](),
                    this['_activeEvt'] = new Adapter[(_0x36659d(0x31d))](),
                    this['_enableDepthTest'] = !0x1,
                    this[_0x36659d(0x2e7)] = Adapter['Color'][_0x36659d(0xab8)]('rgba(38,\x2038,\x2038,\x200.85)'),
                    this[_0x36659d(0x92e)] = new Adapter[(_0x36659d(0xa79))](0x96, 0x3, 0xe4e1c0, 0.5),
                    this[_0x36659d(0x908)] = new Adapter[(_0x36659d(0x1b7))](0xf, 0x0),
                    this[_0x36659d(0x3b1)] = Adapter[_0x36659d(0x821)][_0x36659d(0xab8)](_0x36659d(0x668)),
                    this[_0x36659d(0x43f)] = Adapter[_0x36659d(0x821)][_0x36659d(0x4c6)]['withAlpha'](0.5),
                    this[_0x36659d(0xb43)] = 0x2,
                    this[_0x36659d(0xa17)] = void 0x0,
                    this[_0x36659d(0x7b2)] = Adapter[_0x36659d(0x4d9)](_0x478ab7, !0x0),
                    this[_0x36659d(0xc57)] = _0x9f6196[_0x36659d(0x98a)];
          }
          function _0x33e359(_0x2b368d, _0x5eddd1) {
               const _0x3ece1b = _0xc3a123;
               let _0x563634 = _0x5eddd1;
               if (_0x563634 && _0x563634[_0x3ece1b(0x614)]) {
                    let _0x67e9a1 = _0x563634[_0x3ece1b(0xd32)][_0x3ece1b(0x2b4)][_0x3ece1b(0x41f)](_0x2b368d[_0x3ece1b(0x5a4)]);
                    if (_0x67e9a1) {
                         if (_0x563634[_0x3ece1b(0x2c5)])
                              _0x563634[_0x3ece1b(0xac9)] == _0x1a5452[_0x3ece1b(0xc82)] ? _0x563634[_0x3ece1b(0x9eb)]() : _0x14dd7a(_0x67e9a1, _0x563634);
                         else
                              switch (_0x563634['isDrawing'] = !0x0,
                              _0x563634[_0x3ece1b(0xac9)]) {
                                   case _0x1a5452[_0x3ece1b(0xa42)]:
                                        _0x289625(_0x67e9a1, _0x563634);
                                        break;
                                   case _0x1a5452[_0x3ece1b(0xcfe)]:
                                        _0x31d29e(_0x67e9a1, _0x563634);
                                        break;
                                   case _0x1a5452['DVH']:
                                        _0x135442(_0x67e9a1, _0x563634);
                              }
                    }
               }
          }
          function _0x29c990(_0x414b56, _0x5e67ec) {
               const _0x4979de = _0xc3a123;
               let _0x52e85f = _0x5e67ec
                    , _0x96d67c = _0x52e85f[_0x4979de(0xd32)]['scene'][_0x4979de(0x41f)](_0x414b56[_0x4979de(0x971)]);
               if (_0x52e85f && _0x52e85f[_0x4979de(0x614)] && _0x52e85f[_0x4979de(0x2c5)] && _0x96d67c)
                    switch (_0x52e85f[_0x4979de(0xac9)]) {
                         case _0x1a5452['Distance']:
                              _0x5d1d15(_0x96d67c, _0x52e85f);
                              break;
                         case _0x1a5452['Area']:
                              _0x11cef5(_0x96d67c, _0x52e85f);
                              break;
                         case _0x1a5452[_0x4979de(0xc82)]:
                              _0x3daeef(_0x96d67c, _0x52e85f);
                    }
          }
          function _0x1d6fc2(_0x354100, _0x1bda8f) {
               const _0xa96990 = _0xc3a123;
               let _0xe5dbd5 = _0x1bda8f;
               if (_0xe5dbd5 && _0xe5dbd5['active'] && _0xe5dbd5[_0xa96990(0x2c5)]) {
                    let _0x11ab3d;
                    if (_0xe5dbd5[_0xa96990(0x9eb)](),
                         _0xe5dbd5[_0xa96990(0xbd2)] && (_0xe5dbd5[_0xa96990(0xac9)] === _0x1a5452[_0xa96990(0xa42)] ? (_0xe5dbd5[_0xa96990(0x19f)][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0xbd2)]),
                              _0x11ab3d = _0xe5dbd5['_accumulationPositions'],
                              0x0 === _0xe5dbd5[_0xa96990(0x19f)][_0xa96990(0x72b)] && _0xe5dbd5[_0xa96990(0xd32)]['entities'][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0x6ef)])) : (_0xe5dbd5[_0xa96990(0xbd2)][_0xa96990(0xd59)] = _0xe5dbd5[_0xa96990(0xbd2)]['positions'][_0xa96990(0x21c)](0x0, _0xe5dbd5['polyline']['positions'][_0xa96990(0x72b)] - 0x1),
                                   0x1 === _0xe5dbd5[_0xa96990(0xbd2)][_0xa96990(0xd59)][_0xa96990(0x72b)] && _0xe5dbd5['viewer'][_0xa96990(0x782)][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0x6ef)]),
                                   _0x11ab3d = _0xe5dbd5[_0xa96990(0xbd2)][_0xa96990(0xd59)]),
                              _0xe5dbd5['viewer'][_0xa96990(0x782)][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0x88c)]),
                              !_0xe5dbd5['polygon'])) {
                         _0xe5dbd5[_0xa96990(0x229)] !== _0x61a61['Ground'] && _0xe5dbd5[_0xa96990(0x229)] !== _0x61a61['S3mModel'] || (_0xe5dbd5[_0xa96990(0x77b)] = _0x11ab3d,
                              _0xe5dbd5[_0xa96990(0xbd2)][_0xa96990(0xc98)] = !0x1),
                              _0xe5dbd5[_0xa96990(0x18c)][_0xa96990(0x5a4)] = _0x11ab3d[_0x11ab3d[_0xa96990(0x72b)] - 0x1];
                         let _0x5e119d = 0x0;
                         if (_0x1bda8f[_0xa96990(0x229)] === _0x61a61[_0xa96990(0x854)])
                              _0x5e119d = _0x2a77bd(_0xe5dbd5[_0xa96990(0xd32)][_0xa96990(0x2b4)], _0xe5dbd5[_0xa96990(0xab4)]);
                         else {
                              for (let _0x3f85e9 = 0x0, _0x4800d5 = _0x11ab3d[_0xa96990(0x72b)] - 0x1; _0x3f85e9 < _0x4800d5; _0x3f85e9++)
                                   _0x5e119d += Adapter[_0xa96990(0x25b)][_0xa96990(0x3dd)](_0x11ab3d[_0x3f85e9], _0x11ab3d[_0x3f85e9 + 0x1]);
                         }
                         _0xe5dbd5['_disLabel'][_0xa96990(0xc98)] = 0x0 !== _0x5e119d,
                              _0xe5dbd5[_0xa96990(0x1cf)][_0xa96990(0x92b)]({
                                   'distance': _0x5e119d['toFixed'](0x8),
                                   'positions': _0x11ab3d
                              });
                    }
                    if (_0xe5dbd5[_0xa96990(0x90a)]) {
                         if (_0x11ab3d[_0xa96990(0x72b)] < 0x3) {
                              _0xe5dbd5[_0xa96990(0xdb3)]['show'] = !0x1,
                                   _0xe5dbd5[_0xa96990(0xd32)]['entities'][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0x6ef)]);
                              for (let _0x2bad4a = 0x0, _0x35972d = _0xe5dbd5[_0xa96990(0x3ec)]['length']; _0x2bad4a < _0x35972d; _0x2bad4a++)
                                   _0xe5dbd5['viewer'][_0xa96990(0x782)][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0x3ec)][_0x2bad4a]);
                              _0xe5dbd5[_0xa96990(0x3ec)][_0xa96990(0x72b)] = 0x0,
                                   _0xe5dbd5[_0xa96990(0xd32)][_0xa96990(0x782)][_0xa96990(0xced)](_0xe5dbd5[_0xa96990(0x88c)]),
                                   _0xe5dbd5['polyline'][_0xa96990(0xd59)][_0xa96990(0x72b)] = 0x0;
                         }
                         if (_0xe5dbd5[_0xa96990(0xdb3)][_0xa96990(0xc98)] = !0x0,
                              _0xe5dbd5[_0xa96990(0x229)] != _0x61a61[_0xa96990(0x854)] && _0xe5dbd5[_0xa96990(0x229)] != _0x61a61['S3mModel'] || (_0xe5dbd5[_0xa96990(0xbd2)]['show'] = !0x1),
                              _0xe5dbd5[_0xa96990(0x43d)] = _0xe5dbd5['polyline'][_0xa96990(0xd59)],
                              _0xe5dbd5[_0xa96990(0x90a)][_0xa96990(0xc98)] = !0x0,
                              _0x11ab3d[_0xa96990(0x72b)] > 0x2) {
                              if (_0xe5dbd5[_0xa96990(0x229)] !== _0x61a61[_0xa96990(0x854)])
                                   _0xe5dbd5[_0xa96990(0xdb3)][_0xa96990(0x5a4)] = _0xe5dbd5['polyline'][_0xa96990(0xd59)][_0xe5dbd5[_0xa96990(0xbd2)][_0xa96990(0xd59)][_0xa96990(0x72b)] - 0x1];
                              else {
                                   let _0x27bf18 = _0xe5dbd5['tmpEntities'][_0xe5dbd5[_0xa96990(0x3ec)]['length'] - 0x1]['_position'][_0xa96990(0x2d6)];
                                   _0xe5dbd5[_0xa96990(0xdb3)]['position'] = _0x27bf18;
                              }
                              if (_0xe5dbd5[_0xa96990(0x229)] === _0x61a61['Ground']) {
                                   let _0x24cb8b = _0x2d4d25(_0xe5dbd5[_0xa96990(0xd32)][_0xa96990(0x2b4)], _0xe5dbd5[_0xa96990(0xbd2)]['positions']);
                                   return void _0xe5dbd5[_0xa96990(0x1cf)]['raiseEvent']({
                                        'area': _0x24cb8b[_0xa96990(0x703)](0x8),
                                        'positions': _0x11ab3d
                                   });
                              }
                              let _0x5122a5, _0xeef0de, _0x500021, _0x194a38 = Adapter[_0xa96990(0x9a0)]['triangulate'](_0x11ab3d), _0x1b7441 = _0x194a38[_0xa96990(0x72b)] / 0x3, _0x46bc14 = 0x0;
                              for (let _0x52a2c9 = 0x0; _0x52a2c9 < _0x1b7441; _0x52a2c9++)
                                   _0x5122a5 = _0x11ab3d[_0x194a38[0x3 * _0x52a2c9]],
                                        _0xeef0de = _0x11ab3d[_0x194a38[0x3 * _0x52a2c9 + 0x1]],
                                        _0x500021 = _0x11ab3d[_0x194a38[0x3 * _0x52a2c9 + 0x2]],
                                        _0x145045 = Adapter[_0xa96990(0x25b)][_0xa96990(0x60c)](_0xeef0de, _0x5122a5, _0x145045),
                                        _0xa4c25d = Adapter[_0xa96990(0x25b)][_0xa96990(0x60c)](_0x500021, _0x5122a5, _0xa4c25d),
                                        _0x28a965 = Adapter[_0xa96990(0x25b)][_0xa96990(0x765)](_0x145045, _0xa4c25d, _0x28a965),
                                        _0x46bc14 += 0.5 * Adapter[_0xa96990(0x25b)][_0xa96990(0x869)](_0x28a965);
                              _0xe5dbd5['measureEvt']['raiseEvent']({
                                   'area': _0x46bc14[_0xa96990(0x703)](0x8),
                                   'positions': _0x11ab3d
                              });
                         }
                    }
               }
          }
          function _0x14dd7a(_0x3dc0d3, _0x56c2e5) {
               const _0x442f91 = _0xc3a123;
               let _0x14d95a = _0x56c2e5;
               _0x14d95a[_0x442f91(0xac9)] === _0x1a5452['Distance'] ? (_0x14d95a[_0x442f91(0xbd2)] = _0x14d95a[_0x442f91(0x19f)][_0x442f91(0x2ef)]({
                    'width': _0x14d95a[_0x442f91(0xb43)],
                    'show': _0x14d95a[_0x442f91(0x7b2)],
                    'positions': [_0x3dc0d3, _0x3dc0d3],
                    'material': Adapter[_0x442f91(0x32d)][_0x442f91(0x361)](Adapter[_0x442f91(0x32d)][_0x442f91(0x437)], {
                         'color': _0x14d95a['_lineColor']
                    }),
                    'clampToGround': !0x0
               }),
                    _0x56c2e5['_clampMode'] === _0x61a61[_0x442f91(0x854)] && (_0x14d95a[_0x442f91(0xbd2)][_0x442f91(0xc98)] = !0x1,
                         _0x14d95a['_accumulationDis'] = _0x14d95a[_0x442f91(0xb5f)]),
                    _0x14d95a[_0x442f91(0xab4)][_0x442f91(0x63e)](_0x3dc0d3)) : (_0x14d95a['mode'] === _0x1a5452[_0x442f91(0xcfe)] && (_0x14d95a[_0x442f91(0x337)] = _0x14d95a['_currentArea']),
                         _0x14d95a[_0x442f91(0xbd2)]['positions'][_0x442f91(0x63e)](_0x3dc0d3)),
                    _0x14d95a[_0x442f91(0x90a)] && _0x56c2e5[_0x442f91(0x229)] !== _0x61a61[_0x442f91(0x854)] && (_0x14d95a['polygon'][_0x442f91(0xc47)][_0x442f91(0x4ea)] = _0x14d95a[_0x442f91(0xbd2)][_0x442f91(0xd59)]),
                    _0x14d95a[_0x442f91(0x3ec)][_0x442f91(0x63e)](_0x14d95a[_0x442f91(0xd32)]['entities'][_0x442f91(0x2ef)]({
                         'show': _0x14d95a[_0x442f91(0x7b2)],
                         'position': _0x3dc0d3,
                         'point': {
                              'pixelSize': 0x8,
                              'color': Adapter[_0x442f91(0x821)][_0x442f91(0xab8)](_0x442f91(0x6ed))
                         }
                    }));
          }
          Object[_0xc3a123(0xcde)](_0xdb601d[_0xc3a123(0x2d4)], {
               'activeEvt': {
                    'get': function () {
                         const _0x2a9dc2 = _0xc3a123;
                         return this[_0x2a9dc2(0x1a5)];
                    }
               },
               'measureEvt': {
                    'get': function () {
                         const _0xef40d4 = _0xc3a123;
                         return this[_0xef40d4(0xb2c)];
                    }
               },
               'disLabel': {
                    'get': function () {
                         return this['_disLabel'];
                    }
               },
               'areaLabel': {
                    'get': function () {
                         const _0x1d3197 = _0xc3a123;
                         return this[_0x1d3197(0xdb3)];
                    }
               },
               'hLabel': {
                    'get': function () {
                         const _0x451808 = _0xc3a123;
                         return this[_0x451808(0xc0a)];
                    }
               },
               'vLabel': {
                    'get': function () {
                         const _0x1e88c7 = _0xc3a123;
                         return this[_0x1e88c7(0x5cb)];
                    }
               },
               'capturePointSize': {
                    'get': function () {
                         const _0x38036f = _0xc3a123;
                         return this[_0x38036f(0xd32)][_0x38036f(0x87b)];
                    },
                    'set': function (_0x17162a) {
                         const _0x3ce771 = _0xc3a123;
                         this[_0x3ce771(0xd32)][_0x3ce771(0x87b)] = _0x17162a;
                    }
               },
               'capturePointColor': {
                    'get': function () {
                         const _0x3511f7 = _0xc3a123;
                         return this[_0x3511f7(0xd32)][_0x3511f7(0x69c)];
                    },
                    'set': function (_0x1babd2) {
                         const _0x1efe0c = _0xc3a123;
                         this[_0x1efe0c(0xd32)][_0x1efe0c(0x69c)] = _0x1babd2;
                    }
               },
               'lineColor': {
                    'get': function () {
                         const _0x1d0642 = _0xc3a123;
                         return this[_0x1d0642(0x3b1)];
                    },
                    'set': function (_0x1690ed) {
                         const _0x432894 = _0xc3a123;
                         this[_0x432894(0x3b1)] = _0x1690ed;
                    }
               },
               'fillColor': {
                    'get': function () {
                         return this['_fillColor'];
                    },
                    'set': function (_0x564c80) {
                         const _0x26574e = _0xc3a123;
                         this[_0x26574e(0x43f)] = _0x564c80;
                    }
               },
               'lineWidth': {
                    'get': function () {
                         const _0x4a7548 = _0xc3a123;
                         return this[_0x4a7548(0xb43)];
                    },
                    'set': function (_0x31a735) {
                         const _0x3b3d64 = _0xc3a123;
                         this[_0x3b3d64(0xb43)] = _0x31a735;
                    }
               },
               'lineDisplayType': {
                    'get': function () {
                         const _0x29d998 = _0xc3a123;
                         return this[_0x29d998(0xc57)];
                    },
                    'set': function (_0x26264a) {
                         const _0x272e96 = _0xc3a123;
                         Adapter[_0x272e96(0x6d5)][_0x272e96(0x6f5)][_0x272e96(0x6f6)][_0x272e96(0x8c7)](_0x272e96(0x386), _0x26264a, 0x0),
                              Adapter['Check'][_0x272e96(0x6f5)][_0x272e96(0x6f6)][_0x272e96(0x99f)](_0x272e96(0x386), _0x26264a, 0x2),
                              this[_0x272e96(0xc57)] = _0x26264a,
                              this[_0x272e96(0x19f)] && (this[_0x272e96(0x19f)][_0x272e96(0x3ab)] = _0x26264a);
                    }
               }
          }),
               _0xdb601d['prototype'][_0xc3a123(0x258)] = function () {
                    const _0x5cffc4 = _0xc3a123;
                    if (this['clear'](),
                         this[_0x5cffc4(0x614)])
                         return;
                    this['active'] = !0x0;
                    let _0x1f1ddd = this;
                    this[_0x5cffc4(0xd65)][_0x5cffc4(0x75b)](function (_0x192e2d) {
                         _0x33e359(_0x192e2d, _0x1f1ddd);
                    }, Adapter[_0x5cffc4(0xad7)]['LEFT_CLICK']),
                         this['handler'][_0x5cffc4(0x75b)](function (_0x13ae47) {
                              _0x29c990(_0x13ae47, _0x1f1ddd);
                         }, Adapter[_0x5cffc4(0xad7)][_0x5cffc4(0xaf0)]),
                         this['handler'][_0x5cffc4(0x75b)](function (_0x61fa34) {
                              _0x1d6fc2(_0x61fa34, _0x1f1ddd);
                         }, Adapter[_0x5cffc4(0xad7)][_0x5cffc4(0x9a6)]),
                         this[_0x5cffc4(0x2cf)][_0x5cffc4(0x92b)](!0x0);
               }
               ,
               _0xdb601d['prototype'][_0xc3a123(0x9eb)] = function () {
                    const _0x3baae7 = _0xc3a123;
                    this[_0x3baae7(0x614)] && this[_0x3baae7(0x2cf)][_0x3baae7(0x92b)](!0x1),
                         this['active'] = !0x1,
                         this[_0x3baae7(0x2c5)] = !0x1,
                         this[_0x3baae7(0xd65)][_0x3baae7(0xc78)](Adapter[_0x3baae7(0xad7)]['LEFT_CLICK']),
                         this[_0x3baae7(0xd65)]['removeInputAction'](Adapter[_0x3baae7(0xad7)][_0x3baae7(0xaf0)]),
                         this['handler']['removeInputAction'](Adapter[_0x3baae7(0xad7)][_0x3baae7(0x9a6)]);
               }
               ,
               _0xdb601d['prototype'][_0xc3a123(0x6bf)] = function () {
                    const _0x6d9742 = _0xc3a123;
                    this['deactivate']();
                    for (let _0x446b94 = 0x0, _0x5d75f8 = this['tmpEntities'][_0x6d9742(0x72b)]; _0x446b94 < _0x5d75f8; _0x446b94++)
                         this[_0x6d9742(0xd32)]['entities'][_0x6d9742(0xced)](this[_0x6d9742(0x3ec)][_0x446b94]);
                    if (this['clampToGroundPolyline'] && (this[_0x6d9742(0xd32)][_0x6d9742(0x782)]['remove'](this[_0x6d9742(0x7c1)]),
                         this['clampToGroundPolyline'] = null),
                         this[_0x6d9742(0x3ec)][_0x6d9742(0x72b)] = 0x0,
                         this['polylines'] && (this['polylines'][_0x6d9742(0x6c9)](),
                              this[_0x6d9742(0xd32)][_0x6d9742(0x2b4)][_0x6d9742(0xa7c)][_0x6d9742(0xced)](this[_0x6d9742(0x19f)]),
                              this[_0x6d9742(0x19f)] = void 0x0),
                         this[_0x6d9742(0x6ef)] && (this[_0x6d9742(0xd32)]['entities'][_0x6d9742(0xced)](this[_0x6d9742(0x6ef)]),
                              this[_0x6d9742(0x6ef)] = void 0x0),
                         this[_0x6d9742(0x88c)] && (this[_0x6d9742(0xd32)][_0x6d9742(0x782)][_0x6d9742(0xced)](this['epEntity']),
                              this[_0x6d9742(0x88c)] = void 0x0),
                         this[_0x6d9742(0x1e6)] && (this[_0x6d9742(0xd32)][_0x6d9742(0x782)][_0x6d9742(0xced)](this[_0x6d9742(0x1e6)]),
                              this[_0x6d9742(0x1e6)] = void 0x0),
                         this[_0x6d9742(0x824)])
                         switch (this[_0x6d9742(0xac9)]) {
                              case _0x1a5452[_0x6d9742(0xa42)]:
                                   this[_0x6d9742(0x824)]['remove'](this[_0x6d9742(0x18c)]);
                                   break;
                              case _0x1a5452[_0x6d9742(0xcfe)]:
                                   this[_0x6d9742(0x824)][_0x6d9742(0xced)](this['_areaLabel']);
                                   break;
                              case _0x1a5452[_0x6d9742(0xc82)]:
                                   this[_0x6d9742(0x824)][_0x6d9742(0xced)](this[_0x6d9742(0x18c)]),
                                        this[_0x6d9742(0x824)][_0x6d9742(0xced)](this['_hLabel']),
                                        this[_0x6d9742(0x824)][_0x6d9742(0xced)](this[_0x6d9742(0x5cb)]);
                         }
                    this[_0x6d9742(0x90a)] && (this['viewer'][_0x6d9742(0x782)][_0x6d9742(0xced)](this[_0x6d9742(0x90a)]),
                         this[_0x6d9742(0x90a)] = void 0x0),
                         this[_0x6d9742(0x5a7)] && (this[_0x6d9742(0xd32)][_0x6d9742(0x782)][_0x6d9742(0xced)](this['corridor']),
                              this['corridor'] = void 0x0);
               }
               ;
          let _0x145045 = new Adapter[(_0xc3a123(0x25b))]()
               , _0xa4c25d = new Adapter[(_0xc3a123(0x25b))]()
               , _0x28a965 = new Adapter[(_0xc3a123(0x25b))]();
          function _0x11cef5(_0x46abeb, _0x3ee085) {
               const _0x1e9668 = _0xc3a123;
               let _0x32356c = _0x3ee085;
               if (_0x32356c[_0x1e9668(0xd32)]['scene'],
                    !_0x46abeb)
                    return;
               _0x32356c[_0x1e9668(0x51e)] = _0x46abeb;
               let _0x2bb5d9 = _0x32356c[_0x1e9668(0xbd2)][_0x1e9668(0xd59)]
                    , _0x1c4936 = _0x2bb5d9[_0x1e9668(0x72b)];
               if (_0x2bb5d9[_0x1c4936 - 0x1] = _0x46abeb,
                    _0x1c4936 > 0x2 && (_0x32356c[_0x1e9668(0xdb3)] && (_0x32356c['_areaLabel'][_0x1e9668(0xc98)] = !0x0),
                         _0x32356c['clampToGroundPolygonPositions'] = _0x2bb5d9),
                    _0x32356c[_0x1e9668(0xbd2)]['positions'] = _0x2bb5d9,
                    _0x2bb5d9[_0x1e9668(0x72b)] > 0x2) {
                    let _0x3ffeef;
                    if (_0x32356c[_0x1e9668(0x88c)][_0x1e9668(0x5a4)] = _0x46abeb,
                         _0x32356c[_0x1e9668(0xdb3)][_0x1e9668(0x5a4)] = _0x46abeb,
                         _0x32356c[_0x1e9668(0xdb3)][_0x1e9668(0xc98)] = _0x3ee085[_0x1e9668(0x229)] !== _0x61a61['Ground'],
                         _0x3ee085[_0x1e9668(0x229)] === _0x61a61['Ground'])
                         return;
                    _0x3ffeef = _0xdb601d[_0x1e9668(0x460)](_0x2bb5d9),
                         _0x32356c[_0x1e9668(0x1cf)]['raiseEvent']({
                              'area': _0x3ffeef['toFixed'](0x8),
                              'positions': _0x2bb5d9
                         });
               }
          }
          function _0x31d29e(_0x208bdc, _0x3f9b54) {
               const _0x58d588 = _0xc3a123;
               let _0x2e7c11 = _0x3f9b54;
               _0x2e7c11[_0x58d588(0x43d)] = [],
                    _0x2e7c11[_0x58d588(0x3ec)]['length'] = 0x0,
                    _0x2e7c11[_0x58d588(0x9a2)],
                    _0x2e7c11['polylines'] = new Adapter[(_0x58d588(0x690))](),
                    _0x2e7c11[_0x58d588(0xbd2)] = _0x2e7c11['polylines'][_0x58d588(0x2ef)]({
                         'width': _0x2e7c11[_0x58d588(0xb43)],
                         'positions': [_0x208bdc, _0x208bdc],
                         'material': Adapter['Material'][_0x58d588(0x361)](Adapter[_0x58d588(0x32d)][_0x58d588(0x437)], {
                              'color': _0x2e7c11[_0x58d588(0x3b1)]
                         }),
                         'loop': !0x0
                    }),
                    _0x2e7c11[_0x58d588(0xd32)]['scene'][_0x58d588(0xa7c)][_0x58d588(0x2ef)](_0x2e7c11[_0x58d588(0x19f)]),
                    _0x2e7c11[_0x58d588(0x6ef)] = _0x2e7c11[_0x58d588(0xd32)][_0x58d588(0x782)][_0x58d588(0x2ef)]({
                         'position': _0x208bdc,
                         'point': {
                              'pixelSize': 0x8,
                              'color': Adapter[_0x58d588(0x821)][_0x58d588(0xab8)](_0x58d588(0x6ed))
                         }
                    }),
                    _0x2e7c11[_0x58d588(0x88c)] = _0x2e7c11[_0x58d588(0xd32)][_0x58d588(0x782)][_0x58d588(0x2ef)]({
                         'position': _0x208bdc,
                         'point': {
                              'pixelSize': 0x8,
                              'color': Adapter[_0x58d588(0x821)][_0x58d588(0xab8)](_0x58d588(0x6ed))
                         }
                    });
               let _0x38e821 = _0x2e7c11[_0x58d588(0xd32)][_0x58d588(0x2b4)][_0x58d588(0xa7c)][_0x58d588(0x2ef)](new Adapter[(_0x58d588(0x2e9))]({
                    'depthTestEnable': !0x1
               }));
               _0x2e7c11[_0x58d588(0xdb3)] = _0x38e821['add']({
                    'position': _0x208bdc,
                    'font': _0x58d588(0x5cf),
                    'fillColor': Adapter[_0x58d588(0x821)][_0x58d588(0x1cd)],
                    'style': Adapter[_0x58d588(0x42f)][_0x58d588(0x4da)],
                    'showBackground': !0x0,
                    'outlineWidth': 0x1,
                    'outlineColor': Adapter['Color'][_0x58d588(0x250)],
                    'pixelOffset': _0x2e7c11['_labelPixelOffset'],
                    'text': '',
                    'show': _0x2e7c11[_0x58d588(0x7b2)],
                    'horizontalOrigin': Adapter[_0x58d588(0x6b3)]['LEFT']
               });
               let _0x4bf4c5 = _0x2e7c11['_clampMode'] === _0x61a61['Space'];
               _0x2e7c11[_0x58d588(0x90a)] = _0x2e7c11['viewer'][_0x58d588(0x782)][_0x58d588(0x2ef)]({
                    'polygon': {
                         'hierarchy': new Adapter[(_0x58d588(0xd03))](function () {
                              return {
                                   'positions': _0x2e7c11['clampToGroundPolygonPositions'],
                                   'holes': []
                              };
                         }
                              , !0x1),
                         'material': _0x2e7c11['_fillColor'],
                         'perPositionHeight': _0x4bf4c5
                    },
                    'show': !0x1
               }),
                    _0x2e7c11[_0x58d588(0x824)] = _0x38e821,
                    _0x3f9b54[_0x58d588(0x229)] === _0x61a61['Ground'] && (_0x2e7c11['polyline']['show'] = !0x1,
                         _0x2e7c11['polygon'][_0x58d588(0xc98)] = !0x0),
                    _0x2e7c11[_0x58d588(0xdb3)][_0x58d588(0xc98)] = !0x1;
          }
          function _0x289625(_0xbf06fa, _0x1b8cc2) {
               const _0x2425aa = _0xc3a123;
               let _0x5759fb = _0x1b8cc2;
               if (_0x1b8cc2[_0x2425aa(0x229)] === _0x61a61[_0x2425aa(0x854)] && (_0x5759fb['clampToGroundPolylinePositions'] = [],
                    _0x5759fb[_0x2425aa(0x7c1)] = _0x5759fb['viewer']['entities'][_0x2425aa(0x2ef)]({
                         'polyline': {
                              'positions': new Adapter['CallbackProperty'](function () {
                                   const _0xe16e01 = _0x2425aa;
                                   return _0x5759fb[_0xe16e01(0x77b)];
                              }
                                   , !0x1),
                              'width': _0x5759fb[_0x2425aa(0xb43)],
                              'material': _0x5759fb['_lineColor'],
                              'clampToGround': !0x0
                         }
                    })),
                    _0x5759fb[_0x2425aa(0x3ec)]['length'] = 0x0,
                    !_0x5759fb[_0x2425aa(0x19f)]) {
                    let _0x314a7f = _0x5759fb['_enableDepthTest'];
                    _0x5759fb[_0x2425aa(0x19f)] = new Adapter[(_0x2425aa(0x690))]({
                         'opaqueRS': Adapter['RenderState'][_0x2425aa(0x6d8)]({
                              'depthMask': _0x314a7f,
                              'depthTest': {
                                   'enabled': _0x314a7f
                              }
                         }),
                         'translucentRS': Adapter[_0x2425aa(0x259)]['fromCache']({
                              'depthMask': _0x314a7f,
                              'depthTest': {
                                   'enabled': _0x314a7f
                              }
                         }),
                         'lineDisplayType': _0x5759fb[_0x2425aa(0x229)] === _0x61a61['Ground'] ? _0x9f6196['OCCLUDED'] : _0x5759fb[_0x2425aa(0xc57)]
                    }),
                         _0x5759fb['polyline'] = _0x5759fb[_0x2425aa(0x19f)][_0x2425aa(0x2ef)]({
                              'width': _0x5759fb[_0x2425aa(0xb43)],
                              'show': _0x5759fb[_0x2425aa(0x7b2)],
                              'positions': [_0xbf06fa, _0xbf06fa],
                              'material': Adapter[_0x2425aa(0x32d)][_0x2425aa(0x361)](Adapter[_0x2425aa(0x32d)][_0x2425aa(0x437)], {
                                   'color': _0x5759fb[_0x2425aa(0x3b1)]
                              }),
                              'clampToGround': !0x0
                         }),
                         _0x5759fb['viewer'][_0x2425aa(0x2b4)][_0x2425aa(0xa7c)][_0x2425aa(0x2ef)](_0x5759fb[_0x2425aa(0x19f)]),
                         _0x5759fb[_0x2425aa(0xab4)] = [_0xbf06fa],
                         _0x5759fb[_0x2425aa(0x84a)] = 0x0,
                         _0x5759fb[_0x2425aa(0xb5f)] = 0x0,
                         _0x5759fb[_0x2425aa(0x6ef)] = _0x5759fb[_0x2425aa(0xd32)][_0x2425aa(0x782)][_0x2425aa(0x2ef)]({
                              'position': _0xbf06fa,
                              'show': _0x5759fb[_0x2425aa(0x7b2)],
                              'point': {
                                   'pixelSize': 0x8,
                                   'color': Adapter[_0x2425aa(0x821)][_0x2425aa(0xab8)]('#ffe500')
                              }
                         }),
                         _0x5759fb['epEntity'] = _0x5759fb[_0x2425aa(0xd32)][_0x2425aa(0x782)][_0x2425aa(0x2ef)]({
                              'position': _0xbf06fa,
                              'show': _0x5759fb[_0x2425aa(0x7b2)],
                              'point': {
                                   'pixelSize': 0x8,
                                   'color': Adapter[_0x2425aa(0x821)][_0x2425aa(0xab8)]('#ffe500')
                              }
                         });
                    let _0x1eb249 = _0x5759fb[_0x2425aa(0xd32)]['scene'][_0x2425aa(0xa7c)][_0x2425aa(0x2ef)](new Adapter[(_0x2425aa(0x2e9))]({
                         'depthTestEnable': !0x1
                    }));
                    _0x5759fb[_0x2425aa(0x18c)] = _0x1eb249[_0x2425aa(0x2ef)]({
                         'position': _0xbf06fa,
                         'font': _0x2425aa(0x5cf),
                         'fillColor': Adapter[_0x2425aa(0x821)][_0x2425aa(0x1cd)],
                         'style': Adapter['LabelStyle'][_0x2425aa(0x4da)],
                         'showBackground': !0x0,
                         'backgroundColor': _0x5759fb[_0x2425aa(0x2e7)],
                         'outlineWidth': 0x1,
                         'outlineColor': Adapter[_0x2425aa(0x821)]['BLUE'],
                         'pixelOffset': _0x5759fb[_0x2425aa(0x908)],
                         'text': '',
                         'show': _0x5759fb[_0x2425aa(0x7b2)],
                         'horizontalOrigin': Adapter[_0x2425aa(0x6b3)][_0x2425aa(0x2b3)]
                    }),
                         _0x5759fb['labels'] = _0x1eb249;
                    let _0x334829 = _0x5759fb[_0x2425aa(0x229)] == _0x61a61[_0x2425aa(0x5e8)]
                         , _0x108d35 = Adapter[_0x2425aa(0x25b)]['clone'](_0xbf06fa);
                    _0x5759fb[_0x2425aa(0x5a7)] = _0x5759fb[_0x2425aa(0xd32)]['entities'][_0x2425aa(0x2ef)]({
                         'corridor': {
                              'positions': [_0x108d35, _0x108d35],
                              'width': 0x14,
                              'material': Adapter[_0x2425aa(0x821)][_0x2425aa(0xab8)](_0x2425aa(0x668))
                         },
                         'clampToS3M': _0x334829,
                         'show': !0x1
                    });
               }
               _0x1b8cc2['_clampMode'] === _0x61a61[_0x2425aa(0x854)] && (_0x5759fb['polyline'][_0x2425aa(0xc98)] = !0x1);
          }
          function _0x5d1d15(_0x437df3, _0x5d79e0) {
               const _0x45c712 = _0xc3a123;
               let _0x267f65 = _0x5d79e0;
               _0x267f65[_0x45c712(0xd32)]['scene'],
                    _0x267f65[_0x45c712(0x51e)] = _0x437df3;
               let _0x27d28e = _0x267f65[_0x45c712(0xbd2)][_0x45c712(0xd59)]
                    , _0x4025cb = _0x27d28e[_0x45c712(0x72b)];
               _0x5d79e0['_clampMode'] === _0x61a61[_0x45c712(0x854)] && (_0x267f65[_0x45c712(0xac9)] === _0x1a5452['Distance'] ? _0x267f65[_0x45c712(0x77b)] = _0x267f65[_0x45c712(0xab4)]['concat']([_0x437df3]) : _0x267f65[_0x45c712(0x77b)] = _0x27d28e),
                    _0x27d28e[_0x4025cb - 0x1] = _0x437df3,
                    _0x267f65[_0x45c712(0xbd2)]['positions'] = _0x27d28e,
                    _0x267f65[_0x45c712(0x88c)]['position'] = _0x437df3;
               let _0x583bf0 = 0x0
                    , _0x11401d = _0x267f65[_0x45c712(0xab4)]['concat']([_0x437df3]);
               if (_0x267f65['polyline'][_0x45c712(0x95c)] = _0x583bf0,
                    _0x267f65[_0x45c712(0x18c)][_0x45c712(0x5a4)] = _0x437df3,
                    _0x267f65['_disLabel'][_0x45c712(0xc98)] = _0x5d79e0[_0x45c712(0x229)] !== _0x61a61[_0x45c712(0x854)],
                    _0x5d79e0[_0x45c712(0x229)] !== _0x61a61[_0x45c712(0x854)]) {
                    for (let _0x500814 = 0x0, _0x386a25 = _0x11401d['length'] - 0x1; _0x500814 < _0x386a25; _0x500814++)
                         _0x583bf0 += Adapter['Cartesian3'][_0x45c712(0x3dd)](_0x11401d[_0x500814], _0x11401d[_0x500814 + 0x1]);
                    _0x267f65[_0x45c712(0x1cf)][_0x45c712(0x92b)]({
                         'distance': _0x583bf0[_0x45c712(0x703)](0x8),
                         'positions': _0x11401d
                    });
               }
          }
          function _0x135442(_0x6adb4d, _0x56ea6a) {
               const _0x2309bc = _0xc3a123;
               let _0x3170ac = _0x56ea6a;
               if (!_0x3170ac[_0x2309bc(0x19f)]) {
                    let _0x30a304 = _0x3170ac['_enableDepthTest'];
                    _0x3170ac['polylines'] = new Adapter[(_0x2309bc(0x690))]({
                         'opaqueRS': Adapter['RenderState'][_0x2309bc(0x6d8)]({
                              'depthMask': _0x30a304,
                              'depthTest': {
                                   'enabled': _0x30a304
                              }
                         }),
                         'lineDisplayType': _0x3170ac[_0x2309bc(0xc57)]
                    }),
                         _0x3170ac[_0x2309bc(0x3e9)] = _0x3170ac[_0x2309bc(0x19f)]['add']({
                              'width': 0x2,
                              'show': _0x3170ac[_0x2309bc(0x7b2)],
                              'positions': [_0x6adb4d, _0x6adb4d],
                              'material': Adapter[_0x2309bc(0x32d)]['fromType'](Adapter['Material'][_0x2309bc(0x437)], {
                                   'color': _0x3170ac['_lineColor']
                              })
                         }),
                         _0x3170ac[_0x2309bc(0x598)] = _0x3170ac[_0x2309bc(0x19f)][_0x2309bc(0x2ef)]({
                              'width': 0x2,
                              'show': _0x3170ac['_showMeasureResult'],
                              'positions': [_0x6adb4d, _0x6adb4d],
                              'material': Adapter[_0x2309bc(0x32d)][_0x2309bc(0x361)](Adapter['Material'][_0x2309bc(0x437)], {
                                   'color': _0x3170ac[_0x2309bc(0x3b1)]
                              })
                         }),
                         _0x3170ac[_0x2309bc(0x6b1)] = _0x3170ac[_0x2309bc(0x19f)][_0x2309bc(0x2ef)]({
                              'width': 0x2,
                              'show': _0x3170ac[_0x2309bc(0x7b2)],
                              'positions': [_0x6adb4d, _0x6adb4d],
                              'material': Adapter['Material'][_0x2309bc(0x361)](Adapter['Material']['ColorType'], {
                                   'color': _0x3170ac[_0x2309bc(0x3b1)]
                              })
                         }),
                         _0x3170ac['viewer'][_0x2309bc(0x2b4)][_0x2309bc(0xa7c)][_0x2309bc(0x2ef)](_0x3170ac[_0x2309bc(0x19f)]),
                         _0x3170ac[_0x2309bc(0x6ef)] = _0x3170ac['viewer'][_0x2309bc(0x782)]['add']({
                              'position': _0x6adb4d,
                              'show': _0x3170ac[_0x2309bc(0x7b2)],
                              'point': {
                                   'pixelSize': 0x8,
                                   'color': Adapter[_0x2309bc(0x821)][_0x2309bc(0xab8)](_0x2309bc(0x6ed))
                              }
                         }),
                         _0x3170ac['epEntity'] = _0x3170ac[_0x2309bc(0xd32)][_0x2309bc(0x782)][_0x2309bc(0x2ef)]({
                              'position': _0x6adb4d,
                              'show': _0x3170ac['_showMeasureResult'],
                              'point': {
                                   'pixelSize': 0x8,
                                   'color': Adapter['Color']['fromCssColorString'](_0x2309bc(0x6ed))
                              }
                         }),
                         _0x3170ac[_0x2309bc(0x1e6)] = _0x3170ac['viewer'][_0x2309bc(0x782)]['add']({
                              'position': _0x6adb4d,
                              'show': _0x3170ac[_0x2309bc(0x7b2)],
                              'point': {
                                   'pixelSize': 0x8,
                                   'color': Adapter[_0x2309bc(0x821)][_0x2309bc(0xab8)](_0x2309bc(0x6ed))
                              }
                         });
                    let _0xcb719c = _0x3170ac[_0x2309bc(0xd32)]['scene'][_0x2309bc(0xa7c)]['add'](new Adapter[(_0x2309bc(0x2e9))]({
                         'depthTestEnable': !0x1
                    }));
                    _0x3170ac['_disLabel'] = _0xcb719c['add']({
                         'position': _0x6adb4d,
                         'font': _0x2309bc(0x4c5),
                         'style': Adapter[_0x2309bc(0x42f)][_0x2309bc(0x4da)],
                         'outlineWidth': 0x1,
                         'outlineColor': Adapter[_0x2309bc(0x821)][_0x2309bc(0xae0)],
                         'showBackground': !0x0,
                         'backgroundColor': _0x3170ac[_0x2309bc(0x2e7)],
                         'pixelOffset': _0x3170ac[_0x2309bc(0x908)],
                         'pixelOffsetScaleByDistance': _0x3170ac[_0x2309bc(0x92e)],
                         'text': '',
                         'show': _0x3170ac[_0x2309bc(0x7b2)],
                         'horizontalOrigin': Adapter[_0x2309bc(0x6b3)][_0x2309bc(0x2b3)]
                    }),
                         _0x3170ac[_0x2309bc(0x5cb)] = _0xcb719c[_0x2309bc(0x2ef)]({
                              'position': _0x6adb4d,
                              'font': '500\x2016px\x20sans-serif',
                              'style': Adapter['LabelStyle'][_0x2309bc(0x4da)],
                              'outlineWidth': 0x1,
                              'outlineColor': Adapter['Color'][_0x2309bc(0xae0)],
                              'showBackground': !0x0,
                              'backgroundColor': _0x3170ac[_0x2309bc(0x2e7)],
                              'pixelOffset': _0x3170ac[_0x2309bc(0x908)],
                              'pixelOffsetScaleByDistance': _0x3170ac[_0x2309bc(0x92e)],
                              'text': '',
                              'show': _0x3170ac[_0x2309bc(0x7b2)],
                              'horizontalOrigin': Adapter[_0x2309bc(0x6b3)][_0x2309bc(0x2b3)]
                         }),
                         _0x3170ac['_hLabel'] = _0xcb719c['add']({
                              'position': _0x6adb4d,
                              'font': _0x2309bc(0x4c5),
                              'style': Adapter['LabelStyle'][_0x2309bc(0x4da)],
                              'outlineWidth': 0x1,
                              'outlineColor': Adapter['Color'][_0x2309bc(0xae0)],
                              'showBackground': !0x0,
                              'backgroundColor': _0x3170ac['_labelBackgroundColor'],
                              'pixelOffset': _0x3170ac['_labelPixelOffset'],
                              'pixelOffsetScaleByDistance': _0x3170ac[_0x2309bc(0x92e)],
                              'text': '',
                              'show': _0x3170ac[_0x2309bc(0x7b2)],
                              'horizontalOrigin': Adapter[_0x2309bc(0x6b3)][_0x2309bc(0x2b3)]
                         }),
                         _0x3170ac[_0x2309bc(0x824)] = _0xcb719c;
               }
               let _0x42eabc = new Adapter[(_0x2309bc(0x25b))]();
               Adapter[_0x2309bc(0x25b)][_0x2309bc(0x579)](_0x6adb4d, _0x42eabc),
                    _0x3170ac[_0x2309bc(0x6b8)] = Adapter[_0x2309bc(0x456)][_0x2309bc(0xbbb)](_0x6adb4d, _0x42eabc),
                    _0x3170ac['startPoint'] = _0x6adb4d,
                    _0x3170ac[_0x2309bc(0x3fd)] = Adapter[_0x2309bc(0x6ca)][_0x2309bc(0x2d0)](_0x6adb4d)[_0x2309bc(0x48e)],
                    _0x3170ac[_0x2309bc(0x279)] = _0x42eabc;
               let _0x56816f = new Adapter['Cartesian3']();
               Adapter[_0x2309bc(0x25b)][_0x2309bc(0x26a)](_0x42eabc, _0x56816f),
                    _0x3170ac['negateNormal'] = _0x56816f,
                    _0x3170ac[_0x2309bc(0x6ef)][_0x2309bc(0x5a4)] = _0x6adb4d;
          }
          function _0x3daeef(_0x1bf751, _0x17fabb) {
               const _0x387f04 = _0xc3a123;
               let _0x50859b = _0x17fabb;
               if (_0x50859b[_0x387f04(0xd32)][_0x387f04(0x2b4)],
                    !_0x1bf751)
                    return;
               _0x50859b[_0x387f04(0x51e)] = _0x1bf751;
               let _0x35fe54, _0xf04a63, _0x5cd187 = Adapter[_0x387f04(0x6ca)]['fromCartesian'](_0x1bf751)['height'];
               _0x5cd187 > _0x50859b[_0x387f04(0x3fd)] ? (_0x35fe54 = Adapter[_0x387f04(0x456)][_0x387f04(0xbbb)](_0x1bf751, _0x50859b['normal']),
                    _0xf04a63 = new Adapter['Ray'](_0x50859b['startPoint'], _0x50859b[_0x387f04(0x279)])) : (_0x35fe54 = _0x50859b['plane'],
                         _0xf04a63 = new Adapter['Ray'](_0x1bf751, _0x50859b[_0x387f04(0x279)]));
               let _0x114148 = Adapter[_0x387f04(0x501)][_0x387f04(0x5a1)](_0xf04a63, _0x35fe54);
               if (!_0x114148 && (_0xf04a63 = new Adapter[(_0x387f04(0x1b9))](_0x1bf751, _0x50859b[_0x387f04(0x279)]),
                    _0x114148 = Adapter['IntersectionTests'][_0x387f04(0x5a1)](_0xf04a63, _0x50859b[_0x387f04(0x6b8)]),
                    !_0x114148))
                    return;
               _0x50859b[_0x387f04(0x3e9)]['positions'] = [_0x50859b[_0x387f04(0x82e)], _0x114148],
                    _0x50859b['dirPolyline'][_0x387f04(0xd59)] = [_0x50859b[_0x387f04(0x82e)], _0x1bf751],
                    _0x50859b[_0x387f04(0x598)][_0x387f04(0xd59)] = [_0x1bf751, _0x114148],
                    _0x50859b[_0x387f04(0x88c)][_0x387f04(0x5a4)] = _0x1bf751,
                    _0x50859b[_0x387f04(0x1e6)][_0x387f04(0x5a4)] = _0x114148;
               let _0x354dcf = Adapter[_0x387f04(0x25b)]['distance'](_0x50859b[_0x387f04(0x82e)], _0x1bf751)[_0x387f04(0x703)](0x8)
                    , _0x174ab1 = Adapter[_0x387f04(0x25b)][_0x387f04(0x3dd)](_0x50859b['startPoint'], _0x114148)[_0x387f04(0x703)](0x8)
                    , _0x14ca61 = Adapter['Cartesian3']['distance'](_0x1bf751, _0x114148)[_0x387f04(0x703)](0x8);
               _0x5cd187 > _0x50859b[_0x387f04(0x3fd)] ? (Adapter[_0x387f04(0x25b)][_0x387f04(0xc2b)](_0x50859b[_0x387f04(0x82e)], _0x1bf751, 0.5, _0x50859b[_0x387f04(0x18c)][_0x387f04(0x5a4)]),
                    Adapter[_0x387f04(0x25b)][_0x387f04(0xc2b)](_0x50859b[_0x387f04(0x82e)], _0x114148, 0.5, _0x50859b[_0x387f04(0x5cb)][_0x387f04(0x5a4)]),
                    Adapter[_0x387f04(0x25b)][_0x387f04(0xc2b)](_0x1bf751, _0x114148, 0.5, _0x50859b[_0x387f04(0xc0a)][_0x387f04(0x5a4)])) : (Adapter[_0x387f04(0x25b)][_0x387f04(0xc2b)](_0x50859b[_0x387f04(0x82e)], _0x1bf751, 0.5, _0x50859b['_disLabel'][_0x387f04(0x5a4)]),
                         Adapter['Cartesian3']['lerp'](_0x1bf751, _0x114148, 0.5, _0x50859b[_0x387f04(0x5cb)]['position']),
                         Adapter[_0x387f04(0x25b)][_0x387f04(0xc2b)](_0x50859b[_0x387f04(0x82e)], _0x114148, 0.5, _0x50859b['_hLabel'][_0x387f04(0x5a4)]),
                         _0x174ab1 = Adapter[_0x387f04(0x25b)][_0x387f04(0x3dd)](_0x1bf751, _0x114148)[_0x387f04(0x703)](0x8),
                         _0x14ca61 = Adapter[_0x387f04(0x25b)][_0x387f04(0x3dd)](_0x50859b[_0x387f04(0x82e)], _0x114148)[_0x387f04(0x703)](0x8)),
                    _0x50859b[_0x387f04(0x1cf)]['raiseEvent']({
                         'distance': _0x354dcf,
                         'directionalPositions': _0x50859b[_0x387f04(0x6b1)]['positions'],
                         'verticalHeight': _0x174ab1,
                         'verticalPositions': _0x50859b['verticalPolyline'][_0x387f04(0xd59)],
                         'horizontalDistance': _0x14ca61,
                         'horizontalPositions': _0x50859b[_0x387f04(0x3e9)][_0x387f04(0xd59)]
                    });
          }
          function _0x2d4d25(_0xafb7a6, _0x16e34b) {
               const _0x288a0f = _0xc3a123;
               let _0x4abf73 = Number[_0x288a0f(0x83f)]
                    , _0x7d2225 = -Number['MAX_VALUE']
                    , _0x1c31bf = Number[_0x288a0f(0x83f)]
                    , _0x336061 = -Number[_0x288a0f(0x83f)];
               for (let _0x1ebf9e = 0x0; _0x1ebf9e < _0x16e34b[_0x288a0f(0x72b)]; _0x1ebf9e++) {
                    let _0x18862a = Adapter['Cartographic'][_0x288a0f(0x2d0)](_0x16e34b[_0x1ebf9e]);
                    _0x4abf73 = Math[_0x288a0f(0x455)](_0x18862a['longitude'], _0x4abf73),
                         _0x7d2225 = Math[_0x288a0f(0x590)](_0x18862a[_0x288a0f(0xb4c)], _0x7d2225),
                         _0x1c31bf = Math[_0x288a0f(0x455)](_0x18862a[_0x288a0f(0x400)], _0x1c31bf),
                         _0x336061 = Math[_0x288a0f(0x590)](_0x18862a[_0x288a0f(0x400)], _0x336061);
               }
               let _0x2a31dc = Adapter[_0x288a0f(0x6ca)][_0x288a0f(0xbeb)](new Adapter[(_0x288a0f(0x6ca))](_0x4abf73, _0x1c31bf, 0x0))
                    , _0x23fdf9 = Adapter['Cartographic']['toCartesian'](new Adapter[(_0x288a0f(0x6ca))](_0x7d2225, _0x336061, 0x0))
                    , _0x3a1abe = Adapter[_0x288a0f(0x25b)]['angleBetween'](_0x2a31dc, _0x23fdf9)
                    , _0x2df125 = Adapter[_0x288a0f(0xd92)]['fromPositions']({
                         'positions': _0x16e34b,
                         'granularity': _0x3a1abe / 0x20
                    })
                    , _0x12b826 = Adapter[_0x288a0f(0xd92)]['createGeometry'](_0x2df125)
                    , _0x5bf755 = 0x0
                    , _0x4ad358 = {};
               for (let _0x86d480 = 0x0; _0x86d480 < _0x12b826[_0x288a0f(0xcae)][_0x288a0f(0x72b)]; _0x86d480 += 0x3) {
                    let _0x530501, _0x396229 = _0x12b826[_0x288a0f(0xcae)][_0x86d480];
                    if (_0x4ad358[_0x396229])
                         _0x530501 = _0x4ad358[_0x396229];
                    else {
                         let _0x1f880d = _0x12b826[_0x288a0f(0x732)][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0x396229]
                              , _0x2f7855 = _0x12b826['attributes'][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0x396229 + 0x1]
                              , _0x293695 = _0x12b826[_0x288a0f(0x732)][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0x396229 + 0x2];
                         _0x530501 = new Adapter['Cartesian3'](_0x1f880d, _0x2f7855, _0x293695);
                         let _0x540588 = Adapter['Cartographic'][_0x288a0f(0x2d0)](_0x530501)
                              , _0x289b2b = _0xafb7a6[_0x288a0f(0x872)][_0x288a0f(0x96d)](_0x540588);
                         if (!_0x289b2b)
                              continue;
                         _0x540588 = Adapter['Cartographic'][_0x288a0f(0x6e6)](_0x540588[_0x288a0f(0xb4c)], _0x540588[_0x288a0f(0x400)], _0x289b2b),
                              _0x530501 = Adapter[_0x288a0f(0x6ca)][_0x288a0f(0xbeb)](_0x540588),
                              _0x4ad358[_0x396229] = Adapter[_0x288a0f(0x25b)]['clone'](_0x530501);
                    }
                    let _0xbd82ad, _0x58aee3 = _0x12b826[_0x288a0f(0xcae)][_0x86d480 + 0x1];
                    if (_0x4ad358[_0x58aee3])
                         _0xbd82ad = _0x4ad358[_0x58aee3];
                    else {
                         let _0x178c84 = _0x12b826['attributes']['position'][_0x288a0f(0xcd3)][0x3 * _0x58aee3]
                              , _0x3048df = _0x12b826[_0x288a0f(0x732)][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0x58aee3 + 0x1]
                              , _0x45bde4 = _0x12b826[_0x288a0f(0x732)][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0x58aee3 + 0x2];
                         _0xbd82ad = new Adapter['Cartesian3'](_0x178c84, _0x3048df, _0x45bde4);
                         let _0x575b22 = Adapter[_0x288a0f(0x6ca)][_0x288a0f(0x2d0)](_0xbd82ad)
                              , _0x32d528 = _0xafb7a6[_0x288a0f(0x872)]['getHeight'](_0x575b22);
                         if (!_0x32d528)
                              continue;
                         _0x575b22 = Adapter[_0x288a0f(0x6ca)][_0x288a0f(0x6e6)](_0x575b22['longitude'], _0x575b22[_0x288a0f(0x400)], _0x32d528),
                              _0xbd82ad = Adapter[_0x288a0f(0x6ca)][_0x288a0f(0xbeb)](_0x575b22),
                              _0x4ad358[_0x58aee3] = Adapter['Cartesian3'][_0x288a0f(0x432)](_0xbd82ad);
                    }
                    let _0x73c8f1, _0xf0e99f = _0x12b826[_0x288a0f(0xcae)][_0x86d480 + 0x2];
                    if (_0x4ad358[_0xf0e99f])
                         _0x73c8f1 = _0x4ad358[_0xf0e99f];
                    else {
                         let _0x47f884 = _0x12b826['attributes'][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0xf0e99f]
                              , _0x459e45 = _0x12b826[_0x288a0f(0x732)][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0xf0e99f + 0x1]
                              , _0xcb27c8 = _0x12b826[_0x288a0f(0x732)][_0x288a0f(0x5a4)][_0x288a0f(0xcd3)][0x3 * _0xf0e99f + 0x2];
                         _0x73c8f1 = new Adapter[(_0x288a0f(0x25b))](_0x47f884, _0x459e45, _0xcb27c8);
                         let _0x370a86 = Adapter['Cartographic']['fromCartesian'](_0x73c8f1)
                              , _0x11b2a6 = _0xafb7a6[_0x288a0f(0x872)][_0x288a0f(0x96d)](_0x370a86);
                         if (!_0x11b2a6)
                              continue;
                         _0x370a86 = Adapter[_0x288a0f(0x6ca)]['fromRadians'](_0x370a86[_0x288a0f(0xb4c)], _0x370a86[_0x288a0f(0x400)], _0x11b2a6),
                              _0x73c8f1 = Adapter['Cartographic'][_0x288a0f(0xbeb)](_0x370a86),
                              _0x4ad358[_0xf0e99f] = Adapter[_0x288a0f(0x25b)]['clone'](_0x73c8f1);
                    }
                    _0x145045 = Adapter[_0x288a0f(0x25b)]['subtract'](_0xbd82ad, _0x530501, _0x145045),
                         _0xa4c25d = Adapter['Cartesian3'][_0x288a0f(0x60c)](_0x73c8f1, _0x530501, _0xa4c25d),
                         _0x28a965 = Adapter[_0x288a0f(0x25b)][_0x288a0f(0x765)](_0x145045, _0xa4c25d, _0x28a965),
                         _0x5bf755 += 0.5 * Adapter[_0x288a0f(0x25b)][_0x288a0f(0x869)](_0x28a965);
               }
               return _0x5bf755;
          }
          function _0x2a77bd(_0x3d5cfa, _0x19f9e3) {
               const _0x453309 = _0xc3a123;
               let _0x312932 = 0x0
                    , _0x1ab5f2 = []
                    , _0x38a324 = _0x19f9e3[_0x453309(0x72b)] - 0x1;
               for (let _0x329410 = 0x0; _0x329410 < _0x38a324; _0x329410++) {
                    let _0x262e31 = _0x19f9e3[_0x329410]
                         , _0x3bbe84 = _0x19f9e3[_0x329410 + 0x1]
                         , _0x7f8428 = Adapter[_0x453309(0x25b)]['angleBetween'](_0x262e31, _0x3bbe84) / 0x40
                         , _0x45a9c9 = Adapter[_0x453309(0x417)][_0x453309(0x9d0)](_0x7f8428, 0x615299)
                         , _0x46ba08 = Adapter[_0x453309(0xa20)][_0x453309(0x6cc)](_0x262e31, _0x3bbe84, _0x45a9c9, _0x1ab5f2)
                         , _0x43d130 = Adapter['Cartesian3'][_0x453309(0x4a3)](_0x46ba08)
                         , _0x1cbc91 = _0x43d130[_0x453309(0x72b)] - 0x1;
                    for (let _0x33486d = 0x0; _0x33486d < _0x1cbc91; _0x33486d++) {
                         let _0x236b08 = _0x43d130[_0x33486d]
                              , _0x3da934 = Adapter[_0x453309(0x6ca)][_0x453309(0x2d0)](_0x236b08)
                              , _0x34e123 = _0x3d5cfa[_0x453309(0x872)][_0x453309(0x96d)](_0x3da934);
                         _0x3da934 = Adapter[_0x453309(0x6ca)][_0x453309(0x6e6)](_0x3da934['longitude'], _0x3da934[_0x453309(0x400)], _0x34e123);
                         let _0x5633c7 = Adapter[_0x453309(0x6ca)][_0x453309(0xbeb)](_0x3da934)
                              , _0x4df319 = _0x43d130[_0x33486d + 0x1];
                         _0x3da934 = Adapter[_0x453309(0x6ca)]['fromCartesian'](_0x4df319),
                              _0x34e123 = _0x3d5cfa['globe']['getHeight'](_0x3da934),
                              _0x3da934 = Adapter[_0x453309(0x6ca)][_0x453309(0x6e6)](_0x3da934['longitude'], _0x3da934['latitude'], _0x34e123);
                         let _0x53c6b4 = Adapter[_0x453309(0x6ca)][_0x453309(0xbeb)](_0x3da934);
                         _0x312932 += Adapter['Cartesian3'][_0x453309(0x3dd)](_0x5633c7, _0x53c6b4);
                    }
               }
               return _0x312932;
          }
          _0xdb601d[_0xc3a123(0x460)] = function (_0x3056ae) {
               const _0x4cdeb7 = _0xc3a123;
               let _0x2572bd, _0x3576a2, _0x28b6fd, _0x2c6931 = Adapter[_0x4cdeb7(0x9a0)][_0x4cdeb7(0xb6a)](_0x3056ae), _0x444260 = _0x2c6931[_0x4cdeb7(0x72b)] / 0x3, _0x2beeeb = 0x0;
               for (let _0x30f7eb = 0x0; _0x30f7eb < _0x444260; _0x30f7eb++)
                    _0x2572bd = _0x3056ae[_0x2c6931[0x3 * _0x30f7eb]],
                         _0x3576a2 = _0x3056ae[_0x2c6931[0x3 * _0x30f7eb + 0x1]],
                         _0x28b6fd = _0x3056ae[_0x2c6931[0x3 * _0x30f7eb + 0x2]],
                         _0x145045 = Adapter[_0x4cdeb7(0x25b)][_0x4cdeb7(0x60c)](_0x3576a2, _0x2572bd, _0x145045),
                         _0xa4c25d = Adapter[_0x4cdeb7(0x25b)][_0x4cdeb7(0x60c)](_0x28b6fd, _0x2572bd, _0xa4c25d),
                         _0x28a965 = Adapter['Cartesian3']['cross'](_0x145045, _0xa4c25d, _0x28a965),
                         _0x2beeeb += 0.5 * Adapter[_0x4cdeb7(0x25b)]['magnitude'](_0x28a965);
               return _0x2beeeb;
          }
               ;
          var _0x11867c = _0xc3a123(0x507);
          const _0x2d9de7 = Cesium[_0xc3a123(0x2f2)]
               , _0x33d035 = Cesium[_0xc3a123(0x5cc)];
          function _0x2d2f13(_0x5c8283) {
               const _0x3b5745 = _0xc3a123;
               return this[_0x3b5745(0x48f)] = _0x5c8283['postProcessStages']['add'](new _0x2d9de7({
                    'name': _0x3b5745(0x605),
                    'fragmentShader': _0x11867c,
                    'uniforms': {
                         'speed': 0x14,
                         'angle': -0.4
                    },
                    'sampleMode': _0x33d035['LINEAR']
               })),
                    this[_0x3b5745(0x48f)][_0x3b5745(0x55a)] = !0x1,
                    this['_rain'];
          }
          var _0x2731e1 = _0xc3a123(0x9f1);
          const _0xfa9d79 = Cesium[_0xc3a123(0x2f2)]
               , _0x4af848 = Cesium[_0xc3a123(0x5cc)];
          function _0x1a9979(_0x570a1c) {
               const _0x4954a4 = _0xc3a123;
               return this[_0x4954a4(0xce8)] = _0x570a1c[_0x4954a4(0xc84)]['add'](new _0xfa9d79({
                    'name': 'snowEffect',
                    'fragmentShader': _0x2731e1,
                    'uniforms': {
                         'density': 0x5,
                         'angle': 0.1,
                         'speed': 0x2
                    },
                    'sampleMode': _0x4af848[_0x4954a4(0x9a3)]
               })),
                    this['_snow'][_0x4954a4(0x55a)] = !0x1,
                    this[_0x4954a4(0xce8)];
          }
          window['Adapter'] = Cesium;
          const _0x20af4a = Adapter[_0xc3a123(0x417)]
               , _0x38b5f9 = Adapter[_0xc3a123(0x50e)]
               , _0x263cd7 = Adapter[_0xc3a123(0xb4a)]
               , _0x31fd0b = Adapter['TileProviderError']
               , _0x57814b = Adapter[_0xc3a123(0xa2f)]
               , _0x510d9f = Adapter[_0xc3a123(0xc43)]
               , _0x1efe05 = Adapter[_0xc3a123(0x682)]
               , _0x17f939 = Adapter[_0xc3a123(0x6e9)]
               , _0x19131b = Adapter[_0xc3a123(0xd8c)]
               , _0x460c66 = Adapter[_0xc3a123(0x25b)]
               , _0x34ba94 = Adapter[_0xc3a123(0x3fb)];
          function _0x3faa69(_0x972cd9) {
               const _0x3616ed = _0xc3a123;
               if (_0x972cd9 = Adapter[_0x3616ed(0x4d9)](_0x972cd9, Adapter[_0x3616ed(0x4d9)]['EMPTY_OBJECT']),
                    !Adapter['defined'](_0x972cd9[_0x3616ed(0x1d6)]))
                    throw new Adapter['DeveloperError']('options.urls\x20is\x20required.');
               this[_0x3616ed(0xdbd)] = _0x972cd9[_0x3616ed(0x1d6)];
               for (var _0x2c8c7d = 0x0; _0x2c8c7d < this['_urls']['length']; _0x2c8c7d++)
                    this[_0x3616ed(0xdbd)][_0x2c8c7d]['length'] > 0x0 && '/' !== this[_0x3616ed(0xdbd)][_0x2c8c7d][this['_urls'][_0x2c8c7d][_0x3616ed(0x72b)] - 0x1] && (this[_0x3616ed(0xdbd)][_0x2c8c7d] += '/');
               var _0x4289c9 = _0x972cd9[_0x3616ed(0x1d6)][0x0][_0x3616ed(0xcef)](_0x3616ed(0x6d1));
               this[_0x3616ed(0x99e)] = Adapter['defaultValue'](_0x972cd9[_0x3616ed(0x795)], !0x0),
                    this[_0x3616ed(0x8fc)] = new Adapter['Event'](),
                    this[_0x3616ed(0x5fd)] = !0x1,
                    this[_0x3616ed(0x59f)] = _0x13c1fa(),
                    this[_0x3616ed(0xcfd)] = _0x972cd9[_0x3616ed(0x3a1)],
                    this['_skirtScale'] = _0x972cd9[_0x3616ed(0x7b6)],
                    this[_0x3616ed(0x914)] = !0x1,
                    this[_0x3616ed(0x21e)] = _0x972cd9[_0x3616ed(0xca7)],
                    this['_terrainDataStructure'] = {
                         'heightScale': 0x1,
                         'heightOffset': 0x0,
                         'elementsPerHeight': 0x1,
                         'stride': 0x1
                    },
                    this[_0x3616ed(0x916)] = void 0x0,
                    this[_0x3616ed(0x242)] = [],
                    this['_levels'] = [],
                    this[_0x3616ed(0xd71)] = 'NONE',
                    this[_0x3616ed(0x57c)] = void 0x0,
                    this[_0x3616ed(0xc19)] = _0x972cd9['packingRequest'],
                    this['_combiInfo'] = {};
               var _0x231e98, _0x20be6c = this, _0x457e82 = Adapter[_0x3616ed(0x4d9)](_0x972cd9[_0x3616ed(0x34d)], Adapter[_0x3616ed(0x4b9)][_0x3616ed(0x74e)]);
               this[_0x3616ed(0xd19)] = !0x1,
                    this[_0x3616ed(0x996)] = Adapter[_0x3616ed(0x4d9)](_0x972cd9[_0x3616ed(0xca9)], !0x1);
               var _0x44ab35 = 0x0;
               function _0x5e7f1a(_0x256139) {
                    const _0x1e52d4 = _0x3616ed;
                    if (0x1 === parseFloat(_0x256139[_0x1e52d4(0xbb0)](_0x1e52d4(0x97a))[0x0][_0x1e52d4(0x615)])) {
                         var _0x11c8a5 = _0x256139[_0x1e52d4(0xbb0)](_0x1e52d4(0x4f2), void 0x0);
                         _0x20be6c[_0x1e52d4(0x3ed)] = _0x11c8a5[0x0]['getAttribute'](_0x1e52d4(0x96b)),
                              Adapter[_0x1e52d4(0x336)](_0x20be6c['_blockScale']) && _0x20be6c[_0x1e52d4(0x3ed)] > 0x0 && (_0x20be6c[_0x1e52d4(0x885)] = !0x0);
                    }
                    _0x20be6c[_0x1e52d4(0xd71)] = _0x256139[_0x1e52d4(0xbb0)](_0x1e52d4(0x228))[0x0][_0x1e52d4(0x615)],
                         _0x20be6c['_heightmapWidth'] = parseInt(_0x256139[_0x1e52d4(0xbb0)](_0x1e52d4(0x520))[0x0][_0x1e52d4(0x615)]),
                         _0x20be6c['_heightmapHeight'] = parseInt(_0x256139[_0x1e52d4(0xbb0)](_0x1e52d4(0xc3f))[0x0][_0x1e52d4(0x615)]),
                         _0x20be6c[_0x1e52d4(0x916)] = new Adapter[(_0x1e52d4(0x945))]({
                              'ellipsoid': _0x457e82
                         }),
                         _0x20be6c['_tilingScheme'][_0x1e52d4(0x7d2)] = !0x0,
                         _0x20be6c[_0x1e52d4(0xcf9)] = _0x263cd7['getEstimatedLevelZeroGeometricErrorForAHeightmap'](_0x457e82, 0x2 * Math[_0x1e52d4(0x455)](_0x20be6c[_0x1e52d4(0x9b1)], _0x20be6c[_0x1e52d4(0xd60)]), _0x20be6c[_0x1e52d4(0x916)]['getNumberOfXTilesAtLevel'](0x0));
                    var _0x3732d0 = _0x256139[_0x1e52d4(0xbb0)]('sml:Bounds')[0x0]
                         , _0x3796b7 = _0x20af4a['toRadians'](parseFloat(_0x3732d0[_0x1e52d4(0xbb0)](_0x1e52d4(0x69e))[0x0][_0x1e52d4(0x615)]))
                         , _0x1e2c5e = _0x20af4a[_0x1e52d4(0xb7f)](parseFloat(_0x3732d0['getElementsByTagName'](_0x1e52d4(0xc31))[0x0][_0x1e52d4(0x615)]))
                         , _0x57b51e = _0x20af4a['toRadians'](parseFloat(_0x3732d0[_0x1e52d4(0xbb0)](_0x1e52d4(0x9d6))[0x0]['textContent']))
                         , _0x6efa59 = _0x20af4a[_0x1e52d4(0xb7f)](parseFloat(_0x3732d0['getElementsByTagName'](_0x1e52d4(0x1b3))[0x0][_0x1e52d4(0x615)]));
                    _0x20be6c[_0x1e52d4(0x242)][_0x1e52d4(0x63e)](new _0x38b5f9(_0x3796b7, _0x1e2c5e, _0x57b51e, _0x6efa59));
                    for (var _0x9e7da4 = _0x256139[_0x1e52d4(0xbb0)](_0x1e52d4(0x9f0))[0x0][_0x1e52d4(0xbb0)](_0x1e52d4(0xc87)), _0x592cf2 = [], _0x500bc6 = 0x0; _0x500bc6 < _0x9e7da4[_0x1e52d4(0x72b)]; ++_0x500bc6) {
                         var _0x2768ee = _0x9e7da4[_0x500bc6];
                         _0x592cf2[_0x1e52d4(0x63e)](parseInt(_0x2768ee[_0x1e52d4(0x615)]));
                    }
                    if (_0x20be6c[_0x1e52d4(0x5f2)][_0x1e52d4(0x63e)](_0x592cf2),
                         _0x20be6c[_0x1e52d4(0x5fd)] = !0x0,
                         _0x20be6c[_0x1e52d4(0x59f)][_0x1e52d4(0x559)](!0x0),
                         _0x44ab35 < _0x20be6c[_0x1e52d4(0xdbd)][_0x1e52d4(0x72b)]) {
                         var _0x109e69 = _0x20be6c[_0x1e52d4(0xdbd)][_0x44ab35++];
                         _0x109e69[_0x1e52d4(0x617)](0x0, _0x109e69[_0x1e52d4(0x72b)] - 0x1);
                         var _0x3185e3 = _0x109e69 + _0x1e52d4(0x799);
                         _0x17f939[_0x1e52d4(0x891)](_0x3185e3)[_0x1e52d4(0x7db)](_0x5e7f1a, _0x335c91);
                    }
               }
               function _0x12aed1(_0x34b94a) {
                    const _0x4f0f4d = _0x3616ed;
                    var _0x5254eb = new _0x34ba94()[_0x4f0f4d(0xb51)](_0x34b94a)[_0x4f0f4d(0x7d5)]
                         , _0x2b557d = _0x34ba94[_0x4f0f4d(0xd4c)](_0x5254eb, _0x4f0f4d(0x910), void 0x0)
                         , _0x3b9f35 = _0x34ba94[_0x4f0f4d(0xd4c)](_0x2b557d, _0x4f0f4d(0xc9d), void 0x0);
                    _0x20be6c['_tempLayerName'] = _0x34ba94[_0x4f0f4d(0x7b3)](_0x3b9f35, _0x4f0f4d(0xab0), void 0x0);
                    var _0x5d1a3f = _0x34ba94[_0x4f0f4d(0xd4c)](_0x2b557d, _0x4f0f4d(0x681), void 0x0);
                    _0x20be6c[_0x4f0f4d(0x600)] = _0x34ba94[_0x4f0f4d(0x7b3)](_0x5d1a3f, _0x4f0f4d(0xbfd), void 0x0);
                    var _0x37386b = _0x34ba94[_0x4f0f4d(0xd4c)](_0x3b9f35, _0x4f0f4d(0x57f), void 0x0)
                         , _0x486c4f = _0x34ba94[_0x4f0f4d(0x7b3)](_0x37386b, _0x4f0f4d(0xc58), void 0x0)
                         , _0x25a5d3 = _0x34ba94[_0x4f0f4d(0x7b3)](_0x37386b, _0x4f0f4d(0x1ce), void 0x0)
                         , _0x1f31ed = _0x486c4f['split']('\x20')
                         , _0x29d9ac = _0x25a5d3[_0x4f0f4d(0x39b)]('\x20')
                         , _0x10db26 = parseFloat(_0x1f31ed[0x0])
                         , _0x4cd2c3 = parseFloat(_0x29d9ac[0x0])
                         , _0x23caef = parseFloat(_0x1f31ed[0x1])
                         , _0x48daed = parseFloat(_0x29d9ac[0x1]);
                    _0x10db26 && _0x4cd2c3 && _0x23caef && _0x48daed && _0x20be6c[_0x4f0f4d(0x242)][_0x4f0f4d(0x63e)](new _0x38b5f9(_0x10db26, _0x23caef, _0x4cd2c3, _0x48daed));
                    var _0x5916c9 = _0x34ba94[_0x4f0f4d(0xd4c)](_0x2b557d, _0x4f0f4d(0x681), void 0x0)
                         , _0x540b28 = (_0x5d1a3f = _0x34ba94[_0x4f0f4d(0x6c3)](_0x5916c9, _0x4f0f4d(0x34b), void 0x0),
                              _0x34ba94[_0x4f0f4d(0x2cd)](_0x5d1a3f[0x0], _0x4f0f4d(0xceb), void 0x0))
                         , _0x1b61df = _0x34ba94[_0x4f0f4d(0x2cd)](_0x5d1a3f[_0x5d1a3f['length'] - 0x1], 'ScaleDenominator', void 0x0)
                         , _0x544a58 = _0x34ba94[_0x4f0f4d(0x2cd)](_0x5d1a3f[0x0], 'Identifier', void 0x0);
                    _0x540b28 = 0x1 / _0x540b28,
                         _0x1b61df = 0x1 / _0x1b61df;
                    var _0x58098c = [1.690163571602655e-9, 3.3803271432053056e-9, 6.760654286410611e-9, 1.3521308572821242e-8, 2.7042617145642484e-8, 5.408523429128511e-8, 1.0817046858256998e-7, 2.1634093716513974e-7, 4.3268187433028044e-7, 8.653637486605571e-7, 0.0000017307274973211203, 0.0000034614549946422405, 0.0000069229099892844565, 0.000013845819978568952, 0.000027691639957137904, 0.0000553832799142758, 0.0001107665598285516, 0.0002215331196571032, 0.0004430662393142064, 0.0008861324786284128, 0.001772264957256826, 0.003544529914513652]
                         , _0x358168 = _0x58098c[_0x4f0f4d(0xcef)](_0x540b28)
                         , _0x3ea0f8 = _0x58098c[_0x4f0f4d(0xcef)](_0x1b61df);
                    for (let _0x2bdc69 = 0x0; _0x2bdc69 < _0x58098c['length']; _0x2bdc69++)
                         _0x540b28 > _0x58098c[_0x2bdc69] && _0x58098c[_0x2bdc69 + 0x1] && _0x540b28 < _0x58098c[_0x2bdc69 + 0x1] && (_0x358168 = _0x2bdc69 - 0x1),
                              _0x1b61df > _0x58098c[_0x2bdc69] && _0x58098c[_0x2bdc69 + 0x1] && _0x1b61df < _0x58098c[_0x2bdc69 + 0x1] && (_0x3ea0f8 = _0x2bdc69 - 0x1);
                    _0x358168 = Math['max'](_0x358168, 0x0),
                         _0x20be6c[_0x4f0f4d(0x5d4)] = Adapter[_0x4f0f4d(0x4d9)](_0x358168 - _0x544a58, 0x0);
                    for (var _0x129efc = [], _0x352ec4 = _0x358168; _0x352ec4 <= _0x3ea0f8; _0x352ec4++)
                         _0x129efc[_0x4f0f4d(0x63e)](_0x352ec4);
                    if (_0x20be6c[_0x4f0f4d(0x5f2)][_0x4f0f4d(0x63e)](_0x129efc),
                         _0x972cd9[_0x4f0f4d(0x240)] > 0x0 && (_0x20be6c[_0x4f0f4d(0x3ed)] = 0x1 * _0x972cd9[_0x4f0f4d(0x240)],
                              _0x20be6c[_0x4f0f4d(0x885)] = !0x0),
                         _0x20be6c[_0x4f0f4d(0xd71)] = _0x4f0f4d(0x8bf),
                         _0x20be6c['_heightmapWidth'] = _0x972cd9[_0x4f0f4d(0xaed)] || 0x20,
                         _0x20be6c[_0x4f0f4d(0xd60)] = _0x972cd9[_0x4f0f4d(0x39c)] || 0x20,
                         _0x20be6c[_0x4f0f4d(0x916)] = new Adapter[(_0x4f0f4d(0x945))]({
                              'ellipsoid': _0x457e82
                         }),
                         _0x20be6c[_0x4f0f4d(0x916)]['isSct'] = !0x0,
                         _0x20be6c[_0x4f0f4d(0xcf9)] = _0x263cd7[_0x4f0f4d(0x64c)](_0x457e82, 0x2 * Math[_0x4f0f4d(0x455)](_0x20be6c[_0x4f0f4d(0x9b1)], _0x20be6c[_0x4f0f4d(0xd60)]), _0x20be6c[_0x4f0f4d(0x916)][_0x4f0f4d(0x6a4)](0x0)),
                         _0x20be6c[_0x4f0f4d(0x5fd)] = !0x0,
                         _0x20be6c[_0x4f0f4d(0x59f)][_0x4f0f4d(0x559)](!0x0),
                         _0x44ab35 < _0x20be6c['_urls'][_0x4f0f4d(0x72b)]) {
                         var _0x22d404 = _0x20be6c[_0x4f0f4d(0xdbd)][_0x44ab35++];
                         if (-0x1 !== _0x22d404[_0x4f0f4d(0xcef)](_0x4f0f4d(0x6d1))) {
                              var _0x1efa1c = _0x22d404 + _0x4f0f4d(0x56b);
                              _0x17f939[_0x4f0f4d(0x3fe)](_0x1efa1c)[_0x4f0f4d(0x7db)](_0x12aed1, _0x335c91);
                         } else
                              _0x22d404[_0x4f0f4d(0x617)](0x0, _0x22d404[_0x4f0f4d(0x72b)] - 0x1),
                                   _0x1efa1c = _0x22d404 + _0x4f0f4d(0x799),
                                   _0x17f939[_0x4f0f4d(0x891)](_0x1efa1c)[_0x4f0f4d(0x7db)](_0x5e7f1a, _0x335c91);
                    }
               }
               function _0x335c91(_0x425674) {
                    const _0x7374e = _0x3616ed;
                    var _0xcadc34 = Adapter[_0x7374e(0x4d9)](_0x425674, _0x7374e(0x319) + _0x20be6c[_0x7374e(0x67b)] + '.');
                    _0x231e98 = _0x31fd0b[_0x7374e(0x2e2)](_0x231e98, _0x20be6c, _0x20be6c['_errorEvent'], _0xcadc34, void 0x0, void 0x0, void 0x0, _0x811a7b);
               }
               function _0x811a7b() {
                    const _0x2a16f0 = _0x3616ed;
                    if (!Adapter[_0x2a16f0(0x336)](_0x972cd9[_0x2a16f0(0xd38)]) || !Adapter[_0x2a16f0(0x336)](_0x972cd9[_0x2a16f0(0x8f9)]))
                         throw new Adapter[(_0x2a16f0(0x610))]('options.rectangles,options.levels\x20is\x20required.');
                    _0x20be6c[_0x2a16f0(0xd71)] = Adapter[_0x2a16f0(0x4d9)](_0x972cd9[_0x2a16f0(0x56f)], _0x2a16f0(0x8bf)),
                         _0x20be6c[_0x2a16f0(0x9b1)] = Adapter[_0x2a16f0(0x4d9)](_0x972cd9['heightmapWidth'], 0x20),
                         _0x20be6c['_heightmapHeight'] = Adapter[_0x2a16f0(0x4d9)](_0x972cd9[_0x2a16f0(0x24b)], 0x20),
                         _0x20be6c[_0x2a16f0(0x916)] = new Adapter[(_0x2a16f0(0x945))]({
                              'ellipsoid': _0x457e82
                         }),
                         _0x20be6c[_0x2a16f0(0x916)][_0x2a16f0(0x7d2)] = !0x0,
                         _0x20be6c[_0x2a16f0(0xcf9)] = _0x263cd7[_0x2a16f0(0x64c)](_0x457e82, Math['min'](_0x20be6c[_0x2a16f0(0x9b1)], _0x20be6c[_0x2a16f0(0xd60)]), _0x20be6c[_0x2a16f0(0x916)][_0x2a16f0(0x6a4)](0x0)),
                         _0x20be6c['_rectangles'] = _0x972cd9[_0x2a16f0(0xd38)],
                         _0x20be6c[_0x2a16f0(0x5f2)] = _0x972cd9['levels'],
                         _0x20be6c[_0x2a16f0(0x5fd)] = !0x0,
                         _0x20be6c[_0x2a16f0(0x59f)]['resolve'](!0x0);
               }
               this[_0x3616ed(0x99e)] ? function () {
                    const _0x7422c7 = _0x3616ed;
                    if (-0x1 !== _0x4289c9) {
                         var _0x54d1d9 = (_0x5ddaa9 = _0x20be6c[_0x7422c7(0xdbd)][_0x44ab35++]) + _0x7422c7(0x56b);
                         _0x17f939['fetchText'](_0x54d1d9)['then'](_0x12aed1, _0x335c91);
                    } else {
                         var _0x5ddaa9;
                         (_0x5ddaa9 = _0x20be6c[_0x7422c7(0xdbd)][_0x44ab35++])['substring'](0x0, _0x5ddaa9['length'] - 0x1),
                              _0x54d1d9 = _0x5ddaa9 + _0x7422c7(0x799),
                              _0x17f939['fetchXML'](_0x54d1d9)[_0x7422c7(0x7db)](_0x5e7f1a, _0x335c91);
                    }
               }() : _0x811a7b();
          }
          function _0x37eea8(_0x12a8b6, _0x21fcb4, _0x33fa7d) {
               for (var _0x1c3afc = '', _0x1cfbe6 = _0x33fa7d; _0x1cfbe6 >= 0x0; --_0x1cfbe6) {
                    var _0x53cf7b = 0x1 << _0x1cfbe6
                         , _0x5354b9 = 0x0;
                    _0x1efe05(_0x21fcb4, _0x53cf7b) ? _0x1efe05(_0x12a8b6, _0x53cf7b) && (_0x5354b9 |= 0x1) : (_0x5354b9 |= 0x2,
                         _0x1efe05(_0x12a8b6, _0x53cf7b) || (_0x5354b9 |= 0x1)),
                         _0x1c3afc += _0x5354b9;
               }
               return _0x1c3afc;
          }
          function _0x668b4(_0x109fcf, _0x15cfb9) {
               const _0x3ae26b = _0xc3a123;
               var _0x14de01 = new DataView(_0x109fcf)
                    , _0x476a26 = 0x0
                    , _0x4dc878 = _0x14de01[_0x3ae26b(0x494)](_0x476a26, !0x0);
               if (_0x15cfb9 > _0x4dc878 - 0x1)
                    throw new Adapter['DeveloperError']('pack\x20imagery\x20index\x20invalid');
               _0x476a26 += 0x4;
               var _0x10833e, _0x439768, _0x4f1c0c = [];
               for (_0x10833e = 0x0; _0x10833e < _0x4dc878; _0x10833e++)
                    _0x439768 = _0x14de01[_0x3ae26b(0x494)](_0x476a26, !0x0),
                         _0x4f1c0c['push'](_0x439768),
                         _0x476a26 += 0x4;
               for (_0x10833e = 0x0; _0x10833e < _0x4dc878; _0x10833e++) {
                    if (_0x439768 = _0x4f1c0c[_0x10833e],
                         _0x10833e === _0x15cfb9) {
                         if (0x0 === _0x439768)
                              return;
                         return new Uint8Array(_0x109fcf, _0x476a26, _0x439768);
                    }
                    _0x476a26 += _0x439768;
               }
          }
          function _0x21763a(_0x4a245a, _0x3229a4, _0x5c89e7, _0x3ad157) {
               const _0x417384 = _0xc3a123;
               var _0x3219d8 = Math[_0x417384(0x455)](_0x4a245a[_0x417384(0x3ed)], _0x3ad157)
                    , _0x149f7e = Math['pow'](0x2, _0x3219d8)
                    , _0x3e08b8 = _0x3229a4 % _0x149f7e;
               return {
                    'x': Math[_0x417384(0x763)](_0x3229a4 / _0x149f7e),
                    'y': Math['floor'](_0x5c89e7 / _0x149f7e),
                    'col': _0x3e08b8,
                    'row': _0x5c89e7 % _0x149f7e,
                    'level': _0x3ad157,
                    'blockSize': _0x149f7e
               };
          }
          function _0x237f57(_0x528814, _0x2a3fb7) {
               const _0xa2b15 = _0xc3a123;
               var _0x452ed7 = new DataView(_0x528814)
                    , _0x36c0c3 = 0x0;
               _0x452ed7[_0xa2b15(0x494)](_0x36c0c3, !0x0),
                    _0x36c0c3 += 0x4;
               var _0x28e127 = _0x452ed7[_0xa2b15(0x494)](_0x36c0c3, !0x0);
               _0x36c0c3 += 0x4;
               for (var _0xf39ea1 = _0x2a3fb7[_0xa2b15(0x306)], _0x3b90d8 = _0x2a3fb7[_0xa2b15(0x5e4)] * _0x2a3fb7[_0xa2b15(0x3b2)] + _0xf39ea1, _0x36c56b = 0x0, _0x3ff4a5 = 0x0, _0x48d817 = 0x0; _0x48d817 < _0x28e127; _0x48d817++) {
                    if (_0x48d817 < _0x3b90d8)
                         _0x36c56b += _0x452ed7[_0xa2b15(0x494)](_0x36c0c3, !0x0);
                    else {
                         if (_0x48d817 === _0x3b90d8) {
                              _0x3ff4a5 = _0x452ed7[_0xa2b15(0x494)](_0x36c0c3, !0x0),
                                   _0x36c0c3 += 0x4;
                              break;
                         }
                    }
                    _0x36c0c3 += 0x4;
               }
               if (_0x36c0c3 = 0x8 + 0x4 * _0x28e127,
                    0x0 !== _0x3ff4a5)
                    return _0x36c0c3 += _0x36c56b,
                         new Uint8Array(_0x528814)[_0xa2b15(0x21c)](_0x36c0c3, _0x36c0c3 + _0x3ff4a5)[_0xa2b15(0x25d)];
          }
          Object[_0xc3a123(0xcde)](_0x3faa69[_0xc3a123(0x2d4)], {
               'errorEvent': {
                    'get': function () {
                         const _0x428b36 = _0xc3a123;
                         return this[_0x428b36(0x8fc)];
                    }
               },
               'tilingScheme': {
                    'get': function () {
                         const _0x3abe01 = _0xc3a123;
                         if (!this['ready'])
                              throw new Adapter[(_0x3abe01(0x610))](_0x3abe01(0x5d2));
                         return this[_0x3abe01(0x916)];
                    }
               },
               'ready': {
                    'get': function () {
                         const _0x52535e = _0xc3a123;
                         return this[_0x52535e(0x5fd)];
                    }
               },
               'readyPromise': {
                    'get': function () {
                         const _0x82e95c = _0xc3a123;
                         return this[_0x82e95c(0x59f)][_0x82e95c(0xa16)];
                    }
               },
               'hasWaterMask': {
                    'get': function () {
                         return !0x1;
                    }
               },
               'hasVertexNormals': {
                    'get': function () {
                         return !0x1;
                    }
               },
               'isCreateSkirt': {
                    'get': function () {
                         const _0x503a88 = _0xc3a123;
                         return this[_0x503a88(0xcfd)];
                    },
                    'set': function (_0x444f68) {
                         const _0x227624 = _0xc3a123;
                         _0x444f68 !== this[_0x227624(0xcfd)] && (this['_isSkirtDirty'] = !0x0),
                              this[_0x227624(0xcfd)] = _0x444f68;
                    }
               },
               'skirtScale': {
                    'get': function () {
                         const _0x227271 = _0xc3a123;
                         return this[_0x227271(0x986)];
                    },
                    'set': function (_0x10d50a) {
                         const _0x247dd9 = _0xc3a123;
                         _0x10d50a !== this['_skirtScale'] && (this[_0x247dd9(0x914)] = !0x0),
                              this[_0x247dd9(0x986)] = _0x10d50a;
                    }
               },
               'hasNormalBuffer': {
                    'get': function () {
                         return this['_hasNormalBuffer'];
                    }
               },
               'requestVertexNormals': {
                    'get': function () {
                         const _0x15b23f = _0xc3a123;
                         return this[_0x15b23f(0x996)];
                    }
               }
          }),
               _0x3faa69[_0xc3a123(0x2d4)]['division'] = function (_0xcac622, _0xe753b, _0x22aa26, _0x2d7011, _0x34226a) {
                    const _0x1807eb = _0xc3a123;
                    for (var _0x4dae34 = [], _0x41304d = 0x0; _0x41304d < _0x34226a; _0x41304d++)
                         for (var _0x1b74be = 0x0; _0x1b74be < _0x34226a; _0x1b74be++) {
                              var _0x20db30 = (_0x22aa26 + _0x2d7011 * (_0x34226a - 0x1 - _0x41304d) / (_0x34226a - 0x1)) * (_0x34226a - 0x1)
                                   , _0x5ebbcf = (_0xe753b + _0x2d7011 * _0x1b74be / (_0x34226a - 0x1)) * (_0x34226a - 0x1)
                                   , _0x109324 = Math['floor'](_0x20db30)
                                   , _0x50b1e7 = Math[_0x1807eb(0xc1f)](_0x20db30)
                                   , _0x1c7dd1 = Math[_0x1807eb(0x763)](_0x5ebbcf)
                                   , _0x5ac024 = Math[_0x1807eb(0xc1f)](_0x5ebbcf)
                                   , _0x24cf41 = _0xcac622[(_0x34226a - 0x1 - _0x109324) * _0x34226a + _0x1c7dd1]
                                   , _0x3e99e3 = _0xcac622[(_0x34226a - 0x1 - _0x109324) * _0x34226a + _0x5ac024]
                                   , _0x5f2f56 = _0xcac622[(_0x34226a - 0x1 - _0x50b1e7) * _0x34226a + _0x1c7dd1]
                                   , _0x4de2ba = _0xcac622[(_0x34226a - 0x1 - _0x50b1e7) * _0x34226a + _0x5ac024]
                                   , _0x2d0fd0 = _0x5f2f56 * (_0x20db30 - _0x109324) + _0x24cf41 * (_0x50b1e7 - _0x20db30)
                                   , _0x2b563d = _0x4de2ba * (_0x20db30 - _0x109324) + _0x3e99e3 * (_0x50b1e7 - _0x20db30);
                              _0x109324 === _0x50b1e7 && (_0x2d0fd0 = _0x5f2f56,
                                   _0x2b563d = _0x4de2ba);
                              var _0x406f81 = _0x2b563d * (_0x5ebbcf - _0x1c7dd1) + _0x2d0fd0 * (_0x5ac024 - _0x5ebbcf);
                              _0x1c7dd1 === _0x5ac024 && (_0x406f81 = _0x2b563d),
                                   _0x4dae34[_0x41304d * _0x34226a + _0x1b74be] = _0x406f81;
                         }
                    return _0x4dae34;
               }
               ;
          var _0x537546 = new _0x38b5f9();
          function _0x5f2322(_0x2dc45e, _0x3a2c69, _0xed1844, _0x3722f6, _0x11bb44) {
               const _0x3fa476 = _0xc3a123;
               if (null != _0x2dc45e) {
                    for (var _0x121fa3 = new Uint8Array(_0x3a2c69 * _0xed1844 * 0x3), _0x390b32 = 0x615299, _0x39f408 = _0x3722f6[_0x3fa476(0x65e)], _0x201fc3 = _0x3722f6[_0x3fa476(0x48e)], _0xba4d4a = _0x2dc45e, _0x56fc39 = 0x0; _0x56fc39 < _0x3a2c69; _0x56fc39++)
                         for (var _0xf9e9a5 = 0x0; _0xf9e9a5 < _0xed1844; _0xf9e9a5++) {
                              var _0x252ce6 = _0xf9e9a5 * _0x3a2c69 + _0x56fc39;
                              _0xba4d4a[_0xf9e9a5 * _0x3a2c69 + _0x56fc39];
                              var _0x3da3bf = _0x56fc39
                                   , _0x40f269 = _0xf9e9a5;
                              _0x11bb44 > 0xd && (_0x56fc39 = (_0x56fc39 = 0x0 == _0x56fc39 ? _0x56fc39 + 0x1 : _0x56fc39) == _0x3a2c69 - 0x1 ? _0x3a2c69 - 0x2 : _0x56fc39,
                                   _0xf9e9a5 = (_0xf9e9a5 = 0x0 == _0xf9e9a5 ? _0xf9e9a5 + 0x1 : _0xf9e9a5) == _0xed1844 - 0x1 ? _0xed1844 - 0x2 : _0xf9e9a5);
                              var _0x342f22 = Math[_0x3fa476(0x590)](_0x56fc39 - 0x1, 0x0)
                                   , _0x15fd74 = _0xf9e9a5
                                   , _0x38c72e = _0xba4d4a[_0x15fd74 * _0x3a2c69 + _0x342f22]
                                   , _0x2b2a51 = _0xba4d4a[(_0x15fd74 = _0xf9e9a5) * _0x3a2c69 + (_0x342f22 = Math[_0x3fa476(0x455)](_0x56fc39 + 0x1, _0x3a2c69 - 0x1))];
                              _0x342f22 = _0x56fc39;
                              var _0x441a29 = _0xba4d4a[(_0x15fd74 = Math[_0x3fa476(0x455)](_0xf9e9a5 + 0x1, _0xed1844 - 0x1)) * _0x3a2c69 + _0x342f22];
                              _0x342f22 = _0x56fc39;
                              var _0x5e527b = _0xba4d4a[(_0x15fd74 = Math[_0x3fa476(0x590)](_0xf9e9a5 - 0x1, 0x0)) * _0x3a2c69 + _0x342f22];
                              _0x56fc39 = _0x3da3bf,
                                   _0xf9e9a5 = _0x40f269;
                              var _0x45197f = _0x3722f6[_0x3fa476(0x4dc)] + _0x201fc3 * (0x200 - 0x2 * _0xf9e9a5 - 0x1) / 0x200
                                   , _0x14c86b = _0x390b32 * Math[_0x3fa476(0x2c7)](_0x45197f)
                                   , _0x32cb61 = new _0x460c66((_0x38c72e - _0x2b2a51) / (_0x14c86b * _0x39f408 / _0x3a2c69), (_0x5e527b - _0x441a29) / (_0x390b32 * _0x201fc3 / _0xed1844), 0x2);
                              _0x460c66['normalize'](_0x32cb61, _0x32cb61),
                                   _0x121fa3[0x3 * _0x252ce6 + 0x0] = 0xff * (0.5 * _0x32cb61['x'] + 0.5),
                                   _0x121fa3[0x3 * _0x252ce6 + 0x1] = 0xff * (0.5 * _0x32cb61['y'] + 0.5),
                                   _0x121fa3[0x3 * _0x252ce6 + 0x2] = 0xff * (0.5 * _0x32cb61['z'] + 0.5);
                         }
                    return _0x121fa3;
               }
          }
          _0x3faa69['prototype']['requestTileGeometry'] = function (_0x4501dd, _0x55f076, _0x1afdd4, _0x294084, _0x3cec95) {
               const _0x176f7c = _0xc3a123;
               if (!this[_0x176f7c(0x3b8)])
                    throw new Adapter[(_0x176f7c(0x610))](_0x176f7c(0x5d2));
               if (0x0 === _0x1afdd4) {
                    var _0x53bd0b = new Array(this['_heightmapWidth'] * this[_0x176f7c(0xd60)]);
                    return _0x53bd0b['fill'](0x0),
                         this['_hasNormalBuffer'] = !0x1,
                         new Adapter[(_0x176f7c(0x557))]({
                              'buffer': _0x53bd0b,
                              'width': this['_heightmapWidth'],
                              'height': this[_0x176f7c(0xd60)],
                              'skirtMode': this['_isCreateSkirt'],
                              'skirtScale': this['_skirtScale'],
                              'childTileMask': _0x599efa(this, _0x4501dd, _0x55f076, _0x1afdd4),
                              'structure': this['_terrainDataStructure'],
                              'valid': !0x1
                         });
               }
               var _0x103ffe = []
                    , _0x38b683 = this[_0x176f7c(0x916)][_0x176f7c(0xa77)](_0x4501dd, _0x55f076, _0x1afdd4)
                    , _0x5bb15b = this
                    , _0x36fd85 = !0x1
                    , _0x412bee = this[_0x176f7c(0x242)][_0x176f7c(0x72b)] - 0x1
                    , _0x48b9ab = this[_0x176f7c(0x5f2)][_0x412bee][this[_0x176f7c(0x5f2)][_0x412bee][_0x176f7c(0x72b)] - 0x1];
               _0x412bee = 0x0;
               var _0x6ba8a6 = this[_0x176f7c(0x5f2)][_0x412bee][this[_0x176f7c(0x5f2)][_0x412bee][_0x176f7c(0x72b)] - 0x1];
               if (Adapter[_0x176f7c(0x336)](_0x3cec95) || !(_0x1afdd4 > _0x6ba8a6)) {
                    var _0x134911 = this
                         , _0x19ec34 = !0x1;
                    (Adapter[_0x176f7c(0x336)](_0x134911['_packingRequest']) && _0x134911['_packingRequest'] === _0x57814b[_0x176f7c(0xcc5)] || _0x134911['_isBlock']) && (_0x19ec34 = !0x0);
                    for (var _0x1db67d = 0x0; _0x1db67d < this[_0x176f7c(0x242)][_0x176f7c(0x72b)]; _0x1db67d++) {
                         var _0x2a5639 = _0x38b5f9['intersection'](this['_rectangles'][_0x1db67d], _0x38b683, _0x537546);
                         if (Adapter[_0x176f7c(0x336)](_0x3cec95) && !_0x19ec34) {
                              var _0x5bae02 = _0x3cec95[this['_urls'][_0x1db67d]];
                              if (Adapter[_0x176f7c(0x336)](_0x5bae02) && (0x1 === _0x5bae02 && (_0x36fd85 = !0x0),
                                   0x0 === _0x5bae02 || 0x2 === _0x5bae02))
                                   continue;
                         }
                         if (0x0 === _0x103ffe[_0x176f7c(0x72b)] && _0x1db67d === this[_0x176f7c(0x242)][_0x176f7c(0x72b)] - 0x1 && _0x1afdd4 > _0x48b9ab)
                              break;
                         if (Adapter['defined'](_0x2a5639)) {
                              var _0x2a0f5c = this[_0x176f7c(0x5f2)][_0x1db67d][0x0]
                                   , _0x1612fb = this['_levels'][_0x1db67d][this['_levels'][_0x1db67d]['length'] - 0x1]
                                   , _0x5c6454 = !0x1;
                              if (_0x1afdd4 >= _0x2a0f5c && _0x1afdd4 <= _0x6ba8a6 && (_0x5c6454 = !0x0),
                                   _0x5c6454) {
                                   var _0x471dbd = 0x0
                                        , _0x493173 = 0x0
                                        , _0x1dd92a = 0x1
                                        , _0x29a1ed = _0x4501dd
                                        , _0x330a74 = _0x55f076
                                        , _0xd7e916 = _0x1afdd4;
                                   _0xd7e916 > _0x1612fb && (_0x1dd92a = 0x1 / Math[_0x176f7c(0xd18)](0x2, _0xd7e916 - _0x1612fb));
                                   for (var _0x178b06 = _0x1dd92a; _0xd7e916 > _0x1612fb;)
                                        _0x29a1ed % 0x2 == 0x1 && (_0x471dbd += _0x178b06),
                                             _0x330a74 % 0x2 == 0x0 && (_0x493173 += _0x178b06),
                                             _0x178b06 *= 0x2,
                                             _0xd7e916--,
                                             _0x29a1ed = Math[_0x176f7c(0x763)](0.5 * _0x29a1ed),
                                             _0x330a74 = Math['floor'](0.5 * _0x330a74);
                                   var _0x38b96b = {
                                        'srcX': _0x471dbd,
                                        'srcY': _0x493173,
                                        'width': _0x1dd92a,
                                        'dataName': _0x5bb15b[_0x176f7c(0xdbd)][_0x1db67d]
                                   }
                                        , _0x191f55 = _0x1afdd4 + '_' + _0x4501dd + '_' + _0x55f076;
                                   Adapter[_0x176f7c(0x336)](_0x5bb15b[_0x176f7c(0x1d0)][_0x191f55]) ? _0x5bb15b[_0x176f7c(0x1d0)][_0x191f55]['push'](_0x38b96b) : _0x5bb15b['_combiInfo'][_0x191f55] = [_0x38b96b],
                                        function (_0x2d015a) {
                                             const _0x334eef = _0x176f7c;
                                             var _0x4bb368, _0x86da9 = _0x5bb15b[_0x334eef(0xdbd)][_0x2d015a];
                                             if (-0x1 !== _0x86da9['indexOf'](_0x334eef(0x6d1))) {
                                                  var _0x21a04d = _0xd7e916 - _0x5bb15b[_0x334eef(0x5d4)];
                                                  _0x4bb368 = _0x86da9[_0x334eef(0x617)](0x0, _0x86da9[_0x334eef(0x61c)]('/')) + _0x334eef(0x513) + _0x21a04d + _0x334eef(0x789) + _0x5bb15b['_tempLayerName'] + '&tilerow=' + _0x330a74 + _0x334eef(0xa2b) + _0x29a1ed + _0x334eef(0x1d4) + _0x5bb15b['_wmtstileMatrixSet'] + _0x334eef(0xb5a);
                                             } else
                                                  _0x86da9[_0x334eef(0x617)](0x0, _0x86da9['length'] - 0x1),
                                                       _0x4bb368 = _0x5bb15b[_0x334eef(0xdbd)][_0x2d015a] + _0x334eef(0x803) + _0x330a74 + '/' + _0x29a1ed + '.bil?level=' + _0xd7e916;
                                             var _0x3454a7 = _0x5bb15b[_0x334eef(0x21e)];
                                             Adapter[_0x334eef(0x336)](_0x3454a7) && (_0x4bb368 = _0x3454a7[_0x334eef(0x4c0)](_0x4bb368));
                                             var _0x560f42 = new _0x19131b({
                                                  'throttle': !0x0,
                                                  'throttleByServer': !0x1,
                                                  'type': _0x510d9f[_0x334eef(0x745)]
                                             })
                                                  , _0x4b2d40 = void 0x0;
                                             if (Adapter[_0x334eef(0x336)](_0x134911[_0x334eef(0xc19)]) && _0x134911['_packingRequest'] === _0x57814b[_0x334eef(0xcc5)] && _0x134911[_0x334eef(0x885)]) {
                                                  _0x560f42[_0x334eef(0xc8e)] = _0x510d9f[_0x334eef(0xbd9)];
                                                  var _0x19e5e5 = _0x21763a(_0x134911, _0x29a1ed, _0x330a74, _0xd7e916);
                                                  _0x560f42['quadKey'] = _0x37eea8(_0x19e5e5['x'], _0x19e5e5['y'], _0x19e5e5[_0x334eef(0xd01)]),
                                                       _0x560f42[_0x334eef(0xb80)] = _0x19e5e5,
                                                       _0x560f42[_0x334eef(0x6fa)] = _0x4bb368[_0x334eef(0x617)](_0x4bb368[_0x334eef(0xcef)](_0x334eef(0xc00)) + 0x6, _0x4bb368[_0x334eef(0xcef)](_0x334eef(0xb8b)));
                                                  var _0x1c8c28 = _0x134911['blockCache'][_0x560f42[_0x334eef(0xc29)] + '_' + _0x560f42[_0x334eef(0x6fa)]];
                                                  Adapter[_0x334eef(0x336)](_0x1c8c28) && (_0x134911['blockCacheQueue'][_0x334eef(0x625)](_0x1c8c28),
                                                       _0x4b2d40 = {
                                                            'buffer': _0x1c8c28['data']
                                                       });
                                             } else {
                                                  if (Adapter[_0x334eef(0x336)](_0x134911[_0x334eef(0xc19)]) && _0x134911['_packingRequest'] === _0x57814b[_0x334eef(0xcc5)])
                                                       _0x560f42[_0x334eef(0xc8e)] = _0x510d9f[_0x334eef(0x39a)],
                                                            _0x560f42[_0x334eef(0xc29)] = _0x37eea8(_0x29a1ed, _0x330a74, _0xd7e916),
                                                            _0x560f42[_0x334eef(0x6fa)] = _0x4bb368['substring'](_0x4bb368[_0x334eef(0xcef)](_0x334eef(0xc00)) + 0x6, _0x4bb368[_0x334eef(0xcef)](_0x334eef(0xb8b)));
                                                  else
                                                       _0x134911[_0x334eef(0x885)] && (_0x560f42['type'] = _0x510d9f[_0x334eef(0xd5e)],
                                                            _0x19e5e5 = _0x21763a(_0x134911, _0x29a1ed, _0x330a74, _0xd7e916),
                                                            (_0x560f42['quadKey'] = _0x37eea8(_0x19e5e5['x'], _0x19e5e5['y'], _0x19e5e5['level']),
                                                                 _0x560f42['blockInfo'] = _0x19e5e5,
                                                                 _0x560f42[_0x334eef(0x6fa)] = _0x4bb368[_0x334eef(0x617)](_0x4bb368[_0x334eef(0xcef)](_0x334eef(0xc00)) + 0x6, _0x4bb368[_0x334eef(0xcef)](_0x334eef(0xb8b)))),
                                                            _0x1c8c28 = _0x134911[_0x334eef(0x79e)][_0x560f42[_0x334eef(0xc29)] + '_' + _0x560f42['providerName']],
                                                            Adapter['defined'](_0x1c8c28) && (_0x134911[_0x334eef(0x67d)]['touch'](_0x1c8c28),
                                                                 _0x4b2d40 = {
                                                                      'buffer': _0x1c8c28[_0x334eef(0x1ab)]
                                                                 }));
                                             }
                                             if (!Adapter['defined'](_0x4b2d40)) {
                                                  var _0xbe035b = _0x17f939['createIfNeeded'](_0x4bb368)
                                                       , _0x15ab88 = _0x4bb368;
                                                  Adapter[_0x334eef(0x336)](_0x560f42[_0x334eef(0xb80)]) && (_0x15ab88 = _0x5bb15b[_0x334eef(0xdbd)][_0x2d015a] + _0x334eef(0x803) + _0x19e5e5['y'] + '/' + _0x19e5e5['x'] + _0x334eef(0x8b4) + _0xd7e916),
                                                       _0x4b2d40 = _0xbe035b[_0x334eef(0x9d4)]({
                                                            'url': _0x15ab88,
                                                            'request': _0x560f42
                                                       })[_0x334eef(0x49b)]();
                                             }
                                             Adapter[_0x334eef(0x336)](_0x4b2d40) && (_0x4b2d40['id'] = _0x2d015a,
                                                  _0x4b2d40[_0x334eef(0x29f)] = _0x4bb368,
                                                  _0x4b2d40[_0x334eef(0x5d5)] = _0x560f42),
                                                  _0x103ffe[_0x334eef(0x63e)](_0x4b2d40);
                                        }(_0x1db67d);
                              }
                              if (_0x36fd85)
                                   break;
                         }
                    }
                    if (!(_0x103ffe['indexOf'](void 0x0) > -0x1))
                         return this[_0x176f7c(0xd19)] = !0x0,
                              Promise[_0x176f7c(0xc1b)] = function (_0x2e6a8f) {
                                   return new this(function (_0x48a17d, _0x53df29) {
                                        const _0x3934d7 = _0x5e91;
                                        if (_0x3934d7(0x8da) !== Object[_0x3934d7(0x2d4)][_0x3934d7(0x892)]['call'](_0x2e6a8f))
                                             return _0x53df29(new TypeError(typeof _0x2e6a8f + '\x20' + _0x2e6a8f + '\x20\x20is\x20not\x20iterable(cannot\x20read\x20property\x20Symbol(Symbol.iterator))'));
                                        var _0x11697d = Array['prototype']['slice'][_0x3934d7(0x3fa)](_0x2e6a8f);
                                        if (0x0 === _0x11697d[_0x3934d7(0x72b)])
                                             return _0x48a17d([]);
                                        var _0x1dd688 = _0x11697d[_0x3934d7(0x72b)];
                                        function _0x27fd45(_0x1560fc, _0x182eb4) {
                                             const _0x5091d1 = _0x3934d7;
                                             if ('object' == typeof _0x182eb4) {
                                                  var _0x3e1f95 = _0x182eb4[_0x5091d1(0x7db)];
                                                  _0x5091d1(0x1a2) == typeof _0x3e1f95 && _0x3e1f95['call'](_0x182eb4, function (_0x51d819) {
                                                       _0x11697d[_0x1560fc] = _0x51d819,
                                                            0x0 == --_0x1dd688 && _0x48a17d(_0x11697d);
                                                  }, function (_0x4b1bfe) {
                                                       _0x11697d[_0x1560fc] = _0x4b1bfe,
                                                            0x0 == --_0x1dd688 && _0x53df29(_0x11697d);
                                                  });
                                             }
                                        }
                                        for (var _0x241835 = 0x0; _0x241835 < _0x11697d[_0x3934d7(0x72b)]; _0x241835++)
                                             _0x27fd45(_0x241835, _0x11697d[_0x241835]);
                                   }
                                   );
                              }
                              ,
                              Promise[_0x176f7c(0xc1b)](_0x103ffe)['then'](function (_0x4745ce) {
                                   const _0x1764f6 = _0x176f7c;
                                   if (Array[_0x1764f6(0x92f)](_0x4745ce) || (_0x4745ce = [_0x4745ce]),
                                        !(_0x4745ce[_0x1764f6(0x72b)] < 0x1)) {
                                        for (var _0x52b418 = [], _0x1f344b = 0x0; _0x1f344b < _0x4745ce[_0x1764f6(0x72b)]; _0x1f344b++) {
                                             var _0x2cb042 = _0x4745ce[_0x1f344b];
                                             if (Adapter[_0x1764f6(0x336)](_0x2cb042)) {
                                                  if (Adapter['defined'](_0x2cb042[_0x1764f6(0x25d)]) && (_0x2cb042 = _0x2cb042['buffer']),
                                                       0x0 !== _0x1afdd4) {
                                                       if (_0x134911[_0x1764f6(0x885)] && Adapter[_0x1764f6(0x336)](_0x134911[_0x1764f6(0xc19)]) && _0x134911['_packingRequest'] === _0x57814b[_0x1764f6(0xcc5)]) {
                                                            !Adapter[_0x1764f6(0x336)](_0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xa8a)]) && Adapter[_0x1764f6(0x336)](_0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0x35c)]) && (_0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xa8a)] = _0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0x35c)][_0x1764f6(0xa8a)]),
                                                                 Adapter['defined'](_0x103ffe[_0x1f344b]['subRequest'][_0x1764f6(0xa8a)]) && (_0x2cb042 = _0x668b4(_0x2cb042, _0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xa8a)]),
                                                                      _0x2cb042 = new Uint8Array(_0x2cb042)[_0x1764f6(0x25d)]);
                                                            var _0x3689ea = _0x134911['blockCache'][_0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xc29)]];
                                                            _0x134911[_0x1764f6(0x67d)][_0x1764f6(0x625)](_0x3689ea),
                                                                 _0x134911[_0x1764f6(0x67d)]['trim'](_0x134911[_0x1764f6(0x409)]),
                                                                 _0x2cb042 = _0x237f57(_0x2cb042, _0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xb80)]);
                                                       } else {
                                                            if (Adapter[_0x1764f6(0x336)](_0x134911[_0x1764f6(0xc19)]) && _0x134911[_0x1764f6(0xc19)] === _0x57814b[_0x1764f6(0xcc5)])
                                                                 _0x2cb042 = _0x668b4(_0x2cb042, _0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xa8a)]);
                                                            else
                                                                 _0x134911[_0x1764f6(0x885)] && (_0x3689ea = _0x134911[_0x1764f6(0x79e)][_0x103ffe[_0x1f344b][_0x1764f6(0x5d5)]['quadKey']],
                                                                      (_0x134911['blockCacheQueue'][_0x1764f6(0x625)](_0x3689ea),
                                                                           _0x134911[_0x1764f6(0x67d)][_0x1764f6(0x5bb)](_0x134911['blockCacheSize']),
                                                                           _0x2cb042 = _0x237f57(_0x2cb042, _0x103ffe[_0x1f344b][_0x1764f6(0x5d5)][_0x1764f6(0xb80)])));
                                                       }
                                                       if (!Adapter[_0x1764f6(0x336)](_0x2cb042)) {
                                                            if (0x0 === _0x1f344b && _0x4745ce[_0x1764f6(0x72b)] > 0x1) {
                                                                 var _0x5bb048 = _0x1afdd4 + '_' + _0x4501dd + '_' + _0x55f076;
                                                                 if (0x1 != (_0x3c86f0 = _0x5bb15b['_combiInfo'][_0x5bb048])[_0x1f344b + 0x1][_0x1764f6(0x65e)])
                                                                      return void delete _0x5bb15b[_0x1764f6(0x1d0)][_0x5bb048];
                                                            }
                                                            continue;
                                                       }
                                                  }
                                                  var _0x38c555, _0x1ac6e9;
                                                  if (0x2 === (_0x38c555 = _0x1764f6(0x8bf) === _0x5bb15b[_0x1764f6(0xd71)] ? _0xce368[_0x1764f6(0xcb6)](_0x2cb042)[_0x1764f6(0x25d)] : _0x2cb042)[_0x1764f6(0x62b)] / (_0x5bb15b[_0x1764f6(0x9b1)] * _0x5bb15b[_0x1764f6(0xd60)])) {
                                                       var _0x512808 = new Int16Array(_0x38c555, 0x0, _0x5bb15b['_heightmapWidth'] * _0x5bb15b[_0x1764f6(0xd60)]);
                                                       _0x1ac6e9 = [];
                                                       for (var _0x12561e = 0x0; _0x12561e < _0x512808[_0x1764f6(0x72b)]; _0x12561e++)
                                                            _0x1ac6e9[_0x1764f6(0x63e)](parseFloat(_0x512808[_0x12561e]));
                                                  } else
                                                       _0x1ac6e9 = new Float32Array(_0x38c555, 0x0, _0x5bb15b['_heightmapWidth'] * _0x5bb15b[_0x1764f6(0xd60)]);
                                                  _0x52b418['push'](_0x1ac6e9);
                                             } else
                                                  _0x52b418['push'](void 0x0);
                                        }
                                        _0x5bb048 = _0x1afdd4 + '_' + _0x4501dd + '_' + _0x55f076;
                                        var _0x3c86f0 = _0x5bb15b[_0x1764f6(0x1d0)][_0x5bb048];
                                        if (delete _0x5bb15b[_0x1764f6(0x1d0)][_0x5bb048],
                                             _0x52b418['length'] > 0x1) {
                                             for (_0x1f344b = 0x0; _0x1f344b < _0x52b418[_0x1764f6(0x72b)]; _0x1f344b++)
                                                  Adapter['defined'](_0x52b418[_0x1f344b]) && (0x0 != _0x3c86f0[_0x1f344b][_0x1764f6(0x942)] || 0x0 != _0x3c86f0[_0x1f344b][_0x1764f6(0x790)] || 0x1 != _0x3c86f0[_0x1f344b][_0x1764f6(0x65e)]) && (_0x512808 = _0x5bb15b[_0x1764f6(0x187)](_0x52b418[_0x1f344b], _0x3c86f0[_0x1f344b]['srcX'], _0x3c86f0[_0x1f344b][_0x1764f6(0x790)], _0x3c86f0[_0x1f344b][_0x1764f6(0x65e)], _0x5bb15b['_heightmapWidth']),
                                                       _0x52b418[_0x1f344b] = _0x512808);
                                        }
                                        var _0x161d28 = [{}, {}, {}, {}];
                                        for (_0x1f344b = 0x0; _0x1f344b < _0x52b418[_0x1764f6(0x72b)]; _0x1f344b++)
                                             if (Adapter[_0x1764f6(0x336)](_0x52b418[_0x1f344b])) {
                                                  var _0x3039ee = _0x3c86f0[_0x1f344b][_0x1764f6(0x272)]
                                                       , _0x10d400 = -0x1
                                                       , _0x38b8a7 = -0x1
                                                       , _0x55b5c5 = -0x1
                                                       , _0x31bf35 = -0x1;
                                                  _0x10d400 = 0x0 == _0x52b418[_0x1f344b][0x0] ? 0x2 : 0x1,
                                                       _0x38b8a7 = 0x0 == _0x52b418[_0x1f344b][_0x5bb15b[_0x1764f6(0x9b1)] - 0x1] ? 0x2 : 0x1,
                                                       _0x55b5c5 = 0x0 == _0x52b418[_0x1f344b][(_0x5bb15b[_0x1764f6(0xd60)] - 0x1) * _0x5bb15b[_0x1764f6(0x9b1)]] ? 0x2 : 0x1,
                                                       _0x31bf35 = 0x0 == _0x52b418[_0x1f344b][_0x5bb15b['_heightmapHeight'] * _0x5bb15b['_heightmapWidth'] - 0x1] ? 0x2 : 0x1;
                                                  for (var _0x447e81 = 0.5 * _0x5bb15b[_0x1764f6(0x9b1)], _0x5b4f82 = 0.5 * _0x5bb15b['_heightmapHeight'], _0x1aa70e = 0x0; _0x1aa70e < _0x52b418[_0x1f344b][_0x1764f6(0x72b)]; _0x1aa70e++) {
                                                       var _0x1d0147 = Math[_0x1764f6(0x763)](_0x1aa70e / _0x5bb15b[_0x1764f6(0x9b1)])
                                                            , _0x162a3e = _0x1aa70e % _0x5bb15b[_0x1764f6(0x9b1)];
                                                       if (_0x1d0147 < _0x5b4f82 && _0x162a3e < _0x447e81) {
                                                            var _0x5eebb9 = _0x52b418[_0x1f344b][_0x1aa70e];
                                                            if (0x1 === _0x10d400) {
                                                                 if (0x0 == _0x5eebb9) {
                                                                      _0x10d400 = 0x3;
                                                                      break;
                                                                 }
                                                            } else {
                                                                 if (0x0 != _0x5eebb9) {
                                                                      _0x10d400 = 0x3;
                                                                      break;
                                                                 }
                                                            }
                                                       }
                                                  }
                                                  _0x161d28[0x0][_0x3039ee] = _0x10d400;
                                                  for (_0x1aa70e = 0x0; _0x1aa70e < _0x52b418[_0x1f344b][_0x1764f6(0x72b)]; _0x1aa70e++) {
                                                       _0x1d0147 = Math[_0x1764f6(0x763)](_0x1aa70e / _0x5bb15b[_0x1764f6(0x9b1)]),
                                                            _0x162a3e = _0x1aa70e % _0x5bb15b[_0x1764f6(0x9b1)];
                                                       if (_0x1d0147 < _0x5b4f82 && _0x162a3e >= _0x447e81) {
                                                            _0x5eebb9 = _0x52b418[_0x1f344b][_0x1aa70e];
                                                            if (0x1 === _0x38b8a7) {
                                                                 if (0x0 == _0x5eebb9) {
                                                                      _0x38b8a7 = 0x3;
                                                                      break;
                                                                 }
                                                            } else {
                                                                 if (0x0 != _0x5eebb9) {
                                                                      _0x38b8a7 = 0x3;
                                                                      break;
                                                                 }
                                                            }
                                                       }
                                                  }
                                                  _0x161d28[0x1][_0x3039ee] = _0x38b8a7;
                                                  for (_0x1aa70e = 0x0; _0x1aa70e < _0x52b418[_0x1f344b][_0x1764f6(0x72b)]; _0x1aa70e++) {
                                                       _0x1d0147 = Math[_0x1764f6(0x763)](_0x1aa70e / _0x5bb15b[_0x1764f6(0x9b1)]),
                                                            _0x162a3e = _0x1aa70e % _0x5bb15b[_0x1764f6(0x9b1)];
                                                       if (_0x1d0147 >= _0x5b4f82 && _0x162a3e < _0x447e81) {
                                                            _0x5eebb9 = _0x52b418[_0x1f344b][_0x1aa70e];
                                                            if (0x1 === _0x55b5c5) {
                                                                 if (0x0 == _0x5eebb9) {
                                                                      _0x55b5c5 = 0x3;
                                                                      break;
                                                                 }
                                                            } else {
                                                                 if (0x0 != _0x5eebb9) {
                                                                      _0x55b5c5 = 0x3;
                                                                      break;
                                                                 }
                                                            }
                                                       }
                                                  }
                                                  _0x161d28[0x2][_0x3039ee] = _0x55b5c5;
                                                  for (_0x1aa70e = 0x0; _0x1aa70e < _0x52b418[_0x1f344b][_0x1764f6(0x72b)]; _0x1aa70e++) {
                                                       _0x1d0147 = Math[_0x1764f6(0x763)](_0x1aa70e / _0x5bb15b['_heightmapWidth']),
                                                            _0x162a3e = _0x1aa70e % _0x5bb15b[_0x1764f6(0x9b1)];
                                                       if (_0x1d0147 >= _0x5b4f82 && _0x162a3e >= _0x447e81) {
                                                            _0x5eebb9 = _0x52b418[_0x1f344b][_0x1aa70e];
                                                            if (0x1 === _0x31bf35) {
                                                                 if (0x0 == _0x5eebb9) {
                                                                      _0x31bf35 = 0x3;
                                                                      break;
                                                                 }
                                                            } else {
                                                                 if (0x0 != _0x5eebb9) {
                                                                      _0x31bf35 = 0x3;
                                                                      break;
                                                                 }
                                                            }
                                                       }
                                                  }
                                                  if (_0x161d28[0x3][_0x3039ee] = _0x31bf35,
                                                       0x1 === _0x10d400 && 0x1 === _0x38b8a7 && 0x1 === _0x55b5c5 && 0x1 === _0x31bf35)
                                                       break;
                                             }
                                        var _0x592888 = [];
                                        for (_0x1f344b = 0x0; _0x1f344b < _0x52b418[_0x1764f6(0x72b)]; _0x1f344b++)
                                             Adapter[_0x1764f6(0x336)](_0x52b418[_0x1f344b]) && _0x592888[_0x1764f6(0x63e)](_0x52b418[_0x1f344b]);
                                        if (0x0 !== _0x592888[_0x1764f6(0x72b)]) {
                                             var _0x6c35e6 = _0x592888[0x0];
                                             if (_0x592888[_0x1764f6(0x72b)] > 0x1) {
                                                  for (_0x1aa70e = 0x0; _0x1aa70e < _0x6c35e6['length']; _0x1aa70e++)
                                                       if (0x0 == _0x6c35e6[_0x1aa70e]) {
                                                            for (_0x1f344b = 0x1; _0x1f344b < _0x592888[_0x1764f6(0x72b)]; _0x1f344b++)
                                                                 if (0x0 != _0x592888[_0x1f344b][_0x1aa70e]) {
                                                                      _0x6c35e6[_0x1aa70e] = _0x592888[_0x1f344b][_0x1aa70e];
                                                                      break;
                                                                 }
                                                       }
                                             }
                                             var _0x2fcc36 = !0x1;
                                             for (_0x1f344b = 0x0; _0x1f344b < _0x6c35e6[_0x1764f6(0x72b)]; _0x1f344b++)
                                                  if (Math['abs'](_0x6c35e6[_0x1f344b]) > _0x20af4a[_0x1764f6(0x216)]) {
                                                       _0x2fcc36 = !0x0;
                                                       break;
                                                  }
                                             var _0x4a7b66 = _0x5bb15b[_0x1764f6(0x9b1)]
                                                  , _0x34b659 = _0x5bb15b[_0x1764f6(0xd60)]
                                                  , _0x5d7b48 = void 0x0;
                                             return _0x5bb15b[_0x1764f6(0x996)] && (_0x5d7b48 = _0x5f2322(_0x6c35e6, _0x4a7b66, _0x34b659, _0x38b683, _0x1afdd4)),
                                                  new Adapter[(_0x1764f6(0x557))]({
                                                       'buffer': _0x6c35e6,
                                                       'width': _0x4a7b66,
                                                       'height': _0x34b659,
                                                       'skirtMode': _0x5bb15b[_0x1764f6(0xcfd)],
                                                       'skirtScale': _0x5bb15b[_0x1764f6(0x986)],
                                                       'childTileMask': _0x599efa(_0x5bb15b, _0x4501dd, _0x55f076, _0x1afdd4),
                                                       'structure': _0x5bb15b['_terrainDataStructure'],
                                                       'valid': _0x2fcc36,
                                                       'childTileMaskExt': _0x161d28,
                                                       'normalTexture': _0x5d7b48,
                                                       'level': _0x1afdd4,
                                                       'x': _0x4501dd,
                                                       'y': _0x55f076
                                                  });
                                        }
                                   }
                              })['catch'](_0x1aa41f => Promise[_0x176f7c(0xa56)](_0x1aa41f));
               }
          }
               ,
               _0x3faa69[_0xc3a123(0x2d4)][_0xc3a123(0x70b)] = function (_0x34b5fa) {
                    const _0x2ad212 = _0xc3a123;
                    return this[_0x2ad212(0xcf9)] / (0x1 << _0x34b5fa);
               }
               ,
               _0x537546 = new _0x38b5f9();
          function _0x599efa(_0x81635b, _0x563e6b, _0x266e2c, _0x2a431e) {
               const _0x15ece7 = _0xc3a123;
               for (var _0x542c4f = _0x81635b[_0x15ece7(0x916)], _0x56cd84 = _0x542c4f[_0x15ece7(0xa77)](_0x563e6b, _0x266e2c, _0x2a431e), _0x1bdd4e = 0x0, _0x44aced = 0x0; _0x44aced < _0x81635b[_0x15ece7(0x242)][_0x15ece7(0x72b)]; _0x44aced++) {
                    var _0x233054 = _0x81635b[_0x15ece7(0x242)][_0x44aced]
                         , _0x520739 = _0x38b5f9[_0x15ece7(0x7ff)](_0x233054, _0x56cd84, _0x537546);
                    Adapter[_0x15ece7(0x336)](_0x520739) && (_0x909c6d(_0x542c4f, _0x233054, 0x2 * _0x563e6b, 0x2 * _0x266e2c, _0x2a431e + 0x1) && (_0x1bdd4e |= 0x4),
                         _0x909c6d(_0x542c4f, _0x233054, 0x2 * _0x563e6b + 0x1, 0x2 * _0x266e2c, _0x2a431e + 0x1) && (_0x1bdd4e |= 0x8),
                         _0x909c6d(_0x542c4f, _0x233054, 0x2 * _0x563e6b, 0x2 * _0x266e2c + 0x1, _0x2a431e + 0x1) && (_0x1bdd4e |= 0x1),
                         _0x909c6d(_0x542c4f, _0x233054, 0x2 * _0x563e6b + 0x1, 0x2 * _0x266e2c + 0x1, _0x2a431e + 0x1) && (_0x1bdd4e |= 0x2));
               }
               return _0x1bdd4e;
          }
          function _0x909c6d(_0x1c1bc3, _0x3e6c7f, _0xb91033, _0x2ef66b, _0x2bb241) {
               const _0x457356 = _0xc3a123;
               var _0xa0b97f = _0x1c1bc3['tileXYToRectangle'](_0xb91033, _0x2ef66b, _0x2bb241);
               return Adapter[_0x457356(0x336)](_0x38b5f9[_0x457356(0x7ff)](_0xa0b97f, _0x3e6c7f, _0x537546));
          }
          function _0x45ca4b() {
               const _0x1af316 = _0xc3a123;
               this[_0x1af316(0x713)] = new Cesium['AssociativeArray'](),
                    this[_0x1af316(0xc2f)] = new Uint8Array(0x40000),
                    this[_0x1af316(0x58d)] = [];
          }
          function _0x1995fa(_0x39356c, _0x22aef7) {
               return _0x39356c - _0x22aef7;
          }
          _0x3faa69[_0xc3a123(0x2d4)][_0xc3a123(0x67e)] = function (_0x19fb28, _0x183f76, _0x38901b) {
               const _0xfa8fe8 = _0xc3a123;
               if (0x0 === _0x38901b)
                    return !0x0;
               for (var _0x48fbeb = this[_0xfa8fe8(0x916)][_0xfa8fe8(0xa77)](_0x19fb28, _0x183f76, _0x38901b), _0x44aea9 = 0x0; _0x44aea9 < this[_0xfa8fe8(0x242)][_0xfa8fe8(0x72b)]; _0x44aea9++) {
                    var _0x1b2b3e = _0x38b5f9[_0xfa8fe8(0x7ff)](this[_0xfa8fe8(0x242)][_0x44aea9], _0x48fbeb, _0x537546);
                    if (Adapter[_0xfa8fe8(0x336)](_0x1b2b3e) && _0x38901b >= this[_0xfa8fe8(0x5f2)][_0x44aea9][0x0] && _0x38901b <= this[_0xfa8fe8(0x5f2)][_0x44aea9][this['_levels'][_0x44aea9][_0xfa8fe8(0x72b)] - 0x1])
                         return !0x0;
               }
               return !0x1;
          }
               ,
               _0x3faa69[_0xc3a123(0x2d4)][_0xc3a123(0x890)] = function (_0x1c3ec1, _0x2777ee, _0x5d5335) { }
               ,
               _0x45ca4b['prototype'][_0xc3a123(0x519)] = function (_0x124910) {
                    const _0x16ef3d = _0xc3a123;
                    if (_0x124910 > this[_0x16ef3d(0x713)]['values'][_0x16ef3d(0x72b)] - 0x1)
                         return null;
                    let _0x24bd20 = _0x124910;
                    for (let _0x262080 in this[_0x16ef3d(0x713)][_0x16ef3d(0xcc3)]) {
                         if (!(_0x24bd20 > 0x0)) {
                              if (!_0x262080)
                                   break;
                              return {
                                   'altitude': _0x262080,
                                   'color': this[_0x16ef3d(0x713)][_0x16ef3d(0x420)](_0x262080)
                              };
                         }
                         _0x24bd20--;
                    }
                    return null;
               }
               ,
               _0x45ca4b[_0xc3a123(0x2d4)][_0xc3a123(0xcce)] = function () {
                    const _0x58dd29 = _0xc3a123;
                    return this[_0x58dd29(0x713)][_0x58dd29(0xcd3)]['length'];
               }
               ,
               _0x45ca4b[_0xc3a123(0x2d4)][_0xc3a123(0x6d3)] = function (_0x1b9ed0, _0x8dbd69) {
                    const _0x1251b3 = _0xc3a123;
                    if (this[_0x1251b3(0x713)][_0x1251b3(0x420)](_0x1b9ed0))
                         return;
                    let _0x178bef = Cesium[_0x1251b3(0x821)]['clone'](_0x8dbd69, new Cesium[(_0x1251b3(0x821))]());
                    this[_0x1251b3(0x713)]['set'](_0x1b9ed0, _0x178bef);
               }
               ,
               _0x45ca4b['prototype'][_0xc3a123(0xced)] = function (_0x4c4e47) {
                    const _0x17ec41 = _0xc3a123;
                    return this[_0x17ec41(0x713)][_0x17ec41(0xced)](_0x4c4e47);
               }
               ,
               _0x45ca4b[_0xc3a123(0x2d4)][_0xc3a123(0x6bf)] = function () {
                    const _0xdbc058 = _0xc3a123;
                    this[_0xdbc058(0x713)][_0xdbc058(0x6c9)]();
               }
               ,
               _0x45ca4b['prototype'][_0xc3a123(0x955)] = function () {
                    const _0x2ca7f5 = _0xc3a123;
                    let _0x53f9c3 = [];
                    for (let _0x51a306 in this[_0x2ca7f5(0x713)][_0x2ca7f5(0xcc3)]) {
                         if (!_0x51a306)
                              continue;
                         let _0x43b1e0 = this[_0x2ca7f5(0x713)][_0x2ca7f5(0x420)](_0x51a306);
                         _0x53f9c3[_0x2ca7f5(0x63e)]({
                              'value': parseFloat(_0x51a306),
                              'color': _0x43b1e0
                         });
                    }
                    if (_0x53f9c3[_0x2ca7f5(0x72b)] < 0x2)
                         return;
                    for (let _0x5079d5 = 0x0, _0x3b8b33 = _0x53f9c3[_0x2ca7f5(0x72b)] - 0x1; _0x5079d5 < _0x3b8b33; _0x5079d5++) {
                         let _0x84e1fe = _0x53f9c3[_0x5079d5];
                         for (let _0xaf33ca = _0x5079d5 + 0x1; _0xaf33ca < _0x53f9c3[_0x2ca7f5(0x72b)]; _0xaf33ca++) {
                              let _0x490d7d = _0x53f9c3[_0xaf33ca];
                              if (_0x84e1fe[_0x2ca7f5(0x41a)] > _0x490d7d['value']) {
                                   let _0x897bbf = Cesium[_0x2ca7f5(0x432)](_0x53f9c3[_0x5079d5], !0x0);
                                   _0x53f9c3[_0x5079d5] = Cesium['clone'](_0x53f9c3[_0xaf33ca], !0x0),
                                        _0x53f9c3[_0xaf33ca] = _0x897bbf,
                                        _0x84e1fe = _0x53f9c3[_0x5079d5];
                              }
                         }
                    }
                    let _0x26d7ad = _0x53f9c3[0x0]['value']
                         , _0x1bbaa2 = _0x53f9c3[_0x53f9c3[_0x2ca7f5(0x72b)] - 0x1]['value'] - _0x26d7ad
                         , _0x546629 = document[_0x2ca7f5(0xd69)](_0x2ca7f5(0xda5));
                    _0x546629[_0x2ca7f5(0x65e)] = 0x4000,
                         _0x546629[_0x2ca7f5(0x48e)] = 0x1;
                    let _0x4e0e84 = _0x546629[_0x2ca7f5(0x781)]('2d');
                    _0x4e0e84[_0x2ca7f5(0x540)]();
                    let _0x398ed7 = _0x4e0e84['createLinearGradient'](0x0, 0x0, 0x4000, 0x0);
                    for (let _0x27aea2 = 0x0, _0x54a42f = _0x53f9c3[_0x2ca7f5(0x72b)]; _0x27aea2 < _0x54a42f; _0x27aea2++)
                         _0x398ed7[_0x2ca7f5(0xb09)]((_0x53f9c3[_0x27aea2][_0x2ca7f5(0x41a)] - _0x26d7ad) / _0x1bbaa2, _0x53f9c3[_0x27aea2][_0x2ca7f5(0x469)][_0x2ca7f5(0x20c)]());
                    _0x4e0e84['fillStyle'] = _0x398ed7,
                         _0x4e0e84[_0x2ca7f5(0x48d)](0x0, 0x0, _0x546629['width'], _0x546629[_0x2ca7f5(0x48e)]),
                         _0x4e0e84['fill']();
                    let _0x5de550 = _0x4e0e84['getImageData'](0x0, 0x0, _0x546629[_0x2ca7f5(0x65e)], 0x1)[_0x2ca7f5(0x1ab)];
                    for (let _0x4f118f = 0x0; _0x4f118f < 0x10; _0x4f118f++)
                         for (let _0x326f99 = 0x0; _0x326f99 < 0x1000; _0x326f99++)
                              this[_0x2ca7f5(0xc2f)][_0x326f99 + 0x400 * _0x4f118f * 0x4 * 0x4] = _0x5de550[_0x326f99 + 0x400 * _0x4f118f * 0x4],
                                   this['_imageBuffer'][_0x326f99 + 0x400 * _0x4f118f * 0x4 * 0x4 + 0x1000] = _0x5de550[_0x326f99 + 0x400 * _0x4f118f * 0x4],
                                   this[_0x2ca7f5(0xc2f)][_0x326f99 + 0x400 * _0x4f118f * 0x4 * 0x4 + 0x2000] = _0x5de550[_0x326f99 + 0x400 * _0x4f118f * 0x4],
                                   this['_imageBuffer'][_0x326f99 + 0x400 * _0x4f118f * 0x4 * 0x4 + 0x3000] = _0x5de550[_0x326f99 + 0x400 * _0x4f118f * 0x4];
                    for (let _0x5aa010 in this[_0x2ca7f5(0x713)][_0x2ca7f5(0xcc3)])
                         this[_0x2ca7f5(0x58d)][_0x2ca7f5(0x63e)](parseFloat(_0x5aa010));
                    return this['_sortKey']['sort'](_0x1995fa),
                         _0x546629;
               }
               ,
               _0x45ca4b[_0xc3a123(0x2d4)][_0xc3a123(0x99c)] = function (_0x1a39a3) {
                    const _0x2e6f50 = _0xc3a123;
                    for (let _0x3a91c3 = 0x0, _0x5b9db8 = this[_0x2e6f50(0x58d)][_0x2e6f50(0x72b)]; _0x3a91c3 < _0x5b9db8; _0x3a91c3++)
                         if (this[_0x2e6f50(0x58d)][_0x3a91c3] >= _0x1a39a3 || Math[_0x2e6f50(0xbd6)](this[_0x2e6f50(0x58d)][_0x3a91c3] - _0x1a39a3) < Cesium[_0x2e6f50(0x417)]['EPSILON6'])
                              return this[_0x2e6f50(0x713)][_0x2e6f50(0x420)](this[_0x2e6f50(0x58d)][_0x3a91c3]);
               }
               ,
               _0x45ca4b[_0xc3a123(0x2d4)]['destroy'] = function () {
                    const _0x45b09c = _0xc3a123;
                    this[_0x45b09c(0x713)][_0x45b09c(0x6c9)](),
                         this[_0x45b09c(0xc2f)] = null,
                         this[_0x45b09c(0x58d)] = null;
               }
               ,
               _0x4334da[_0xc3a123(0xb23)] = _0x1401a3,
               _0x4334da['BillboardMode'] = _0x102330,
               _0x4334da[_0xc3a123(0x480)] = _0x50381f,
               _0x4334da['BlockCacheNode'] = _0x41efcb,
               _0x4334da[_0xc3a123(0x24a)] = _0x496b2d,
               _0x4334da['CesiumExt'] = _0x46a0ef,
               _0x4334da['ClampMode'] = _0x61a61,
               _0x4334da['ColorTable'] = _0x45ca4b,
               _0x4334da[_0xc3a123(0x53c)] = _0x4400d8,
               _0x4334da['ContentState'] = _0x15a287,
               _0x4334da[_0xc3a123(0x53f)] = _0x424c59,
               _0x4334da[_0xc3a123(0x325)] = _0x4c3d28,
               _0x4334da['CustomTilingScheme'] = _0x2fa622,
               _0x4334da[_0xc3a123(0xa63)] = _0x3d3090,
               _0x4334da[_0xc3a123(0x85e)] = _0x206fd,
               _0x4334da[_0xc3a123(0xc42)] = _0x2000bb,
               _0x4334da['DrawMode'] = _0x3e6038,
               _0x4334da[_0xc3a123(0xc15)] = _0x113557,
               _0x4334da['FillStyle'] = _0x26f6a9,
               _0x4334da[_0xc3a123(0x695)] = _0x265d94,
               _0x4334da[_0xc3a123(0xc89)] = _0xdeef2b,
               _0x4334da['FlyManager'] = _0x579f39,
               _0x4334da[_0xc3a123(0x25a)] = _0x5783c7,
               _0x4334da[_0xc3a123(0x977)] = _0x453484,
               _0x4334da[_0xc3a123(0x373)] = _0xc2ea4f,
               _0x4334da[_0xc3a123(0x65c)] = _0x10d8d5,
               _0x4334da[_0xc3a123(0x9a4)] = _0x378706,
               _0x4334da['HypsometricSettingEnum'] = _0xec7b36,
               _0x4334da[_0xc3a123(0x34e)] = _0x435eac,
               _0x4334da[_0xc3a123(0x427)] = _0x9f6196,
               _0x4334da[_0xc3a123(0x235)] = _0x3d614c,
               _0x4334da[_0xc3a123(0x82f)] = _0x51151d,
               _0x4334da[_0xc3a123(0xa98)] = _0x3b324f,
               _0x4334da['MeasureHandler'] = _0xdb601d,
               _0x4334da[_0xc3a123(0xaca)] = _0x1a5452,
               _0x4334da[_0xc3a123(0xc4b)] = _0x130512,
               _0x4334da[_0xc3a123(0xb6f)] = _0x1d7c4b,
               _0x4334da[_0xc3a123(0x357)] = _0x1a748c,
               _0x4334da['NoLightNoTextureFS'] = _0x442caf,
               _0x4334da[_0xc3a123(0x5b9)] = _0xf3ba83,
               _0x4334da[_0xc3a123(0x762)] = _0x2cc3e2,
               _0x4334da[_0xc3a123(0xd84)] = _0x5dc18d,
               _0x4334da[_0xc3a123(0x7a4)] = _0x5db271,
               _0x4334da[_0xc3a123(0x8a4)] = _0x4709b6,
               _0x4334da['PixelFormat'] = _0x3aea87,
               _0x4334da['PostProcessStageRain'] = _0x2d2f13,
               _0x4334da[_0xc3a123(0x1bd)] = _0x1a9979,
               _0x4334da[_0xc3a123(0x37b)] = _0x266f35,
               _0x4334da[_0xc3a123(0x71a)] = _0x23de54,
               _0x4334da[_0xc3a123(0x3dc)] = _0x4834e2,
               _0x4334da[_0xc3a123(0x93a)] = _0x11867c,
               _0x4334da[_0xc3a123(0x9dc)] = _0x1a0a6e,
               _0x4334da['RasterRegion'] = _0x3fc847,
               _0x4334da[_0xc3a123(0x680)] = _0x5d3bcf,
               _0x4334da[_0xc3a123(0xb55)] = _0x28a72e,
               _0x4334da[_0xc3a123(0x7ca)] = _0x36c255,
               _0x4334da[_0xc3a123(0x36e)] = _0x56d276,
               _0x4334da[_0xc3a123(0xd6e)] = _0x2bce7d,
               _0x4334da[_0xc3a123(0x5aa)] = _0x99320b,
               _0x4334da[_0xc3a123(0xab1)] = _0x3516c9,
               _0x4334da['RouteStop'] = _0xd96643,
               _0x4334da['S3MBlockCache'] = _0x953e26,
               _0x4334da[_0xc3a123(0xbfa)] = _0x126376,
               _0x4334da[_0xc3a123(0xc77)] = _0x3e9f08,
               _0x4334da[_0xc3a123(0x5ae)] = _0x3198f4,
               _0x4334da[_0xc3a123(0xb99)] = _0x4836e0,
               _0x4334da[_0xc3a123(0x33f)] = _0x4bd879,
               _0x4334da[_0xc3a123(0x7d7)] = _0x1a5fdd,
               _0x4334da[_0xc3a123(0x314)] = _0x48ba47,
               _0x4334da[_0xc3a123(0x5d1)] = _0x3d4dc0,
               _0x4334da[_0xc3a123(0x28c)] = _0x379017,
               _0x4334da[_0xc3a123(0xa1c)] = _0x11b39f,
               _0x4334da[_0xc3a123(0x97e)] = _0x1d0b86,
               _0x4334da['S3MLayerCache'] = _0x1b5374,
               _0x4334da['S3MLayerScheduler'] = _0xdf44a7,
               _0x4334da[_0xc3a123(0x370)] = _0x3b2fd1,
               _0x4334da['S3MPixelFormat'] = _0x582a9d,
               _0x4334da['S3MPointCloudFS'] = _0x68f99b,
               _0x4334da[_0xc3a123(0x8f1)] = _0x30548f,
               _0x4334da['S3MPointCloudVS'] = _0x5a1e49,
               _0x4334da[_0xc3a123(0xd73)] = _0x33bfc3,
               _0x4334da['S3MTilesFS'] = _0x22933a,
               _0x4334da['S3MTilesLayer'] = _0x160299,
               _0x4334da[_0xc3a123(0x375)] = _0x968c41,
               _0x4334da[_0xc3a123(0xc8a)] = _0x5b10f8,
               _0x4334da[_0xc3a123(0x368)] = _0x7db29e,
               _0x4334da[_0xc3a123(0x56a)] = _0x116cf7,
               _0x4334da[_0xc3a123(0x915)] = _0x4dac31,
               _0x4334da[_0xc3a123(0xd68)] = _0x1f50b1,
               _0x4334da[_0xc3a123(0xbf0)] = _0x3faa69,
               _0x4334da[_0xc3a123(0xb2f)] = _0x3fbacf,
               _0x4334da[_0xc3a123(0x93d)] = _0x1e9d62,
               _0x4334da[_0xc3a123(0xb13)] = _0x41179f,
               _0x4334da[_0xc3a123(0xb0e)] = _0x53e342,
               _0x4334da[_0xc3a123(0x55e)] = _0x2ec37f,
               _0x4334da[_0xc3a123(0x8ad)] = _0x111b69,
               _0x4334da[_0xc3a123(0x9cf)] = _0x2b8a4b,
               _0x4334da['Snow'] = _0x2731e1,
               _0x4334da['StopPlayMode'] = _0x31ca78,
               _0x4334da[_0xc3a123(0x95f)] = _0x2e1928,
               _0x4334da[_0xc3a123(0xa97)] = _0x4d557c,
               _0x4334da[_0xc3a123(0x850)] = _0x219e8e,
               _0x4334da[_0xc3a123(0x46c)] = _0x36e5cd,
               _0x4334da[_0xc3a123(0x1c4)] = _0x1b4e12,
               _0x4334da['TextureManager'] = _0x3a3263,
               _0x4334da[_0xc3a123(0x56c)] = _0x38a067,
               _0x4334da['ViewShed3D'] = _0x167ba2,
               _0x4334da[_0xc3a123(0x2c1)] = _0x2afc5e,
               _0x4334da[_0xc3a123(0x204)] = _0x199682,
               _0x4334da[_0xc3a123(0x50c)] = _0x39d2ab,
               _0x4334da[_0xc3a123(0x698)] = _0x7bff14,
               _0x4334da[_0xc3a123(0x5a2)] = _0x9879e5,
               _0x4334da[_0xc3a123(0xd10)] = _0x41988a,
               _0x4334da[_0xc3a123(0x808)] = _0x3b80ec,
               _0x4334da['cubeUV_reflection'] = _0x53dcd2,
               _0x4334da[_0xc3a123(0x8e4)] = _0x1aaa75,
               _0x4334da['executeServerExcavationDecl'] = _0x390443,
               _0x4334da[_0xc3a123(0x619)] = _0xb74cb4,
               _0x4334da['lightSourceImpl'] = _0x67b80c,
               _0x4334da[_0xc3a123(0x465)] = _0x29fa64,
               _0x4334da[_0xc3a123(0x413)] = _0x3013af,
               _0x4334da[_0xc3a123(0x473)] = _0x4b63f3,
               _0x4334da[_0xc3a123(0x511)] = _0x54dfde,
               _0x4334da[_0xc3a123(0x7de)] = _0x5ca475,
               _0x4334da['transcodeCRNToDXT'] = _0xd7caa2,
               Object['defineProperty'](_0x4334da, '__esModule', {
                    'value': !0x0
               });
     }));
